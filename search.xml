<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>小破站升级HTTPS</title>
      <link href="/2019/08/24/%E5%8D%9A%E5%AE%A2%E5%8D%87%E7%BA%A7https/"/>
      <url>/2019/08/24/%E5%8D%9A%E5%AE%A2%E5%8D%87%E7%BA%A7https/</url>
      
        <content type="html"><![CDATA[<p>&#x4ECA;&#x5929;&#x5728;&#x4E86;&#x89E3;&#x5B8C;HTTP&#x548C;HTTPS&#x540E;&#xFF0C;&#x7ACB;&#x9A6C;&#x5C31;&#x5F00;&#x59CB;&#x7740;&#x624B;&#x5C06;&#x6211;&#x7684;&#x5C0F;&#x7834;&#x7AD9;&#x5347;&#x7EA7;&#x4E3A;HTTPS&#x3002;&#x800C;&#x4E14;chrome&#x6D4F;&#x89C8;&#x5668;&#x7F51;&#x5740;&#x680F;&#x91CC;&#x7684;&#x4E0D;&#x5B89;&#x5168;&#x4E09;&#x4E2A;&#x5B57;&#x5F3A;&#x70C8;&#x7684;&#x89E6;&#x53D1;&#x4E86;&#x6211;&#x7684;&#x5F3A;&#x8FEB;&#x75C7;&#xFF0C;&#x6362;&#x6210;&#x4E00;&#x628A;&#x7EFF;&#x9501;&#x4E0D;&#x662F;&#x7F8E;&#x6ECB;&#x6ECB;&#x3002;</p><a id="more"></a><h1 id="&#x83B7;&#x53D6;SSL&#x8BC1;&#x4E66;"><a href="#&#x83B7;&#x53D6;SSL&#x8BC1;&#x4E66;" class="headerlink" title="&#x83B7;&#x53D6;SSL&#x8BC1;&#x4E66;"></a>&#x83B7;&#x53D6;SSL&#x8BC1;&#x4E66;</h1><p>&#x7531;&#x4E8E;&#x6211;&#x7684;&#x57DF;&#x540D;&#x4EE5;&#x53CA;&#x670D;&#x52A1;&#x5668;&#x90FD;&#x662F;&#x5728;&#x963F;&#x91CC;&#x4E91;&#x4E0A;&#x4E70;&#x7684;&#xFF0C;&#x4E8E;&#x662F;&#x6211;&#x5C31;&#x5728;&#x963F;&#x91CC;&#x4E91;&#x4E0A;&#x6CE8;&#x518C;&#x4E86;&#x514D;&#x8D39;&#x7684;SSL&#x8BC1;&#x4E66;&#x3002;</p><p>&#x5177;&#x4F53;&#x8FC7;&#x7A0B;&#xFF1A;</p><ol><li>&#x8FDB;&#x5165;&#x963F;&#x91CC;&#x4E91;SSL&#x8BC1;&#x4E66;&#x754C;&#x9762;&#xFF0C;&#x70B9;&#x51FB;&#x53F3;&#x4E0A;&#x89D2;&#x7684;&#x8D2D;&#x4E70;&#x8BC1;&#x4E66;&#x3002;</li><li>&#x4F9D;&#x6B21;&#x70B9;&#x51FB; Symantec -&gt; &#x514D;&#x8D39;&#x578B;DV SSL -&gt; 1&#x4E2A;&#x57DF;&#x540D; -&gt; &#x4E00;&#x5E74; &#x5373;&#x53EF;&#x8D2D;&#x4E70;&#x514D;&#x8D39;&#x7684;SSL&#x8BC1;&#x4E66;&#x3002;</li><li>&#x6CE8;&#x518C;&#x8BC1;&#x4E66;&#xFF0C;&#x8865;&#x5168;&#x4FE1;&#x606F;&#x7B49;&#x5F85;&#x5BA1;&#x6838;&#x901A;&#x8FC7;&#x5C31;&#x597D;&#x4E86;&#x3002;</li></ol><h1 id="nginx&#x914D;&#x7F6E;"><a href="#nginx&#x914D;&#x7F6E;" class="headerlink" title="nginx&#x914D;&#x7F6E;"></a>nginx&#x914D;&#x7F6E;</h1><ol><li>&#x5BA1;&#x6838;&#x901A;&#x8FC7;&#x540E;&#x70B9;&#x51FB;&#x4E0B;&#x8F7D;&#x8BC1;&#x4E66;for Nginx</li><li>&#x5728;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x5B89;&#x88C5;nginx&#x7684;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;<code>cert</code>&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x6211;&#x7684;&#x8DEF;&#x5F84;&#x4E3A;<code>/etc/nginx/cert</code></li><li>&#x5C06;&#x4E0B;&#x8F7D;&#x7684;&#x8BC1;&#x4E66;&#x89E3;&#x538B;&#x540E;&#x5F97;&#x5230;&#x7684;<code>.pem</code>&#x6587;&#x4EF6;&#x4EE5;&#x53CA;<code>.key</code>&#x6587;&#x4EF6;&#xFF0C;&#x4F20;&#x5230;&#x4E0A;&#x4E00;&#x6B65;&#x65B0;&#x5EFA;&#x7684;<code>cert</code>&#x6587;&#x4EF6;&#x5939;&#x4E0B;</li><li><p>&#x6253;&#x5F00;nginx&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x6211;&#x7684;&#x662F;<code>/etc/nginx/sites-available</code>&#x4E0B;&#x7684;<code>default</code>&#x6587;&#x4EF6;&#xFF0C;&#x6DFB;&#x52A0;&#x4EE5;&#x4E0B;&#x4EE3;&#x7801;&#xFF1A;</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">server {</span><br><span class="line">    listen 443;</span><br><span class="line">    server_name localhost; # &#x8FD9;&#x91CC;&#x53EF;&#x4EE5;&#x6539;&#x6210;&#x4F60;&#x7684;&#x57DF;&#x540D;</span><br><span class="line">    ssl on;</span><br><span class="line">    root html;  # &#x8FD9;&#x91CC;&#x6539;&#x6210;&#x4F60;&#x7684;&#x535A;&#x5BA2;&#x7F51;&#x7AD9;&#x7684;&#x6839;&#x76EE;&#x5F55;</span><br><span class="line">    index index.html index.htm;</span><br><span class="line">    ssl_certificate   cert/*.pem; # &#x6539;&#x6210;&#x4F60;&#x81EA;&#x5DF1;&#x7684;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line">    ssl_certificate_key  cert/*.key; # &#x6539;&#x6210;&#x4F60;&#x81EA;&#x5DF1;&#x7684;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line">    ssl_session_timeout 5m;</span><br><span class="line">    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">    location / {</span><br><span class="line">        root html; # &#x8FD9;&#x91CC;&#x6539;&#x6210;&#x4F60;&#x7684;&#x535A;&#x5BA2;&#x7F51;&#x7AD9;&#x7684;&#x6839;&#x76EE;&#x5F55;</span><br><span class="line">        index index.html index.htm;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>&#x91CD;&#x542F;nginx</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service nginx restart</span><br></pre></td></tr></table></figure></li><li><p>&#x914D;&#x7F6E;&#x5B8C;&#x6210;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;HTTPS&#x8BBF;&#x95EE;&#x535A;&#x5BA2;&#x4E86;</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> HTTP </tag>
            
            <tag> HTTPS </tag>
            
            <tag> 小破站记事 </tag>
            
            <tag> 阿里云 </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTTP和HTTPS学习笔记</title>
      <link href="/2019/08/24/http%E5%92%8Chttps/"/>
      <url>/2019/08/24/http%E5%92%8Chttps/</url>
      
        <content type="html"><![CDATA[<h1 id="HTTP&#x548C;HTTPS"><a href="#HTTP&#x548C;HTTPS" class="headerlink" title="HTTP&#x548C;HTTPS"></a>HTTP&#x548C;HTTPS</h1><h2 id="&#x4EC0;&#x4E48;&#x662F;HTTP"><a href="#&#x4EC0;&#x4E48;&#x662F;HTTP" class="headerlink" title="&#x4EC0;&#x4E48;&#x662F;HTTP"></a>&#x4EC0;&#x4E48;&#x662F;HTTP</h2><p>&#x8D85;&#x6587;&#x672C;&#x4F20;&#x8F93;&#x534F;&#x8BAE;&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x57FA;&#x4E8E;&#x8BF7;&#x6C42;&#x4E0E;&#x54CD;&#x5E94;&#xFF0C;&#x65E0;&#x72B6;&#x6001;&#x7684;&#xFF0C;&#x5E94;&#x7528;&#x5C42;&#x7684;&#x534F;&#x8BAE;&#xFF0C;&#x5E38;&#x57FA;&#x4E8E;TCP/IP&#x534F;&#x8BAE;&#x4F20;&#x8F93;&#x6570;&#x636E;&#xFF0C;&#x4E92;&#x8054;&#x7F51;&#x4E0A;&#x5E94;&#x7528;&#x6700;&#x4E3A;&#x5E7F;&#x6CDB;&#x7684;&#x4E00;&#x79CD;&#x7F51;&#x7EDC;&#x534F;&#x8BAE;,&#x6240;&#x6709;&#x7684;WWW&#x6587;&#x4EF6;&#x90FD;&#x5FC5;&#x987B;&#x9075;&#x5B88;&#x8FD9;&#x4E2A;&#x6807;&#x51C6;&#x3002;&#x8BBE;&#x8BA1;HTTP&#x7684;&#x521D;&#x8877;&#x662F;&#x4E3A;&#x4E86;&#x63D0;&#x4F9B;&#x4E00;&#x79CD;&#x53D1;&#x5E03;&#x548C;&#x63A5;&#x6536;HTML&#x9875;&#x9762;&#x7684;&#x65B9;&#x6CD5;&#x3002;</p><h2 id="&#x4EC0;&#x4E48;&#x662F;HTTPS"><a href="#&#x4EC0;&#x4E48;&#x662F;HTTPS" class="headerlink" title="&#x4EC0;&#x4E48;&#x662F;HTTPS"></a>&#x4EC0;&#x4E48;&#x662F;HTTPS</h2><p>&#x300A;&#x56FE;&#x89E3;HTTP&#x300B;&#x8FD9;&#x672C;&#x4E66;&#x4E2D;&#x66FE;&#x63D0;&#x8FC7;HTTPS&#x662F;&#x8EAB;&#x62AB;SSL&#x5916;&#x58F3;&#x7684;HTTP&#x3002;HTTPS&#x662F;&#x4E00;&#x79CD;&#x901A;&#x8FC7;&#x8BA1;&#x7B97;&#x673A;&#x7F51;&#x7EDC;&#x8FDB;&#x884C;&#x5B89;&#x5168;&#x901A;&#x4FE1;&#x7684;&#x4F20;&#x8F93;&#x534F;&#x8BAE;&#xFF0C;&#x7ECF;&#x7531;HTTP&#x8FDB;&#x884C;&#x901A;&#x4FE1;&#xFF0C;&#x5229;&#x7528;SSL/TLS&#x5EFA;&#x7ACB;&#x5168;&#x4FE1;&#x9053;&#xFF0C;&#x52A0;&#x5BC6;&#x6570;&#x636E;&#x5305;&#x3002;HTTPS&#x4F7F;&#x7528;&#x7684;&#x4E3B;&#x8981;&#x76EE;&#x7684;&#x662F;&#x63D0;&#x4F9B;&#x5BF9;&#x7F51;&#x7AD9;&#x670D;&#x52A1;&#x5668;&#x7684;&#x8EAB;&#x4EFD;&#x8BA4;&#x8BC1;&#xFF0C;&#x540C;&#x65F6;&#x4FDD;&#x62A4;&#x4EA4;&#x6362;&#x6570;&#x636E;&#x7684;&#x9690;&#x79C1;&#x4E0E;&#x5B8C;&#x6574;&#x6027;&#x3002;</p><a id="more"></a><h2 id="&#x4EC0;&#x4E48;&#x662F;SSL-TLS"><a href="#&#x4EC0;&#x4E48;&#x662F;SSL-TLS" class="headerlink" title="&#x4EC0;&#x4E48;&#x662F;SSL/TLS"></a>&#x4EC0;&#x4E48;&#x662F;SSL/TLS</h2><p>SSL &#x662F;&#x201C;Secure Sockets Layer&#x201D;&#x7684;&#x7F29;&#x5199;&#xFF0C;&#x4E2D;&#x6587;&#x53EB;&#x505A;&#x201C;&#x5B89;&#x5168;&#x5957;&#x63A5;&#x5C42;&#x201D;&#x3002;&#x539F;&#x5148;&#x4E92;&#x8054;&#x7F51;&#x4E0A;&#x4F7F;&#x7528;&#x7684; HTTP &#x534F;&#x8BAE;&#x662F;&#x660E;&#x6587;&#x7684;&#xFF0C;&#x5B58;&#x5728;&#x5F88;&#x591A;&#x7F3A;&#x70B9;&#x2014;&#x2014;&#x6BD4;&#x5982;&#x4F20;&#x8F93;&#x5185;&#x5BB9;&#x4F1A;&#x88AB;&#x5077;&#x7AA5;&#xFF08;&#x55C5;&#x63A2;&#xFF09;&#x548C;&#x7BE1;&#x6539;&#x3002;&#x53D1;&#x660E; SSL &#x534F;&#x8BAE;&#xFF0C;&#x5C31;&#x662F;&#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x8FD9;&#x4E9B;&#x95EE;&#x9898;&#x3002;IETF &#x5728;1999&#x5E74;&#x628A; SSL &#x6807;&#x51C6;&#x5316;&#x3002;&#x6807;&#x51C6;&#x5316;&#x4E4B;&#x540E;&#x7684;&#x540D;&#x79F0;&#x6539;&#x4E3A; TLS&#xFF08;&#x662F;&#x201C;Transport Layer Security&#x201D;&#x7684;&#x7F29;&#x5199;&#xFF09;&#xFF0C;&#x4E2D;&#x6587;&#x53EB;&#x505A;&#x201C;&#x4F20;&#x8F93;&#x5C42;&#x5B89;&#x5168;&#x534F;&#x8BAE;&#x201D;&#x3002;&#x6240;&#x4EE5;&#x8FD9;&#x4E24;&#x8005;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x540C;&#x4E00;&#x79CD;&#x534F;&#x8BAE;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x662F;&#x5728;&#x4E0D;&#x540C;&#x9636;&#x6BB5;&#x7684;&#x4E0D;&#x540C;&#x79F0;&#x547C;&#x3002;<br>SSL&#x534F;&#x8BAE;&#x4F4D;&#x4E8E;TCP/IP&#x534F;&#x8BAE;&#x4E0E;&#x5404;&#x79CD;&#x5E94;&#x7528;&#x5C42;&#x534F;&#x8BAE;&#x4E4B;&#x95F4;&#xFF0C;&#x4E3A;&#x6570;&#x636E;&#x901A;&#x8BAF;&#x63D0;&#x4F9B;&#x5B89;&#x5168;&#x652F;&#x6301;&#x3002;SSL&#x534F;&#x8BAE;&#x53EF;&#x5206;&#x4E3A;&#x4E24;&#x5C42;&#xFF1A;</p><ul><li>SSL&#x8BB0;&#x5F55;&#x534F;&#x8BAE;&#xFF08;SSL Record Protocol&#xFF09;&#xFF1A;&#x5B83;&#x5EFA;&#x7ACB;&#x5728;&#x53EF;&#x9760;&#x7684;&#x4F20;&#x8F93;&#x534F;&#x8BAE;&#xFF08;&#x5982;TCP&#xFF09;&#x4E4B;&#x4E0A;&#xFF0C;&#x4E3A;&#x9AD8;&#x5C42;&#x534F;&#x8BAE;&#x63D0;&#x4F9B;&#x6570;&#x636E;&#x5C01;&#x88C5;&#x3001;&#x538B;&#x7F29;&#x3001;&#x52A0;&#x5BC6;&#x7B49;&#x57FA;&#x672C;&#x529F;&#x80FD;&#x7684;&#x652F;&#x6301;&#x3002;</li><li>SSL&#x63E1;&#x624B;&#x534F;&#x8BAE;&#xFF08;SSL Handshake Protocol&#xFF09;&#xFF1A;&#x5B83;&#x5EFA;&#x7ACB;&#x5728;SSL&#x8BB0;&#x5F55;&#x534F;&#x8BAE;&#x4E4B;&#x4E0A;&#xFF0C;&#x7528;&#x4E8E;&#x5728;&#x5B9E;&#x9645;&#x7684;&#x6570;&#x636E;&#x4F20;&#x8F93;&#x5F00;&#x59CB;&#x524D;&#xFF0C;&#x901A;&#x8BAF;&#x53CC;&#x65B9;&#x8FDB;&#x884C;&#x8EAB;&#x4EFD;&#x8BA4;&#x8BC1;&#x3001;&#x534F;&#x5546;&#x52A0;&#x5BC6;&#x7B97;&#x6CD5;&#x3001;&#x4EA4;&#x6362;&#x52A0;&#x5BC6;&#x5BC6;&#x94A5;&#x7B49;&#x3002;</li></ul><h1 id="HTTP-VS-HTTPS"><a href="#HTTP-VS-HTTPS" class="headerlink" title="HTTP VS HTTPS"></a>HTTP VS HTTPS</h1><h2 id="HTTP&#x7684;&#x7279;&#x70B9;"><a href="#HTTP&#x7684;&#x7279;&#x70B9;" class="headerlink" title="HTTP&#x7684;&#x7279;&#x70B9;"></a>HTTP&#x7684;&#x7279;&#x70B9;</h2><ol><li>&#x65E0;&#x72B6;&#x6001;&#xFF1A;&#x534F;&#x8BAE;&#x5BF9;&#x5BA2;&#x6237;&#x7AEF;&#x6CA1;&#x6709;&#x72B6;&#x6001;&#x5B58;&#x50A8;&#xFF0C;&#x5BF9;&#x4E8B;&#x7269;&#x5904;&#x7406;&#x6CA1;&#x6709;&#x201C;&#x8BB0;&#x5FC6;&#x201D;&#x80FD;&#x529B;&#xFF0C;&#x6BD4;&#x5982;&#x8BBF;&#x95EE;&#x4E00;&#x4E2A;&#x7F51;&#x7AD9;&#x9700;&#x8981;&#x53CD;&#x590D;&#x8FDB;&#x884C;&#x767B;&#x5F55;&#x64CD;&#x4F5C;</li><li>&#x65E0;&#x8FDE;&#x63A5;&#xFF1A;HTTP/1.1&#x4E4B;&#x524D;&#xFF0C;&#x7531;&#x4E8E;&#x65E0;&#x72B6;&#x6001;&#x7279;&#x70B9;&#xFF0C;&#x6BCF;&#x6B21;&#x8BF7;&#x6C42;&#x9700;&#x8981;&#x901A;&#x8FC7;TCP&#x4E09;&#x6B21;&#x63E1;&#x624B;&#x56DB;&#x6B21;&#x6325;&#x624B;&#xFF0C;&#x548C;&#x670D;&#x52A1;&#x5668;&#x91CD;&#x65B0;&#x5EFA;&#x7ACB;&#x8FDE;&#x63A5;&#x3002;&#x6BD4;&#x5982;&#x67D0;&#x4E2A;&#x5BA2;&#x6237;&#x673A;&#x5728;&#x77ED;&#x65F6;&#x95F4;&#x591A;&#x6B21;&#x8BF7;&#x6C42;&#x540C;&#x4E00;&#x4E2A;&#x8D44;&#x6E90;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x5E76;&#x4E0D;&#x80FD;&#x533A;&#x522B;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x54CD;&#x5E94;&#x8FC7;&#x7528;&#x6237;&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x6240;&#x4EE5;&#x6BCF;&#x6B21;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x54CD;&#x5E94;&#x8BF7;&#x6C42;&#xFF0C;&#x9700;&#x8981;&#x8017;&#x8D39;&#x4E0D;&#x5FC5;&#x8981;&#x7684;&#x65F6;&#x95F4;&#x548C;&#x6D41;&#x91CF;&#x3002;</li><li>&#x57FA;&#x4E8E;&#x8BF7;&#x6C42;&#x548C;&#x54CD;&#x5E94;&#xFF1A;&#x57FA;&#x672C;&#x7684;&#x7279;&#x6027;&#xFF0C;&#x7531;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x8D77;&#x8BF7;&#x6C42;&#xFF0C;&#x670D;&#x52A1;&#x7AEF;&#x54CD;&#x5E94;</li><li>&#x7B80;&#x5355;&#x5FEB;&#x901F;&#x3001;&#x7075;&#x6D3B;</li><li>&#x901A;&#x4FE1;&#x4F7F;&#x7528;&#x660E;&#x6587;&#x3001;&#x8BF7;&#x6C42;&#x548C;&#x54CD;&#x5E94;&#x4E0D;&#x4F1A;&#x5BF9;&#x901A;&#x4FE1;&#x65B9;&#x8FDB;&#x884C;&#x786E;&#x8BA4;&#x3001;&#x65E0;&#x6CD5;&#x4FDD;&#x62A4;&#x6570;&#x636E;&#x7684;&#x5B8C;&#x6574;&#x6027;</li></ol><h2 id="HTTPS&#x7684;&#x7279;&#x70B9;"><a href="#HTTPS&#x7684;&#x7279;&#x70B9;" class="headerlink" title="HTTPS&#x7684;&#x7279;&#x70B9;"></a>HTTPS&#x7684;&#x7279;&#x70B9;</h2><ol><li>&#x5185;&#x5BB9;&#x52A0;&#x5BC6;&#xFF1A;&#x91C7;&#x7528;&#x6DF7;&#x5408;&#x52A0;&#x5BC6;&#x6280;&#x672F;&#xFF0C;&#x4E2D;&#x95F4;&#x8005;&#x65E0;&#x6CD5;&#x76F4;&#x63A5;&#x67E5;&#x770B;&#x660E;&#x6587;&#x5185;&#x5BB9;</li><li>&#x9A8C;&#x8BC1;&#x8EAB;&#x4EFD;&#xFF1A;&#x901A;&#x8FC7;&#x8BC1;&#x4E66;&#x8BA4;&#x8BC1;&#x5BA2;&#x6237;&#x7AEF;&#x8BBF;&#x95EE;&#x7684;&#x662F;&#x81EA;&#x5DF1;&#x7684;&#x670D;&#x52A1;&#x5668;</li><li>&#x4FDD;&#x62A4;&#x6570;&#x636E;&#x5B8C;&#x6574;&#x6027;&#xFF1A;&#x9632;&#x6B62;&#x4F20;&#x8F93;&#x7684;&#x5185;&#x5BB9;&#x88AB;&#x4E2D;&#x95F4;&#x4EBA;&#x5192;&#x5145;&#x6216;&#x8005;&#x7BE1;&#x6539;</li></ol><h1 id="&#x5173;&#x4E8E;&#x6DF7;&#x5408;&#x52A0;&#x5BC6;&#x6280;&#x672F;"><a href="#&#x5173;&#x4E8E;&#x6DF7;&#x5408;&#x52A0;&#x5BC6;&#x6280;&#x672F;" class="headerlink" title="&#x5173;&#x4E8E;&#x6DF7;&#x5408;&#x52A0;&#x5BC6;&#x6280;&#x672F;"></a>&#x5173;&#x4E8E;&#x6DF7;&#x5408;&#x52A0;&#x5BC6;&#x6280;&#x672F;</h1><p>&#x6DF7;&#x5408;&#x52A0;&#x5BC6;&#x7ED3;&#x5408;&#x975E;&#x5BF9;&#x79F0;&#x52A0;&#x5BC6;&#x548C;&#x5BF9;&#x79F0;&#x52A0;&#x5BC6;&#x6280;&#x672F;&#x3002;</p><ul><li>&#x5BF9;&#x79F0;&#x5BC6;&#x94A5;&#x52A0;&#x5BC6;&#xFF0C;&#x53C8;&#x79F0;&#x79C1;&#x94A5;&#x52A0;&#x5BC6;&#xFF0C;&#x5373;&#x4FE1;&#x606F;&#x7684;&#x53D1;&#x9001;&#x65B9;&#x548C;&#x63A5;&#x6536;&#x65B9;&#x7528;&#x540C;&#x4E00;&#x4E2A;&#x5BC6;&#x94A5;&#x53BB;&#x52A0;&#x5BC6;&#x548C;&#x89E3;&#x5BC6;&#x6570;&#x636E;&#x3002;&#x5B83;&#x7684;&#x6700;&#x5927;&#x4F18;&#x52BF;&#x662F;&#x52A0;/&#x89E3;&#x5BC6;&#x901F;&#x5EA6;&#x5FEB;&#xFF0C;&#x9002;&#x5408;&#x4E8E;&#x5BF9;&#x5927;&#x6570;&#x636E;&#x91CF;&#x8FDB;&#x884C;&#x52A0;&#x5BC6;&#xFF0C;&#x4F46;&#x5BC6;&#x94A5;&#x7BA1;&#x7406;&#x56F0;&#x96BE;&#x3002;</li><li>&#x975E;&#x5BF9;&#x79F0;&#x5BC6;&#x94A5;&#x52A0;&#x5BC6;&#xFF0C;&#x53C8;&#x79F0;&#x516C;&#x94A5;&#x52A0;&#x5BC6;&#xFF0C;&#x5B83;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x4E00;&#x5BF9;&#x5BC6;&#x94A5;&#x6765;&#x5206;&#x522B;&#x5B8C;&#x6210;&#x52A0;&#x5BC6;&#x548C;&#x89E3;&#x5BC6;&#x64CD;&#x4F5C;&#xFF0C;&#x4E00;&#x4E2A;&#x516C;&#x5F00;&#x53D1;&#x5E03;&#xFF0C;&#x5373;&#x516C;&#x5F00;&#x5BC6;&#x94A5;&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x7531;&#x7528;&#x6237;&#x81EA;&#x5DF1;&#x79D8;&#x5BC6;&#x4FDD;&#x5B58;&#xFF0C;&#x5373;&#x79C1;&#x7528;&#x5BC6;&#x94A5;&#x3002;&#x4FE1;&#x606F;&#x53D1;&#x9001;&#x8005;&#x7528;&#x516C;&#x5F00;&#x5BC6;&#x94A5;&#x53BB;&#x52A0;&#x5BC6;&#xFF0C;&#x800C;&#x4FE1;&#x606F;&#x63A5;&#x6536;&#x8005;&#x5219;&#x7528;&#x79C1;&#x7528;&#x5BC6;&#x94A5;&#x53BB;&#x89E3;&#x5BC6;&#x3002;</li></ul><p>&#x5BA2;&#x6237;&#x7AEF;&#x4F7F;&#x7528;&#x5BF9;&#x79F0;&#x52A0;&#x5BC6;&#x751F;&#x6210;&#x5BC6;&#x94A5;&#x5BF9;&#x4F20;&#x8F93;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x52A0;&#x5BC6;&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;&#x975E;&#x5BF9;&#x79F0;&#x52A0;&#x5BC6;&#x7684;&#x516C;&#x94A5;&#x518D;&#x5BF9;&#x79D8;&#x94A5;&#x8FDB;&#x884C;&#x52A0;&#x5BC6;&#xFF0C;&#x6240;&#x4EE5;&#x7F51;&#x7EDC;&#x4E0A;&#x4F20;&#x8F93;&#x7684;&#x6570;&#x636E;&#x662F;&#x88AB;&#x79D8;&#x94A5;&#x52A0;&#x5BC6;&#x7684;&#x5BC6;&#x6587;&#x548C;&#x7528;&#x516C;&#x94A5;&#x52A0;&#x5BC6;&#x540E;&#x7684;&#x79D8;&#x5BC6;&#x79D8;&#x94A5;&#xFF0C;&#x56E0;&#x6B64;&#x5373;&#x4F7F;&#x88AB;&#x9ED1;&#x5BA2;&#x622A;&#x53D6;&#xFF0C;&#x7531;&#x4E8E;&#x6CA1;&#x6709;&#x79C1;&#x94A5;&#xFF0C;&#x65E0;&#x6CD5;&#x83B7;&#x53D6;&#x5230;&#x52A0;&#x5BC6;&#x660E;&#x6587;&#x7684;&#x79D8;&#x94A5;&#xFF0C;&#x4FBF;&#x65E0;&#x6CD5;&#x83B7;&#x53D6;&#x5230;&#x660E;&#x6587;&#x6570;&#x636E;&#x3002;</p><h1 id="SSL-TLS&#x534F;&#x8BAE;&#x57FA;&#x672C;&#x539F;&#x7406;"><a href="#SSL-TLS&#x534F;&#x8BAE;&#x57FA;&#x672C;&#x539F;&#x7406;" class="headerlink" title="SSL/TLS&#x534F;&#x8BAE;&#x57FA;&#x672C;&#x539F;&#x7406;"></a>SSL/TLS&#x534F;&#x8BAE;&#x57FA;&#x672C;&#x539F;&#x7406;</h1><p>SSL/TLS&#x534F;&#x8BAE;&#x7684;&#x57FA;&#x672C;&#x601D;&#x8DEF;&#x662F;&#x91C7;&#x7528;&#x516C;&#x94A5;&#x52A0;&#x5BC6;&#x6CD5;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x5148;&#x5411;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x7D22;&#x8981;&#x516C;&#x94A5;&#xFF0C;&#x7136;&#x540E;&#x7528;&#x516C;&#x94A5;&#x52A0;&#x5BC6;&#x4FE1;&#x606F;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x6536;&#x5230;&#x5BC6;&#x6587;&#x540E;&#xFF0C;&#x7528;&#x81EA;&#x5DF1;&#x7684;&#x79C1;&#x94A5;&#x89E3;&#x5BC6;</p><ul><li>&#x4E3A;&#x4E86;&#x4FDD;&#x8BC1;&#x516C;&#x94A5;&#x4E0D;&#x88AB;&#x7BE1;&#x6539;&#xFF0C;&#x5C06;&#x516C;&#x94A5;&#x653E;&#x5728;&#x6570;&#x5B57;&#x8BC1;&#x4E66;&#x4E2D;&#xFF0C;&#x53EA;&#x8981;&#x8BC1;&#x4E66;&#x662F;&#x53EF;&#x4FE1;&#x7684;&#xFF0C;&#x516C;&#x94A5;&#x5C31;&#x662F;&#x53EF;&#x4FE1;&#x7684;&#x3002;</li><li>&#x4E3A;&#x4E86;&#x51CF;&#x5C11;&#x8FD0;&#x7B97;&#x91CF;&#x91CF;&#xFF0C;&#x6BCF;&#x4E00;&#x6B21;&#x5BF9;&#x8BDD;&#xFF08;session&#xFF09;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x548C;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x90FD;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x201D;&#x5BF9;&#x8BDD;&#x5BC6;&#x94A5;&#x201D;&#xFF08;session key&#xFF09;&#xFF0C;&#x7528;&#x5B83;&#x6765;&#x52A0;&#x5BC6;&#x4FE1;&#x606F;&#x3002;&#x7531;&#x4E8E;&#x201D;&#x5BF9;&#x8BDD;&#x5BC6;&#x94A5;&#x201D;&#x662F;&#x5BF9;&#x79F0;&#x52A0;&#x5BC6;&#xFF0C;&#x6240;&#x4EE5;&#x8FD0;&#x7B97;&#x901F;&#x5EA6;&#x975E;&#x5E38;&#x5FEB;&#xFF0C;&#x800C;&#x670D;&#x52A1;&#x5668;&#x516C;&#x94A5;&#x53EA;&#x7528;&#x4E8E;&#x52A0;&#x5BC6;&#x201D;&#x5BF9;&#x8BDD;&#x5BC6;&#x94A5;&#x201D;&#x672C;&#x8EAB;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x51CF;&#x5C11;&#x4E86;&#x52A0;&#x5BC6;&#x8FD0;&#x7B97;&#x7684;&#x6D88;&#x8017;&#x65F6;&#x95F4;&#x3002;</li></ul><p>&#x56E0;&#x6B64;&#xFF0C;SSL/TLS&#x534F;&#x8BAE;&#x7684;&#x57FA;&#x672C;&#x8FC7;&#x7A0B;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A;</p><ul><li>&#x5BA2;&#x6237;&#x7AEF;&#x5411;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x7D22;&#x8981;&#x5E76;&#x9A8C;&#x8BC1;&#x516C;&#x94A5;&#x3002;</li><li>&#x53CC;&#x65B9;&#x534F;&#x5546;&#x751F;&#x6210;&#x201C;&#x5BF9;&#x8BDD;&#x5BC6;&#x94A5;&#x201D;&#x3002;</li><li>&#x53CC;&#x65B9;&#x91C7;&#x7528;&#x201C;&#x5BF9;&#x8BDD;&#x5BC6;&#x94A5;&#x201D;&#x8FDB;&#x884C;&#x52A0;&#x5BC6;&#x901A;&#x4FE1;&#x3002;</li></ul><h1 id="HTTPS&#x5DE5;&#x4F5C;&#x539F;&#x7406;"><a href="#HTTPS&#x5DE5;&#x4F5C;&#x539F;&#x7406;" class="headerlink" title="HTTPS&#x5DE5;&#x4F5C;&#x539F;&#x7406;"></a>HTTPS&#x5DE5;&#x4F5C;&#x539F;&#x7406;</h1><ol><li>&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x8D77;HTTPS&#x8BF7;&#x6C42;<br> &#x7528;&#x6237;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x91CC;&#x8F93;&#x5165;&#x4E00;&#x4E2A;https&#x7F51;&#x5740;&#xFF0C;&#x7136;&#x540E;&#x8FDE;&#x63A5;&#x5230;server&#x7684;443&#x7AEF;&#x53E3;&#x3002;</li><li>&#x670D;&#x52A1;&#x7AEF;&#x7684;&#x914D;&#x7F6E;<br> &#x91C7;&#x7528;HTTPS&#x534F;&#x8BAE;&#x7684;&#x670D;&#x52A1;&#x5668;&#x5FC5;&#x987B;&#x8981;&#x6709;&#x4E00;&#x5957;&#x6570;&#x5B57;&#x8BC1;&#x4E66;&#xFF0C;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x5236;&#x4F5C;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5411;&#x7EC4;&#x7EC7;&#x7533;&#x8BF7;&#xFF0C;&#x533A;&#x522B;&#x5C31;&#x662F;&#x81EA;&#x5DF1;&#x9881;&#x53D1;&#x7684;&#x8BC1;&#x4E66;&#x9700;&#x8981;&#x5BA2;&#x6237;&#x7AEF;&#x9A8C;&#x8BC1;&#x901A;&#x8FC7;&#xFF0C;&#x624D;&#x53EF;&#x4EE5;&#x7EE7;&#x7EED;&#x8BBF;&#x95EE;&#xFF0C;&#x800C;&#x4F7F;&#x7528;&#x53D7;&#x4FE1;&#x4EFB;&#x7684;&#x516C;&#x53F8;&#x7533;&#x8BF7;&#x7684;&#x8BC1;&#x4E66;&#x5219;&#x4E0D;&#x4F1A;&#x5F39;&#x51FA;&#x63D0;&#x793A;&#x9875;&#x9762;&#x3002;</li><li>&#x4F20;&#x9001;&#x8BC1;&#x4E66;<br> &#x8FD9;&#x4E2A;&#x8BC1;&#x4E66;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x516C;&#x94A5;&#xFF0C;&#x53EA;&#x662F;&#x5305;&#x542B;&#x4E86;&#x5F88;&#x591A;&#x4FE1;&#x606F;&#xFF0C;&#x5982;&#x8BC1;&#x4E66;&#x7684;&#x9881;&#x53D1;&#x673A;&#x6784;&#xFF0C;&#x8FC7;&#x671F;&#x65F6;&#x95F4;&#x7B49;&#x7B49;&#x3002;</li><li>&#x5BA2;&#x6237;&#x7AEF;&#x89E3;&#x6790;&#x8BC1;&#x4E66;<br> &#x8FD9;&#x90E8;&#x5206;&#x5DE5;&#x4F5C;&#x662F;&#x7531;&#x5BA2;&#x6237;&#x7AEF;&#x7684;TLS&#x6765;&#x5B8C;&#x6210;&#x7684;&#xFF0C;&#x9996;&#x5148;&#x4F1A;&#x9A8C;&#x8BC1;&#x516C;&#x94A5;&#x662F;&#x5426;&#x6709;&#x6548;&#xFF0C;&#x6BD4;&#x5982;&#x9881;&#x53D1;&#x673A;&#x6784;&#xFF0C;&#x8FC7;&#x671F;&#x65F6;&#x95F4;&#x7B49;&#x7B49;&#xFF0C;&#x5982;&#x679C;&#x53D1;&#x73B0;&#x5F02;&#x5E38;&#xFF0C;&#x5219;&#x4F1A;&#x5F39;&#x51FA;&#x4E00;&#x4E2A;&#x8B66;&#x544A;&#x6846;&#xFF0C;&#x63D0;&#x793A;&#x8BC1;&#x4E66;&#x5B58;&#x5728;&#x95EE;&#x9898;&#x3002;<ol><li>&#x9996;&#x5148;&#x6D4F;&#x89C8;&#x5668;&#x8BFB;&#x53D6;&#x8BC1;&#x4E66;&#x4E2D;&#x7684;&#x8BC1;&#x4E66;&#x6240;&#x6709;&#x8005;&#x3001;&#x6709;&#x6548;&#x671F;&#x7B49;&#x4FE1;&#x606F;&#x8FDB;&#x884C;&#x4E00;&#x4E00;&#x6821;&#x9A8C;</li><li>&#x6D4F;&#x89C8;&#x5668;&#x5F00;&#x59CB;&#x67E5;&#x627E;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E2D;&#x5DF2;&#x5185;&#x7F6E;&#x7684;&#x53D7;&#x4FE1;&#x4EFB;&#x7684;&#x8BC1;&#x4E66;&#x53D1;&#x5E03;&#x673A;&#x6784;CA&#xFF0C;&#x4E0E;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x6765;&#x7684;&#x8BC1;&#x4E66;&#x4E2D;&#x7684;&#x9881;&#x53D1;&#x8005;CA&#x6BD4;&#x5BF9;&#xFF0C;&#x7528;&#x4E8E;&#x6821;&#x9A8C;&#x8BC1;&#x4E66;&#x662F;&#x5426;&#x4E3A;&#x5408;&#x6CD5;&#x673A;&#x6784;&#x9881;&#x53D1;</li><li>&#x5982;&#x679C;&#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x6D4F;&#x89C8;&#x5668;&#x5C31;&#x4F1A;&#x62A5;&#x9519;&#xFF0C;&#x8BF4;&#x660E;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x6765;&#x7684;&#x8BC1;&#x4E66;&#x662F;&#x4E0D;&#x53EF;&#x4FE1;&#x4EFB;&#x7684;&#x3002;</li><li>&#x5982;&#x679C;&#x627E;&#x5230;&#xFF0C;&#x90A3;&#x4E48;&#x6D4F;&#x89C8;&#x5668;&#x5C31;&#x4F1A;&#x4ECE;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E2D;&#x53D6;&#x51FA;&#x9881;&#x53D1;&#x8005;CA &#x7684;&#x516C;&#x94A5;(&#x591A;&#x6570;&#x6D4F;&#x89C8;&#x5668;&#x5F00;&#x53D1;&#x5546;&#x53D1;&#x5E03;<br>&#x7248;&#x672C;&#x65F6;&#xFF0C;&#x4F1A;&#x4E8B;&#x5148;&#x5728;&#x5185;&#x90E8;&#x690D;&#x5165;&#x5E38;&#x7528;&#x8BA4;&#x8BC1;&#x673A;&#x5173;&#x7684;&#x516C;&#x5F00;&#x5BC6;&#x94A5;)&#xFF0C;&#x7136;&#x540E;&#x5BF9;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x6765;&#x7684;&#x8BC1;&#x4E66;&#x91CC;&#x9762;&#x7684;&#x7B7E;&#x540D;&#x8FDB;&#x884C;&#x89E3;&#x5BC6;</li><li>&#x6D4F;&#x89C8;&#x5668;&#x4F7F;&#x7528;&#x76F8;&#x540C;&#x7684;hash&#x7B97;&#x6CD5;&#x8BA1;&#x7B97;&#x51FA;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x6765;&#x7684;&#x8BC1;&#x4E66;&#x7684;hash&#x503C;&#xFF0C;&#x5C06;&#x8FD9;&#x4E2A;&#x8BA1;&#x7B97;&#x7684;hash&#x503C;&#x4E0E;&#x8BC1;&#x4E66;&#x4E2D;&#x7B7E;&#x540D;&#x505A;&#x5BF9;&#x6BD4;</li><li>&#x5BF9;&#x6BD4;&#x7ED3;&#x679C;&#x4E00;&#x81F4;&#xFF0C;&#x5219;&#x8BC1;&#x660E;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x6765;&#x7684;&#x8BC1;&#x4E66;&#x5408;&#x6CD5;&#xFF0C;&#x6CA1;&#x6709;&#x88AB;&#x5192;&#x5145;</li><li>&#x6B64;&#x65F6;&#x6D4F;&#x89C8;&#x5668;&#x5C31;&#x53EF;&#x4EE5;&#x8BFB;&#x53D6;&#x8BC1;&#x4E66;&#x4E2D;&#x7684;&#x516C;&#x94A5;&#xFF0C;&#x7528;&#x4E8E;&#x540E;&#x7EED;&#x52A0;&#x5BC6;&#x4E86;</li></ol></li><li>&#x4F20;&#x9001;&#x52A0;&#x5BC6;&#x4FE1;&#x606F;<br> &#x8FD9;&#x90E8;&#x5206;&#x4F20;&#x9001;&#x7684;&#x662F;&#x7528;&#x8BC1;&#x4E66;&#x52A0;&#x5BC6;&#x540E;&#x7684;&#x968F;&#x673A;&#x503C;(&#x79C1;&#x94A5;)&#xFF0C;&#x76EE;&#x7684;&#x5C31;&#x662F;&#x8BA9;&#x670D;&#x52A1;&#x7AEF;&#x5F97;&#x5230;&#x8FD9;&#x4E2A;&#x968F;&#x673A;&#x503C;&#xFF0C;&#x4EE5;&#x540E;&#x5BA2;&#x6237;&#x7AEF;&#x548C;&#x670D;&#x52A1;&#x7AEF;&#x7684;&#x901A;&#x4FE1;&#x5C31;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8FD9;&#x4E2A;&#x968F;&#x673A;&#x503C;&#x6765;&#x8FDB;&#x884C;&#x52A0;&#x5BC6;&#x89E3;&#x5BC6;&#x4E86;&#x3002;</li><li>&#x670D;&#x52A1;&#x7AEF;&#x89E3;&#x5BC6;&#x4FE1;&#x606F;<br> &#x670D;&#x52A1;&#x7AEF;&#x7528;&#x79C1;&#x94A5;&#x89E3;&#x5BC6;&#x540E;&#xFF0C;&#x5F97;&#x5230;&#x4E86;&#x5BA2;&#x6237;&#x7AEF;&#x4F20;&#x8FC7;&#x6765;&#x7684;&#x968F;&#x673A;&#x503C;(&#x79C1;&#x94A5;)&#xFF0C;&#x7136;&#x540E;&#x628A;&#x5185;&#x5BB9;&#x901A;&#x8FC7;&#x8BE5;&#x503C;&#x8FDB;&#x884C;&#x5BF9;&#x79F0;&#x52A0;&#x5BC6;</li><li>&#x4F20;&#x8F93;&#x52A0;&#x5BC6;&#x540E;&#x7684;&#x4FE1;&#x606F;<br> &#x8FD9;&#x90E8;&#x5206;&#x4FE1;&#x606F;&#x662F;&#x670D;&#x52A1;&#x7AEF;&#x7528;&#x79C1;&#x94A5;&#x52A0;&#x5BC6;&#x540E;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x5BA2;&#x6237;&#x7AEF;&#x88AB;&#x8FD8;&#x539F;&#x3002;</li><li>&#x5BA2;&#x6237;&#x7AEF;&#x89E3;&#x5BC6;&#x4FE1;&#x606F;<br> &#x5BA2;&#x6237;&#x7AEF;&#x7528;&#x4E4B;&#x524D;&#x751F;&#x6210;&#x7684;&#x79C1;&#x94A5;&#x89E3;&#x5BC6;&#x670D;&#x52A1;&#x7AEF;&#x4F20;&#x8FC7;&#x6765;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x4E8E;&#x662F;&#x83B7;&#x53D6;&#x4E86;&#x89E3;&#x5BC6;&#x540E;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x7B2C;&#x4E09;&#x65B9;&#x5373;&#x4F7F;&#x76D1;&#x542C;&#x5230;&#x4E86;&#x6570;&#x636E;&#xFF0C;&#x4E5F;&#x675F;&#x624B;&#x65E0;&#x7B56;&#x3002;</li></ol><h1 id="&#x603B;&#x7ED3;HTTP&#x548C;HTTPS&#x7684;&#x533A;&#x522B;"><a href="#&#x603B;&#x7ED3;HTTP&#x548C;HTTPS&#x7684;&#x533A;&#x522B;" class="headerlink" title="&#x603B;&#x7ED3;HTTP&#x548C;HTTPS&#x7684;&#x533A;&#x522B;"></a>&#x603B;&#x7ED3;HTTP&#x548C;HTTPS&#x7684;&#x533A;&#x522B;</h1><ol><li>https&#x534F;&#x8BAE;&#x9700;&#x8981;&#x5230;ca&#x7533;&#x8BF7;&#x8BC1;&#x4E66;&#xFF0C;&#x4E00;&#x822C;&#x514D;&#x8D39;&#x8BC1;&#x4E66;&#x8F83;&#x5C11;&#xFF0C;&#x56E0;&#x800C;&#x9700;&#x8981;&#x4E00;&#x5B9A;&#x8D39;&#x7528;&#x3002;</li><li>http&#x662F;&#x8D85;&#x6587;&#x672C;&#x4F20;&#x8F93;&#x534F;&#x8BAE;&#xFF0C;&#x4FE1;&#x606F;&#x662F;&#x660E;&#x6587;&#x4F20;&#x8F93;&#xFF0C;https&#x5219;&#x662F;&#x5177;&#x6709;&#x5B89;&#x5168;&#x6027;&#x7684;ssl&#x52A0;&#x5BC6;&#x4F20;&#x8F93;&#x534F;&#x8BAE;&#x3002;</li><li>http&#x548C;https&#x4F7F;&#x7528;&#x7684;&#x662F;&#x5B8C;&#x5168;&#x4E0D;&#x540C;&#x7684;&#x8FDE;&#x63A5;&#x65B9;&#x5F0F;&#xFF0C;&#x7528;&#x7684;&#x7AEF;&#x53E3;&#x4E5F;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x524D;&#x8005;&#x662F;80&#xFF0C;&#x540E;&#x8005;&#x662F;443&#x3002;</li><li>http&#x7684;&#x8FDE;&#x63A5;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x662F;&#x65E0;&#x72B6;&#x6001;&#x7684;&#xFF1B;HTTPS&#x534F;&#x8BAE;&#x662F;&#x7531;SSL+HTTP&#x534F;&#x8BAE;&#x6784;&#x5EFA;&#x7684;&#x53EF;&#x8FDB;&#x884C;&#x52A0;&#x5BC6;&#x4F20;&#x8F93;&#x3001;&#x8EAB;&#x4EFD;&#x8BA4;&#x8BC1;&#x7684;&#x7F51;&#x7EDC;&#x534F;&#x8BAE;&#xFF0C;&#x6BD4;http&#x534F;&#x8BAE;&#x5B89;&#x5168;&#x3002;</li></ol><blockquote><p>&#x53C2;&#x8003;<br>    <a href="https://blog.csdn.net/xiaoming100001/article/details/81109617" target="_blank" rel="noopener">https://blog.csdn.net/xiaoming100001/article/details/81109617</a><br>    <a href="https://www.cnblogs.com/jesse131/p/9080925.html" target="_blank" rel="noopener">https://www.cnblogs.com/jesse131/p/9080925.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTTP </tag>
            
            <tag> HTTPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的小破站正式上线了</title>
      <link href="/2019/08/23/%E6%9D%82%E8%AE%B0/"/>
      <url>/2019/08/23/%E6%9D%82%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>&#x521A;&#x521A;&#x4E0D;&#x4E45;&#x524D;&#x6536;&#x5230;&#x963F;&#x91CC;&#x4E91;&#x7684;&#x77ED;&#x4FE1;&#xFF0C;&#x901A;&#x77E5;&#x6211;&#x6211;&#x7684;&#x57DF;&#x540D;&#x7EC8;&#x4E8E;&#x901A;&#x8FC7;&#x5907;&#x6848;&#x5BA1;&#x6838;&#x4E86;&#xFF0C;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x6BD4;&#x6211;&#x60F3;&#x8C61;&#x4E2D;&#x7684;&#x5FEB;&#x4E86;&#x4E0D;&#x5C11;&#x3002;&#x6211;&#x8D76;&#x7D27;&#x7ED9;&#x6211;&#x7684;&#x670D;&#x52A1;&#x5668;&#x7ED1;&#x5B9A;&#x4E86;&#x6211;&#x7684;&#x57DF;&#x540D;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x91CD;&#x65B0;&#x90E8;&#x7F72;&#x5230;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#xFF0C;&#x81F3;&#x6B64;&#x6211;&#x7684;&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;&#x7EC8;&#x4E8E;&#x6B63;&#x5F0F;&#x4E0A;&#x7EBF;&#x4E86;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x8BE5;&#x6298;&#x817E;&#x8BA9;&#x767E;&#x5EA6;&#x548C;&#x8C37;&#x6B4C;&#x6536;&#x5F55;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x4E86;&#x3002;</p><a id="more"></a><p>&#x5F53;&#x7136;&#x8FD8;&#x662F;&#x8981;&#x611F;&#x6168;&#x4E00;&#x4E0B;&#x7684;&#xFF0C;&#x4E0B;&#x9762;&#x662F;&#x6211;&#x7684;&#x5C0F;&#x7834;&#x7AD9;&#x7684;&#x4E00;&#x4E9B;&#x8BB0;&#x4E8B;</p><ul><li>2019&#x5E74;7&#x6708;23&#x65E5;&#x5F00;&#x59CB;&#x6709;&#x4E86;&#x642D;&#x5EFA;&#x4E00;&#x4E2A;&#x535A;&#x5BA2;&#x7684;&#x5FF5;&#x5934;</li><li>2019&#x5E74;7&#x6708;25&#x65E5;&#x5F00;&#x59CB;&#x7740;&#x624B;&#x4F7F;&#x7528;Hexo&#x6846;&#x67B6;&#x642D;&#x5EFA;&#x535A;&#x5BA2;</li><li>2019&#x5E74;7&#x6708;25&#x65E5;&#x4E0B;&#x5348;&#x535A;&#x5BA2;&#x642D;&#x5EFA;&#x5B8C;&#x6210;&#xFF0C;&#x4E0A;&#x4F20;&#x81F3;GitHub&#x6258;&#x7BA1;&#x3002;&#x7F51;&#x5740;&#xFF1A;<a href="http://zhengyujie.github.io" target="_blank" rel="noopener">http://zhengyujie.github.io</a></li><li>2019&#x5E74;7&#x6708;25&#x65E5;&#x665A;&#x4E0A;&#x4E0A;&#x4F20;&#x7B2C;&#x4E00;&#x7BC7;&#x535A;&#x5BA2;</li><li>2019&#x5E74;8&#x6708;13&#x65E5;&#x5C06;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x90E8;&#x7F72;&#x81F3;Coding&#x5E73;&#x53F0;&#xFF0C;&#x7F51;&#x5740;&#xFF1A;<a href="http://zhengyujie.coding.me" target="_blank" rel="noopener">http://zhengyujie.coding.me</a></li><li>2019&#x5E74;8&#x6708;16&#x65E5;&#x5728;&#x963F;&#x91CC;&#x4E91;&#x8D2D;&#x4E70;&#x4E86;&#x57DF;&#x540D;</li><li>2019&#x5E74;8&#x6708;17&#x65E5;&#x8D2D;&#x4E70;&#x4E86;&#x963F;&#x91CC;&#x4E91;&#x5B66;&#x751F;&#x4E3B;&#x673A;</li><li>2019&#x5E74;8&#x6708;17&#x65E5;&#x4E0B;&#x5348;&#x5C06;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x90E8;&#x7F72;&#x81F3;&#x6211;&#x7684;&#x963F;&#x91CC;&#x4E91;&#x4E3B;&#x673A;</li><li>2019&#x5E74;8&#x6708;17&#x65E5;&#x5F00;&#x59CB;&#x8FDB;&#x884C;&#x57DF;&#x540D;&#x5907;&#x6848;</li><li>2019&#x5E74;8&#x6708;23&#x65E5;&#x57DF;&#x540D;&#x5907;&#x6848;&#x5BA1;&#x6838;&#x901A;&#x8FC7;&#xFF0C;&#x5C0F;&#x7834;&#x7AD9;&#x6B63;&#x5F0F;&#x4E0A;&#x7EBF;&#xFF0C;&#x7F51;&#x5740;&#xFF1A;<a href="http://zhengyujie.cn">http://zhengyujie.cn</a></li></ul><p>&#x672A;&#x6765;&#x7814;&#x7A76;&#x751F;&#x4E09;&#x5E74;&#x6211;&#x4F1A;&#x575A;&#x6301;&#x5728;&#x535A;&#x5BA2;&#x4E0A;&#x8BB0;&#x5F55;&#x6211;&#x5B66;&#x4E60;&#x548C;&#x751F;&#x6D3B;&#x7684;&#x70B9;&#x6EF4;,&#x5E0C;&#x671B;&#x6211;&#x548C;&#x5C0F;&#x7834;&#x7AD9;&#x90FD;&#x80FD;&#x53D8;&#x5F97;&#x8D8A;&#x6765;&#x8D8A;&#x4F18;&#x79C0;&#x3002;</p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小破站记事 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TensorFlow学习笔记12：CIFAR-10数据集图片分类</title>
      <link href="/2019/08/23/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B012/"/>
      <url>/2019/08/23/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B012/</url>
      
        <content type="html"><![CDATA[<h1 id="CIFAR-10&#x6570;&#x636E;&#x96C6;&#x7B80;&#x4ECB;"><a href="#CIFAR-10&#x6570;&#x636E;&#x96C6;&#x7B80;&#x4ECB;" class="headerlink" title="CIFAR-10&#x6570;&#x636E;&#x96C6;&#x7B80;&#x4ECB;"></a>CIFAR-10&#x6570;&#x636E;&#x96C6;&#x7B80;&#x4ECB;</h1><blockquote><p>&#x5B98;&#x7F51;&#x94FE;&#x63A5;&#xFF1A;<a href="http://www.cs.toronto.edu/~kriz/cifar.html" target="_blank" rel="noopener">http://www.cs.toronto.edu/~kriz/cifar.html</a></p></blockquote><p> CIFAR-10&#x662F;&#x4E00;&#x4E2A;&#x66F4;&#x63A5;&#x8FD1;&#x666E;&#x9002;&#x7269;&#x4F53;&#x7684;&#x5F69;&#x8272;&#x56FE;&#x50CF;&#x6570;&#x636E;&#x96C6;&#x3002;CIFAR-10 &#x662F;&#x7531;Hinton &#x7684;&#x5B66;&#x751F;Alex Krizhevsky &#x548C;Ilya Sutskever &#x6574;&#x7406;&#x7684;&#x4E00;&#x4E2A;&#x7528;&#x4E8E;&#x8BC6;&#x522B;&#x666E;&#x9002;&#x7269;&#x4F53;&#x7684;&#x5C0F;&#x578B;&#x6570;&#x636E;&#x96C6;&#x3002;&#x4E00;&#x5171;&#x5305;&#x542B;10&#x4E2A;&#x7C7B;&#x522B;&#x7684;RGB&#x5F69;&#x8272;&#x56FE;&#x7247;&#xFF1A;&#x98DE;&#x673A;&#xFF08; airplane &#xFF09;&#x3001;&#x6C7D;&#x8F66;&#xFF08; automobile &#xFF09;&#x3001;&#x9E1F;&#x7C7B;&#xFF08; bird &#xFF09;&#x3001;&#x732B;&#xFF08; cat &#xFF09;&#x3001;&#x9E7F;&#xFF08; deer &#xFF09;&#x3001;&#x72D7;&#xFF08; dog &#xFF09;&#x3001;&#x86D9;&#x7C7B;&#xFF08; frog &#xFF09;&#x3001;&#x9A6C;&#xFF08; horse &#xFF09;&#x3001;&#x8239;&#xFF08; ship &#xFF09;&#x548C;&#x5361;&#x8F66;&#xFF08; truck &#xFF09;&#x3002;&#x6BCF;&#x4E2A;&#x56FE;&#x7247;&#x7684;&#x5C3A;&#x5BF8;&#x4E3A;32 &#xD7; 32 &#xFF0C;&#x6BCF;&#x4E2A;&#x7C7B;&#x522B;&#x6709;6000&#x4E2A;&#x56FE;&#x50CF;&#xFF0C;&#x6570;&#x636E;&#x96C6;&#x4E2D;&#x4E00;&#x5171;&#x6709;50000 &#x5F20;&#x8BAD;&#x7EC3;&#x56FE;&#x7247;&#x548C;10000 &#x5F20;&#x6D4B;&#x8BD5;&#x56FE;&#x7247;&#x3002;</p><a id="more"></a><p><img src="http://pwbhioup3.bkt.clouddn.com/CIFAR-10.png" alt="CIFAR-10"></p><h1 id="TensenFlow&#x5B9E;&#x73B0;"><a href="#TensenFlow&#x5B9E;&#x73B0;" class="headerlink" title="TensenFlow&#x5B9E;&#x73B0;"></a>TensenFlow&#x5B9E;&#x73B0;</h1><h2 id="&#x6570;&#x636E;&#x51C6;&#x5907;"><a href="#&#x6570;&#x636E;&#x51C6;&#x5907;" class="headerlink" title="&#x6570;&#x636E;&#x51C6;&#x5907;"></a>&#x6570;&#x636E;&#x51C6;&#x5907;</h2><p>&#x9996;&#x5148;&#x53BB;&#x5B98;&#x65B9;&#x5E93;&#x4E0B;&#x8F7D;<code>cifar10.py</code>&#x4EE5;&#x53CA;<code>cifar10_input.py</code>&#x6587;&#x4EF6;&#x6765;&#x4E0B;&#x8F7D;CIFAR-10&#x6570;&#x636E;&#x96C6;&#x4E8C;&#x8FDB;&#x5236;&#x6587;&#x4EF6;&#xFF0C;&#x4EE5;&#x53CA;&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x3002;</p><blockquote><p>GitHub&#x5730;&#x5740;&#xFF1A;<a href="https://github.com/tensorflow/models/tree/master/tutorials/image/cifar10" target="_blank" rel="noopener">https://github.com/tensorflow/models/tree/master/tutorials/image/cifar10</a></p></blockquote><p>&#x8FD0;&#x884C;&#x4E0B;&#x8F7D;&#x6570;&#x636E;&#x96C6;&#x51FD;&#x6570;<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> tensorflow.models.tutorials.image.cifar10 <span class="keyword">import</span> cifar10</span><br><span class="line">cifar10.maybe_download_and_extract()</span><br></pre></td></tr></table></figure></p><p>&#x6570;&#x636E;&#x96C6;&#x6587;&#x4EF6;&#x9ED8;&#x8BA4;&#x4E0B;&#x8F7D;&#x5728;<code>./tmp/cifar10_data</code>&#x6587;&#x4EF6;&#x4E0B;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;&#x5176;&#x79FB;&#x52A8;&#x5230;&#x81EA;&#x5DF1;&#x7684;&#x5DE5;&#x7A0B;&#x6587;&#x4EF6;&#x5939;&#x4E0B;</p><h2 id="&#x5B9A;&#x4E49;&#x51FD;&#x6570;"><a href="#&#x5B9A;&#x4E49;&#x51FD;&#x6570;" class="headerlink" title="&#x5B9A;&#x4E49;&#x51FD;&#x6570;"></a>&#x5B9A;&#x4E49;&#x51FD;&#x6570;</h2><p>&#x9996;&#x5148;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x6743;&#x91CD;&#x521D;&#x59CB;&#x5316;&#x51FD;&#x6570;<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">variable_with_weight_loss</span><span class="params">(shape,std,w1)</span>:</span></span><br><span class="line">    var = tf.Variable(tf.truncated_normal(shape,stddev=std),dtype=tf.float32)</span><br><span class="line">    <span class="keyword">if</span> w1 <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        weight_loss = tf.multiply(tf.nn.l2_loss(var),w1,name=<span class="string">&quot;weight_loss&quot;</span>)</span><br><span class="line">        tf.add_to_collection(<span class="string">&quot;losses&quot;</span>,weight_loss)</span><br><span class="line">    <span class="keyword">return</span> var</span><br></pre></td></tr></table></figure></p><p>&#x7136;&#x540E;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x635F;&#x5931;&#x51FD;&#x6570;<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">loss_func</span><span class="params">(logits,labels)</span>:</span></span><br><span class="line">    labels = tf.cast(labels,tf.int32)</span><br><span class="line">    cross_entropy = tf.nn.sparse_softmax_cross_entropy_with_logits(logits=logits,</span><br><span class="line">                           labels=labels,name=<span class="string">&quot;cross_entropy_per_example&quot;</span>)</span><br><span class="line">    cross_entropy_mean = tf.reduce_mean(tf.reduce_sum(cross_entropy))</span><br><span class="line">    tf.add_to_collection(<span class="string">&quot;losses&quot;</span>,cross_entropy_mean)</span><br><span class="line">    <span class="keyword">return</span> tf.add_n(tf.get_collection(<span class="string">&quot;losses&quot;</span>),name=<span class="string">&quot;total_loss&quot;</span>)</span><br></pre></td></tr></table></figure></p><h2 id="&#x8BFB;&#x53D6;&#x6570;&#x636E;"><a href="#&#x8BFB;&#x53D6;&#x6570;&#x636E;" class="headerlink" title="&#x8BFB;&#x53D6;&#x6570;&#x636E;"></a>&#x8BFB;&#x53D6;&#x6570;&#x636E;</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x8BBE;&#x7F6E;&#x6BCF;&#x6B21;&#x8BAD;&#x7EC3;&#x7684;&#x6570;&#x636E;&#x5927;&#x5C0F;</span></span><br><span class="line">batch_size = <span class="number">128</span></span><br><span class="line"><span class="comment">#&#x4E0B;&#x8F7D;&#x89E3;&#x538B;&#x6570;&#x636E;</span></span><br><span class="line"><span class="comment"># cifar10.maybe_download_and_extract()</span></span><br><span class="line"><span class="comment"># &#x8BBE;&#x7F6E;&#x6570;&#x636E;&#x7684;&#x5B58;&#x653E;&#x76EE;&#x5F55;</span></span><br><span class="line">cifar10_dir = <span class="string">&quot;cifar10_data/cifar-10-batches-bin&quot;</span></span><br><span class="line"><span class="comment">#&#x83B7;&#x53D6;&#x6570;&#x636E;&#x589E;&#x5F3A;&#x540E;&#x7684;&#x8BAD;&#x7EC3;&#x96C6;&#x6570;&#x636E;</span></span><br><span class="line">images_train,labels_train = cifar10_input.distorted_inputs(cifar10_dir,batch_size)</span><br><span class="line"><span class="comment">#&#x83B7;&#x53D6;&#x88C1;&#x526A;&#x540E;&#x7684;&#x6D4B;&#x8BD5;&#x6570;&#x636E;</span></span><br><span class="line">images_test,labels_test = cifar10_input.inputs(eval_data=<span class="literal">True</span>,data_dir=cifar10_dir,                     </span><br><span class="line">                                               batch_size=batch_size)</span><br></pre></td></tr></table></figure><h2 id="&#x7F51;&#x7EDC;&#x7ED3;&#x6784;"><a href="#&#x7F51;&#x7EDC;&#x7ED3;&#x6784;" class="headerlink" title="&#x7F51;&#x7EDC;&#x7ED3;&#x6784;"></a>&#x7F51;&#x7EDC;&#x7ED3;&#x6784;</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">#&#x5B9A;&#x4E49;&#x6A21;&#x578B;&#x7684;&#x8F93;&#x5165;&#x548C;&#x8F93;&#x51FA;&#x6570;&#x636E;</span></span><br><span class="line">image_holder = tf.placeholder(dtype=tf.float32,shape=[batch_size,<span class="number">24</span>,<span class="number">24</span>,<span class="number">3</span>])</span><br><span class="line">label_holder = tf.placeholder(dtype=tf.int32,shape=[batch_size])</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x8BBE;&#x8BA1;&#x7B2C;&#x4E00;&#x5C42;&#x5377;&#x79EF;</span></span><br><span class="line">weight1 = variable_with_weight_loss(shape=[<span class="number">5</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">64</span>],std=<span class="number">5e-2</span>,w1=<span class="number">0</span>)</span><br><span class="line">kernel1 = tf.nn.conv2d(image_holder,weight1,[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">bais1 = tf.Variable(tf.constant(<span class="number">0.0</span>,dtype=tf.float32,shape=[<span class="number">64</span>]))</span><br><span class="line">conv1 = tf.nn.relu(tf.nn.bias_add(kernel1,bais1))</span><br><span class="line">pool1 = tf.nn.max_pool(conv1,[<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">norm1 = tf.nn.lrn(pool1,<span class="number">4</span>,bias=<span class="number">1.0</span>,alpha=<span class="number">0.001</span> / <span class="number">9</span>,beta=<span class="number">0.75</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x8BBE;&#x8BA1;&#x7B2C;&#x4E8C;&#x5C42;&#x5377;&#x79EF;</span></span><br><span class="line">weight2 = variable_with_weight_loss(shape=[<span class="number">5</span>,<span class="number">5</span>,<span class="number">64</span>,<span class="number">64</span>],std=<span class="number">5e-2</span>,w1=<span class="number">0</span>)</span><br><span class="line">kernel2 = tf.nn.conv2d(norm1,weight2,[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">bais2 = tf.Variable(tf.constant(<span class="number">0.1</span>,dtype=tf.float32,shape=[<span class="number">64</span>]))</span><br><span class="line">conv2 = tf.nn.relu(tf.nn.bias_add(kernel2,bais2))</span><br><span class="line">norm2 = tf.nn.lrn(conv2,<span class="number">4</span>,bias=<span class="number">1.0</span>,alpha=<span class="number">0.01</span> / <span class="number">9</span>,beta=<span class="number">0.75</span>)</span><br><span class="line">pool2 = tf.nn.max_pool(norm2,[<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x7B2C;&#x4E00;&#x5C42;&#x5168;&#x8FDE;&#x63A5;&#x5C42;</span></span><br><span class="line">reshape = tf.reshape(pool2,[batch_size,<span class="number">-1</span>])</span><br><span class="line">dim = reshape.get_shape()[<span class="number">1</span>].value</span><br><span class="line">weight3 = variable_with_weight_loss([dim,<span class="number">384</span>],std=<span class="number">0.04</span>,w1=<span class="number">0.004</span>)</span><br><span class="line">bais3 = tf.Variable(tf.constant(<span class="number">0.1</span>,shape=[<span class="number">384</span>],dtype=tf.float32))</span><br><span class="line">local3 = tf.nn.relu(tf.matmul(reshape,weight3)+bais3)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x7B2C;&#x4E8C;&#x5C42;&#x5168;&#x8FDE;&#x63A5;&#x5C42;</span></span><br><span class="line">weight4 = variable_with_weight_loss([<span class="number">384</span>,<span class="number">192</span>],std=<span class="number">0.04</span>,w1=<span class="number">0.004</span>)</span><br><span class="line">bais4 = tf.Variable(tf.constant(<span class="number">0.1</span>,shape=[<span class="number">192</span>],dtype=tf.float32))</span><br><span class="line">local4 = tf.nn.relu(tf.matmul(local3,weight4)+bais4)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x6700;&#x540E;&#x4E00;&#x5C42;</span></span><br><span class="line">weight5 = variable_with_weight_loss([<span class="number">192</span>,<span class="number">10</span>],std=<span class="number">1</span>/<span class="number">192.0</span>,w1=<span class="number">0</span>)</span><br><span class="line">bais5 = tf.Variable(tf.constant(<span class="number">0.0</span>,shape=[<span class="number">10</span>],dtype=tf.float32))</span><br><span class="line">logits = tf.add(tf.matmul(local4,weight5),bais5)</span><br></pre></td></tr></table></figure><h2 id="&#x8BAD;&#x7EC3;&#x548C;&#x4F18;&#x5316;"><a href="#&#x8BAD;&#x7EC3;&#x548C;&#x4F18;&#x5316;" class="headerlink" title="&#x8BAD;&#x7EC3;&#x548C;&#x4F18;&#x5316;"></a>&#x8BAD;&#x7EC3;&#x548C;&#x4F18;&#x5316;</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x8BBE;&#x7F6E;&#x6700;&#x5927;&#x8FED;&#x4EE3;&#x6B21;&#x6570;</span></span><br><span class="line">max_steps = <span class="number">10000</span></span><br><span class="line"><span class="comment">#&#x83B7;&#x53D6;&#x635F;&#x5931;&#x51FD;&#x6570;</span></span><br><span class="line">loss = loss_func(logits,label_holder)</span><br><span class="line"><span class="comment">#&#x8BBE;&#x7F6E;&#x4F18;&#x5316;&#x7B97;&#x6CD5;&#x4F7F;&#x5F97;&#x6210;&#x672C;&#x6700;&#x5C0F;</span></span><br><span class="line">train_step = tf.train.AdamOptimizer(<span class="number">1e-3</span>).minimize(loss)</span><br><span class="line"><span class="comment">#&#x83B7;&#x53D6;&#x6700;&#x9AD8;&#x7C7B;&#x7684;&#x5206;&#x7C7B;&#x51C6;&#x786E;&#x7387;&#xFF0C;&#x53D6;top1&#x4F5C;&#x4E3A;&#x8861;&#x91CF;&#x6807;&#x51C6;</span></span><br><span class="line">top_k_op = tf.nn.in_top_k(logits,label_holder,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;"><a href="#&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;" class="headerlink" title="&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;"></a>&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x5F00;&#x59CB;&#x8BAD;&#x7EC3;</span></span><br><span class="line"><span class="keyword">for</span> step <span class="keyword">in</span> range(max_steps):</span><br><span class="line">    start_time = time.time()</span><br><span class="line">    images_batch,labels_batch = sess.run([images_train,labels_train])</span><br><span class="line">    _,loss_value = sess.run([train_step,loss],feed_dict={image_holder:images_batch,</span><br><span class="line">                                                            label_holder:labels_batch})</span><br><span class="line">    <span class="comment">#&#x83B7;&#x53D6;&#x8BA1;&#x7B97;&#x65F6;&#x95F4;</span></span><br><span class="line">    duration = time.time() - start_time</span><br><span class="line">    <span class="keyword">if</span> step % <span class="number">1000</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="comment">#&#x8BA1;&#x7B97;&#x6BCF;&#x79D2;&#x5904;&#x7406;&#x591A;&#x5C11;&#x5F20;&#x56FE;&#x7247;</span></span><br><span class="line">        per_images_second = batch_size / duration</span><br><span class="line">        <span class="comment">#&#x83B7;&#x53D6;&#x65F6;&#x95F4;</span></span><br><span class="line">        sec_per_batch = float(duration)</span><br><span class="line">        print(<span class="string">&quot;step:%d,duration:%.3f,per_images_second:%.2f,loss:%.3f&quot;</span>%(step,duration</span><br><span class="line">              ,per_images_second,loss_value))</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x8FC7;&#x7A0B;"><a href="#&#x6D4B;&#x8BD5;&#x8FC7;&#x7A0B;" class="headerlink" title="&#x6D4B;&#x8BD5;&#x8FC7;&#x7A0B;"></a>&#x6D4B;&#x8BD5;&#x8FC7;&#x7A0B;</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x8BA1;&#x7B97;&#x6D4B;&#x8BD5;&#x96C6;&#x4E0A;&#x7684;&#x51C6;&#x786E;&#x7387;</span></span><br><span class="line">num_examples = <span class="number">10000</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line">num_iter = int(math.ceil(num_examples / batch_size))</span><br><span class="line">true_count = <span class="number">0</span></span><br><span class="line">total_sample_count = num_iter * batch_size</span><br><span class="line">step = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> step &lt; num_iter:</span><br><span class="line">    images_batch,labels_batch = sess.run([images_test,labels_test])</span><br><span class="line">    pred = sess.run([top_k_op],feed_dict={image_holder:images_batch,label_holder:labels_batch})</span><br><span class="line">    true_count += np.sum(pred)</span><br><span class="line">    step += <span class="number">1</span></span><br><span class="line"><span class="comment">#&#x8BA1;&#x7B97;&#x6D4B;&#x8BD5;&#x96C6;&#x7684;&#x51C6;&#x786E;&#x7387;</span></span><br><span class="line">precision = true_count / total_sample_count</span><br><span class="line">print(<span class="string">&quot;test accuracy:%.3f&quot;</span>%precision)</span><br></pre></td></tr></table></figure><h2 id="&#x8BAD;&#x7EC3;&#x7ED3;&#x679C;"><a href="#&#x8BAD;&#x7EC3;&#x7ED3;&#x679C;" class="headerlink" title="&#x8BAD;&#x7EC3;&#x7ED3;&#x679C;"></a>&#x8BAD;&#x7EC3;&#x7ED3;&#x679C;</h2><p><img src="http://pwbhioup3.bkt.clouddn.com/%E5%AE%9E%E9%AA%8C%E7%BB%93%E6%9E%9C1.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 卷积网络 </tag>
            
            <tag> TensorFlow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 16.04安装Pycharm</title>
      <link href="/2019/08/22/ubuntu%E5%AE%89%E8%A3%85pycharm/"/>
      <url>/2019/08/22/ubuntu%E5%AE%89%E8%A3%85pycharm/</url>
      
        <content type="html"><![CDATA[<p>&#x8BB0;&#x5F55;Ubuntu 16.04&#x4E0B;Pycharm&#x7684;&#x5B89;&#x88C5;&#x6B65;&#x9AA4;</p><a id="more"></a><p>&#x9996;&#x5148;&#x53BB;&#x5B98;&#x7F51;&#x4E0B;&#x8F7D;&#x6700;&#x65B0;&#x7684;Pycharm&#x5B89;&#x88C5;&#x5305;&#xFF0C;&#x5B98;&#x7F51;&#x5730;&#x5740;&#xFF1A;<a href="http://www.jetbrains.com/pycharm/" target="_blank" rel="noopener">http://www.jetbrains.com/pycharm/</a><br>&#x8FD9;&#x91CC;&#x6211;&#x4E0B;&#x8F7D;&#x4E86;&#x793E;&#x533A;&#x7248;(Community)</p><p>&#x4E0B;&#x8F7D;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x53F3;&#x952E;&#x538B;&#x7F29;&#x5305;&#xFF0C;&#x9009;&#x62E9;&#x63D0;&#x53D6;&#x5230;&#x6B64;&#x5904;</p><p>&#x7136;&#x540E;<code>cd</code>&#x8FDB;&#x5165;Pychram&#x5B89;&#x88C5;&#x5305;&#x4E0B;&#x7684;<code>bin</code>&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x6709;&#x4E00;&#x4E2A;&#x540D;&#x53EB;<code>pychram.sh</code>&#x7684;&#x6587;&#x4EF6;&#x3002;<br>&#x5728;&#x7EC8;&#x7AEF;&#x8F93;&#x5165;&#x547D;&#x4EE4;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./pycharm.sh</span><br></pre></td></tr></table></figure></p><p>&#x7531;&#x4E8E;&#x6211;&#x4E4B;&#x524D;&#x6CA1;&#x6709;&#x5B89;&#x88C5;&#x8FC7;Pycharm&#xFF0C;&#x6240;&#x4EE5;&#x76F4;&#x63A5;&#x9009;&#x62E9;<code>Do not import settings</code>&#x5373;&#x53EF;&#xFF0C;&#x7136;&#x540E;&#x70B9;&#x51FB;<code>OK</code>&#x8FDB;&#x5165;&#x4E0B;&#x4E00;&#x6B65;&#x64CD;&#x4F5C;&#x3002;&#x6839;&#x636E;&#x63D0;&#x793A;&#x7684;&#x5185;&#x5BB9;&#x8FDB;&#x884C;&#x52FE;&#x9009;&#x540C;&#x610F;&#x534F;&#x8BAE;&#xFF0C;&#x7136;&#x540E;&#x70B9;&#x51FB;continue&#x8FDB;&#x5165;&#x4E0B;&#x4E00;&#x6B65;&#xFF0C;&#x5927;&#x5BB6;&#x53EF;&#x4EE5;&#x70B9;&#x51FB;don&#x2019;t send&#x8FDB;&#x5165;&#x4E0B;&#x4E00;&#x6B65;&#xFF0C;&#x9009;&#x62E9;&#x559C;&#x6B22;&#x7684;&#x754C;&#x9762;&#x98CE;&#x683C;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x6B21;&#x70B9;&#x51FB;next&#x8FDB;&#x5165;&#x4E0B;&#x4E00;&#x6B65;&#xFF0C;&#x76F4;&#x5230;&#x63D0;&#x793A;start&#x542F;&#x52A8;&#x7A0B;&#x5E8F;&#x3002;&#x5373;&#x53EF;&#x5B8C;&#x6210;Pycharm&#x7684;&#x5B89;&#x88C5;&#x3002;</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pycharm </tag>
            
            <tag> 软件安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo折腾日记之侧栏篇</title>
      <link href="/2019/08/22/hexo%E8%AE%BE%E7%BD%AE%E4%BE%A7%E6%A0%8F/"/>
      <url>/2019/08/22/hexo%E8%AE%BE%E7%BD%AE%E4%BE%A7%E6%A0%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h1><p>&#x73B0;&#x5728;&#x6211;&#x76F8;&#x4FE1;&#x5174;&#x8DA3;&#x662F;&#x6700;&#x597D;&#x7684;&#x5B66;&#x4E60;&#x52A8;&#x529B;&#x4E86;&#x3002;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x5BF9;&#x524D;&#x6BB5;&#x5B8C;&#x5168;&#x63D0;&#x4E0D;&#x8D77;&#x5174;&#x8DA3;&#x7684;&#x4EBA;&#xFF0C;&#x5728;&#x89C1;&#x8BC6;&#x5230;&#x522B;&#x4EBA;&#x7684;&#x535A;&#x5BA2;&#x6709;&#x591A;&#x597D;&#x770B;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x5C45;&#x7136;&#x5BF9;&#x7F8E;&#x5316;&#x535A;&#x5BA2;&#x4EA7;&#x751F;&#x4E86;&#x5F3A;&#x70C8;&#x7684;&#x5174;&#x8DA3;&#x3002;&#x4EE5;&#x81F3;&#x4E8E;&#x5728;&#x6298;&#x817E;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x6D51;&#x7136;&#x4E0D;&#x77E5;&#x65F6;&#x95F4;&#x7684;&#x6D41;&#x901D;&#xFF0C;&#x6709;&#x65F6;&#x5019;&#x660E;&#x660E;&#x5DF2;&#x7ECF;&#x9965;&#x80A0;&#x8F98;&#x8F98;&#x4E86;&#x5374;&#x4F9D;&#x7136;&#x4E50;&#x4E4B;&#x4E0D;&#x75B2;&#xFF0C;&#x8FDE;&#x6211;&#x81EA;&#x5DF1;&#x90FD;&#x5728;&#x6000;&#x7591;&#x81EA;&#x5DF1;&#x662F;&#x4E0D;&#x662F;&#x7740;&#x4E86;&#x9B54;&#x3002;&#x5728;&#x9AD8;&#x5F3A;&#x5EA6;&#x6298;&#x817E;&#x4E86;&#x5C06;&#x8FD1;&#x4E00;&#x5929;&#x540E;&#xFF0C;&#x6211;&#x7EC8;&#x4E8E;&#x5C06;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x4FA7;&#x680F;&#x6253;&#x9020;&#x6210;&#x4E86;&#x6211;&#x6EE1;&#x610F;&#x7684;&#x6837;&#x5B50;&#x3002;&#x5BF9;&#x4E8E;&#x6211;&#x8FD9;&#x79CD;&#x6BEB;&#x65E0;&#x4EFB;&#x4F55;HTML&#xFF0C;CSS&#x7B49;&#x57FA;&#x7840;&#x7684;&#x4EBA;&#xFF0C;&#x5728;&#x6298;&#x817E;&#x8FC7;&#x7A0B;&#x4E2D;&#x9047;&#x5230;&#x4E86;&#x96BE;&#x4EE5;&#x8BA1;&#x6570;&#x7684;bug&#xFF0C;&#x6240;&#x4EE5;&#x80FD;&#x6709;&#x8FD9;&#x6837;&#x7684;&#x6210;&#x679C;&#x5DF2;&#x7ECF;&#x662F;&#x76F8;&#x5F53;&#x6EE1;&#x8DB3;&#x4E86;&#x3002;&#x8FD9;&#x7BC7;&#x535A;&#x5BA2;&#x8BB0;&#x5F55;&#x6211;&#x5BF9;&#x4FA7;&#x680F;&#x8FDB;&#x884C;&#x9B54;&#x6539;&#x7684;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x3002;</p><a id="more"></a><h1 id="&#x6298;&#x817E;&#x8FC7;&#x7A0B;"><a href="#&#x6298;&#x817E;&#x8FC7;&#x7A0B;" class="headerlink" title="&#x6298;&#x817E;&#x8FC7;&#x7A0B;"></a>&#x6298;&#x817E;&#x8FC7;&#x7A0B;</h1><h2 id="&#x6539;&#x9020;&#x601D;&#x8DEF;"><a href="#&#x6539;&#x9020;&#x601D;&#x8DEF;" class="headerlink" title="&#x6539;&#x9020;&#x601D;&#x8DEF;"></a>&#x6539;&#x9020;&#x601D;&#x8DEF;</h2><p>&#x6211;&#x5E0C;&#x671B;&#x4E3B;&#x9875;&#x7684;&#x4FA7;&#x680F;&#x4EE5;&#x53CA;&#x6D4F;&#x89C8;&#x6587;&#x7AE0;&#x65F6;&#x7684;&#x4FA7;&#x680F;&#x663E;&#x793A;&#x7684;&#x5185;&#x5BB9;&#x662F;&#x4E0D;&#x540C;&#x7684;&#x3002;</p><ul><li>&#x5728;&#x4E3B;&#x9875;&#x65F6;&#xFF0C;&#x535A;&#x5BA2;&#x4FA7;&#x680F;&#x8981;&#x5C3D;&#x53EF;&#x80FD;&#x591A;&#x5730;&#x663E;&#x793A;&#x548C;&#x6211;&#x535A;&#x5BA2;&#x6709;&#x5173;&#x7684;&#x5404;&#x79CD;&#x4FE1;&#x606F;&#xFF0C;&#x6BD4;&#x5982;&#x535A;&#x4E3B;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x6587;&#x7AE0;&#x5206;&#x7C7B;&#x4FE1;&#x606F;&#xFF0C;&#x6587;&#x7AE0;&#x6807;&#x7B7E;&#x4FE1;&#x606F;&#x7B49;&#x7B49;&#x3002;</li><li>&#x5728;&#x6D4F;&#x89C8;&#x6587;&#x7AE0;&#x65F6;&#xFF0C;&#x4FA7;&#x680F;&#x7684;&#x4FE1;&#x606F;&#x8981;&#x52A0;&#x4EE5;&#x7CBE;&#x7B80;&#xFF0C;&#x4EC5;&#x4EC5;&#x4FDD;&#x7559;&#x535A;&#x4E3B;&#x4FE1;&#x606F;&#x4EE5;&#x53CA;&#x6587;&#x7AE0;&#x76EE;&#x5F55;&#xFF0C;&#x540C;&#x65F6;&#x5728;&#x6EDA;&#x52A8;&#x9875;&#x9762;&#x65F6;&#x4FA7;&#x680F;&#x8981;&#x56FA;&#x5B9A;&#x5728;&#x5934;&#x90E8;&#x3002;</li></ul><p>&#x7531;&#x4E8E;NexT&#x4E3B;&#x9898;&#x9ED8;&#x8BA4;&#x5728;&#x4EFB;&#x4F55;&#x9875;&#x9762;&#x4FA7;&#x680F;&#x5728;&#x6EDA;&#x52A8;&#x5230;&#x9875;&#x9762;&#x9876;&#x90E8;&#x65F6;&#x90FD;&#x56FA;&#x5B9A;&#x4E0D;&#x52A8;&#x3002;&#x4F46;&#x6211;&#x60F3;&#x5728;&#x4E3B;&#x9875;&#x9762;&#x65F6;&#x4FA7;&#x680F;&#x80FD;&#x591F;&#x663E;&#x793A;&#x66F4;&#x591A;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x4E8E;&#x662F;&#x6211;&#x7684;&#x60F3;&#x6CD5;&#x5C31;&#x662F;&#x5199;&#x4E00;&#x4E2A;<code>if</code>&#x8BED;&#x53E5;&#x5224;&#x65AD;&#x5F53;&#x524D;&#x9875;&#x9762;&#x662F;&#x5426;&#x4E3A;&#x6D4F;&#x89C8;&#x6587;&#x7AE0;&#x9875;&#x9762;&#xFF0C;&#x82E5;&#x4E0D;&#x662F;&#xFF0C;&#x5219;&#x4FA7;&#x680F;&#x968F;&#x9875;&#x9762;&#x6EDA;&#x52A8;&#xFF0C;&#x5E76;&#x4E14;&#x5C3D;&#x53EF;&#x80FD;&#x591A;&#x7684;&#x663E;&#x793A;&#x4FE1;&#x606F;&#x3002;&#x82E5;&#x662F;&#xFF0C;&#x5219;&#x4EC5;&#x4EC5;&#x663E;&#x793A;&#x535A;&#x4E3B;&#x4FE1;&#x606F;&#x4EE5;&#x53CA;&#x6587;&#x7AE0;&#x76EE;&#x5F55;&#x3002;</p><h2 id="&#x5177;&#x4F53;&#x5B9E;&#x73B0;"><a href="#&#x5177;&#x4F53;&#x5B9E;&#x73B0;" class="headerlink" title="&#x5177;&#x4F53;&#x5B9E;&#x73B0;"></a>&#x5177;&#x4F53;&#x5B9E;&#x73B0;</h2><p>&#x9996;&#x5148;&#x6253;&#x5F00;<code>/next/layout/_macro</code>&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x7684;<code>sidebar.swig</code>&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x535A;&#x5BA2;&#x4FA7;&#x680F;&#x7684;&#x6E90;&#x4EE3;&#x7801;&#x4E86;&#xFF0C;&#x6211;&#x4EEC;&#x5F00;&#x59CB;&#x8FDB;&#x884C;&#x9B54;&#x6539;</p><p>&#x9996;&#x5148;&#x5F00;&#x5934;&#x7B2C;&#x4E00;&#x6BB5;<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sidebar-toggle&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sidebar-toggle-line-wrap&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sidebar-toggle-line sidebar-toggle-line-first&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sidebar-toggle-line sidebar-toggle-line-middle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sidebar-toggle-line sidebar-toggle-line-last&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>&#x6211;&#x4EEC;&#x4FDD;&#x6301;&#x4E0D;&#x52A8;&#xFF0C;&#x7136;&#x540E;&#x63A5;&#x4E0B;&#x6765;<code>aside</code>&#x6807;&#x7B7E;&#x4E0B;&#x7684;&#x5185;&#x5BB9;&#x5168;&#x90E8;&#x5220;&#x9664;&#xFF0C;&#x662F;&#x7684;&#x4F60;&#x6CA1;&#x542C;&#x9519;&#xFF0C;&#x5168;&#x90E8;&#x5220;&#x9664;&#xFF0C;&#x6211;&#x4EEC;&#x91CD;&#x65B0;&#x5B9E;&#x73B0;&#x3002;<br>&#x9996;&#x5148;&#x5148;&#x5199;&#x4E2A;<code>if</code>&#x8BED;&#x53E5;&#x6765;&#x5224;&#x65AD;&#x5F53;&#x524D;&#x7684;&#x9875;&#x9762;<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">{%- <span class="keyword">set</span> display_toc = theme.toc.enable and display_toc %}</span><br><span class="line">{%- <span class="keyword">if</span> not display_toc or toc(page.content).length &lt;= <span class="number">1</span> %}</span><br><span class="line">...</span><br><span class="line">{%- endif %}</span><br></pre></td></tr></table></figure></p><p>&#x63A5;&#x7740;&#x6211;&#x4EEC;&#x5728;if&#x8BED;&#x53E5;&#x5185;&#x90E8;&#x534F;&#x5546;&#x6211;&#x4EEC;&#x60F3;&#x5728;&#x4E3B;&#x9875;&#x9762;&#x4FA7;&#x680F;&#x73B0;&#x5B9E;&#x7684;&#x5185;&#x5BB9;</p><ol><li><p>&#x535A;&#x4E3B;&#x4FE1;&#x606F;&#x3002;&#x5305;&#x62EC;&#x5934;&#x50CF;&#xFF0C;&#x81EA;&#x6211;&#x4ECB;&#x7ECD;&#x4EE5;&#x53CA;&#x9644;&#x52A0;&#x535A;&#x5BA2;&#x7684;&#x6587;&#x7AE0;&#x6570;&#xFF0C;&#x7C7B;&#x522B;&#x6570;&#x4EE5;&#x53CA;&#x6807;&#x7B7E;&#x6570;&#x3002;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x5728;<code>next/layout/_partials/sidebar/</code>&#x7684;<code>site-overview.swig</code>&#x6587;&#x4EF6;&#x5185;&#x6709;&#x73B0;&#x6210;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x8981;&#x4FDD;&#x7559;&#x6211;&#x4EEC;&#x60F3;&#x663E;&#x793A;&#x7684;&#x90E8;&#x5206;&#x5C31;&#x597D;&#x4E86;</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;author-overview&quot;</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;site-author motion-element&quot;</span> itemprop=<span class="string">&quot;author&quot;</span> itemscope itemtype=<span class="string">&quot;http://schema.org/Person&quot;</span>&gt;</span><br><span class="line">        {%- <span class="keyword">if</span> theme.avatar.url %}</span><br><span class="line">        &lt;img <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;site-author-image&quot;</span> itemprop=<span class="string">&quot;image&quot;</span></span><br><span class="line">            src=<span class="string">&quot;{{ url_for( theme.avatar.url | default(theme.images + &apos;/avatar.gif&apos;) ) }}&quot;</span></span><br><span class="line">            alt=<span class="string">&quot;{{ author }}&quot;</span>&gt;</span><br><span class="line">        {%- endif %}</span><br><span class="line">        &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;site-author-name&quot;</span> itemprop=<span class="string">&quot;name&quot;</span>&gt;{{ author }}&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div class=&quot;site-description motion-element&quot; itemprop=&quot;description&quot;&gt;{{ description }}&lt;/</span>div&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    {%- if theme.site_state %}</span></span><br><span class="line"><span class="regexp">        &lt;nav class=&quot;site-state motion-element&quot;&gt;</span></span><br><span class="line"><span class="regexp">        {%- if config.archive_dir != &apos;/</span><span class="string">&apos; and site.posts.length &gt; 0 %}</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;site-state-item site-state-posts&quot;&gt;</span></span><br><span class="line"><span class="string">            {%- if theme.menu.archives %}</span></span><br><span class="line"><span class="string">                &lt;a href=&quot;{{ url_for(theme.menu.archives).split(&apos;</span>||<span class="string">&apos;)[0] | trim }}&quot;&gt;</span></span><br><span class="line"><span class="string">            {% else %}</span></span><br><span class="line"><span class="string">                &lt;a href=&quot;{{ url_for(config.archive_dir) }}&quot;&gt;</span></span><br><span class="line"><span class="string">            {%- endif %}</span></span><br><span class="line"><span class="string">                &lt;span class=&quot;site-state-item-count&quot;&gt;{{ site.posts.length }}&lt;/span&gt;</span></span><br><span class="line"><span class="string">                &lt;span class=&quot;site-state-item-name&quot;&gt;{{ __(&apos;</span>state.posts<span class="string">&apos;) }}&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;/a&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        {%- if site.categories.length &gt; 0 %}</span></span><br><span class="line"><span class="string">            {%- set categoriesPageQuery = site.pages.find({type: &apos;</span>categories<span class="string">&apos;}, {lean: true}) %}</span></span><br><span class="line"><span class="string">            {%- set hasCategoriesPage = categoriesPageQuery.length &gt; 0 %}</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;site-state-item site-state-categories&quot;&gt;</span></span><br><span class="line"><span class="string">            {%- if hasCategoriesPage %}</span></span><br><span class="line"><span class="string">                {%- if theme.menu.categories %}</span></span><br><span class="line"><span class="string">                &lt;a href=&quot;{{ url_for(theme.menu.categories).split(&apos;</span>||<span class="string">&apos;)[0] | trim }}&quot;&gt;</span></span><br><span class="line"><span class="string">                {% else %}</span></span><br><span class="line"><span class="string">                &lt;a href=&quot;{{ url_for(config.category_dir) + &apos;</span>/<span class="string">&apos; }}&quot;&gt;</span></span><br><span class="line"><span class="string">                {%- endif %}</span></span><br><span class="line"><span class="string">            {%- endif %}</span></span><br><span class="line"><span class="string">            {%- set visibleCategories = 0 %}</span></span><br><span class="line"><span class="string">            {%- for cat in site.categories %}</span></span><br><span class="line"><span class="string">                {%- if cat.length %}{%- set visibleCategories += 1 %}{%- endif %}</span></span><br><span class="line"><span class="string">            {%- endfor %}</span></span><br><span class="line"><span class="string">            &lt;span class=&quot;site-state-item-count&quot;&gt;{{ visibleCategories }}&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;span class=&quot;site-state-item-name&quot;&gt;{{ __(&apos;</span>state.categories<span class="string">&apos;) }}&lt;/span&gt;</span></span><br><span class="line"><span class="string">            {%- if hasCategoriesPage %}&lt;/a&gt;{%- endif %}</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        {%- if site.tags.length &gt; 0 %}</span></span><br><span class="line"><span class="string">            {%- set tagsPageQuery = site.pages.find({type: &apos;</span>tags<span class="string">&apos;}, {lean: true}) %}</span></span><br><span class="line"><span class="string">            {%- set hasTagsPage = tagsPageQuery.length &gt; 0 %}</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;site-state-item site-state-tags&quot;&gt;</span></span><br><span class="line"><span class="string">            {%- if hasTagsPage %}</span></span><br><span class="line"><span class="string">                {%- if theme.menu.tags %}</span></span><br><span class="line"><span class="string">                &lt;a href=&quot;{{ url_for(theme.menu.tags).split(&apos;</span>||<span class="string">&apos;)[0] | trim }}&quot;&gt;</span></span><br><span class="line"><span class="string">                {% else %}</span></span><br><span class="line"><span class="string">                &lt;a href=&quot;{{ url_for(config.tag_dir) + &apos;</span>/<span class="string">&apos; }}&quot;&gt;</span></span><br><span class="line"><span class="string">                {%- endif %}</span></span><br><span class="line"><span class="string">            {%- endif %}</span></span><br><span class="line"><span class="string">            {%- set visibleTags = 0 %}</span></span><br><span class="line"><span class="string">            {%- for tag in site.tags %}</span></span><br><span class="line"><span class="string">                {%- if tag.length %}{%- set visibleTags += 1 %}{%- endif %}</span></span><br><span class="line"><span class="string">            {%- endfor %}</span></span><br><span class="line"><span class="string">            &lt;span class=&quot;site-state-item-count&quot;&gt;{{ visibleTags }}&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;span class=&quot;site-state-item-name&quot;&gt;{{ __(&apos;</span>state.tags<span class="string">&apos;) }}&lt;/span&gt;</span></span><br><span class="line"><span class="string">            {%- if hasTagsPage %}&lt;/a&gt;{%- endif %}</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string">        &lt;/nav&gt;</span></span><br><span class="line"><span class="string">    {%- endif %}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    {%- if theme.social %}</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;links-of-author motion-element&quot;&gt;</span></span><br><span class="line"><span class="string">        {%- for name, link in theme.social %}</span></span><br><span class="line"><span class="string">            &lt;span class=&quot;links-of-author-item&quot;&gt;</span></span><br><span class="line"><span class="string">            {%- set sidebarURL = link.split(&apos;</span>||<span class="string">&apos;)[0] | trim %}</span></span><br><span class="line"><span class="string">            {%- if not (theme.social_icons.enable) or (not theme.social_icons.icons_only) %}</span></span><br><span class="line"><span class="string">            {%- set sidebarText = name %}</span></span><br><span class="line"><span class="string">            {%- endif %}</span></span><br><span class="line"><span class="string">            {%- if theme.social_icons.enable %}</span></span><br><span class="line"><span class="string">            {%- set sidebarIcon = &apos;</span>&lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;fa fa-fw fa-&apos; + link.split(&apos;||&apos;)[1] | trim | default(&apos;globe&apos;) + &apos;&quot;</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><span class="string">&apos; %}</span></span><br><span class="line"><span class="string">            {%- endif %}</span></span><br><span class="line"><span class="string">            {{ next_url(sidebarURL, sidebarIcon + sidebarText, {title: name + &apos;</span> &amp;rarr; <span class="string">&apos; + sidebarURL}) }}</span></span><br><span class="line"><span class="string">            &lt;/span&gt;</span></span><br><span class="line"><span class="string">        {%- endfor %}</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    {%- endif %}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    {%- if theme.rss %}</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;feed-link motion-element&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;a href=&quot;{{ url_for(theme.rss) }}&quot; rel=&quot;alternate&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;i class=&quot;fa fa-rss&quot;&gt;&lt;/i&gt;RSS</span></span><br><span class="line"><span class="string">        &lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    {%- endif %}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    {%- if theme.chat.enable and theme.chat.service !== &apos;</span><span class="string">&apos; %}</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;chat motion-element&quot;&gt;</span></span><br><span class="line"><span class="string">        {%- if theme.chat.service == &apos;</span>chatra<span class="string">&apos; and theme.chatra.enable %}</span></span><br><span class="line"><span class="string">        &lt;a onclick=&quot;Chatra(&apos;</span>openChat<span class="string">&apos;, true)&quot;&gt;</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string">        {%- if theme.chat.service == &apos;</span>tidio<span class="string">&apos; and theme.tidio.enable %}</span></span><br><span class="line"><span class="string">        &lt;a onclick=&quot;tidioChatApi.open();&quot;&gt;</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string">        {%- if theme.chat.icon %}&lt;i class=&quot;fa fa-{{ theme.chat.icon }}&quot;&gt;&lt;/i&gt;{%- endif %}</span></span><br><span class="line"><span class="string">        {{ theme.chat.text }}</span></span><br><span class="line"><span class="string">        &lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    {%- endif %}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    {%- if theme.creative_commons.license and theme.creative_commons.sidebar %}</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;cc-license motion-element&quot; itemprop=&quot;license&quot;&gt;</span></span><br><span class="line"><span class="string">        {%- set ccLanguage = theme.creative_commons.language %}</span></span><br><span class="line"><span class="string">        {%- if theme.creative_commons.license === &apos;</span>zero<span class="string">&apos; %}</span></span><br><span class="line"><span class="string">        {%- set ccType = &apos;</span>publicdomain/zero/<span class="number">1.0</span>/<span class="string">&apos; + ccLanguage %}</span></span><br><span class="line"><span class="string">        {% else %}</span></span><br><span class="line"><span class="string">        {%- set ccType = &apos;</span>licenses/<span class="string">&apos; + theme.creative_commons.license + &apos;</span>/<span class="number">4.0</span>/<span class="string">&apos; + ccLanguage %}</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string">        {%- set ccURL = &apos;</span>https:<span class="comment">//creativecommons.org/&apos; + ccType %}</span></span><br><span class="line">        {%- <span class="keyword">set</span> ccImage = &apos;&lt;img src=&quot;&apos; + url_for(theme.images + &apos;/cc-&apos; + theme.creative_commons.license + &apos;.svg&apos;) + &apos;&quot; alt=&quot;Creative Commons&quot;&gt;&apos; %}</span><br><span class="line">        {{ next_url(ccURL, ccImage, {<span class="attr">class</span>: <span class="string">&apos;cc-opacity&apos;</span>}) }}</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    {%- endif %}</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure></li><li><p>&#x535A;&#x5BA2;&#x516C;&#x544A;&#x3002;&#x5185;&#x5BB9;&#x5C31;&#x81EA;&#x7531;&#x53D1;&#x6325;&#x4E86;&#x3002;</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;card-announcement&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;card-content&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;item_headline&quot;&gt;</span><br><span class="line">        &lt;i class=&quot;fa fa-bullhorn card-announcement-animation&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;</span><br><span class="line">        &lt;span&gt;&#x516C;&#x544A;&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;announcement_content&quot;&gt;</span><br><span class="line">        &#x8C22;&#x8C22;&#x4F60;&#x8FD9;&#x4E48;&#x5E05;&#xFF0C;&#x8FD9;&#x4E48;&#x6F02;&#x4EAE;&#x8FD8;&#x6765;&#x770B;&#x6211;&#x7684;&#x535A;&#x5BA2;&#xFF0C;&#x5982;&#x679C;&#x559C;&#x6B22;&#x7684;&#x8BDD;&#x8BB0;&#x5F97;&#x6536;&#x85CF;&#x54E6;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></li><li><p>&#x535A;&#x5BA2;&#x4FE1;&#x606F;&#x3002;&#x6211;&#x4E3B;&#x8981;&#x5C31;&#x663E;&#x793A;&#x6587;&#x7AE0;&#x6570;&#x91CF;&#xFF0C;&#x535A;&#x5BA2;&#x8FD0;&#x884C;&#x5929;&#x6570;&#xFF0C;&#x8BBF;&#x95EE;&#x4EBA;&#x6570;&#x4EE5;&#x53CA;&#x70B9;&#x51FB;&#x91CF;&#x56DB;&#x6761;&#x4FE1;&#x606F;&#x3002;</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;blog-overview&quot;</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;item_headline&quot;</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-line-chart&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#x7F51;&#x7AD9;&#x8D44;&#x8BAF;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;blog-info&quot;</span>&gt;</span><br><span class="line">        &lt;script{{ pjax }} <span class="keyword">async</span> src=<span class="string">&quot;https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;blog-info-list&quot;</span>&gt;</span><br><span class="line">        &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;blog-info-name&quot;</span>&gt;&#x6587;&#x7AE0;&#x6570;&#x76EE;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">        &lt;span class=&quot;blogs-count&quot;&gt;{{ site.posts.length }}&lt;/</span>span&gt;</span><br><span class="line">        &lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li class=&quot;blog-info-list&quot;&gt;</span></span><br><span class="line"><span class="regexp">        &lt;span class=&quot;blog-info-name&quot;&gt;&#x8FD0;&#x884C;&#x5929;&#x6570;&lt;/</span>span&gt;</span><br><span class="line">        &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;days-count&quot;</span> id=<span class="string">&quot;sitedays&quot;</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">        &lt;script language=javascript&gt;</span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">siteTime</span>(<span class="params"></span>)</span>{</span><br><span class="line">                <span class="built_in">window</span>.setTimeout(<span class="string">&quot;siteTime()&quot;</span>, <span class="number">1000</span>);</span><br><span class="line">                <span class="keyword">var</span> seconds = <span class="number">1000</span>;</span><br><span class="line">                <span class="keyword">var</span> minutes = seconds * <span class="number">60</span>;</span><br><span class="line">                <span class="keyword">var</span> hours = minutes * <span class="number">60</span>;</span><br><span class="line">                <span class="keyword">var</span> days = hours * <span class="number">24</span>;</span><br><span class="line">                <span class="keyword">var</span> years = days * <span class="number">365</span>;</span><br><span class="line">                <span class="keyword">var</span> today = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">                <span class="keyword">var</span> todayYear = today.getFullYear();</span><br><span class="line">                <span class="keyword">var</span> todayMonth = today.getMonth()+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">var</span> todayDate = today.getDate();</span><br><span class="line">                <span class="keyword">var</span> todayHour = today.getHours();</span><br><span class="line">                <span class="keyword">var</span> todayMinute = today.getMinutes();</span><br><span class="line">                <span class="keyword">var</span> todaySecond = today.getSeconds();</span><br><span class="line">                <span class="keyword">var</span> t1 = <span class="built_in">Date</span>.UTC(<span class="number">2019</span>,<span class="number">07</span>,<span class="number">26</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>); <span class="comment">//&#x5317;&#x4EAC;&#x65F6;&#x95F4;2018-2-13 00:00:00</span></span><br><span class="line">                <span class="keyword">var</span> t2 = <span class="built_in">Date</span>.UTC(todayYear,todayMonth,todayDate,todayHour,todayMinute,todaySecond);</span><br><span class="line">                <span class="keyword">var</span> diff = t2-t1;</span><br><span class="line">                <span class="keyword">var</span> diffYears = <span class="built_in">Math</span>.floor(diff/years);</span><br><span class="line">                <span class="keyword">var</span> diffDays = <span class="built_in">Math</span>.floor((diff/days)-diffYears*<span class="number">365</span>);</span><br><span class="line">                <span class="built_in">document</span>.getElementById(<span class="string">&quot;sitedays&quot;</span>).innerHTML=diffDays+<span class="string">&quot; &#x5929; &quot;</span>;</span><br><span class="line">            }</span><br><span class="line">            siteTime();</span><br><span class="line">        &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>li&gt;</span><br><span class="line">        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;blog-info-list&quot;</span>&gt;</span><br><span class="line">        &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;blog-info-list&quot;</span>&gt;&#x8BBF;&#x95EE;&#x6570;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">        &lt;span class=&quot;site-uv&quot; title=&quot;{{ __(&apos;footer.total_visitors&apos;) }}&quot;&gt;</span></span><br><span class="line"><span class="regexp">            &lt;span class=&quot;busuanzi-value&quot; id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/</span>span&gt;</span><br><span class="line">        &lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>li&gt;</span><br><span class="line">        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;blog-info-list&quot;</span>&gt;</span><br><span class="line">        &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;blog-info-name&quot;</span>&gt;&#x70B9;&#x51FB;&#x91CF;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">        &lt;span class=&quot;site-pv&quot; title=&quot;{{ __(&apos;footer.total_views&apos;) }}&quot;&gt;</span></span><br><span class="line"><span class="regexp">            &lt;span class=&quot;busuanzi-value&quot; id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/</span>span&gt;</span><br><span class="line">        &lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>li&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure></li><li><p>&#x5206;&#x7C7B;&#x4FE1;&#x606F;&#x3002;</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;sidebar-categoreus&quot;</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;item_headline&quot;</span>&gt;</span><br><span class="line">    &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;fa fa-folder-open&quot;</span> aria-hidden=<span class="string">&quot;true&quot;</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">    &lt;span&gt;&#x5206;&#x7C7B;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">    {{ list_categories() }} </span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure></li><li><p>&#x6807;&#x7B7E;&#x4E91;&#x3002;GitHub&#x5730;&#x5740;&#xFF1A;<a href="https://github.com/MikeCoder/hexo-tag-cloud" target="_blank" rel="noopener">https://github.com/MikeCoder/hexo-tag-cloud</a></p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;sidebar-tags&quot;</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;item_headline&quot;</span>&gt;</span><br><span class="line">    &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;fa fa-tags&quot;</span> aria-hidden=<span class="string">&quot;true&quot;</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">    &lt;span&gt;&#x6807;&#x7B7E;&#x4E91;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">    {% <span class="keyword">if</span> site.tags.length &gt; <span class="number">1</span> %}</span><br><span class="line">    &lt;script type=<span class="string">&quot;text/javascript&quot;</span> charset=<span class="string">&quot;utf-8&quot;</span> src=<span class="string">&quot;{{ url_for(&apos;/js/tagcloud.js&apos;) }}&quot;</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">    &lt;script type=<span class="string">&quot;text/javascript&quot;</span> charset=<span class="string">&quot;utf-8&quot;</span> src=<span class="string">&quot;{{ url_for(&apos;/js/tagcanvas.js&apos;) }}&quot;</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;widget-wrap&quot;</span>&gt;</span><br><span class="line">        &lt;div id=<span class="string">&quot;myCanvasContainer&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;widget tagcloud&quot;</span>&gt;</span><br><span class="line">        &lt;canvas width=<span class="string">&quot;250&quot;</span> height=<span class="string">&quot;250&quot;</span> id=<span class="string">&quot;resCanvas&quot;</span> style=<span class="string">&quot;width=100%&quot;</span>&gt;</span><br><span class="line">            {{ list_tags() }}</span><br><span class="line">        &lt;<span class="regexp">/canvas&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>div&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    {% endif %}</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure></li><li><p>&#x53CB;&#x60C5;&#x94FE;&#x63A5;</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;link-of-blogroll&quot;</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;item_headline&quot;</span>&gt;</span><br><span class="line">    &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;fa fa-handshake-o&quot;</span> aria-hidden=<span class="string">&quot;true&quot;</span>&gt;</span><br><span class="line">    &lt;<span class="regexp">/i&gt;&lt;span&gt;&#x53CB;&#x60C5;&#x94FE;&#x63A5;&lt;/</span>span&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    {%- if theme.links %}</span></span><br><span class="line"><span class="regexp">    &lt;div class=&quot;links-of-blogroll motion-element {{ &quot;links-of-blogroll-&quot; + theme.links_layout | default(&apos;inline&apos;) }}&quot;&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div class=&quot;links-of-blogroll-title&quot;&gt;</span></span><br><span class="line"><span class="regexp">        &lt;i class=&quot;fa  fa-fw fa-{{ theme.links_icon | default(&apos;globe&apos;) | lower }}&quot;&gt;&lt;/i</span>&gt;</span><br><span class="line">        {{ theme.links_title }}</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        &lt;ul class=&quot;links-of-blogroll-list&quot;&gt;</span></span><br><span class="line"><span class="regexp">        {%- for blogrollText, blogrollURL in theme.links %}</span></span><br><span class="line"><span class="regexp">            &lt;li class=&quot;links-of-blogroll-item&quot;&gt;</span></span><br><span class="line"><span class="regexp">            {{ next_url(blogrollURL, blogrollText, {title: blogrollURL}) }}</span></span><br><span class="line"><span class="regexp">            &lt;/</span>li&gt;</span><br><span class="line">        {%- endfor %}</span><br><span class="line">        &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">    {%- endif %}</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>&#x4E3B;&#x9875;&#x7684;&#x4FA7;&#x680F;&#x5C31;&#x8BBE;&#x7F6E;&#x5B8C;&#x6210;&#x4E86;&#x3002;</p><p>&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x662F;&#x6D4F;&#x89C8;&#x6587;&#x7AE0;&#x65F6;&#x7684;&#x4FA7;&#x680F;&#x7684;&#x8BBE;&#x8BA1;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x76F4;&#x63A5;&#x4E0A;&#x6211;&#x7684;&#x4EE3;&#x7801;&#x4E86;<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;sidebar-inner&quot;</span>&gt; </span><br><span class="line">    {%- <span class="keyword">if</span> display_toc and toc(page.content).length &gt; <span class="number">1</span> %}</span><br><span class="line">    &lt;!--noindex--&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;author-overview&quot;</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;site-author motion-element&quot;</span> itemprop=<span class="string">&quot;author&quot;</span> itemscope itemtype=<span class="string">&quot;http://schema.org/Person&quot;</span>&gt;</span><br><span class="line">            {%- <span class="keyword">if</span> theme.avatar.url %}</span><br><span class="line">            &lt;img <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;site-author-image&quot;</span> itemprop=<span class="string">&quot;image&quot;</span></span><br><span class="line">                src=<span class="string">&quot;{{ url_for( theme.avatar.url | default(theme.images + &apos;/avatar.gif&apos;) ) }}&quot;</span></span><br><span class="line">                alt=<span class="string">&quot;{{ author }}&quot;</span>&gt;</span><br><span class="line">            {%- endif %}</span><br><span class="line">            &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;site-author-name&quot;</span> itemprop=<span class="string">&quot;name&quot;</span>&gt;{{ author }}&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">            &lt;div class=&quot;site-description motion-element&quot; itemprop=&quot;description&quot;&gt;{{ description }}&lt;/</span>div&gt;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        {%- if theme.site_state %}</span></span><br><span class="line"><span class="regexp">        &lt;nav class=&quot;site-state motion-element&quot;&gt;</span></span><br><span class="line"><span class="regexp">            {%- if config.archive_dir != &apos;/</span><span class="string">&apos; and site.posts.length &gt; 0 %}</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;site-state-item site-state-posts&quot;&gt;</span></span><br><span class="line"><span class="string">                {%- if theme.menu.archives %}</span></span><br><span class="line"><span class="string">                &lt;a href=&quot;{{ url_for(theme.menu.archives).split(&apos;</span>||<span class="string">&apos;)[0] | trim }}&quot;&gt;</span></span><br><span class="line"><span class="string">                {% else %}</span></span><br><span class="line"><span class="string">                &lt;a href=&quot;{{ url_for(config.archive_dir) }}&quot;&gt;</span></span><br><span class="line"><span class="string">                {%- endif %}</span></span><br><span class="line"><span class="string">                &lt;span class=&quot;site-state-item-count&quot;&gt;{{ site.posts.length }}&lt;/span&gt;</span></span><br><span class="line"><span class="string">                &lt;span class=&quot;site-state-item-name&quot;&gt;{{ __(&apos;</span>state.posts<span class="string">&apos;) }}&lt;/span&gt;</span></span><br><span class="line"><span class="string">                &lt;/a&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            {%- endif %}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            {%- if site.categories.length &gt; 0 %}</span></span><br><span class="line"><span class="string">            {%- set categoriesPageQuery = site.pages.find({type: &apos;</span>categories<span class="string">&apos;}, {lean: true}) %}</span></span><br><span class="line"><span class="string">            {%- set hasCategoriesPage = categoriesPageQuery.length &gt; 0 %}</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;site-state-item site-state-categories&quot;&gt;</span></span><br><span class="line"><span class="string">                {%- if hasCategoriesPage %}</span></span><br><span class="line"><span class="string">                {%- if theme.menu.categories %}</span></span><br><span class="line"><span class="string">                    &lt;a href=&quot;{{ url_for(theme.menu.categories).split(&apos;</span>||<span class="string">&apos;)[0] | trim }}&quot;&gt;</span></span><br><span class="line"><span class="string">                {% else %}</span></span><br><span class="line"><span class="string">                    &lt;a href=&quot;{{ url_for(config.category_dir) + &apos;</span>/<span class="string">&apos; }}&quot;&gt;</span></span><br><span class="line"><span class="string">                {%- endif %}</span></span><br><span class="line"><span class="string">                {%- endif %}</span></span><br><span class="line"><span class="string">                {%- set visibleCategories = 0 %}</span></span><br><span class="line"><span class="string">                {%- for cat in site.categories %}</span></span><br><span class="line"><span class="string">                {%- if cat.length %}{%- set visibleCategories += 1 %}{%- endif %}</span></span><br><span class="line"><span class="string">                {%- endfor %}</span></span><br><span class="line"><span class="string">                &lt;span class=&quot;site-state-item-count&quot;&gt;{{ visibleCategories }}&lt;/span&gt;</span></span><br><span class="line"><span class="string">                &lt;span class=&quot;site-state-item-name&quot;&gt;{{ __(&apos;</span>state.categories<span class="string">&apos;) }}&lt;/span&gt;</span></span><br><span class="line"><span class="string">                {%- if hasCategoriesPage %}&lt;/a&gt;{%- endif %}</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            {%- endif %}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            {%- if site.tags.length &gt; 0 %}</span></span><br><span class="line"><span class="string">            {%- set tagsPageQuery = site.pages.find({type: &apos;</span>tags<span class="string">&apos;}, {lean: true}) %}</span></span><br><span class="line"><span class="string">            {%- set hasTagsPage = tagsPageQuery.length &gt; 0 %}</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;site-state-item site-state-tags&quot;&gt;</span></span><br><span class="line"><span class="string">                {%- if hasTagsPage %}</span></span><br><span class="line"><span class="string">                {%- if theme.menu.tags %}</span></span><br><span class="line"><span class="string">                    &lt;a href=&quot;{{ url_for(theme.menu.tags).split(&apos;</span>||<span class="string">&apos;)[0] | trim }}&quot;&gt;</span></span><br><span class="line"><span class="string">                {% else %}</span></span><br><span class="line"><span class="string">                    &lt;a href=&quot;{{ url_for(config.tag_dir) + &apos;</span>/<span class="string">&apos; }}&quot;&gt;</span></span><br><span class="line"><span class="string">                {%- endif %}</span></span><br><span class="line"><span class="string">                {%- endif %}</span></span><br><span class="line"><span class="string">                {%- set visibleTags = 0 %}</span></span><br><span class="line"><span class="string">                {%- for tag in site.tags %}</span></span><br><span class="line"><span class="string">                {%- if tag.length %}{%- set visibleTags += 1 %}{%- endif %}</span></span><br><span class="line"><span class="string">                {%- endfor %}</span></span><br><span class="line"><span class="string">                &lt;span class=&quot;site-state-item-count&quot;&gt;{{ visibleTags }}&lt;/span&gt;</span></span><br><span class="line"><span class="string">                &lt;span class=&quot;site-state-item-name&quot;&gt;{{ __(&apos;</span>state.tags<span class="string">&apos;) }}&lt;/span&gt;</span></span><br><span class="line"><span class="string">                {%- if hasTagsPage %}&lt;/a&gt;{%- endif %}</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            {%- endif %}</span></span><br><span class="line"><span class="string">        &lt;/nav&gt;</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        {%- if theme.social %}</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;links-of-author motion-element&quot;&gt;</span></span><br><span class="line"><span class="string">            {%- for name, link in theme.social %}</span></span><br><span class="line"><span class="string">            &lt;span class=&quot;links-of-author-item&quot;&gt;</span></span><br><span class="line"><span class="string">            {%- set sidebarURL = link.split(&apos;</span>||<span class="string">&apos;)[0] | trim %}</span></span><br><span class="line"><span class="string">            {%- if not (theme.social_icons.enable) or (not theme.social_icons.icons_only) %}</span></span><br><span class="line"><span class="string">                {%- set sidebarText = name %}</span></span><br><span class="line"><span class="string">            {%- endif %}</span></span><br><span class="line"><span class="string">            {%- if theme.social_icons.enable %}</span></span><br><span class="line"><span class="string">                {%- set sidebarIcon = &apos;</span>&lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;fa fa-fw fa-&apos; + link.split(&apos;||&apos;)[1] | trim | default(&apos;globe&apos;) + &apos;&quot;</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><span class="string">&apos; %}</span></span><br><span class="line"><span class="string">            {%- endif %}</span></span><br><span class="line"><span class="string">                {{ next_url(sidebarURL, sidebarIcon + sidebarText, {title: name + &apos;</span> &amp;rarr; <span class="string">&apos; + sidebarURL}) }}</span></span><br><span class="line"><span class="string">            &lt;/span&gt;</span></span><br><span class="line"><span class="string">            {%- endfor %}</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        {%- if theme.rss %}</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;feed-link motion-element&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;{{ url_for(theme.rss) }}&quot; rel=&quot;alternate&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;i class=&quot;fa fa-rss&quot;&gt;&lt;/i&gt;RSS</span></span><br><span class="line"><span class="string">            &lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        {%- if theme.chat.enable and theme.chat.service !== &apos;</span><span class="string">&apos; %}</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;chat motion-element&quot;&gt;</span></span><br><span class="line"><span class="string">        {%- if theme.chat.service == &apos;</span>chatra<span class="string">&apos; and theme.chatra.enable %}</span></span><br><span class="line"><span class="string">            &lt;a onclick=&quot;Chatra(&apos;</span>openChat<span class="string">&apos;, true)&quot;&gt;</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string">        {%- if theme.chat.service == &apos;</span>tidio<span class="string">&apos; and theme.tidio.enable %}</span></span><br><span class="line"><span class="string">            &lt;a onclick=&quot;tidioChatApi.open();&quot;&gt;</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string">        {%- if theme.chat.icon %}&lt;i class=&quot;fa fa-{{ theme.chat.icon }}&quot;&gt;&lt;/i&gt;{%- endif %}</span></span><br><span class="line"><span class="string">            {{ theme.chat.text }}</span></span><br><span class="line"><span class="string">        &lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        {%- if theme.creative_commons.license and theme.creative_commons.sidebar %}</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;cc-license motion-element&quot; itemprop=&quot;license&quot;&gt;</span></span><br><span class="line"><span class="string">        {%- set ccLanguage = theme.creative_commons.language %}</span></span><br><span class="line"><span class="string">        {%- if theme.creative_commons.license === &apos;</span>zero<span class="string">&apos; %}</span></span><br><span class="line"><span class="string">            {%- set ccType = &apos;</span>publicdomain/zero/<span class="number">1.0</span>/<span class="string">&apos; + ccLanguage %}</span></span><br><span class="line"><span class="string">        {% else %}</span></span><br><span class="line"><span class="string">            {%- set ccType = &apos;</span>licenses/<span class="string">&apos; + theme.creative_commons.license + &apos;</span>/<span class="number">4.0</span>/<span class="string">&apos; + ccLanguage %}</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string">        {%- set ccURL = &apos;</span>https:<span class="comment">//creativecommons.org/&apos; + ccType %}</span></span><br><span class="line">        {%- <span class="keyword">set</span> ccImage = &apos;&lt;img src=&quot;&apos; + url_for(theme.images + &apos;/cc-&apos; + theme.creative_commons.license + &apos;.svg&apos;) + &apos;&quot; alt=&quot;Creative Commons&quot;&gt;&apos; %}</span><br><span class="line">            {{ next_url(ccURL, ccImage, {<span class="attr">class</span>: <span class="string">&apos;cc-opacity&apos;</span>}) }}</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        {%- endif %}</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;post-toc-wrap motion-element sidebar-panel sidebar-panel-active&quot;</span> id=<span class="string">&quot;post-toc-wrap&quot;</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;item_headline&quot;</span>&gt;</span><br><span class="line">        &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;fa fa-list&quot;</span> aria-hidden=<span class="string">&quot;true&quot;</span>&gt;</span><br><span class="line">        &lt;<span class="regexp">/i&gt;&lt;span&gt;&#x76EE;&#x5F55;&lt;/</span>span&gt;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div class=&quot;post-toc&quot;&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        {%- set next_toc_number = theme.toc.number %}</span></span><br><span class="line"><span class="regexp">        {%- if page.toc_number !== undefined %}</span></span><br><span class="line"><span class="regexp">            {%- set next_toc_number = page.toc_number %}</span></span><br><span class="line"><span class="regexp">        {%- endif %}</span></span><br><span class="line"><span class="regexp">        {%- set next_toc_max_depth = page.toc_max_depth|default(theme.toc.max_depth)|default(6) %}</span></span><br><span class="line"><span class="regexp">        {%- set toc = toc(page.content, { &quot;class&quot;: &quot;nav&quot;, list_number: next_toc_number, max_depth: next_toc_max_depth }) %}</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        {%- if toc.length &lt;= 1 %}</span></span><br><span class="line"><span class="regexp">            &lt;p class=&quot;post-toc-empty&quot;&gt;{{ __(&apos;post.toc_empty&apos;) }}&lt;/</span>p&gt;</span><br><span class="line">        {% <span class="keyword">else</span> %}</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;post-toc-content&quot;</span>&gt;{{ toc }}&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        {%- endif %}</span></span><br><span class="line"><span class="regexp">        &lt;/</span>div&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;!--/</span>noindex--&gt;</span><br><span class="line">    {%- endif %}</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure></p><p>&#x4E4B;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x81EA;&#x7531;&#x53D1;&#x6325;&#x6DFB;&#x52A0;CSS&#x6837;&#x5F0F;&#x4E86;&#x3002;</p>]]></content>
      
      
      <categories>
          
          <category> Hexo框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> NexT </tag>
            
            <tag> JavaScript </tag>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo折腾日记之标签篇</title>
      <link href="/2019/08/20/hexo%E5%BD%A9%E8%89%B2%E6%A0%87%E7%AD%BE/"/>
      <url>/2019/08/20/hexo%E5%BD%A9%E8%89%B2%E6%A0%87%E7%AD%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h1><p>&#x4ECA;&#x5929;&#x53C8;&#x8017;&#x8D39;&#x4E00;&#x4E2A;&#x4E0A;&#x5348;&#x7ED9;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x6298;&#x817E;&#x51FA;&#x4E86;&#x5F69;&#x8272;&#x6807;&#x7B7E;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x8BB0;&#x5F55;&#x6211;&#x7684;&#x8BBE;&#x7F6E;&#x8FC7;&#x7A0B;</p><a id="more"></a><h1 id="page-swig&#x6587;&#x4EF6;&#x8BBE;&#x7F6E;"><a href="#page-swig&#x6587;&#x4EF6;&#x8BBE;&#x7F6E;" class="headerlink" title="page.swig&#x6587;&#x4EF6;&#x8BBE;&#x7F6E;"></a>page.swig&#x6587;&#x4EF6;&#x8BBE;&#x7F6E;</h1><p>&#x9996;&#x5148;&#x5148;&#x6253;&#x5F00;<code>/next/layout</code>&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x7684;page.swig&#x6587;&#x4EF6;&#xFF0C;&#x5728;&#x6587;&#x4EF6;&#x4E2D;&#x627E;&#x5230;&#x4EE5;&#x4E0B;&#x5185;&#x5BB9;<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;tag-cloud&quot;</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;tag-cloud-title&quot;</span>&gt;</span><br><span class="line">        {%- <span class="keyword">set</span> visibleTags = 0 %}</span><br><span class="line">        {%- <span class="keyword">for</span> tag <span class="keyword">in</span> site.tags %}</span><br><span class="line">        {%- <span class="keyword">if</span> tag.length %}</span><br><span class="line">            {%- <span class="keyword">set</span> visibleTags += 1 %}</span><br><span class="line">        {%- endif %}</span><br><span class="line">        {%- endfor %}</span><br><span class="line">        {{ _p(<span class="string">&apos;counter.tag_cloud&apos;</span>, visibleTags) }}</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure></p><p>&#x63A5;&#x4E0B;&#x6765;&#x7684;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x6807;&#x7B7E;&#x9875;&#x9762;&#x7684;&#x4E3B;&#x8981;&#x4EE3;&#x7801;<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;tag-cloud-tags&quot;</span> id=<span class="string">&quot;tags&quot;</span>&gt;</span><br><span class="line">        {%- <span class="keyword">if</span> not theme.tagcloud %}</span><br><span class="line">        {{ tagcloud({<span class="attr">min_font</span>: <span class="number">12</span>, <span class="attr">max_font</span>: <span class="number">30</span>, <span class="attr">amount</span>: <span class="number">200</span>, <span class="attr">color</span>: <span class="literal">true</span>, <span class="attr">start_color</span>: <span class="string">&apos;#fff&apos;</span>, <span class="attr">end_color</span>: <span class="string">&apos;#fff&apos;</span>}) }}</span><br><span class="line">        {% <span class="keyword">else</span> %}</span><br><span class="line">        {{ tagcloud({<span class="attr">min_font</span>: theme.tagcloud.min, <span class="attr">max_font</span>: theme.tagcloud.max, <span class="attr">amount</span>: theme.tagcloud.amount, <span class="attr">color</span>: <span class="literal">true</span>, <span class="attr">start_color</span>: theme.tagcloud.start, <span class="attr">end_color</span>: theme.tagcloud.end}) }}</span><br><span class="line">        {%- endif %}             </span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure></p><p>&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x5C06;&#x8D77;&#x59CB;&#x989C;&#x8272;&#x548C;&#x7EC8;&#x6B62;&#x989C;&#x8272;&#x90FD;&#x6362;&#x6210;&#x4E86;<code>#fff</code>&#x5373;&#x7EAF;&#x767D;&#x8272;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x5C31;&#x5F00;&#x59CB;&#x968F;&#x673A;&#x8BBE;&#x7F6E;&#x6BCF;&#x4E2A;&#x6807;&#x7B7E;&#x7684;&#x80CC;&#x666F;&#x989C;&#x8272;&#x3002;<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    <span class="keyword">var</span> alltags=<span class="built_in">document</span>.getElementById(<span class="string">&apos;tags&apos;</span>);</span><br><span class="line">    <span class="keyword">var</span> tags=alltags.getElementsByTagName(<span class="string">&apos;a&apos;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = tags.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) {</span><br><span class="line">        <span class="keyword">var</span> r=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">75</span>+<span class="number">130</span>);</span><br><span class="line">        <span class="keyword">var</span> g=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">75</span>+<span class="number">100</span>);</span><br><span class="line">        <span class="keyword">var</span> b=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">75</span>+<span class="number">80</span>);</span><br><span class="line">        tags[i].style.background = <span class="string">&quot;rgb(&quot;</span>+r+<span class="string">&quot;,&quot;</span>+g+<span class="string">&quot;,&quot;</span>+b+<span class="string">&quot;)&quot;</span>;</span><br><span class="line">    }</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></p><p>&#x7136;&#x540E;&#x6211;&#x4EEC;&#x518D;&#x8C03;&#x6574;&#x6807;&#x7B7E;&#x7684;CSS&#x6837;&#x5F0F;&#x5373;&#x53EF;&#xFF0C;&#x8FD9;&#x91CC;&#x9644;&#x4E0A;&#x6211;&#x7684;CSS&#x6837;&#x5F0F;<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.tag-cloud</span> <span class="selector-tag">a</span> {</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h1 id="post-swig&#x6587;&#x4EF6;&#x8BBE;&#x7F6E;"><a href="#post-swig&#x6587;&#x4EF6;&#x8BBE;&#x7F6E;" class="headerlink" title="post.swig&#x6587;&#x4EF6;&#x8BBE;&#x7F6E;"></a>post.swig&#x6587;&#x4EF6;&#x8BBE;&#x7F6E;</h1><p>&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x8BBE;&#x7F6E;&#x4E3B;&#x9875;&#x7684;&#x6807;&#x7B7E;&#xFF0C;&#x9996;&#x5148;NexT&#x4E3B;&#x9898;&#x9996;&#x9875;&#x7684;&#x6587;&#x7AE0;&#x9884;&#x89C8;&#x91CC;&#x6CA1;&#x6709;&#x6807;&#x7B7E;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x8981;&#x5148;&#x5728;&#x6587;&#x7AE0;&#x9884;&#x89C8;&#x91CC;&#x6DFB;&#x52A0;&#x6807;&#x7B7E;&#x3002;&#x6253;&#x5F00;<code>/home/zyj/blog/themes/next/layout/_macro</code>&#x4E0B;&#x7684;post.swig&#x6587;&#x4EF6;&#xFF0C;&#x627E;&#x5230;<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">{% elif post.excerpt %}</span><br><span class="line">    {{ post.excerpt }}</span><br></pre></td></tr></table></figure></p><p>&#x5728;&#x5176;&#x540E;&#x9762;&#x6DFB;&#x52A0;<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">{%- <span class="keyword">if</span> post.tags and post.tags.length %}</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;home-post-tags&quot;</span>&gt;</span><br><span class="line">    {%- <span class="keyword">for</span> tag <span class="keyword">in</span> post.tags %}</span><br><span class="line">    &lt;a href=<span class="string">&quot;{{ url_for(tag.path) }}&quot;</span> rel=<span class="string">&quot;tag&quot;</span>&gt;{{ tag.name }}&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">    {%- endfor %}</span></span><br><span class="line"><span class="regexp">    &lt;script type=&quot;text/</span>javascript<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">    var tagsall=document.getElementsByClassName(&quot;</span>home-post-tags<span class="string">&quot;)</span></span><br><span class="line"><span class="string">    for (var i = tagsall.length - 1; i &gt;= 0; i--){</span></span><br><span class="line"><span class="string">        var tags=tagsall[i].getElementsByTagName(&quot;</span>a<span class="string">&quot;);</span></span><br><span class="line"><span class="string">        for (var j = tags.length - 1; j &gt;= 0; j--) {</span></span><br><span class="line"><span class="string">            var r=Math.floor(Math.random()*255);</span></span><br><span class="line"><span class="string">            var g=Math.floor(Math.random()*255);</span></span><br><span class="line"><span class="string">            var b=Math.floor(Math.random()*255);</span></span><br><span class="line"><span class="string">            tags[j].style.background = &quot;</span>rgb(<span class="string">&quot;+r+&quot;</span>,<span class="string">&quot;+g+&quot;</span>,<span class="string">&quot;+b+&quot;</span>)<span class="string">&quot;;</span></span><br><span class="line"><span class="string">        }</span></span><br><span class="line"><span class="string">    }</span></span><br><span class="line"><span class="string">    &lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">{%- endif %}</span></span><br></pre></td></tr></table></figure></p><p>&#x5373;&#x53EF;&#x5728;&#x6587;&#x7AE0;&#x9884;&#x89C8;&#x4E2D;&#x6DFB;&#x52A0;&#x5F69;&#x8272;&#x6807;&#x7B7E;</p><p>&#x63A5;&#x4E0B;&#x6765;&#x5C06;&#x6587;&#x7AE0;&#x4E3B;&#x9875;&#x9762;&#x672B;&#x5C3E;&#x7684;&#x6807;&#x7B7E;&#x6362;&#x6210;&#x5F69;&#x8272;&#x6807;&#x7B7E;&#xFF0C;&#x540C;&#x6837;&#x5728;post.swig&#x4E2D;&#x627E;&#x5230;&#xFF1A;<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;post-tags&quot;</span> id=<span class="string">&quot;post-tags&quot;</span>&gt;</span><br><span class="line">{%- <span class="keyword">for</span> tag <span class="keyword">in</span> post.tags %}</span><br><span class="line">    &lt;a href=<span class="string">&quot;{{ url_for(tag.path) }}&quot;</span> rel=<span class="string">&quot;tag&quot;</span>&gt;{{ tag_indicate }} {{ tag.name }}&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">{%- endfor %}</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure></p><p>&#x5728;&#x5176;&#x540E;&#x6DFB;&#x52A0;<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"><span class="keyword">var</span> tagsall=<span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;post-tags&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = tagsall.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--){</span><br><span class="line">    <span class="keyword">var</span> tags=tagsall[i].getElementsByTagName(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j = tags.length - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--) {</span><br><span class="line">        <span class="keyword">var</span> r=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">75</span>+<span class="number">130</span>);</span><br><span class="line">        <span class="keyword">var</span> g=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">75</span>+<span class="number">100</span>);</span><br><span class="line">        <span class="keyword">var</span> b=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">75</span>+<span class="number">80</span>);</span><br><span class="line">        tags[j].style.background = <span class="string">&quot;rgb(&quot;</span>+r+<span class="string">&quot;,&quot;</span>+g+<span class="string">&quot;,&quot;</span>+b+<span class="string">&quot;)&quot;</span>;</span><br><span class="line">    }</span><br><span class="line">}                        </span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Hexo框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> NexT </tag>
            
            <tag> JavaScript </tag>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo添加Valine评论功能</title>
      <link href="/2019/08/18/valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"/>
      <url>/2019/08/18/valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h1><p>&#x4E00;&#x76F4;&#x60F3;&#x7ED9;&#x81EA;&#x5DF1;&#x7684;&#x535A;&#x5BA2;&#x6DFB;&#x52A0;&#x8BC4;&#x8BBA;&#x529F;&#x80FD;&#xFF0C;&#x6BD4;&#x8F83;&#x9760;&#x8C31;&#x7684;&#x8BC4;&#x8BBA;&#x7CFB;&#x7EDF;&#x6709;GitHub&#x4E0A;&#x7684;gitment&#xFF0C;gitalk&#xFF0C;gitter&#xFF0C;&#x6765;&#x5FC5;&#x529B;(&#x6709;&#x70B9;&#x513F;&#x82B1;&#x54E8;)&#xFF0C;&#x4EE5;&#x53CA;&#x4E00;&#x4E9B;&#x56FD;&#x5916;&#x7684;&#x8BC4;&#x8BBA;&#x7CFB;&#x7EDF;(&#x9700;&#x8981;&#x7FFB;&#x5899;)&#x3002;&#x5076;&#x7136;&#x95F4;&#x4E86;&#x89E3;&#x5230;&#x4E00;&#x6B3E;&#x56FD;&#x4EBA;&#x5F00;&#x53D1;&#x7684;&#x8BC4;&#x8BBA;&#x7CFB;&#x7EDF;&#x53EB;Valine&#x7528;&#x7684;&#x662F;LeanCloud&#x4F5C;&#x4E3A;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x6D01;&#x9762;&#x5F88;&#x7B80;&#x6D01;&#xFF0C;&#x4E0D;&#x50CF;&#x6765;&#x5FC5;&#x529B;&#x90A3;&#x6837;&#x82B1;&#x54E8;&#x53EA;&#x662F;&#x5355;&#x7EAF;&#x7684;&#x8BC4;&#x8BBA;&#xFF0C;&#x7B80;&#x6D01;&#x5230;&#x6CA1;&#x6709;&#x540E;&#x53F0;&#xFF0C;&#x5220;&#x9664;&#x548C;&#x7BA1;&#x7406;&#x8BC4;&#x8BBA;&#x76F4;&#x63A5;&#x64CD;&#x4F5C;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x4E8E;&#x662F;&#x51B3;&#x5B9A;&#x5C31;&#x662F;&#x4F60;&#x4E86;&#x3002;&#x672C;&#x7247;&#x535A;&#x5BA2;&#x7528;&#x4E8E;&#x8BB0;&#x5F55;&#x6DFB;&#x52A0;Valine&#x8BC4;&#x8BBA;&#x529F;&#x80FD;&#x7684;&#x5B8C;&#x6574;&#x8FC7;&#x7A0B;&#x3002;</p><a id="more"></a><h1 id="&#x6DFB;&#x52A0;Valine&#x8BC4;&#x8BBA;"><a href="#&#x6DFB;&#x52A0;Valine&#x8BC4;&#x8BBA;" class="headerlink" title="&#x6DFB;&#x52A0;Valine&#x8BC4;&#x8BBA;"></a>&#x6DFB;&#x52A0;Valine&#x8BC4;&#x8BBA;</h1><ol><li><p>&#x6CE8;&#x518C;LeanCloud</p></li><li><p>&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5F00;&#x53D1;&#x7248;&#x5E94;&#x7528;</p></li><li><p>&#x521B;&#x5EFA; Class<br> &#x5728;LeanCloud -&gt; &#x5B58;&#x50A8; -&gt; &#x521B;&#x5EFA;Class -&gt; &#x65E0;&#x9650;&#x5236;&#x7684;Class</p></li><li>&#x5173;&#x95ED;&#x670D;&#x52A1;&#x5F00;&#x5173;<br> &#x5728;LeanCloud -&gt; &#x8BBE;&#x7F6E; -&gt; &#x5B89;&#x5168;&#x4E2D;&#x5FC3; -&gt; &#x670D;&#x52A1;&#x5F00;&#x5173;&#xFF0C;&#x628A;&#x9664;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x5176;&#x4ED6;&#x9009;&#x9879;&#x90FD;&#x5173;&#x95ED;&#x3002;</li><li>&#x6DFB;&#x52A0;&#x57DF;&#x540D;<br> &#x5728;LeanCloud -&gt; &#x8BBE;&#x7F6E; -&gt; &#x5B89;&#x5168;&#x4E2D;&#x5FC3; -&gt; Wwb&#x5B89;&#x5168;&#x57DF;&#x540D;&#xFF0C;&#x6CE8;&#x610F;&#x683C;&#x5F0F;</li><li><p>&#x4FEE;&#x6539;&#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x6587;&#x4EF6;<br> &#x6253;&#x5F00;&#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x6587;&#x4EF6;<code>_config.yml</code>&#xFF0C;&#x641C;&#x7D22;&#x627E;&#x5230;<code>Valine</code>&#x90E8;&#x5206;&#xFF0C;&#x586B;&#x5199;appid&#x4EE5;&#x53CA;appkey</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Valine</span></span><br><span class="line"><span class="comment"># You can get your appid and appkey from https://leancloud.cn</span></span><br><span class="line"><span class="comment"># For more information: https://valine.js.org, https://github.com/xCss/Valine</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line"><span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># When enable is set to be true, leancloud_visitors is recommended to be closed for the re-initialization problem within different leancloud adk version</span></span><br><span class="line"><span class="attr">appid:</span> <span class="comment"># your appid</span></span><br><span class="line"><span class="attr">appkey:</span> <span class="comment"># your appkey</span></span><br><span class="line"><span class="attr">notify:</span> <span class="literal">true</span> <span class="comment"># Mail notifier. See: https://github.com/xCss/Valine/wiki</span></span><br><span class="line"><span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># Verification code</span></span><br><span class="line"><span class="attr">placeholder:</span> <span class="string">Just</span> <span class="string">go</span> <span class="string">go</span> <span class="comment"># Comment box placeholder</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># Gravatar style</span></span><br><span class="line"><span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># Custom comment header</span></span><br><span class="line"><span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># Pagination size</span></span><br><span class="line"><span class="attr">language:</span> <span class="comment"># Language, available values: en, zh-cn</span></span><br><span class="line"><span class="attr">visitor:</span> <span class="literal">false</span> <span class="comment"># leancloud-counter-security is not supported for now. When visitor is set to be true, appid and appkey are recommended to be the same as leancloud_visitors&apos; for counter compatibility. Article reading statistic https://valine.js.org/visitor.html</span></span><br><span class="line"><span class="attr">comment_count:</span> <span class="literal">true</span> <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br></pre></td></tr></table></figure></li><li><p>&#x5F00;&#x542F;email&#x901A;&#x77E5;<br> &#x82E5;&#x8981;&#x5F00;&#x542F;&#x90AE;&#x4EF6;&#x901A;&#x77E5;&#xFF0C;&#x9996;&#x5148;&#x4FEE;&#x6539;&#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF1A;</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">notify: true # Mail notifier. See: https://github.com/xCss/Valine/wiki</span><br></pre></td></tr></table></figure><p> &#x7136;&#x540E;&#x5728;LeanCloud -&gt; &#x8BBE;&#x7F6E; -&gt; &#x90AE;&#x4EF6;&#x6A21;&#x677F;<br> &#x7528;&#x4E8E;&#x91CD;&#x7F6E;&#x5BC6;&#x7801;&#x7684;&#x90AE;&#x4EF6;&#x4E3B;&#x9898;&#x4FEE;&#x6539;&#x4E3A;&#xFF1A;</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x4F60;&#x5728;{{appname}} &#x7684;&#x8BC4;&#x8BBA;&#x6536;&#x5230;&#x4E86;&#x65B0;&#x7684;&#x56DE;&#x590D;</span><br></pre></td></tr></table></figure><p> &#x5185;&#x5BB9;&#x4FEE;&#x6539;&#x4E3A;&#xFF1A;</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hi, {{username}}<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">&#x4F60;&#x5728; {{appname}} &#x7684;&#x8BC4;&#x8BBA;&#x6536;&#x5230;&#x4E86;&#x65B0;&#x7684;&#x56DE;&#x590D;&#xFF0C;&#x8BF7;&#x70B9;&#x51FB;&#x67E5;&#x770B;&#xFF1A;</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#x4F60;&#x7684;&#x7F51;&#x5740;&#x9996;&#x9875;&#x94FE;&#x63A5;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: inline-block; padding: 10px 20px; border-radius: 4px; background-color: #3090e4; color: #fff; text-decoration: none;&quot;</span>&gt;</span>&#x9A6C;&#x4E0A;&#x67E5;&#x770B;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>&#x6700;&#x540E;&#x6B22;&#x8FCE;&#x5927;&#x5BB6;&#x5728;&#x4E0B;&#x65B9;&#x8BC4;&#x8BBA;&#x533A;&#x6D4B;&#x8BD5;&#x8BC4;&#x8BBA;</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Hexo框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> NexT </tag>
            
            <tag> Valine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客部署到阿里云服务器</title>
      <link href="/2019/08/17/%E9%83%A8%E7%BD%B2%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2019/08/17/%E9%83%A8%E7%BD%B2%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h1><p>&#x8FD9;&#x51E0;&#x5929;&#x4E00;&#x6298;&#x817E;&#x8D77;&#x6765;&#x5C31;&#x53D1;&#x73B0;&#x5B8C;&#x5168;&#x505C;&#x4E0D;&#x4E0B;&#x6765;&#x4E86;&#xFF0C;&#x524D;&#x51E0;&#x5929;&#x6211;&#x628A;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x90E8;&#x7F72;&#x5230;&#x4E86;Coding&#x5E73;&#x53F0;&#xFF0C;&#x524D;&#x5929;&#x53C8;&#x624B;&#x75D2;&#x5728;&#x963F;&#x91CC;&#x4E91;&#x4E0A;&#x8D2D;&#x4E70;&#x4E86;&#x4E00;&#x4E2A;&#x57DF;&#x540D;&#x3002;&#x4ECA;&#x65E9;&#x53C8;&#x6CA1;&#x5FCD;&#x4F4F;&#x8D2D;&#x4E70;&#x4E86;&#x963F;&#x91CC;&#x4E91;&#x7684;&#x5B66;&#x751F;&#x670D;&#x52A1;&#x5668;&#x3002;&#x4E8E;&#x662F;&#x6211;&#x6700;&#x7EC8;&#x51B3;&#x5B9A;&#x628A;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x90E8;&#x7F72;&#x5230;&#x963F;&#x91CC;&#x4E91;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x3002;&#x5728;&#x6298;&#x817E;&#x4E86;&#x4E00;&#x4E2A;&#x4E0A;&#x5348;&#x540E;&#xFF0C;&#x6211;&#x7EC8;&#x4E8E;&#x6210;&#x529F;&#x7684;&#x5B8C;&#x6210;&#x4E86;&#x535A;&#x5BA2;&#x7684;&#x90E8;&#x7F72;&#xFF0C;&#x8FD9;&#x7BC7;&#x535A;&#x5BA2;&#x8BB0;&#x5F55;&#x4E0B;&#x6211;&#x7684;&#x6574;&#x4E2A;&#x90E8;&#x7F72;&#x6D41;&#x7A0B;&#x3002;</p><a id="more"></a><h1 id="&#x670D;&#x52A1;&#x5668;&#x73AF;&#x5883;&#x642D;&#x5EFA;"><a href="#&#x670D;&#x52A1;&#x5668;&#x73AF;&#x5883;&#x642D;&#x5EFA;" class="headerlink" title="&#x670D;&#x52A1;&#x5668;&#x73AF;&#x5883;&#x642D;&#x5EFA;"></a>&#x670D;&#x52A1;&#x5668;&#x73AF;&#x5883;&#x642D;&#x5EFA;</h1><h2 id="&#x5B89;&#x88C5;Git"><a href="#&#x5B89;&#x88C5;Git" class="headerlink" title="&#x5B89;&#x88C5;Git"></a>&#x5B89;&#x88C5;Git</h2><p>&#x8FD9;&#x6CA1;&#x5565;&#x597D;&#x8BF4;&#x7684;&#xFF1A;</p><pre><code>apt-get install git</code></pre><h2 id="&#x914D;&#x7F6E;Nginx"><a href="#&#x914D;&#x7F6E;Nginx" class="headerlink" title="&#x914D;&#x7F6E;Nginx"></a>&#x914D;&#x7F6E;Nginx</h2><ul><li><p>&#x5B89;&#x88C5;nginx</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install nginx</span><br></pre></td></tr></table></figure></li><li><p>nginx</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service start nginx</span><br></pre></td></tr></table></figure><p>  &#x7136;&#x540E;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x8F93;&#x5165;&#x670D;&#x52A1;&#x5668;&#x7684;&#x516C;&#x7F51;&#x5730;&#x5740;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x89C1;nginx&#x7684;&#x9ED8;&#x8BA4;&#x9875;&#x9762;&#x3002;</p><p>  <strong>&#x6CE8;&#x610F;:</strong> &#x8FD9;&#x91CC;&#x6709;&#x4E2A;&#x8D85;&#x7EA7;&#x5927;&#x5751;&#xFF0C;&#x4E00;&#x5B9A;&#x8981;&#x5728;&#x670D;&#x52A1;&#x5668;&#x7684;&#x5B89;&#x5168;&#x7EC4;&#x89C4;&#x5219;&#x4E2D;&#x6DFB;&#x52A0;80&#x7AEF;&#x53E3;&#xFF0C;&#x5426;&#x5219;&#x4E0D;&#x4F1A;&#x6709;&#x4EFB;&#x4F55;&#x8F93;&#x51FA;&#x3002;&#x8FD9;&#x91CC;&#x8017;&#x8D39;&#x4E86;&#x6211;&#x4E00;&#x4E2A;&#x591A;&#x5C0F;&#x65F6;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x8BF4;&#x591A;&#x4E86;&#x90FD;&#x662F;&#x6CEA;&#x3002;</p></li><li><p>&#x9ED8;&#x8BA4;&#x914D;&#x7F6E;<br>  <code>cd</code>&#x8FDB;&#x5165;nginx&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;<code>vim</code>&#x6253;&#x5F00;&#x6587;&#x4EF6;</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/nginx/sites-available</span><br><span class="line">sudo vim default</span><br></pre></td></tr></table></figure><p>  &#x5176;&#x4E2D;<code>server_name</code>&#x4FEE;&#x6539;&#x4E3A;&#x81EA;&#x5DF1;&#x7684;&#x57DF;&#x540D;&#xFF0C;&#x6CA1;&#x6709;&#x57DF;&#x540D;&#x5219;&#x65E0;&#x9700;&#x4FEE;&#x6539;&#x3002;<br>  <code>root</code>&#x4FEE;&#x6539;&#x4E3A;<code>/var/www/html/blog</code>&#xFF0C;&#x8FD9;&#x662F;&#x6211;&#x4EEC;&#x535A;&#x5BA2;&#x7F51;&#x7AD9;&#x7684;&#x6839;&#x76EE;&#x5F55;&#x3002;</p></li></ul><h2 id="&#x521B;&#x5EFA;git&#x7528;&#x6237;"><a href="#&#x521B;&#x5EFA;git&#x7528;&#x6237;" class="headerlink" title="&#x521B;&#x5EFA;git&#x7528;&#x6237;"></a>&#x521B;&#x5EFA;git&#x7528;&#x6237;</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">adduser git</span><br><span class="line">chmod 740 /etc/sudoers</span><br><span class="line">vim /etc/sudoers</span><br></pre></td></tr></table></figure><p>&#x627E;&#x5230;&#x4EE5;&#x4E0B;&#x5185;&#x5BB9;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## Allow root to run any commands anywhere</span><br><span class="line">root    ALL=(ALL)    ALL</span><br></pre></td></tr></table></figure></p><p>&#x5728;&#x4E0B;&#x9762;&#x6DFB;&#x52A0;&#x4E00;&#x884C;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git ALL=(ALL) ALL</span><br></pre></td></tr></table></figure></p><p>&#x83B7;&#x5F97;root&#x6743;&#x9650;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd git</span><br></pre></td></tr></table></figure></p><h2 id="&#x8BBE;&#x7F6E;SSH"><a href="#&#x8BBE;&#x7F6E;SSH" class="headerlink" title="&#x8BBE;&#x7F6E;SSH"></a>&#x8BBE;&#x7F6E;SSH</h2><p>&#x5207;&#x6362;&#x4E3A;git&#x7528;&#x6237;&#xFF0C;&#x521B;&#x5EFA; ~/.ssh &#x6587;&#x4EF6;&#x5939;&#x548C; ~/.ssh/authorized_keys &#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x8D4B;&#x4E88;&#x76F8;&#x5E94;&#x7684;&#x6743;&#x9650;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su git</span><br><span class="line">mkdir ~/.ssh</span><br><span class="line">vim ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></p><p>&#x7136;&#x540E;&#x5C06;&#x5BA2;&#x6237;&#x7AEF;<code>.ssh</code>&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x7684;<code>id_rsa.pub</code>&#x6587;&#x4EF6;&#x91CC;&#x7684;&#x5185;&#x5BB9;&#x590D;&#x5236;&#x5230;<code>authorized_keys</code>&#x4E2D;&#xFF0C;&#x63A5;&#x7740;&#x8D4B;&#x4E88;&#x76F8;&#x5E94;&#x7684;&#x6743;&#x9650;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 ~/.ssh/authorzied_keys</span><br><span class="line">chmod 700 ~/.ssh</span><br></pre></td></tr></table></figure></p><p>&#x7136;&#x540E;&#x6211;&#x4EEC;&#x5728;&#x5BA2;&#x6237;&#x7AEF;&#x7EC8;&#x7AEF;&#x4E0A;&#x8F93;&#x5165;<code>ssh -v git@ip&#x5730;&#x5740;</code>&#x5C31;&#x53EF;&#x4EE5;&#x514D;&#x5BC6;&#x767B;&#x5F55;&#x4E86;</p><h2 id="git&#x4ED3;&#x5E93;&#x8BBE;&#x7F6E;"><a href="#git&#x4ED3;&#x5E93;&#x8BBE;&#x7F6E;" class="headerlink" title="git&#x4ED3;&#x5E93;&#x8BBE;&#x7F6E;"></a>git&#x4ED3;&#x5E93;&#x8BBE;&#x7F6E;</h2><p>&#x5207;&#x6362;&#x5230;git&#x7528;&#x6237;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E2A;git&#x88F8;&#x5E93;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su git</span><br><span class="line">cd ~</span><br><span class="line">git init --bare blog.git</span><br></pre></td></tr></table></figure></p><p>&#x63A5;&#x7740;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;post-receive&#x6587;&#x4EF6;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure></p><p>&#x5728;&#x6587;&#x4EF6;&#x4E2D;&#x8F93;&#x5165;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#&#xFF01;/bin/sh</span><br><span class="line">git --work-tree=/var/www/html/blog --git-dir=/home/git/blog.git checkout -f</span><br></pre></td></tr></table></figure></p><p>&#x4FDD;&#x5B58;&#x9000;&#x51FA;&#x540E;&#x518D;&#x8D4B;&#x4E88;&#x8BE5;&#x6587;&#x4EF6;&#x6267;&#x884C;&#x6743;&#x9650;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x ~/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure></p><h1 id="&#x672C;&#x5730;&#x8BBE;&#x7F6E;"><a href="#&#x672C;&#x5730;&#x8BBE;&#x7F6E;" class="headerlink" title="&#x672C;&#x5730;&#x8BBE;&#x7F6E;"></a>&#x672C;&#x5730;&#x8BBE;&#x7F6E;</h1><p>&#x8FD9;&#x91CC;nodejs,npm,git,hexo&#x7B49;&#x7684;&#x5B89;&#x88C5;&#x5C31;&#x4E0D;&#x518D;&#x53D9;&#x8FF0;&#x4E86;&#x3002;&#x672C;&#x5730;&#x7684;&#x8BBE;&#x7F6E;&#x5C31;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x535A;&#x5BA2;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x5373;&#x53EF;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo:</span><br><span class="line">    aliyun: git@ip&#x5730;&#x5740;:/home/git/blog.git,master</span><br></pre></td></tr></table></figure></p><p>&#x7136;&#x540E;&#x6211;&#x4EEC;&#x5728;&#x7EC8;&#x7AEF;&#x6267;&#x884C;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><p>&#x535A;&#x5BA2;&#x6587;&#x4EF6;&#x5C31;&#x4F1A;&#x4E0A;&#x4F20;&#x5230;&#x6211;&#x4EEC;&#x5728;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x7684;git&#x4ED3;&#x5E93;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x90E8;&#x7F72;&#x5230;&#x6211;&#x4EEC;&#x521B;&#x5EFA;&#x7684;&#x535A;&#x5BA2;&#x6839;&#x76EE;&#x5F55;&#x3002;&#x6211;&#x4EEC;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x8BBF;&#x95EE;&#x670D;&#x52A1;&#x5668;&#x5730;&#x5740;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x6211;&#x4EEC;&#x7684;&#x535A;&#x5BA2;&#x4E86;&#x3002;</p>]]></content>
      
      
      <categories>
          
          <category> Hexo框架 </category>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> 阿里云 </tag>
            
            <tag> SSH </tag>
            
            <tag> Git </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu深度学习环境搭建</title>
      <link href="/2019/08/16/ubuntu%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83/"/>
      <url>/2019/08/16/ubuntu%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<h1 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h1><p>&#x4E0A;&#x6B21;&#x642D;&#x5EFA;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x73AF;&#x5883;&#x5DF2;&#x7ECF;&#x662F;&#x5F88;&#x4E45;&#x4EE5;&#x524D;&#x4E86;&#xFF0C;&#x4F46;&#x6211;&#x8FD8;&#x8BB0;&#x5F97;&#x88AB;&#x5176;&#x652F;&#x914D;&#x7684;&#x6050;&#x60E7;&#xFF0C;&#x5404;&#x79CD;&#x51FA;&#x9519;&#xFF0C;&#x5404;&#x79CD;&#x7248;&#x672C;&#x5BF9;&#x5E94;&#x4E0D;&#x4E0A;&#xFF0C;&#x641E;&#x5F97;&#x6211;&#x5934;&#x76AE;&#x53D1;&#x9EBB;&#x3002;&#x8FD9;&#x6B21;&#x56E0;&#x4E3A;&#x7CFB;&#x7EDF;&#x5954;&#x6E83;&#x9700;&#x8981;&#x91CD;&#x88C5;&#x7CFB;&#x7EDF;&#xFF0C;&#x4E5F;&#x5C31;&#x610F;&#x5473;&#x7740;&#x6211;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x642D;&#x5EFA;Ubuntu&#x7684;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x73AF;&#x5883;&#xFF0C;&#x6211;&#x5FC3;&#x91CC;&#x662F;&#x4E00;&#x767E;&#x4E2A;&#x4E0D;&#x613F;&#x610F;&#x7684;&#x3002;&#x4F46;&#x4E5F;&#x6CA1;&#x6709;&#x529E;&#x6CD5;&#xFF0C;&#x53EA;&#x80FD;&#x786C;&#x7740;&#x5934;&#x76AE;&#x4E0A;&#x3002;&#x4F46;&#x51FA;&#x4E4E;&#x610F;&#x6599;&#xFF0C;&#x8FD9;&#x6B21;&#x642D;&#x5EFA;&#x8FC7;&#x7A0B;&#x8FD8;&#x7B97;&#x987A;&#x5229;&#xFF0C;&#x53EA;&#x6709;&#x5728;tensorflow&#x8FD0;&#x884C;&#x51FA;&#x4E86;&#x70B9;&#x5C0F;&#x72B6;&#x51B5;(&#x540E;&#x9762;&#x4F1A;&#x63D0;&#x5230;)&#x3002;&#x672C;&#x7BC7;&#x535A;&#x5BA2;&#x4F1A;&#x8BE6;&#x7EC6;&#x8BB0;&#x5F55;&#x6211;&#x7684;&#x6574;&#x4E2A;&#x642D;&#x5EFA;&#x8FC7;&#x7A0B;&#xFF0C;&#x8BF4;&#x4E0D;&#x5B9A;&#x90A3;&#x5929;&#x6211;&#x7684;&#x7CFB;&#x7EDF;&#x53C8;&#x88AB;&#x6211;&#x73A9;&#x5D29;&#x6E83;&#x4E86;&#x3002;&#x5148;&#x9644;&#x4E0A;&#x6211;&#x7684;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x73AF;&#x5883;&#x57FA;&#x672C;&#x4FE1;&#x606F;&#xFF1A;</p><ul><li>Ubuntu: 16.04</li><li>NVIDIA: GeForce GTX 1080TI</li><li>Driver Version: 430.40</li><li>CUDA: 10.0</li><li>cuDNN: 7.5.1</li><li>TensorFlow: 1.13.1</li></ul><a id="more"></a><h1 id="&#x5B89;&#x88C5;&#x663E;&#x5361;&#x9A71;&#x52A8;"><a href="#&#x5B89;&#x88C5;&#x663E;&#x5361;&#x9A71;&#x52A8;" class="headerlink" title="&#x5B89;&#x88C5;&#x663E;&#x5361;&#x9A71;&#x52A8;"></a>&#x5B89;&#x88C5;&#x663E;&#x5361;&#x9A71;&#x52A8;</h1><h2 id="&#x7981;&#x7528;nouveau"><a href="#&#x7981;&#x7528;nouveau" class="headerlink" title="&#x7981;&#x7528;nouveau"></a>&#x7981;&#x7528;nouveau</h2><p>&#x6253;&#x5F00;&#x7EC8;&#x7AEF;&#x8F93;&#x5165;&#xFF1A;</p><pre><code>sudo vim /etc/modprobe.d/blacklist.conf</code></pre><p>&#x5728;&#x6587;&#x4EF6;&#x6700;&#x540E;&#x52A0;&#x4E0A;&#xFF1A;</p><pre><code>blacklist nouveauoptions nouveau modeset=0</code></pre><p>&#x4FDD;&#x5B58;&#x9000;&#x51FA;&#x540E;&#x8F93;&#x5165;&#x547D;&#x4EE4;&#xFF1A;</p><pre><code>sudo update-initramfs -u</code></pre><p>&#x7136;&#x540E;&#x91CD;&#x542F;&#x7535;&#x8111;&#xFF0C;&#x63A5;&#x7740;&#x8F93;&#x5165;&#x547D;&#x4EE4;&#xFF1A;</p><pre><code>lsmod | grep nouveau</code></pre><p>&#x82E5;&#x6CA1;&#x6709;&#x8F93;&#x51FA;&#x4FE1;&#x606F;&#xFF0C;&#x8BF4;&#x660E;&#x7981;&#x7528;&#x6210;&#x529F;</p><h2 id="&#x5B89;&#x88C5;&#x9A71;&#x52A8;"><a href="#&#x5B89;&#x88C5;&#x9A71;&#x52A8;" class="headerlink" title="&#x5B89;&#x88C5;&#x9A71;&#x52A8;"></a>&#x5B89;&#x88C5;&#x9A71;&#x52A8;</h2><p>&#x9996;&#x5148;&#x53BB;NVIDIA&#x5B98;&#x7F51;&#x4E0A;&#x4E0B;&#x8F7D;&#x5BF9;&#x5E94;&#x7684;Linux&#x7248;&#x672C;&#x7684;&#x663E;&#x5361;&#x9A71;&#x52A8;&#x3002;</p><p>&#x7136;&#x540E;&#x6309;Ctrl+Alt+F1&#x8FDB;&#x5165;&#x547D;&#x4EE4;&#x884C;&#x6A21;&#x5F0F;&#xFF0C;&#x8F93;&#x5165;&#x7528;&#x6237;&#x540D;&#x548C;&#x5BC6;&#x7801;</p><p>&#x63A5;&#x7740;&#x5173;&#x95ED;&#x56FE;&#x5F62;&#x754C;&#x9762;&#xFF1A;</p><pre><code>sudo service lightdm stop</code></pre><p>&#x7136;&#x540E;<code>cd</code>&#x8FDB;&#x53BB;&#x9A71;&#x52A8;&#x6240;&#x5728;&#x7684;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x83B7;&#x53D6;&#x6743;&#x9650;&#xFF1A;</p><pre><code>sudo chmod a+x NVIDIA-Linux-x86_64-xxx.run</code></pre><p>&#x5B89;&#x88C5;&#x9A71;&#x52A8;&#xFF1A;</p><pre><code>sudo ./NVIDIA-Linux-x86_64-410.78.run &#x2013;no-x-check &#x2013;no-nouveau-check &#x2013;no-opengl-files</code></pre><ul><li>&#x2013;no-x-check &#x5B89;&#x88C5;&#x9A71;&#x52A8;&#x65F6;&#x5173;&#x95ED;X&#x670D;&#x52A1;</li><li>&#x2013;no-nouveau-check &#x5B89;&#x88C5;&#x9A71;&#x52A8;&#x65F6;&#x7981;&#x7528;nouveau</li><li>&#x2013;no-opengl-files &#x53EA;&#x5B89;&#x88C5;&#x9A71;&#x52A8;&#x6587;&#x4EF6;&#xFF0C;&#x4E0D;&#x5B89;&#x88C5;OpenGL&#x6587;&#x4EF6;&#xFF1B;&#x5B89;&#x88C5;&#x4E86;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x53CC;&#x663E;&#x5361;&#x7684;&#x8BDD;&#xFF0C;&#x4F1A;&#x51FA;&#x73B0;&#x91CD;&#x590D;&#x767B;&#x5F55;&#x7684;&#x95EE;&#x9898;</li></ul><p>&#x5B8C;&#x6210;&#x5B89;&#x88C5;&#x540E;&#x542F;&#x52A8;&#x56FE;&#x5F62;&#x754C;&#x9762;&#xFF1A;</p><pre><code>sudo service lightdm start</code></pre><p>&#x6700;&#x540E;&#x5728;&#x7EC8;&#x7AEF;&#x8F93;&#x5165;&#xFF1A;</p><pre><code>nvidia-smi</code></pre><p>&#x82E5;&#x6709;&#x8F93;&#x51FA;&#x663E;&#x5361;&#x4FE1;&#x606F;&#xFF0C;&#x8BF4;&#x660E;&#x9A71;&#x52A8;&#x5B89;&#x88C5;&#x6210;&#x529F;</p><h2 id="&#x5B89;&#x88C5;CUDA"><a href="#&#x5B89;&#x88C5;CUDA" class="headerlink" title="&#x5B89;&#x88C5;CUDA"></a>&#x5B89;&#x88C5;CUDA</h2><p>&#x4E0B;&#x8F7D;CUDA10.0&#xFF0C;&#x4E0B;&#x8F7D;&#x5730;&#x5740;&#xFF1A;<a href="https://developer.nvidia.com/cuda-toolkit-archive" target="_blank" rel="noopener">https://developer.nvidia.com/cuda-toolkit-archive</a></p><p><code>cd</code>&#x8FDB;&#x5165;CUDA&#x6240;&#x5728;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x8D4B;&#x4E88;&#x6587;&#x4EF6;&#x6267;&#x884C;&#x6743;&#x9650;&#x540E;&#x5B89;&#x88C5;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod +x cuda_10.0.130_410.48_linux.run</span><br><span class="line">sudo ./cuda_10.0.130_410.48_linux.run</span><br></pre></td></tr></table></figure></p><p>&#x5F00;&#x59CB;&#x5B89;&#x88C5;&#x540E;&#x9700;&#x8981;&#x6309;&#x7A7A;&#x683C;&#x952E;&#x9605;&#x8BFB;&#x6761;&#x6B3E;&#xFF0C;&#x65F6;&#x95F4;&#x6BD4;&#x8F83;&#x957F;&#xFF0C;&#x7B49;&#x4E0D;&#x53CA;&#x7684;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;Ctrl+C&#x8DF3;&#x8FC7;&#x3002;&#x9605;&#x8BFB;&#x5B8C;&#x4F7F;&#x7528;&#x6761;&#x6B3E;&#x540E;&#x5F00;&#x59CB;&#x914D;&#x7F6E;&#xFF0C;&#x4E00;&#x6B65;&#x4E00;&#x6B65;&#x6162;&#x6162;&#x6765;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">accept/decline/quit: accept</span><br><span class="line"></span><br><span class="line">Install NVIDIA Accelerated Graphics Driver for Linux-x86_64 410.48?</span><br><span class="line">(y)es/(n)o/(q)uit: n&#xFF08;&#x8FD9;&#x91CC;&#x4E0D;&#x8981;&#x518D;&#x5B89;&#x88C5;&#x9A71;&#x52A8;&#x4E86;&#xFF01;&#xFF01;&#xFF01;&#xFF09;</span><br><span class="line"></span><br><span class="line">Install the CUDA 10.0 Toolkit?&#xFF08;&#x662F;&#x5426;&#x5B89;&#x88C5;CUDA 10 &#xFF0C;&#x8FD9;&#x91CC;&#x5FC5;&#x987B;&#x8981;&#x5B89;&#x88C5;&#xFF09;</span><br><span class="line">(y)es/(n)o/(q)uit: y</span><br><span class="line"></span><br><span class="line">Enter Toolkit Location&#xFF08;&#x5B89;&#x88C5;&#x8DEF;&#x5F84;&#xFF0C;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#xFF0C;&#x76F4;&#x63A5;&#x56DE;&#x8F66;&#x5C31;&#x884C;&#xFF09;</span><br><span class="line"> [ default is /usr/local/cuda-10.0 ]:  </span><br><span class="line"></span><br><span class="line">Do you want to install a symbolic link at /usr/local/cuda?&#xFF08;&#x540C;&#x610F;&#x521B;&#x5EFA;&#x8F6F;&#x94FE;&#x63A5;&#xFF09;</span><br><span class="line">(y)es/(n)o/(q)uit: y</span><br><span class="line"></span><br><span class="line">Install the CUDA 10.0 Samples?</span><br><span class="line">(y)es/(n)o/(q)uit: y</span><br><span class="line"></span><br><span class="line">Installing the CUDA Toolkit in /usr/local/cuda-10.0 ...&#xFF08;&#x5F00;&#x59CB;&#x5B89;&#x88C5;&#xFF09;</span><br></pre></td></tr></table></figure></p><p>&#x5B89;&#x88C5;&#x5B8C;&#x6210;&#x540E;&#x52A0;&#x5165;&#x73AF;&#x5883;&#x53D8;&#x91CF;</p><pre><code>sudo gedit ~/.bashrc</code></pre><p>&#x6700;&#x540E;&#x4E00;&#x884C;&#x52A0;&#x5165;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export CUDA_HOME=/usr/local/cuda</span><br><span class="line">export PATH=$PATH:$CUDA_HOME/bin</span><br><span class="line">export LD_LIBRARY_PATH=/usr/local/cuda-10.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}</span><br></pre></td></tr></table></figure></p><p>&#x4FDD;&#x5B58;&#x9000;&#x51FA;&#x540E;&#x8F93;&#x5165;&#xFF1A;</p><pre><code>source .bashrc</code></pre><p>&#x6700;&#x540E;&#x7EC8;&#x7AEF;&#x8F93;&#x5165;&#xFF1A;</p><pre><code>nvcc --version</code></pre><p>&#x82E5;&#x8F93;&#x51FA;CUDA&#x7248;&#x672C;&#x4FE1;&#x606F;&#x8BF4;&#x660E;&#x5B89;&#x88C5;&#x6210;&#x529F;</p><h2 id="&#x5B89;&#x88C5;cuDNN"><a href="#&#x5B89;&#x88C5;cuDNN" class="headerlink" title="&#x5B89;&#x88C5;cuDNN"></a>&#x5B89;&#x88C5;cuDNN</h2><p>&#x4ECE; <a href="https://developer.nvidia.com/cudnn" target="_blank" rel="noopener">https://developer.nvidia.com/cudnn</a> &#x4E0A;&#x4E0B;&#x8F7D;cudnn&#x76F8;&#x5E94;&#x7248;&#x672C;&#x7684;&#x538B;&#x7F29;&#x5305;&#xFF08;&#x9700;&#x8981;&#x6CE8;&#x518C;&#x6216;&#x767B;&#x5F55;&#xFF09;&#x3002;</p><p>&#x89E3;&#x538B;&#x5F53;&#x524D;&#x7684;.tgz&#x683C;&#x5F0F;&#x7684;&#x8F6F;&#x4EF6;&#x5305;</p><pre><code>tar -xzvf cudnn-10.0-linux-x64-v7.5.1.10.tgz</code></pre><p>&#x89E3;&#x538B;&#x540E;&#x7684;&#x6587;&#x4EF6;&#x5939;&#x540D;&#x4E3A;cuda&#xFF0C;&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#x5305;&#x542B;&#x4E24;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#xFF1A;&#x4E00;&#x4E2A;&#x4E3A;include&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x4E3A;lib64&#x3002;&#x6700;&#x597D;&#x628A;&#x8FD9;&#x4E2A;cuda&#x6587;&#x4EF6;&#x5939;&#x653E;&#x5728;home&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x65B9;&#x4FBF;&#x64CD;&#x4F5C;&#x3002;</p><p>&#x5C06;&#x89E3;&#x538B;&#x540E;&#x7684;lib64&#x6587;&#x4EF6;&#x5939;&#x5173;&#x8054;&#x5230;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x4E2D;&#xFF1A;</p><pre><code>sudo gedit ~/.bashrc</code></pre><p>&#x6700;&#x540E;&#x4E00;&#x884C;&#x52A0;&#x5165;&#xFF1A;</p><pre><code>export LD_LIBRARY_PATH=/home/cuda/lib64:$LD_LIBRARY_PATH</code></pre><p>&#x4FDD;&#x5B58;&#x9000;&#x51FA;&#x540E;&#x8F93;&#x5165;&#xFF1A;</p><pre><code>source .bashrc</code></pre><p>&#x6700;&#x540E;&#x4E00;&#x6B65;&#x5C31;&#x662F;&#x5C06;&#x89E3;&#x538B;&#x540E;&#x7684;/home/cuda/include&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x4E00;&#x4E9B;&#x6587;&#x4EF6;&#x62F7;&#x8D1D;&#x5230;/usr/local/cuda/include&#x4E2D;&#x3002;&#x7531;&#x4E8E;&#x8FDB;&#x5165;&#x4E86;&#x7CFB;&#x7EDF;&#x8DEF;&#x5F84;&#xFF0C;&#x56E0;&#x6B64;&#x6267;&#x884C;&#x8BE5;&#x64CD;&#x4F5C;&#x65F6;&#x9700;&#x8981;&#x83B7;&#x53D6;&#x7BA1;&#x7406;&#x5458;&#x6743;&#x9650;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo cp cuda/include/cudnn.h /usr/local/cuda/include</span><br><span class="line">sudo cp cuda/lib64/libcudnn* /usr/local/cuda/lib64</span><br><span class="line">sudo chmod a+r /usr/local/cuda/include/cudnn.h</span><br><span class="line">sudo chmod a+r /usr/local/cuda/lib64/libcudnn*</span><br></pre></td></tr></table></figure></p><p>&#x5B8C;&#x6210;cuDNN&#x7684;&#x914D;&#x7F6E;</p><h2 id="&#x5B89;&#x88C5;TensorFlow"><a href="#&#x5B89;&#x88C5;TensorFlow" class="headerlink" title="&#x5B89;&#x88C5;TensorFlow"></a>&#x5B89;&#x88C5;TensorFlow</h2><p>&#x8FD9;&#x6B65;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x76F4;&#x63A5;&#x4F7F;&#x7528;pip&#x547D;&#x4EE4;&#x5B89;&#x88C5;&#x5373;&#x53EF;(&#x6211;&#x5B89;&#x88C5;&#x7684;&#x662F;1.13.1&#x7248;&#x672C;)&#xFF1A;</p><pre><code>pip install tensorflow-gpu==1.13.1</code></pre><p>&#x7136;&#x540E;&#x8FDB;&#x5165;&#x4EA4;&#x4E92;&#x5F0F;&#x547D;&#x4EE4;&#x884C;&#x770B;&#x770B;&#x662F;&#x5426;&#x5B89;&#x88C5;&#x6210;&#x529F;&#xFF1A;</p><pre><code>import tensorflow as tf</code></pre><p>&#x63A5;&#x7740;&#x5C31;&#x7A81;&#x7136;&#x51FA;&#x73B0;&#x4E86;FutureWarning&#x8B66;&#x544A;&#x4FE1;&#x606F;&#xFF0C;&#x5413;&#x51FA;&#x6211;&#x4E00;&#x8EAB;&#x51B7;&#x6C57;&#x3002;&#x6211;&#x8D76;&#x7D27;&#x53BB;&#x7F51;&#x4E0A;&#x67E5;&#x9605;&#x76F8;&#x5173;&#x8D44;&#x6599;&#xFF0C;&#x770B;&#x5230;&#x6709;&#x4EBA;&#x8BF4;&#x662F;&#x56E0;&#x4E3A;numpy&#x7684;&#x7248;&#x672C;&#x662F;1.17&#x592A;&#x9AD8;&#x4E86;&#x3002;&#x6211;&#x8D76;&#x7D27;&#x67E5;&#x770B;&#x4E86;&#x6211;&#x5B89;&#x88C5;&#x7684;numpy&#x7684;&#x7248;&#x672C;&#xFF0C;&#x679C;&#x7136;&#x662F;1.17&#x3002;&#x4E8E;&#x662F;&#x6211;&#x8FDB;&#x884C;&#x4E86;&#x964D;&#x7EA7;&#x5B89;&#x88C5;&#xFF0C;&#x5B89;&#x88C5;&#x4E86;1.16.4&#x7248;&#x672C;&#x7684;numpy&#xFF0C;&#x6700;&#x7EC8;&#x95EE;&#x9898;&#x5F97;&#x4EE5;&#x5B8C;&#x7F8E;&#x89E3;&#x51B3;&#x3002;</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TensorFlow </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> CUDA </tag>
            
            <tag> cuDNN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下安装Ubuntu16.04双系统</title>
      <link href="/2019/08/16/%E5%AE%89%E8%A3%85Ubuntu%E7%B3%BB%E7%BB%9F/"/>
      <url>/2019/08/16/%E5%AE%89%E8%A3%85Ubuntu%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h1><p>&#x6628;&#x5929;&#x5728;&#x66F4;&#x65B0;tensorflow&#x65F6;&#x6211;&#x7684;Ubuntu&#x7CFB;&#x7EDF;&#x7A81;&#x7136;&#x5D29;&#x6E83;&#x4E86;&#xFF0C;&#x65E0;&#x5948;&#x53EA;&#x80FD;&#x91CD;&#x88C5;&#x7CFB;&#x7EDF;&#x3002;&#x4F46;&#x8DDD;&#x79BB;&#x4E0A;&#x6B21;&#x5B89;&#x88C5;Ubuntu&#x7CFB;&#x7EDF;&#x5DF2;&#x7ECF;&#x8FC7;&#x53BB;&#x8BB8;&#x4E45;&#xFF0C;&#x53EA;&#x80FD;&#x53BB;&#x7F51;&#x4E0A;&#x641C;&#x6559;&#x7A0B;&#x6298;&#x817E;&#xFF0C;&#x597D;&#x5728;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x5F02;&#x5E38;&#x987A;&#x5229;&#xFF0C;&#x4E8E;&#x662F;&#x7528;&#x672C;&#x535A;&#x5BA2;&#x8BB0;&#x5F55;&#x4E0B;&#x6211;&#x7684;&#x6574;&#x4E2A;&#x5B89;&#x88C5;&#x6B65;&#x9AA4;&#x3002;</p><a id="more"></a><h1 id="&#x5B8C;&#x6574;&#x6B65;&#x9AA4;"><a href="#&#x5B8C;&#x6574;&#x6B65;&#x9AA4;" class="headerlink" title="&#x5B8C;&#x6574;&#x6B65;&#x9AA4;"></a>&#x5B8C;&#x6574;&#x6B65;&#x9AA4;</h1><ol><li><p><strong>&#x7A7A;&#x95F4;&#x51C6;&#x5907;</strong></p><p> &#x5728;Windows 10&#x4E2D;&#x6253;&#x5F00;&#x201C;&#x78C1;&#x76D8;&#x7BA1;&#x7406;&#x5668;&#x201D;&#xFF0C;&#x627E;&#x4E00;&#x4E2A;&#x7A7A;&#x95F2;&#x7684;&#x78C1;&#x76D8;&#x5206;&#x533A;&#xFF0C;&#x538B;&#x7F29;&#x51FA;&#x6765;&#x4E00;&#x90E8;&#x5206;&#x7A7A;&#x95F4;&#x7ED9;Ubuntu&#x4F7F;&#x7528;&#xFF0C;&#x538B;&#x7F29;&#x51FA;&#x6765;&#x7684;&#x786C;&#x76D8;&#x5E94;&#x5904;&#x4E8E;&#x672A;&#x5206;&#x914D;&#x72B6;&#x6001;&#x3002;&#x6216;&#x8005;&#x901A;&#x8FC7;&#x5220;&#x9664;&#x67D0;&#x4E2A;&#x4E0D;&#x4F7F;&#x7528;&#x7684;&#x672C;&#x5730;&#x78C1;&#x76D8;&#x4F7F;&#x5176;&#x5904;&#x4E8E;&#x672A;&#x5206;&#x914D;&#x72B6;&#x6001;&#x3002;&#x8FD9;&#x91CC;&#x6211;&#x7ED9;Ubuntu&#x7CFB;&#x7EDF;&#x5206;&#x914D;&#x4E86;100G&#x7A7A;&#x95F4;</p></li><li><p><strong>&#x5236;&#x4F5C;&#x542F;&#x52A8;&#x76D8;</strong></p><ol><li>&#x63D2;&#x5165;&#x7528;&#x6765;&#x5236;&#x4F5C;&#x542F;&#x52A8;&#x76D8;&#x7684;U&#x76D8;&#xFF08;&#x4F1A;&#x88AB;&#x683C;&#x5F0F;&#x5316;&#xFF0C;&#x8BF7;&#x5907;&#x4EFD;&#x597D;&#x91CD;&#x8981;&#x6587;&#x4EF6;&#xFF09;&#xFF0C;&#x6253;&#x5F00;UltraISO&#x523B;&#x5F55;&#x8F6F;&#x4EF6;&#xFF08;&#x514D;&#x8D39;&#x65E0;&#x9650;&#x671F;&#x8BD5;&#x7528;&#xFF09;&#x3002;</li><li>&#x9009;&#x62E9;&#x201C;&#x6587;&#x4EF6;(F)&#x201D;-&gt;&#x201C;&#x6253;&#x5F00;&#x201D;&#xFF0C;&#x627E;&#x5230;&#x201C;Ubuntu-16.04-desktop-amd64.iso&#x201D;&#x955C;&#x50CF;&#x6587;&#x4EF6;&#xFF0C;&#x7136;&#x540E;&#x70B9;&#x51FB;&#x201C;&#x6253;&#x5F00;&#x201D;&#x3002;</li><li>&#x9009;&#x62E9;&#x201C;&#x542F;&#x52A8;(B)&#x201D;-&gt;&#x201C;&#x5199;&#x5165;&#x786C;&#x76D8;&#x6620;&#x50CF;&#x201D;&#xFF0C;&#x6253;&#x5F00;&#x542F;&#x52A8;&#x76D8;&#x5236;&#x4F5C;&#x754C;&#x9762;&#x3002;</li><li>&#x7136;&#x540E;&#x70B9;&#x51FB;&#x4E0B;&#x65B9;&#x7684;&#x201C;&#x5199;&#x5165;&#x201D;&#xFF0C;&#x4F1A;&#x5F39;&#x51FA;&#x8B66;&#x544A;&#x63D0;&#x793A;&#xFF0C;&#x786E;&#x5B9A;&#x540E;&#xFF0C;&#x5C31;&#x4F1A;&#x5F00;&#x59CB;&#x5236;&#x4F5C;&#x542F;&#x52A8;&#x76D8;&#x3002;&#x5199;&#x5165;&#x5B8C;&#x6210;&#x540E;&#x5173;&#x95ED;UltraISO&#x8F6F;&#x4EF6;&#x5373;&#x53EF;&#x3002;</li></ol></li><li><p><strong>BIOS&#x8BBE;&#x7F6E;</strong></p><p> &#x6211;&#x7684;&#x4E3B;&#x677F;&#x4E3A;&#x5FAE;&#x661F;&#x4E3B;&#x677F;&#xFF0C;&#x91CD;&#x542F;&#x7535;&#x8111;&#x731B;&#x6309;DEL&#x952E;&#x5373;&#x53EF;&#x8FDB;&#x5165;BIOS&#x754C;&#x9762;&#xFF0C;&#x7136;&#x540E;&#x8BBE;&#x7F6E;U&#x76D8;&#x4E3A;&#x7B2C;&#x4E00;&#x542F;&#x52A8;&#x9879;&#x3002;&#x6700;&#x540E;&#x6309;F10&#x4FDD;&#x5B58;&#x8BBE;&#x7F6E;&#x5E76;&#x91CD;&#x542F;&#x3002;</p></li><li><p><strong>&#x5B89;&#x88C5;Ubuntu&#x7CFB;&#x7EDF;</strong></p><ol><li>&#x91CD;&#x542F;&#x540E;&#x4FBF;&#x8FDB;&#x5165;&#x5B89;&#x88C5;&#x754C;&#x9762;&#xFF0C;&#x901A;&#x8FC7;&#x4E0A;&#x4E0B;&#x952E;&#x9009;&#x62E9;&#x5219;&#x7B2C;&#x4E8C;&#x9879;&#xFF1A;<code>Install Ubuntu</code></li><li>&#x9009;&#x62E9;&#x8BED;&#x8A00;</li><li><strong>&#x4E0D;&#x8981;</strong>&#x9009;&#x62E9;&#x4E3A;&#x56FE;&#x5F62;&#x6216;&#x8005;&#x65E0;&#x7EBF;&#x786C;&#x4EF6;&#xFF0C;&#x4EE5;&#x53CA;Mp3&#x548C;&#x5176;&#x4ED6;&#x5A92;&#x4F53;&#x5B89;&#x88C5;&#x7B2C;&#x4E09;&#x65B9;&#x8F6F;&#x4EF6;&#x3002;</li><li>&#x9009;&#x62E9;&#x6700;&#x540E;&#x4E00;&#x9879;&#xFF1A;&#x5176;&#x5B83;&#x9009;&#x9879;</li><li>&#x9009;&#x4E2D;&#x6211;&#x4EEC;&#x9884;&#x7559;&#x597D;&#x7684;100G&#x7A7A;&#x95F4;&#xFF0C;&#x7136;&#x540E;&#x70B9;&#x51FB;+&#x53F7;&#x65B0;&#x5EFA;&#x5206;&#x533A;</li><li>&#x65B0;&#x5EFA;&#x5206;&#x533A;&#xFF1A;<ol><li>&#x5927;&#x5C0F;&#x4E00;&#x822C;&#x4E3A;8G</li><li>&#x65B0;&#x5206;&#x533A;&#x7C7B;&#x578B;&#x4E3A;&#x4E3B;&#x5206;&#x533A;</li><li>&#x65B0;&#x5206;&#x533A;&#x4F4D;&#x7F6E;&#x4E3A;&#x7A7A;&#x95F4;&#x8D77;&#x59CB;&#x4F4D;&#x7F6E;</li><li>&#x7528;&#x4E8E;&#x4EA4;&#x6362;&#x7A7A;&#x95F4;</li><li>&#x6302;&#x8F7D;&#x70B9;/swap</li></ol></li><li>&#x65B0;&#x5EFA;&#x5206;&#x533A;&#xFF1A;<ol><li>&#x5269;&#x4F59;&#x7A7A;&#x95F4;&#x7684;&#x4E00;&#x534A;&#x5206;&#x7ED9;&#x5B83;&#xFF0C;&#x6211;&#x5206;&#x4E86;50G</li><li>&#x65B0;&#x5206;&#x533A;&#x7C7B;&#x578B;&#x4E3A;&#x4E3B;&#x5206;&#x533A;</li><li>&#x65B0;&#x5206;&#x533A;&#x4F4D;&#x7F6E;&#x4E3A;&#x7A7A;&#x95F4;&#x8D77;&#x59CB;&#x4F4D;&#x7F6E;</li><li>&#x7528;&#x4E8E;EXT4&#x65E5;&#x5FD7;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;</li><li>&#x6302;&#x8F7D;&#x70B9;/home</li></ol></li><li>&#x65B0;&#x5EFA;&#x5206;&#x533A;&#xFF1A;<ol><li>&#x5927;&#x5C0F;&#x5269;&#x4E0B;&#x7684;&#x7A7A;&#x95F4;&#x90FD;&#x7ED9;&#x5B83;</li><li>&#x65B0;&#x5206;&#x533A;&#x7C7B;&#x578B;&#x4E3A;&#x4E3B;&#x5206;&#x533A;</li><li>&#x65B0;&#x5206;&#x533A;&#x4F4D;&#x7F6E;&#x4E3A;&#x7A7A;&#x95F4;&#x8D77;&#x59CB;&#x4F4D;&#x7F6E;</li><li>&#x7528;&#x4E8E;EXT4&#x65E5;&#x5FD7;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;</li><li>&#x6302;&#x8F7D;&#x70B9;/</li></ol></li><li>&#x8BBE;&#x7F6E;&#x5B89;&#x88C5;&#x5F15;&#x5BFC;&#x7684;&#x542F;&#x52A8;&#x8BBE;&#x7F6E;&#xFF0C;&#x5728;&#x4E0B;&#x62C9;&#x4E2D;&#x9009;&#x62E9;Windows Boot Manager&#x6240;&#x5728;&#x7684;&#x6574;&#x5757;&#x786C;&#x76D8;&#xFF08;&#x4E0D;&#x5E26;&#x6570;&#x5B57;&#x6807;&#x53F7;&#xFF09;</li><li>&#x70B9;&#x51FB;&#x7EE7;&#x7EED;</li><li>&#x9009;&#x62E9;Shanghai&#xFF0C;&#x5B9A;&#x4F4D;&#x65F6;&#x533A;</li><li>&#x952E;&#x76D8;&#x5E03;&#x5C40;&#x4E2D;&#x82F1;&#x90FD;&#x884C;&#xFF0C;&#x4EE5;&#x540E;&#x53EF;&#x4EE5;&#x6539;</li><li>&#x8BBE;&#x7F6E;&#x7528;&#x6237;&#x540D;&#x4EE5;&#x53CA;&#x5BC6;&#x7801;</li><li>&#x7B49;&#x5F85;&#x8FDB;&#x5EA6;&#x6761;&#x7ED3;&#x675F;&#x5373;&#x53EF;&#x5B8C;&#x6210;&#x5B89;&#x88C5;</li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo部署博客到Coding</title>
      <link href="/2019/08/13/%E9%83%A8%E7%BD%B2%E5%88%B0coding/"/>
      <url>/2019/08/13/%E9%83%A8%E7%BD%B2%E5%88%B0coding/</url>
      
        <content type="html"><![CDATA[<h1 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h1><p>&#x4E4B;&#x524D;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x90E8;&#x7F72;&#x5728;GitHub&#x4E0A;&#xFF0C;&#x8BBF;&#x95EE;&#x901F;&#x5EA6;&#x6709;&#x70B9;&#x63EA;&#x5FC3;&#xFF0C;&#x4E8E;&#x662F;&#x840C;&#x751F;&#x4E86;&#x628A;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x90E8;&#x7F72;&#x5728;Coding&#x4E0A;&#x7684;&#x60F3;&#x6CD5;&#x3002;&#x6B63;&#x597D;&#x4ECA;&#x5929;&#x4E0B;&#x5348;&#x60F3;&#x5077;&#x4E2A;&#x61D2;&#xFF0C;&#x4E8E;&#x662F;&#x9A6C;&#x4E0A;&#x67E5;&#x8D44;&#x6599;&#x5F00;&#x59CB;&#x6363;&#x9F13;&#x3002;&#x5728;&#x8017;&#x8D39;&#x4E86;&#x6211;&#x5FEB;&#x4E00;&#x4E2A;&#x534A;&#x5C0F;&#x65F6;&#x7684;&#x65F6;&#x95F4;&#x540E;&#xFF0C;&#x7EC8;&#x4E8E;&#x6210;&#x529F;&#x7684;&#x5C06;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x90E8;&#x7F72;&#x5728;Coding&#x4E0A;&#x3002;&#x7528;&#x8FD9;&#x7BC7;&#x535A;&#x5BA2;&#x8BB0;&#x5F55;&#x4E0B;&#x6211;&#x6574;&#x4E2A;&#x6298;&#x817E;&#x8FC7;&#x7A0B;&#x3002;</p><a id="more"></a><h1 id="Coding&#x5E73;&#x53F0;&#x4ECB;&#x7ECD;"><a href="#Coding&#x5E73;&#x53F0;&#x4ECB;&#x7ECD;" class="headerlink" title="Coding&#x5E73;&#x53F0;&#x4ECB;&#x7ECD;"></a>Coding&#x5E73;&#x53F0;&#x4ECB;&#x7ECD;</h1><p>Coding &#x662F;&#x57FA;&#x4E8E;&#x4E91;&#x8BA1;&#x7B97;&#x6280;&#x672F;&#x7684;&#x8F6F;&#x4EF6;&#x5F00;&#x53D1;&#x5E73;&#x53F0;&#xFF0C;&#x96C6;&#x9879;&#x76EE;&#x7BA1;&#x7406;&#x3001;&#x4EE3;&#x7801;&#x6258;&#x7BA1;&#x3001;&#x8FD0;&#x884C;&#x7A7A;&#x95F4;&#x3001;&#x8D28;&#x91CF;&#x63A7;&#x5236;&#x4E3A;&#x4E00;&#x4F53;&#x3002;&#x5728;&#x4E91;&#x8BA1;&#x7B97;&#x65F6;&#x4EE3;&#xFF0C;Coding&#x63A8;&#x52A8;&#x8F6F;&#x4EF6;&#x5F00;&#x53D1;&#x7684;&#x4E91;&#x7AEF;&#x5316;&#xFF0C;&#x4F7F;&#x5F00;&#x53D1;&#x8005;&#x80FD;&#x7528;&#x4E00;&#x4E2A;&#x6D4F;&#x89C8;&#x5668;&#x5B8C;&#x6210;&#x5F00;&#x53D1;&#x7684;&#x5404;&#x4E2A;&#x73AF;&#x8282;&#x3002;&#x5F00;&#x53D1;&#x4EBA;&#x5458;&#x53EF;&#x4EE5;&#x4E13;&#x5FC3;&#x6784;&#x5EFA;&#x4E1A;&#x52A1;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x800C;&#x975E;&#x7BA1;&#x7406;&#x8FD0;&#x8425;&#x6216;&#x53D1;&#x5E03;&#x5806;&#x6808;&#xFF0C;&#x786E;&#x4FDD;&#x5E94;&#x7528;&#x6EE1;&#x8DB3;&#x4EA7;&#x54C1;&#x5C42;&#x76EE;&#x6807;&#x670D;&#x52A1;&#x7B49;&#x7EA7;&#xFF0C;&#x540C;&#x65F6;&#x66F4;&#x4E3A;&#x4F01;&#x4E1A;&#x5C42;&#x7EA7;&#x7684;&#x9879;&#x76EE;&#x5E94;&#x7528;&#x63D0;&#x4F9B;&#x4E86;&#x4EE3;&#x7801;&#x8D28;&#x91CF;&#x68C0;&#x9A8C;&#x4EE5;&#x53CA;&#x9879;&#x76EE;&#x8D28;&#x91CF;&#x628A;&#x63A7;&#x7684;&#x6E20;&#x9053;&#x548C;&#x6807;&#x51C6;&#x3002;&#x5728;&#x4FDD;&#x8BC1;&#x79C1;&#x6709;&#x9879;&#x76EE;&#x7684;&#x6570;&#x636E;&#x5B89;&#x5168;&#x548C;&#x7A33;&#x5B9A;&#x7684;&#x540C;&#x65F6;&#xFF0C;Coding &#x8FD8;&#x7ED3;&#x5408;&#x4E86;&#x5192;&#x6CE1;&#x53CA;&#x8BC4;&#x8BBA;&#x3001;&#x516C;&#x5F00;&#x9879;&#x76EE;&#x53D1;&#x5E03;&#x4E0E;&#x8BA8;&#x8BBA;&#x7B49;&#x4E00;&#x7CFB;&#x5217;&#x793E;&#x4EA4;&#x5316;&#x534F;&#x4F5C;&#x529F;&#x80FD;&#xFF0C;&#x6253;&#x9020;&#x5177;&#x6709;&#x6280;&#x672F;&#x652F;&#x6491;&#x7684;&#x5F00;&#x53D1;&#x8005;&#x793E;&#x533A;&#x3002;&#x2014;&#x2014;&#x6458;&#x81EA;&#x767E;&#x5EA6;&#x767E;&#x79D1;</p><h1 id="&#x5177;&#x4F53;&#x6B65;&#x9AA4;"><a href="#&#x5177;&#x4F53;&#x6B65;&#x9AA4;" class="headerlink" title="&#x5177;&#x4F53;&#x6B65;&#x9AA4;"></a>&#x5177;&#x4F53;&#x6B65;&#x9AA4;</h1><p>&#x5173;&#x4E8E;git,node.js,hexo&#x7B49;&#x5B89;&#x88C5;&#x6B65;&#x9AA4;&#x8FD9;&#x91CC;&#x4E0D;&#x518D;&#x8D58;&#x8FF0;&#x3002;</p><h2 id="Coding&#x5E73;&#x53F0;&#x8BBE;&#x7F6E;"><a href="#Coding&#x5E73;&#x53F0;&#x8BBE;&#x7F6E;" class="headerlink" title="Coding&#x5E73;&#x53F0;&#x8BBE;&#x7F6E;"></a>Coding&#x5E73;&#x53F0;&#x8BBE;&#x7F6E;</h2><ol><li>&#x6CE8;&#x518C;Coding<br> <strong>&#x6CE8;&#x610F;&#xFF1A;</strong> &#x4E00;&#x5B9A;&#x8981;&#x6CE8;&#x518C;Coding&#x4E2A;&#x4EBA;&#x7248;&#xFF0C;&#x800C;&#x4E0D;&#x8981;&#x6CE8;&#x518C;Coding&#x4F01;&#x4E1A;&#x7248;&#xFF0C;&#x8BF4;&#x591A;&#x4E86;&#x90FD;&#x662F;&#x6CEA;&#x3002;</li><li><p>&#x65B0;&#x5EFA;&#x9879;&#x76EE;<br> &#x9879;&#x76EE;&#x540D;&#x79F0;&#x586B;</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yourname.coding.me</span><br></pre></td></tr></table></figure><p> &#x8FD9;&#x91CC;&#x7684;yourname&#x6700;&#x597D;&#x662F;&#x4F60;&#x6CE8;&#x518C;Coding&#x65F6;&#x7684;username<br> &#x5EFA;&#x8BAE;&#x52FE;&#x9009;&#x542F;&#x7528;README.MD&#x6587;&#x4EF6;&#x521D;&#x59CB;&#x5316;&#x9879;&#x76EE;</p></li><li>&#x5F00;&#x542F;Pages&#x670D;&#x52A1;<br> &#x5728;&#x5F00;&#x542F;&#x540E;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x7528;&#x6237;&#x540D;+&#x7F51;&#x7AD9;&#x540E;&#x7F00;&#x6765;&#x8BBF;&#x95EE;&#x535A;&#x5BA2;&#xFF0C;&#x800C;&#x4E14;&#x8FD8;&#x53EF;&#x4EE5;&#x7ED1;&#x5B9A;&#x57DF;&#x540D;&#x901A;&#x8FC7;&#x56FA;&#x5B9A;&#x57DF;&#x540D;&#x6765;&#x8BBF;&#x95EE;&#x3002;</li></ol><h2 id="SSH&#x8BBE;&#x7F6E;"><a href="#SSH&#x8BBE;&#x7F6E;" class="headerlink" title="SSH&#x8BBE;&#x7F6E;"></a>SSH&#x8BBE;&#x7F6E;</h2><ol><li><p>&#x68C0;&#x67E5;&#x7535;&#x8111;&#x662F;&#x5426;&#x5DF2;&#x751F;&#x6210;SSH Key:</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><p> &#x82E5;&#x5728;&#x76EE;&#x5F55;&#x4E0B;&#x5B58;&#x5728;id_rsa.pub&#x6216;&#x8005;id_dsa.pub&#x6587;&#x4EF6;&#xFF0C;&#x90A3;&#x4E48;&#x76F4;&#x63A5;&#x5230;&#x7B2C;&#x4E09;&#x6B65;</p></li><li><p>&#x521B;&#x5EFA;SSH Key:</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;&#x4F60;&#x7684;&#x90AE;&#x7BB1;&quot;</span><br></pre></td></tr></table></figure><p> &#x53C2;&#x6570;&#x542B;&#x4E49;&#xFF1A;</p><ul><li>-t &#x6307;&#x5B9A;&#x5BC6;&#x94A5;&#x7C7B;&#x578B;&#xFF0C;&#x9ED8;&#x8BA4;&#x662F;rsa</li><li><p>-C &#x8BBE;&#x7F6E;&#x6CE8;&#x91CA;&#x6587;&#x5B57;&#xFF0C;&#x6BD4;&#x5982;&#x7528;&#x6237;&#x540D;</p><p>&#x6B64;&#x5904;&#x6211;&#x4EEC;&#x76F4;&#x63A5;&#x6309;&#x4E0B;&#x56DE;&#x8F66;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x6587;&#x4EF6;&#x540D;&#x521B;&#x5EFA;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x4F1A;&#x751F;&#x6210;id_rsa&#x548C;id_rsa.pub&#x4E24;&#x4E2A;&#x79D8;&#x94A5;&#x6587;&#x4EF6;&#x3002;&#x63A5;&#x7740;&#x53C8;&#x4F1A;&#x63D0;&#x793A;&#x4F60;&#x8F93;&#x5165;&#x4E24;&#x6B21;&#x5BC6;&#x7801;&#xFF08;&#x8BE5;&#x5BC6;&#x7801;&#x662F;&#x4F60;push&#x6587;&#x4EF6;&#x7684;&#x65F6;&#x5019;&#x8981;&#x8F93;&#x5165;&#x7684;&#x5BC6;&#x7801;&#xFF0C;&#x800C;&#x4E0D;&#x662F;Coding&#x7BA1;&#x7406;&#x8005;&#x7684;&#x5BC6;&#x7801;&#xFF09;&#xFF0C;&#x5F53;&#x7136;&#xFF0C;&#x4F60;&#x4E5F;&#x53EF;&#x4EE5;&#x4E0D;&#x8F93;&#x5165;&#x5BC6;&#x7801;&#xFF0C;&#x6211;&#x76F4;&#x63A5;&#x6309;&#x56DE;&#x8F66;&#x3002;&#x90A3;&#x4E48;push&#x7684;&#x65F6;&#x5019;&#x5C31;&#x4E0D;&#x9700;&#x8981;&#x8F93;&#x5165;&#x5BC6;&#x7801;&#xFF0C;&#x76F4;&#x63A5;&#x63D0;&#x4EA4;&#x5230;Git&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x4E86;</p></li></ul></li><li><p>&#x5728;Coding&#x4E2D;&#x914D;&#x7F6E;SSH<br> &#x70B9;&#x51FB;&#x4E2A;&#x4EBA;&#x8BBE;&#x7F6E;&#xFF0C;&#x518D;&#x9009;&#x62E9;SSH&#x516C;&#x94A5;&#x3002;&#x7136;&#x540E;&#x70B9;&#x51FB;&#x65B0;&#x586B;&#x516C;&#x94A5;&#xFF0C;&#x7528;&#x8BB0;&#x4E8B;&#x672C;&#x6253;&#x5F00;id_rsa.pub&#x6587;&#x4EF6;&#xFF0C;&#x5C06;&#x91CC;&#x9762;&#x7684;&#x5185;&#x5BB9;&#x5168;&#x90E8;&#x590D;&#x5236;&#x5230;&#x516C;&#x94A5;&#x5185;&#x5BB9;&#x4E2D;&#xFF0C;&#x516C;&#x7EA6;&#x540D;&#x79F0;&#x53EF;&#x4EE5;&#x4E0D;&#x586B;&#x3002;&#x6700;&#x540E;&#x70B9;&#x51FB;&#x6DFB;&#x52A0;&#x5373;&#x53EF;&#x3002;</p></li><li><p>SSH&#x6D4B;&#x8BD5;</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@git.coding.net</span><br></pre></td></tr></table></figure><p> &#x82E5;&#x51FA;&#x73B0;&#x4EE5;&#x4E0B;&#x8BF4;&#x660E;&#x5219;&#x8BF4;&#x660E;SSH&#x914D;&#x7F6E;&#x6210;&#x529F;</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello username You&apos;ve connected to Coding.net by SSH successfully!</span><br></pre></td></tr></table></figure></li></ol><h2 id="&#x90E8;&#x7F72;&#x535A;&#x5BA2;"><a href="#&#x90E8;&#x7F72;&#x535A;&#x5BA2;" class="headerlink" title="&#x90E8;&#x7F72;&#x535A;&#x5BA2;"></a>&#x90E8;&#x7F72;&#x535A;&#x5BA2;</h2><ol><li><p>&#x4FEE;&#x6539;&#x914D;&#x7F6E;&#x6587;&#x4EF6;<br> &#x6253;&#x5F00;&#x535A;&#x5BA2;&#x6839;&#x76EE;&#x5F55;&#x914D;&#x7F6E;&#x6587;&#x4EF6;_config.yml&#xFF0C;&#x627E;&#x5230;<code>deploy</code>&#xFF0C;&#x586B;&#x5199;&#x4EE5;&#x4E0B;&#x5185;&#x5BB9;</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repo:</span><br><span class="line">    github: git@github.com:yourname/yourname.github.io.git,master</span><br><span class="line">    coding: git@git.coding.net:yourname/yourname.git,master</span><br></pre></td></tr></table></figure></li><li><p>&#x90E8;&#x7F72;&#x535A;&#x5BA2;<br> <code>cd</code>&#x8FDB;&#x535A;&#x5BA2;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x8F93;&#x5165;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g #&#x751F;&#x6210;&#x9759;&#x6001;&#x7F51;&#x9875;</span><br><span class="line">hexo d #&#x90E8;&#x7F72;&#x535A;&#x5BA2;</span><br></pre></td></tr></table></figure><p> &#x6700;&#x540E;&#x6253;&#x5F00; <a href="http://yourname.coding.me" target="_blank" rel="noopener">http://yourname.coding.me</a> &#x5373;&#x53EF;&#x770B;&#x5230;&#x4F60;&#x7684;&#x535A;&#x5BA2;&#x4E3B;&#x9875;</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Hexo框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Coding </tag>
            
            <tag> git </tag>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Non-local PyTorch部分源码解读</title>
      <link href="/2019/08/13/non-local%E7%9A%84pytorch%E6%BA%90%E7%A0%81/"/>
      <url>/2019/08/13/non-local%E7%9A%84pytorch%E6%BA%90%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<blockquote><p>&#x4EE3;&#x7801;&#x5730;&#x5740;&#xFF1A;<a href="https://github.com/AlexHex7/Non-local_pytorch" target="_blank" rel="noopener">https://github.com/AlexHex7/Non-local_pytorch</a></p></blockquote><h1 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h1><p>&#x6211;&#x53EA;&#x770B;&#x4E86;non-local_embedded_gaussian.py&#x6587;&#x4EF6;&#x4E0B;&#x7684;&#x6E90;&#x7801;&#xFF0C;&#x4EE5;&#x4E0B;&#x4E3A;&#x6211;&#x7684;&#x89E3;&#x8BFB;</p><a id="more"></a><h1 id="&#x7ED3;&#x6784;&#x56FE;&#x793A;"><a href="#&#x7ED3;&#x6784;&#x56FE;&#x793A;" class="headerlink" title="&#x7ED3;&#x6784;&#x56FE;&#x793A;"></a>&#x7ED3;&#x6784;&#x56FE;&#x793A;</h1><p><img src="/2019/08/13/non-local&#x7684;pytorch&#x6E90;&#x7801;/1.png" alt></p><h1 id="&#x90E8;&#x5206;&#x4EE3;&#x7801;&#x89E3;&#x8BFB;"><a href="#&#x90E8;&#x5206;&#x4EE3;&#x7801;&#x89E3;&#x8BFB;" class="headerlink" title="&#x90E8;&#x5206;&#x4EE3;&#x7801;&#x89E3;&#x8BFB;"></a>&#x90E8;&#x5206;&#x4EE3;&#x7801;&#x89E3;&#x8BFB;</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_NonLocalBlockND</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">    in_channels&#x4E3A;&#x8F93;&#x5165;&#x7684;&#x901A;&#x9053;&#x6570;</span></span><br><span class="line"><span class="string">    inter_channels&#x4E3A;&#x4E2D;&#x95F4;&#x8FC7;&#x7A0B;&#x7684;&#x901A;&#x9053;&#x6570;</span></span><br><span class="line"><span class="string">    dimension&#x4E3A;&#x7EF4;&#x5EA6;&#x6570;</span></span><br><span class="line"><span class="string">    sub_sample&#x6807;&#x5FD7;&#x662F;&#x5426;&#x8FDB;&#x884C;&#x4E0B;&#x91C7;&#x6837;(subsampled)</span></span><br><span class="line"><span class="string">    bn_layer&#x6807;&#x793A;&#x662F;&#x5426;&#x8FDB;&#x884C;Batch Norm</span></span><br><span class="line"><span class="string">    &apos;&apos;&apos;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, in_channels, inter_channels=None, dimension=<span class="number">3</span>, sub_sample=True, bn_layer=True)</span>:</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># assert&#x7528;&#x6765;&#x68C0;&#x67E5;&#x6761;&#x4EF6;&#xFF0C;&#x4E0D;&#x7B26;&#x5408;&#x5C31;&#x7EC8;&#x6B62;</span></span><br><span class="line">        <span class="comment"># &#x53EA;&#x80FD;&#x5904;&#x7406;&#x4E00;&#x7EF4;&#xFF0C;&#x4E8C;&#x7EF4;&#x4EE5;&#x53CA;&#x4E09;&#x7EF4;&#x7684;&#x8F93;&#x5165;&#x6570;&#x636E;</span></span><br><span class="line">        <span class="keyword">assert</span> dimension <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">        self.dimension = dimension</span><br><span class="line">        self.sub_sample = sub_sample</span><br><span class="line"></span><br><span class="line">        self.in_channels = in_channels</span><br><span class="line">        self.inter_channels = inter_channels</span><br><span class="line"></span><br><span class="line">        <span class="comment"># &#x82E5;&#x6CA1;&#x6709;&#x6307;&#x5B9A;&#x4E2D;&#x95F4;&#x8FC7;&#x7A0B;&#x7684;&#x901A;&#x9053;&#x6570;&#xFF0C;&#x5219;&#x6307;&#x5B9A;&#x4E3A;&#x8F93;&#x5165;&#x901A;&#x9053;&#x6570;&#x7684;&#x4E00;&#x534A;</span></span><br><span class="line">        <span class="keyword">if</span> self.inter_channels <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            self.inter_channels = in_channels // <span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> self.inter_channels == <span class="number">0</span>:</span><br><span class="line">                self.inter_channels = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># &#x6839;&#x636E;&#x8F93;&#x5165;&#x7684;&#x7EF4;&#x6570;&#x6765;&#x6307;&#x5B9A;&#x5BF9;&#x5E94;&#x7684;&#x5377;&#x79EF;&#x51FD;&#x6570;&#xFF0C;&#x6C60;&#x5316;&#x51FD;&#x6570;&#x4EE5;&#x53CA;&#x5F52;&#x4E00;&#x5316;&#x51FD;&#x6570;</span></span><br><span class="line">        <span class="keyword">if</span> dimension == <span class="number">3</span>:</span><br><span class="line">            conv_nd = nn.Conv3d</span><br><span class="line">            max_pool_layer = nn.MaxPool3d(kernel_size=(<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>))</span><br><span class="line">            bn = nn.BatchNorm3d</span><br><span class="line">        <span class="keyword">elif</span> dimension == <span class="number">2</span>:</span><br><span class="line">            conv_nd = nn.Conv2d</span><br><span class="line">            max_pool_layer = nn.MaxPool2d(kernel_size=(<span class="number">2</span>, <span class="number">2</span>))</span><br><span class="line">            bn = nn.BatchNorm2d</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            conv_nd = nn.Conv1d</span><br><span class="line">            max_pool_layer = nn.MaxPool1d(kernel_size=(<span class="number">2</span>))</span><br><span class="line">            bn = nn.BatchNorm1d</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># &#x6307;&#x5B9A;g&#x51FD;&#x6570;</span></span><br><span class="line">        self.g = conv_nd(in_channels=self.in_channels, out_channels=self.inter_channels,</span><br><span class="line">                         kernel_size=<span class="number">1</span>, stride=<span class="number">1</span>, padding=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># &#x5224;&#x65AD;&#x662F;&#x5426;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x5F52;&#x4E00;&#x5316;&#x64CD;&#x4F5C;</span></span><br><span class="line">        <span class="keyword">if</span> bn_layer:</span><br><span class="line">            self.W = nn.Sequential(</span><br><span class="line">                conv_nd(in_channels=self.inter_channels, out_channels=self.in_channels,</span><br><span class="line">                        kernel_size=<span class="number">1</span>, stride=<span class="number">1</span>, padding=<span class="number">0</span>),</span><br><span class="line">                bn(self.in_channels)</span><br><span class="line">            )</span><br><span class="line">            nn.init.constant(self.W[<span class="number">1</span>].weight, <span class="number">0</span>)</span><br><span class="line">            nn.init.constant(self.W[<span class="number">1</span>].bias, <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.W = conv_nd(in_channels=self.inter_channels, out_channels=self.in_channels,</span><br><span class="line">                             kernel_size=<span class="number">1</span>, stride=<span class="number">1</span>, padding=<span class="number">0</span>)</span><br><span class="line">            <span class="comment"># &#x521D;&#x59CB;&#x5316;&#x4E3A;0</span></span><br><span class="line">            nn.init.constant(self.W.weight, <span class="number">0</span>)</span><br><span class="line">            nn.init.constant(self.W.bias, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        self.theta = conv_nd(in_channels=self.in_channels, out_channels=self.inter_channels,</span><br><span class="line">                             kernel_size=<span class="number">1</span>, stride=<span class="number">1</span>, padding=<span class="number">0</span>)</span><br><span class="line">        self.phi = conv_nd(in_channels=self.in_channels, out_channels=self.inter_channels,</span><br><span class="line">                           kernel_size=<span class="number">1</span>, stride=<span class="number">1</span>, padding=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># &#x5224;&#x65AD;&#x662F;&#x5426;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x4E0B;&#x91C7;&#x6837;</span></span><br><span class="line">        <span class="keyword">if</span> sub_sample:</span><br><span class="line">            self.g = nn.Sequential(self.g, max_pool_layer)</span><br><span class="line">            self.phi = nn.Sequential(self.phi, max_pool_layer)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">        :param x: (b, c, t, h, w)</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &apos;&apos;&apos;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># &#x83B7;&#x5F97;batch&#x7684;&#x5927;&#x5C0F;</span></span><br><span class="line">        batch_size = x.size(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># g(x)&#x7684;size&#x4E3A;batch_size*inter_channels*W*H</span></span><br><span class="line">        <span class="comment"># view&#x7C7B;&#x4F3C;&#x4E8E;resize&#xFF0C;&#x4F7F;&#x5F97;&#x4E2A;g_x&#x7684;size&#x4E3A;batch_size*inter_channels*(W*H)</span></span><br><span class="line">        g_x = self.g(x).view(batch_size, self.inter_channels, <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># &#x7EF4;&#x5EA6;&#x6362;&#x4F4D;&#xFF0C;g_x&#x7684;size&#x53D8;&#x6210;batch_size*(W*H)*inter_channels</span></span><br><span class="line">        g_x = g_x.permute(<span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># theta_x&#x7684;size&#x4E3A;batch_size*inter_channels*(W*H)</span></span><br><span class="line">        theta_x = self.theta(x).view(batch_size, self.inter_channels, <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># theta_x&#x7684;size&#x4E3A;batch_size*(W*H)*inter_channels</span></span><br><span class="line">        theta_x = theta_x.permute(<span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># phi_x&#x7684;size&#x4E3A;batch_size*inter_channels*(W*H)</span></span><br><span class="line">        phi_x = self.phi(x).view(batch_size, self.inter_channels, <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># f&#x7684;size&#x4E3A;batch_size*(W*H)*(W*H)</span></span><br><span class="line">        f = torch.matmul(theta_x, phi_x)</span><br><span class="line"></span><br><span class="line">        f_div_C = F.softmax(f, dim=<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># y&#x7684;size&#x4E3A;batch_size*(H*W)*inter_channels</span></span><br><span class="line">        y = torch.matmul(f_div_C, g_x)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># view&#x53EA;&#x80FD;&#x7528;&#x5728;contiguous&#x7684;variable&#x4E0A;&#x3002;&#x5982;&#x679C;&#x5728;view&#x4E4B;&#x524D;&#x7528;&#x4E86;transpose, permute&#x7B49;&#xFF0C;</span></span><br><span class="line">        <span class="comment"># &#x9700;&#x8981;&#x7528;contiguous()&#x6765;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;contiguous copy&#x3002;</span></span><br><span class="line">        <span class="comment"># y&#x7684;size&#x4E3A;batch_size*inter_channels*(H*W)</span></span><br><span class="line">        y = y.permute(<span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>).contiguous()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># y&#x7684;size&#x4E3A;batch_size*inter_channels*H*W</span></span><br><span class="line">        y = y.view(batch_size, self.inter_channels, *x.size()[<span class="number">2</span>:])</span><br><span class="line"></span><br><span class="line">        <span class="comment"># W_y&#x7684;size&#x4E3A;batch_size*out_channels*W*H</span></span><br><span class="line">        W_y = self.W(y)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># &#x5F97;&#x5230;&#x6700;&#x7EC8;&#x8F93;&#x51FA;</span></span><br><span class="line">        z = W_y + x</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> z</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 卷积网络 </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>空洞卷积(Dilated Convolution)学习笔记</title>
      <link href="/2019/08/13/dilated_conv/"/>
      <url>/2019/08/13/dilated_conv/</url>
      
        <content type="html"><![CDATA[<h1 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h1><p>&#x5F15;&#x5165;&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x4E0D;&#x5F97;&#x4E0D;&#x63D0;&#x7684;&#x662F;&#x611F;&#x53D7;&#x91CE;&#xFF0C;&#x611F;&#x53D7;&#x91CE;&#x5C31;&#x662F;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x6BCF;&#x4E00;&#x5C42;&#x8F93;&#x51FA;&#x7684;&#x7279;&#x5F81;&#x56FE;(feature map)&#x4E0A;&#x7684;&#x50CF;&#x7D20;&#x70B9;&#x5728;&#x539F;&#x56FE;&#x50CF;&#x4E0A;&#x6620;&#x5C04;&#x7684;&#x533A;&#x57DF;&#x5927;&#x5C0F;&#x3002;&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x4E3B;&#x8981;&#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x56FE;&#x50CF;&#x5206;&#x5272;&#x4E2D;&#x7684;&#x4E00;&#x4E9B;&#x95EE;&#x9898;&#x800C;&#x63D0;&#x51FA;&#x7684;&#xFF0C;&#x5728;FCN&#x4E2D;&#x901A;&#x8FC7;pooling&#x589E;&#x5927;&#x611F;&#x53D7;&#x91CE;&#x7F29;&#x5C0F;&#x56FE;&#x50CF;&#x5C3A;&#x5BF8;&#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7;upsampling&#x8FD8;&#x539F;&#x56FE;&#x50CF;&#x5C3A;&#x5BF8;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x4E2D;&#x9020;&#x6210;&#x4E86;&#x7CBE;&#x5EA6;&#x7684;&#x635F;&#x5931;&#xFF0C;&#x90A3;&#x4E48;&#x4E3A;&#x4E86;&#x51CF;&#x5C0F;&#x8FD9;&#x79CD;&#x635F;&#x5931;&#x7406;&#x6240;&#x5F53;&#x7136;&#x60F3;&#x5230;&#x7684;&#x662F;&#x53BB;&#x6389;pooling&#x5C42;&#xFF0C;&#x7136;&#x800C;&#x8FD9;&#x6837;&#x5C31;&#x5BFC;&#x81F4;&#x7279;&#x5F81;&#x56FE;&#x611F;&#x53D7;&#x91CE;&#x592A;&#x5C0F;&#xFF0C;&#x56E0;&#x6B64;&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x5E94;&#x8FD0;&#x800C;&#x751F;&#x3002;</p><a id="more"></a><h1 id="&#x7A7A;&#x6D1E;&#x5377;&#x79EF;"><a href="#&#x7A7A;&#x6D1E;&#x5377;&#x79EF;" class="headerlink" title="&#x7A7A;&#x6D1E;&#x5377;&#x79EF;"></a>&#x7A7A;&#x6D1E;&#x5377;&#x79EF;</h1><h2 id="&#x6982;&#x8981;"><a href="#&#x6982;&#x8981;" class="headerlink" title="&#x6982;&#x8981;"></a>&#x6982;&#x8981;</h2><p>Dilated Convolutions&#xFF0C;&#x7FFB;&#x8BD1;&#x4E3A;&#x6269;&#x5F20;&#x5377;&#x79EF;&#x6216;&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x3002;&#x6269;&#x5F20;&#x5377;&#x79EF;&#x4E0E;&#x666E;&#x901A;&#x7684;&#x5377;&#x79EF;&#x76F8;&#x6BD4;&#xFF0C;&#x9664;&#x4E86;&#x5377;&#x79EF;&#x6838;&#x7684;&#x5927;&#x5C0F;&#x4EE5;&#x5916;&#xFF0C;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x6269;&#x5F20;&#x7387;(dilation rate)&#x53C2;&#x6570;&#xFF0C;&#x4E3B;&#x8981;&#x7528;&#x6765;&#x8868;&#x793A;&#x6269;&#x5F20;&#x7684;&#x5927;&#x5C0F;&#x3002;&#x6269;&#x5F20;&#x5377;&#x79EF;&#x4E0E;&#x666E;&#x901A;&#x5377;&#x79EF;&#x7684;&#x76F8;&#x540C;&#x70B9;&#x5728;&#x4E8E;&#xFF0C;&#x5377;&#x79EF;&#x6838;&#x7684;&#x5927;&#x5C0F;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x5728;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#x5373;&#x53C2;&#x6570;&#x6570;&#x91CF;&#x4E0D;&#x53D8;&#xFF0C;&#x533A;&#x522B;&#x5728;&#x4E8E;&#x6269;&#x5F20;&#x5377;&#x79EF;&#x5177;&#x6709;&#x66F4;&#x5927;&#x7684;&#x611F;&#x53D7;&#x91CE;&#x3002;</p><h2 id="&#x793A;&#x610F;&#x56FE;"><a href="#&#x793A;&#x610F;&#x56FE;" class="headerlink" title="&#x793A;&#x610F;&#x56FE;"></a>&#x793A;&#x610F;&#x56FE;</h2><p><img src="/2019/08/13/dilated_conv/1.png" alt="&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x793A;&#x610F;&#x56FE;"></p><ul><li>&#x56FE;(a)&#x4E3A;1-dilated conv&#xFF0C;&#x611F;&#x53D7;&#x91CE;&#x4E3A;3&#xD7;3</li><li>&#x56FE;(b)&#x4E3A;2-dilated conv&#xFF0C;&#x8DDF;&#x5728;1-dilated conv&#x540E;&#x9762;&#xFF0C;&#x611F;&#x53D7;&#x91CE;&#x6269;&#x5927;&#x4E3A;&#x4E3A;7&#xD7;7</li><li>&#x56FE;(c)&#x4E3A;4-dilated conv&#xFF0C;&#x540C;&#x6837;&#x8DDF;&#x5728;1-dilated conv&#x4EE5;&#x53CA;1-dilated conv&#x540E;&#x9762;&#xFF0C;&#x611F;&#x53D7;&#x91CE;&#x6269;&#x5927;&#x4E3A;&#x4E3A;15&#xD7;15</li><li>&#x76F8;&#x6BD4;&#x4E4B;&#x4E0B;&#xFF0C;&#x4F7F;&#x7528;stride&#x4E3A;1&#x7684;&#x666E;&#x901A;&#x5377;&#x79EF;&#xFF0C;&#x4E09;&#x5C42;&#x540E;&#x7684;&#x611F;&#x53D7;&#x91CE;&#x4EC5;&#x4E3A;7&#xD7;7</li></ul><h2 id="&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x7684;&#x4F5C;&#x7528;"><a href="#&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x7684;&#x4F5C;&#x7528;" class="headerlink" title="&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x7684;&#x4F5C;&#x7528;"></a>&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x7684;&#x4F5C;&#x7528;</h2><ul><li><p><strong>&#x6269;&#x5927;&#x611F;&#x53D7;&#x91CE;</strong><br>  &#x5728;deep net&#x4E2D;&#x4E3A;&#x4E86;&#x589E;&#x52A0;&#x611F;&#x53D7;&#x91CE;&#x4E14;&#x964D;&#x4F4E;&#x8BA1;&#x7B97;&#x91CF;&#xFF0C;&#x603B;&#x8981;&#x8FDB;&#x884C;&#x964D;&#x91C7;&#x6837;(pooling&#x6216;s2/conv)&#xFF0C;&#x8FD9;&#x6837;&#x867D;&#x7136;&#x53EF;&#x4EE5;&#x589E;&#x52A0;&#x611F;&#x53D7;&#x91CE;&#xFF0C;&#x4F46;&#x7A7A;&#x95F4;&#x5206;&#x8FA8;&#x7387;&#x964D;&#x4F4E;&#x4E86;&#x3002;&#x4E3A;&#x4E86;&#x80FD;&#x4E0D;&#x4E22;&#x5931;&#x5206;&#x8FA8;&#x7387;&#xFF0C;&#x4E14;&#x4ECD;&#x7136;&#x6269;&#x5927;&#x611F;&#x53D7;&#x91CE;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x3002;&#x8FD9;&#x5728;&#x68C0;&#x6D4B;&#xFF0C;&#x5206;&#x5272;&#x4EFB;&#x52A1;&#x4E2D;&#x5341;&#x5206;&#x6709;&#x7528;&#x3002;&#x4E00;&#x65B9;&#x9762;&#x611F;&#x53D7;&#x91CE;&#x5927;&#x4E86;&#x53EF;&#x4EE5;&#x68C0;&#x6D4B;&#x5206;&#x5272;&#x5927;&#x76EE;&#x6807;&#xFF0C;&#x53E6;&#x4E00;&#x65B9;&#x9762;&#x5206;&#x8FA8;&#x7387;&#x9AD8;&#x4E86;&#x53EF;&#x4EE5;&#x7CBE;&#x786E;&#x5B9A;&#x4F4D;&#x76EE;&#x6807;&#x3002;</p></li><li><p><strong>&#x6355;&#x83B7;&#x591A;&#x5C3A;&#x5EA6;&#x4E0A;&#x4E0B;&#x6587;&#x4FE1;&#x606F;</strong><br>  &#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x6709;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;dilation rate&#xFF0C;&#x5177;&#x4F53;&#x542B;&#x4E49;&#x5C31;&#x662F;&#x5728;&#x5377;&#x79EF;&#x6838;&#x4E2D;&#x586B;&#x5145;dilation rate-1&#x4E2A;0&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x5F53;&#x8BBE;&#x7F6E;&#x4E0D;&#x540C;dilation rate&#x65F6;&#xFF0C;&#x611F;&#x53D7;&#x91CE;&#x5C31;&#x4F1A;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x4E5F;&#x5373;&#x83B7;&#x53D6;&#x4E86;&#x591A;&#x5C3A;&#x5EA6;&#x4FE1;&#x606F;&#x3002;</p></li></ul><h2 id="&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x5B58;&#x5728;&#x7684;&#x95EE;&#x9898;"><a href="#&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x5B58;&#x5728;&#x7684;&#x95EE;&#x9898;" class="headerlink" title="&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x5B58;&#x5728;&#x7684;&#x95EE;&#x9898;"></a>&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x5B58;&#x5728;&#x7684;&#x95EE;&#x9898;</h2><ul><li><p><strong>The Gridding Effect</strong><br>  &#x5047;&#x8BBE;&#x6211;&#x4EEC;&#x4EC5;&#x4EC5;&#x591A;&#x6B21;&#x53E0;&#x52A0; dilation rate 2 &#x7684; 3 x 3 kernel &#x7684;&#x8BDD;&#xFF0C;&#x5219;&#x4F1A;&#x51FA;&#x73B0;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF1A;</p><p>  <img src="/2019/08/13/dilated_conv/2.png" alt></p><p>  &#x5F88;&#x660E;&#x663E;&#xFF0C;&#x611F;&#x53D7;&#x91CE;&#x4E0D;&#x8FDE;&#x7EED;&#xFF08;&#x6211;&#x4EEC;&#x4E0A;&#x4E00;&#x5C0F;&#x7ED3;&#x7684;&#x4F8B;&#x5B50;&#x5C31;&#x6CA1;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x6240;&#x4EE5;&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x4F9D;&#x8D56;&#x7F51;&#x7EDC;&#x8BBE;&#x8BA1;&#xFF09;&#x3002;</p></li><li><p><strong>Long-ranged information might be not relevant</strong><br>  &#x6211;&#x4EEC;&#x4ECE; dilated convolution &#x7684;&#x8BBE;&#x8BA1;&#x80CC;&#x666F;&#x6765;&#x770B;&#x5C31;&#x80FD;&#x63A8;&#x6D4B;&#x51FA;&#x8FD9;&#x6837;&#x7684;&#x8BBE;&#x8BA1;&#x662F;&#x7528;&#x6765;&#x83B7;&#x53D6; long-ranged information&#x3002;&#x7136;&#x800C;&#x5149;&#x91C7;&#x7528;&#x5927; dilation rate &#x7684;&#x4FE1;&#x606F;&#x6216;&#x8BB8;&#x53EA;&#x5BF9;&#x4E00;&#x4E9B;&#x5927;&#x7269;&#x4F53;&#x5206;&#x5272;&#x6709;&#x6548;&#x679C;&#xFF0C;&#x800C;&#x5BF9;&#x5C0F;&#x7269;&#x4F53;&#x6765;&#x8BF4;&#x53EF;&#x80FD;&#x5219;&#x6709;&#x5F0A;&#x65E0;&#x5229;&#x4E86;&#x3002;&#x5982;&#x4F55;&#x540C;&#x65F6;&#x5904;&#x7406;&#x4E0D;&#x540C;&#x5927;&#x5C0F;&#x7684;&#x7269;&#x4F53;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x5219;&#x662F;&#x8BBE;&#x8BA1;&#x597D; dilated convolution &#x7F51;&#x7EDC;&#x7684;&#x5173;&#x952E;&#x3002;</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 卷积网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TensorFlow学习笔记11：ResNet</title>
      <link href="/2019/08/12/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B011/"/>
      <url>/2019/08/12/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B011/</url>
      
        <content type="html"><![CDATA[<h1 id="ResNet"><a href="#ResNet" class="headerlink" title="ResNet"></a>ResNet</h1><p>ResNet&#x662F;&#x7531;Kaiming He&#x7B49;4&#x540D;&#x534E;&#x4EBA;&#x63D0;&#x51FA;&#xFF0C;&#x901A;&#x8FC7;&#x4F7F;&#x7528;Residual Unit&#x6210;&#x529F;&#x8BAD;&#x7EC3;&#x4E86;152&#x5C42;&#x7684;&#x6DF1;&#x5EA6;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x5728;ILSVRC 2015&#x6BD4;&#x8D5B;&#x4E2D;&#x83B7;&#x5F97;&#x51A0;&#x519B;&#xFF0C;&#x53D6;&#x5F97;&#x4E86;3.57%&#x7684;top-5&#x9519;&#x8BEF;&#x7387;&#xFF0C;&#x540C;&#x65F6;&#x53C2;&#x6570;&#x5374;&#x6BD4;VGGNet&#x5C11;&#x3002;ResNet&#x7684;&#x7ED3;&#x6784;&#x53EF;&#x4EE5;&#x6781;&#x5FEB;&#x7684;&#x52A0;&#x901F;&#x8D85;&#x6DF1;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x8BAD;&#x7EC3;&#xFF0C;&#x6A21;&#x578B;&#x7684;&#x51C6;&#x786E;&#x7387;&#x4E5F;&#x6709;&#x8F83;&#x5927;&#x7684;&#x63D0;&#x5347;&#x3002;&#x4E4B;&#x540E;&#x5F88;&#x591A;&#x65B9;&#x6CD5;&#x90FD;&#x5EFA;&#x7ACB;&#x5728;ResNet&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x5B8C;&#x6210;&#x7684;&#xFF0C;&#x4F8B;&#x5982;&#x68C0;&#x6D4B;&#xFF0C;&#x5206;&#x5272;&#xFF0C;&#x8BC6;&#x522B;&#x7B49;&#x9886;&#x57DF;&#x90FD;&#x7EB7;&#x7EB7;&#x4F7F;&#x7528;ResNet&#x3002;&#x5728;ResNet&#x63A8;&#x51FA;&#x4E0D;&#x4E45;&#xFF0C;Google&#x5C31;&#x501F;&#x9274;&#x4E86;ResNet&#x7684;&#x7CBE;&#x9AD3;&#xFF0C;&#x63D0;&#x51FA;&#x4E86;Inception V4&#x548C;Inception-ResNet-V2&#xFF0C;&#x5E76;&#x901A;&#x8FC7;&#x878D;&#x5408;&#x8FD9;&#x4E24;&#x4E2A;&#x6A21;&#x578B;&#xFF0C;&#x5728;ILSVRC&#x6570;&#x636E;&#x96C6;&#x4E0A;&#x53D6;&#x5F97;&#x4E86;&#x60CA;&#x4EBA;&#x7684;3.08%&#x7684;&#x9519;&#x8BEF;&#x7387;&#x3002;&#x6240;&#x4EE5;&#x53EF;&#x89C1;ResNet&#x786E;&#x5B9E;&#x5F88;&#x597D;&#x7528;&#x3002;</p><a id="more"></a><h1 id="&#x7F51;&#x7EDC;&#x7ED3;&#x6784;"><a href="#&#x7F51;&#x7EDC;&#x7ED3;&#x6784;" class="headerlink" title="&#x7F51;&#x7EDC;&#x7ED3;&#x6784;"></a>&#x7F51;&#x7EDC;&#x7ED3;&#x6784;</h1><p><img src="/2019/08/12/tf&#x5B66;&#x4E60;&#x7B14;&#x8BB0;11/1.png" alt></p><h1 id="TensorFlow&#x5B9E;&#x73B0;"><a href="#TensorFlow&#x5B9E;&#x73B0;" class="headerlink" title="TensorFlow&#x5B9E;&#x73B0;"></a>TensorFlow&#x5B9E;&#x73B0;</h1><h2 id="&#x5BFC;&#x5165;&#x5305;&#x5E76;&#x8BBE;&#x8BA1;Block&#x6A21;&#x5757;&#x7EC4;"><a href="#&#x5BFC;&#x5165;&#x5305;&#x5E76;&#x8BBE;&#x8BA1;Block&#x6A21;&#x5757;&#x7EC4;" class="headerlink" title="&#x5BFC;&#x5165;&#x5305;&#x5E76;&#x8BBE;&#x8BA1;Block&#x6A21;&#x5757;&#x7EC4;"></a>&#x5BFC;&#x5165;&#x5305;&#x5E76;&#x8BBE;&#x8BA1;Block&#x6A21;&#x5757;&#x7EC4;</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line">slim = tf.contrib.slim</span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x4F7F;&#x7528;collections.namedtuple&#x8BBE;&#x8BA1;ResNet&#x57FA;&#x672C;Block&#x6A21;&#x5757;&#x7EC4;&#x7684;named tuple<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">scope&#x4E3A;&#x751F;&#x6210;&#x7684;Block&#x7684;&#x540D;&#x79F0;</span></span><br><span class="line"><span class="string">unit_fn&#x4E3A;&#x6B8B;&#x5DEE;&#x5B66;&#x4E60;&#x5143;&#x751F;&#x6210;&#x51FD;&#x6570;</span></span><br><span class="line"><span class="string">args&#x662F;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x7B49;&#x4E8E;Block&#x4E2D;&#x5355;&#x5143;&#x6570;&#x76EE;&#x7684;&#x5E8F;&#x5217;&#xFF0C;&#x5E8F;&#x5217;&#x4E2D;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;</span></span><br><span class="line"><span class="string">&#x5305;&#x542B;&#x7B2C;&#x4E09;&#x5C42;&#x901A;&#x9053;&#x6570;&#xFF0C;&#x524D;&#x4E24;&#x5C42;&#x901A;&#x9053;&#x6570;&#x4EE5;&#x53CA;&#x4E2D;&#x95F4;&#x5C42;&#x6B65;&#x957F;(depth,depth_bottleneck,stride)</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Block</span><span class="params">(collections.namedtuple<span class="params">(<span class="string">&apos;Block&apos;</span>,[<span class="string">&apos;scope&apos;</span>,<span class="string">&apos;unit_fn&apos;</span>,<span class="string">&apos;args&apos;</span>])</span>)</span>:</span></span><br><span class="line">    <span class="string">&apos;A named tuple describing a ResNet block&apos;</span></span><br></pre></td></tr></table></figure></p><p>&#x4EE5;&#x4E0B;&#x9762;Block(&#x2018;block1&#x2019;, bottleneck, [(256, 64, 1)] * 2 + [(256, 64, 2)])&#x4E3A;&#x4F8B;</p><ul><li>block1: &#x662F;&#x8FD9;&#x4E2A;Block&#x7684;&#x540D;&#x79F0;</li><li>bottleneck: &#x524D;&#x9762;&#x5B9A;&#x4E49;&#x7684;&#x6B8B;&#x5DEE;&#x5B66;&#x4E60;&#x5355;&#x5143;&#xFF08;&#x6709;&#x4E09;&#x5C42;&#xFF09;</li><li>[(256, 64, 1)] * 2 + [(256, 64, 2)]: &#x662F;&#x4E00;&#x4E2A;&#x5217;&#x8868;&#xFF0C;&#x5176;&#x4E2D;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x90FD;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;bottleneck&#x6B8B;&#x5DEE;&#x5B66;&#x4E60;&#x5355;&#x5143;&#xFF0C;&#x524D;&#x9762;&#x4E24;&#x4E2A;&#x5143;&#x7D20;&#x90FD;&#x662F;(256, 64, 1),&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x662F;(256, 64, 2)&#x3002;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x90FD;&#x65F6;&#x4E00;&#x4E2A;3&#x5143;&#x7EC4;&#xFF0C;&#x5373;&#xFF08;depth, depth_bottleneck, stride&#xFF09;,&#x4EE3;&#x8868;&#x6784;&#x5EFA;&#x7684;bottleneck&#x6B8B;&#x5DEE;&#x5B66;&#x4E60;&#x5355;&#x5143;&#x4E2D;&#xFF0C;&#x7B2C;&#x4E09;&#x5C42;&#x7684;&#x8F93;&#x51FA;&#x901A;&#x9053;&#x4E3A;256&#xFF08;depth&#xFF09;&#xFF0C;&#x524D;&#x4E24;&#x5C42;&#x7684;&#x8F93;&#x51FA;&#x901A;&#x9053;&#x6570;&#x4E3A;64&#xFF08;depth_bottleneck&#xFF09;&#x4E14;&#x4E2D;&#x95F4;&#x90A3;&#x5C42;&#x7684;&#x6B65;&#x957F;stride&#x4E3A;1&#xFF08;stride&#xFF09;</li></ul><h2 id="&#x5B9A;&#x4E49;&#x90E8;&#x5206;&#x65B9;&#x6CD5;"><a href="#&#x5B9A;&#x4E49;&#x90E8;&#x5206;&#x65B9;&#x6CD5;" class="headerlink" title="&#x5B9A;&#x4E49;&#x90E8;&#x5206;&#x65B9;&#x6CD5;"></a>&#x5B9A;&#x4E49;&#x90E8;&#x5206;&#x65B9;&#x6CD5;</h2><ul><li><p>&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x964D;&#x91C7;&#x6837;subsample&#x7684;&#x65B9;&#x6CD5;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">&#x964D;&#x91C7;&#x6837;&#x51FD;&#x6570;   </span></span><br><span class="line"><span class="string">input&#x4E3A;&#x8F93;&#x5165;</span></span><br><span class="line"><span class="string">factor&#x4E3A;&#x91C7;&#x6837;&#x56E0;&#x5B50;</span></span><br><span class="line"><span class="string">&#x4F7F;&#x7528;slim.max_pool2d&#x6765;&#x5B9E;&#x73B0;</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span>    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">subsample</span><span class="params">(inputs,factor,scope=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> factor==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> inputs</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> slim.max_pool2d(inputs,[<span class="number">1</span>,<span class="number">1</span>],stride=factor,scope=scope)</span><br></pre></td></tr></table></figure></li><li><p>&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;conv2d_same&#x51FD;&#x6570;&#x521B;&#x5EFA;&#x5377;&#x79EF;&#x5C42;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">conv2d_same</span><span class="params">(inputs,num_outputs,kernel_size,stride,scope=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> stride==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> slim.conv2d(inputs,num_outputs,kernel_size,stride=<span class="number">1</span>,padding=<span class="string">&apos;SAME&apos;</span>,scope=scope)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># &#x663E;&#x5F0F;&#x5730;pad zero</span></span><br><span class="line">        pad_total=kernel_size - <span class="number">1</span></span><br><span class="line">        pad_beg=pad_total // <span class="number">2</span></span><br><span class="line">        pad_end=pad_total-pad_beg</span><br><span class="line">        <span class="comment">#&#x4F7F;&#x7528;tf.pad&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x586B;&#x5145;</span></span><br><span class="line">        inputs = tf.pad(inputs, [[<span class="number">0</span>, <span class="number">0</span>], [pad_beg, pad_end], [pad_beg, pad_end], [<span class="number">0</span>, <span class="number">0</span>]])</span><br><span class="line">        <span class="keyword">return</span> slim.conv2d(inputs, num_outputs, kernel_size, stride=stride,</span><br><span class="line">                        padding=<span class="string">&apos;VALID&apos;</span>, scope=scope)</span><br></pre></td></tr></table></figure></li><li><p>&#x5B9A;&#x4E49;&#x5806;&#x53E0;Blocks&#x7684;&#x51FD;&#x6570;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">net&#x4E3A;&#x8F93;&#x5165;</span></span><br><span class="line"><span class="string">blocks&#x4E3A;&#x5B9A;&#x4E49;&#x7684;Block&#x7684;class&#x7684;&#x5217;&#x8868;</span></span><br><span class="line"><span class="string">outputs_collections&#x662F;&#x7528;&#x6765;&#x6536;&#x96C6;&#x5404;&#x4E2A;end_points&#x7684;collections</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="meta">@slim.add_arg_scope</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">stack_blocks_dense</span><span class="params">(net,blocks,outputs_collections=None)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> block <span class="keyword">in</span> blocks:</span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(block.scope,<span class="string">&apos;block&apos;</span>,[net])<span class="keyword">as</span> sc:</span><br><span class="line">            <span class="comment"># &#x62FF;&#x5230;&#x6BCF;&#x4E2A;&#x6B8B;&#x5DEE;&#x5B66;&#x4E60;&#x5355;&#x5143;&#x7684;args</span></span><br><span class="line">            <span class="keyword">for</span> i,unit <span class="keyword">in</span> enumerate(block.args):</span><br><span class="line">                <span class="keyword">with</span> tf.variable_scope(<span class="string">&apos;unit_%d&apos;</span>%(i+<span class="number">1</span>),values=[net]):</span><br><span class="line">                    <span class="comment">#&#x83B7;&#x53D6;&#x6BCF;&#x4E2A;Block&#x4E2D;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x5305;&#x62EC;&#x7B2C;&#x4E09;&#x5C42;&#x901A;&#x9053;&#x6570;&#xFF0C;&#x524D;&#x4E24;&#x5C42;&#x901A;&#x9053;&#x6570;&#x4EE5;&#x53CA;&#x4E2D;&#x95F4;&#x5C42;&#x6B65;&#x957F;</span></span><br><span class="line">                    unit_depth,unit_depth_bottleneck,unit_stride=unit    </span><br><span class="line">                    <span class="comment">#unit_fn&#x662F;Block&#x7C7B;&#x7684;&#x6B8B;&#x5DEE;&#x795E;&#x7ECF;&#x5143;&#x751F;&#x6210;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x6309;&#x987A;&#x5E8F;&#x521B;&#x5EFA;&#x6B8B;&#x5DEE;&#x5B66;&#x4E60;&#x5143;&#x5E76;&#x8FDB;&#x884C;&#x8FDE;&#x63A5;</span></span><br><span class="line">                    net=block.unit_fn(net,</span><br><span class="line">                                    depth=unit_depth,</span><br><span class="line">                                    depth_bottleneck=unit_depth_bottleneck,</span><br><span class="line">                                    stride=unit_stride)</span><br><span class="line">            <span class="comment"># &#x5C06;&#x8F93;&#x51FA;&#x7684;net&#x6DFB;&#x52A0;&#x5230;collection&#x4E2D;</span></span><br><span class="line">            net=slim.utils.collect_named_outputs(outputs_collections,sc.name,net)</span><br><span class="line">    <span class="keyword">return</span> net</span><br></pre></td></tr></table></figure></li><li><p>&#x521B;&#x5EFA;ResNet&#x901A;&#x7528;&#x7684;arg_scope</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">resnet_arg_scope</span><span class="params">(is_training=True,</span></span></span><br><span class="line"><span class="function"><span class="params">                    weight_decay=<span class="number">0.0001</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                    batch_norm_decay=<span class="number">0.997</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                    batch_norm_epsilon=<span class="number">1e-5</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                    batch_norm_scale=True)</span>:</span></span><br><span class="line">    batch_norm_params = {</span><br><span class="line">    <span class="string">&apos;decay&apos;</span>: batch_norm_decay,</span><br><span class="line">    <span class="string">&apos;epsilon&apos;</span>: batch_norm_epsilon,</span><br><span class="line">    <span class="string">&apos;scale&apos;</span>: batch_norm_scale,</span><br><span class="line">    <span class="string">&apos;updates_collections&apos;</span>: tf.GraphKeys.UPDATE_OPS,</span><br><span class="line">    <span class="string">&apos;fused&apos;</span>: <span class="literal">None</span>,  <span class="comment"># Use fused batch norm if possible.</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x8BBE;&#x7F6E;slim.conv2d&#x51FD;&#x6570;&#x7684;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;</span></span><br><span class="line">    <span class="keyword">with</span> slim.arg_scope(</span><br><span class="line">    [slim.conv2d],</span><br><span class="line">    weights_regularizer=slim.l2_regularizer(weight_decay),</span><br><span class="line">    weights_initializer=slim.variance_scaling_initializer(),</span><br><span class="line">    activation_fn=tf.nn.relu,</span><br><span class="line">    normalizer_fn=slim.batch_norm,</span><br><span class="line">    normalizer_params=batch_norm_params):</span><br><span class="line">        <span class="keyword">with</span> slim.arg_scope([slim.batch_norm], **batch_norm_params):</span><br><span class="line">            <span class="keyword">with</span> slim.arg_scope([slim.max_pool2d], padding=<span class="string">&apos;SAME&apos;</span>) <span class="keyword">as</span> arg_sc:</span><br><span class="line">                <span class="keyword">return</span> arg_sc</span><br></pre></td></tr></table></figure></li><li><p>&#x5B9A;&#x4E49;&#x6838;&#x5FC3;&#x7684;bottleneck&#x6B8B;&#x5DEE;&#x5B66;&#x4E60;&#x5355;&#x5143;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x5229;&#x7528;add_arg_scope&#x4F7F;bottleneck&#x51FD;&#x6570;&#x80FD;&#x591F;&#x76F4;&#x63A5;&#x4F7F;&#x7528;slim.arg_scope&#x8BBE;&#x7F6E;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;</span></span><br><span class="line"><span class="meta">@slim.add_arg_scope</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bottleneck</span><span class="params">(inputs,depth,depth_bottleneck,stride,</span></span></span><br><span class="line"><span class="function"><span class="params">            outputs_collections=None,scope=None)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(scope,<span class="string">&apos;bottleneck_v2&apos;</span>,[inputs])<span class="keyword">as</span> sc:</span><br><span class="line">        <span class="comment"># &#x83B7;&#x53D6;&#x8F93;&#x5165;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x7EF4;&#x5EA6;&#xFF0C;&#x5373;&#x8F93;&#x5165;&#x7684;&#x901A;&#x9053;&#x6570;&#x76EE;</span></span><br><span class="line">        <span class="comment"># &#x53C2;&#x6570;min_rank=4&#x53EF;&#x4EE5;&#x9650;&#x5B9A;&#x6700;&#x5C11;&#x4E3A;4&#x4E2A;&#x7EF4;&#x5EA6;</span></span><br><span class="line">        depth_in=slim.utils.last_dimension(inputs.get_shape(),min_rank=<span class="number">4</span>)</span><br><span class="line">        <span class="comment"># &#x5148;&#x5BF9;&#x8F93;&#x5165;&#x8FDB;&#x884C;Batch Normalization&#xFF0C;&#x518D;&#x8FDB;&#x884C;&#x975E;&#x7EBF;&#x6027;&#x6FC0;&#x6D3B;</span></span><br><span class="line">        preact=slim.batch_norm(inputs,activation_fn=tf.nn.relu,scope=<span class="string">&apos;preact&apos;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># &#x5982;&#x679C;&#x6B8B;&#x5DEE;&#x795E;&#x7ECF;&#x5143;&#x7684;&#x8F93;&#x51FA;&#x901A;&#x9053;&#x6570;&#x76EE;&#x548C;&#x8F93;&#x5165;&#x7684;&#x901A;&#x9053;&#x6570;&#x76EE;&#x76F8;&#x540C;&#xFF0C;&#x90A3;&#x4E48;&#x76F4;&#x63A5;&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x964D;&#x91C7;&#x6837;&#xFF0C;&#x4EE5;&#x4FDD;&#x8BC1;shortcut&#x5C3A;&#x5BF8;&#x548C;&#x7ECF;&#x5386;&#x4E09;&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#x540E;&#x7684;&#x8F93;&#x51FA;&#x7684;&#x6B64;&#x5B58;&#x76F8;&#x540C;        </span></span><br><span class="line">        <span class="keyword">if</span> depth==depth_in:</span><br><span class="line">            shortcut=subsample(inputs,stride,<span class="string">&apos;shortcut&apos;</span>)</span><br><span class="line">        <span class="comment"># &#x5982;&#x679C;&#x6B8B;&#x5DEE;&#x795E;&#x7ECF;&#x5143;&#x7684;&#x8F93;&#x51FA;&#x901A;&#x9053;&#x6570;&#x76EE;&#x548C;&#x8F93;&#x5165;&#x7684;&#x901A;&#x9053;&#x6570;&#x76EE;&#x4E0D;&#x540C;&#xFF0C;&#x5229;&#x7528;&#x5C3A;&#x5BF8;&#x4E3A;1x1&#x7684;&#x5377;&#x79EF;&#x6838;&#x5BF9;&#x8F93;&#x5165;&#x8FDB;&#x884C;&#x5377;&#x79EF;&#xFF0C;&#x4F7F;&#x8F93;&#x5165;&#x901A;&#x9053;&#x6570;&#x76F8;&#x540C;&#xFF1B;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            shortcut=slim.conv2d(preact,depth,[<span class="number">1</span>,<span class="number">1</span>],stride=stride,normalizer_fn=<span class="literal">None</span>,</span><br><span class="line">                                activation_fn=<span class="literal">None</span>,scope=<span class="string">&apos;shortcut&apos;</span>)</span><br><span class="line">        <span class="comment"># &#x7136;&#x540E;&#xFF0C;&#x5B9A;&#x4E49;&#x6B8B;&#x5DEE;&#xFF0C;&#x5373;&#x4E09;&#x4E2A;&#x5377;&#x79EF;&#x5C42;           </span></span><br><span class="line">        residual=slim.conv2d(preact,depth_bottleneck,[<span class="number">1</span>,<span class="number">1</span>],stride=<span class="number">1</span>,scope=<span class="string">&apos;conv1&apos;</span>)</span><br><span class="line">        residual=conv2d_same(residual,depth_bottleneck,<span class="number">3</span>,stride,scope=<span class="string">&apos;conv2&apos;</span>)</span><br><span class="line">        residual=slim.conv2d(residual,depth,[<span class="number">1</span>,<span class="number">1</span>],stride=<span class="number">1</span>,normalizer_fn=<span class="literal">None</span>,activation_fn=<span class="literal">None</span>,scope=<span class="string">&apos;conv3&apos;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># &#x5C06;shortcut&#x548C;residual&#x76F8;&#x52A0;&#xFF0C;&#x4F5C;&#x4E3A;&#x8F93;&#x51FA;        </span></span><br><span class="line">        output=shortcut+residual</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> slim.utils.collect_named_outputs(outputs_collections,sc.name,output)</span><br></pre></td></tr></table></figure></li></ul><h2 id="&#x5B9A;&#x4E49;&#x751F;&#x6210;ResNet-V2&#x7684;&#x4E3B;&#x51FD;&#x6570;"><a href="#&#x5B9A;&#x4E49;&#x751F;&#x6210;ResNet-V2&#x7684;&#x4E3B;&#x51FD;&#x6570;" class="headerlink" title="&#x5B9A;&#x4E49;&#x751F;&#x6210;ResNet V2&#x7684;&#x4E3B;&#x51FD;&#x6570;"></a>&#x5B9A;&#x4E49;&#x751F;&#x6210;ResNet V2&#x7684;&#x4E3B;&#x51FD;&#x6570;</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">input&#x662F;&#x8F93;&#x5165;</span></span><br><span class="line"><span class="string">blocks&#x5305;&#x542B;&#x6B8B;&#x5DEE;&#x5B66;&#x4E60;&#x5143;&#x7684;&#x53C2;&#x6570;</span></span><br><span class="line"><span class="string">num_classes&#x662F;&#x8F93;&#x51FA;&#x5206;&#x7C7B;&#x6570;</span></span><br><span class="line"><span class="string">global_pool&#x6807;&#x5FD7;&#x662F;&#x5426;&#x52A0;&#x4E0A;&#x6700;&#x540E;&#x4E00;&#x5C42;&#x5168;&#x5C40;&#x5E73;&#x5747;&#x5E74;&#x6C60;&#x5316;</span></span><br><span class="line"><span class="string">include_root_block&#x6807;&#x5FD7;&#x662F;&#x5426;&#x52A0;&#x4E0A;ResNet&#x7F51;&#x7EDC;&#x6700;&#x524D;&#x9762;&#x901A;&#x5E38;&#x4F7F;&#x7528;&#x7684;7&#xD7;7&#x5377;&#x79EF;&#x548C;&#x6700;&#x5927;&#x6C60;&#x5316;</span></span><br><span class="line"><span class="string">reuse&#x6807;&#x5FD7;&#x662F;&#x5426;&#x91CD;&#x7528;</span></span><br><span class="line"><span class="string">scope&#x662F;&#x6574;&#x4E2A;&#x7F51;&#x7EDC;&#x7684;&#x540D;&#x79F0; </span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span>     </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">resnet_v2</span><span class="params">(inputs,</span></span></span><br><span class="line"><span class="function"><span class="params">              blocks,</span></span></span><br><span class="line"><span class="function"><span class="params">              num_classes=None,</span></span></span><br><span class="line"><span class="function"><span class="params">              global_pool=True,</span></span></span><br><span class="line"><span class="function"><span class="params">              include_root_block=True,</span></span></span><br><span class="line"><span class="function"><span class="params">              reuse=None,</span></span></span><br><span class="line"><span class="function"><span class="params">              scope=None)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(scope,<span class="string">&apos;resnet_v2&apos;</span>,[inputs],reuse=reuse) <span class="keyword">as</span> sc:</span><br><span class="line">        end_points_collection=sc.original_name_scope+<span class="string">&apos;_end_points&apos;</span></span><br><span class="line">        <span class="keyword">with</span> slim.arg_scope([slim.conv2d,bottleneck,stack_blocks_dense],</span><br><span class="line">                            outputs_collections=end_points_collection):</span><br><span class="line">            net=inputs</span><br><span class="line">            <span class="keyword">if</span> include_root_block:</span><br><span class="line">                <span class="keyword">with</span> slim.arg_scope([slim.conv2d],activation_fn=<span class="literal">None</span>,normalizer_fn=<span class="literal">None</span>):</span><br><span class="line">                    <span class="comment">#&#x5377;&#x79EF;&#x6838;&#x4E3A;7x7&#x6B65;&#x957F;&#x4E3A;2&#x7684;&#x5377;&#x79EF;&#x5C42;</span></span><br><span class="line">                    net=conv2d_same(net,<span class="number">64</span>,<span class="number">7</span>,stride=<span class="number">2</span>,scope=<span class="string">&apos;conv1&apos;</span>)</span><br><span class="line">                <span class="comment">#&#x6700;&#x5927;&#x503C;&#x6C60;&#x5316;</span></span><br><span class="line">                net=slim.max_pool2d(net,[<span class="number">3</span>,<span class="number">3</span>],stride=<span class="number">2</span>,scope=<span class="string">&apos;pool1&apos;</span>)</span><br><span class="line">            <span class="comment">#&#x8C03;&#x7528;stack_blocks_dense&#x5806;&#x53E0;&#x6B8B;&#x5DEE;&#x5B66;&#x4E60;&#x5143;&#xFF0C;&#x6BCF;&#x4E2A;&#x6709;&#x4E09;&#x4E2A;&#x5377;&#x79EF;&#x5C42;</span></span><br><span class="line">            net=stack_blocks_dense(net,blocks)</span><br><span class="line">            <span class="comment">#&#x5148;&#x505A;batch norm&#x7136;&#x540E;&#x4F7F;&#x7528;relu&#x6FC0;&#x6D3B;</span></span><br><span class="line">            net=slim.batch_norm(net,activation_fn=tf.nn.relu,scope=<span class="string">&apos;postnorm&apos;</span>)</span><br><span class="line">            <span class="keyword">if</span> global_pool:     </span><br><span class="line">                <span class="comment">#&#x8FDB;&#x884C;&#x5168;&#x5C40;&#x5E73;&#x5747;&#x6C60;&#x5316;</span></span><br><span class="line">                net=tf.reduce_mean(net,[<span class="number">1</span>,<span class="number">2</span>],name=<span class="string">&apos;pool5&apos;</span>,keep_dims=<span class="literal">True</span>)</span><br><span class="line">            <span class="comment">#&#x4E00;&#x4E2A;&#x8F93;&#x51FA;&#x4E3A;num_classes&#x7684;&#x5377;&#x79EF;&#x5C42;&#xFF0C;&#x4E0D;&#x8FDB;&#x884C;&#x6FC0;&#x6D3B;&#x4E5F;&#x4E0D;&#x5F52;&#x4E00;&#x6B63;&#x5219;&#x5316;&#x3002;</span></span><br><span class="line">            <span class="keyword">if</span> num_classes <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                net=slim.conv2d(net,num_classes,[<span class="number">1</span>,<span class="number">1</span>],activation_fn=<span class="literal">None</span>,normalizer_fn=<span class="literal">None</span>,scope=<span class="string">&apos;logits&apos;</span>)</span><br><span class="line">            <span class="comment"># &#x5C06;collection&#x8F6C;&#x5316;&#x4E3A;Python&#x7684;dict</span></span><br><span class="line">            end_points=slim.utils.convert_collection_to_dict(end_points_collection)</span><br><span class="line"></span><br><span class="line">            <span class="comment">#&#x4F7F;&#x7528;softmax&#x8FDB;&#x884C;&#x5206;&#x7C7B;         </span></span><br><span class="line">            <span class="keyword">if</span> num_classes <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                end_points[<span class="string">&apos;predictions&apos;</span>]=slim.softmax(net,scope=<span class="string">&apos;predictions&apos;</span>)</span><br><span class="line">            <span class="keyword">return</span> net,end_points</span><br></pre></td></tr></table></figure><h2 id="&#x5B9A;&#x4E49;&#x4E0D;&#x540C;&#x6DF1;&#x5EA6;&#x7684;ResNet&#x7F51;&#x7EDC;&#x7ED3;&#x6784;"><a href="#&#x5B9A;&#x4E49;&#x4E0D;&#x540C;&#x6DF1;&#x5EA6;&#x7684;ResNet&#x7F51;&#x7EDC;&#x7ED3;&#x6784;" class="headerlink" title="&#x5B9A;&#x4E49;&#x4E0D;&#x540C;&#x6DF1;&#x5EA6;&#x7684;ResNet&#x7F51;&#x7EDC;&#x7ED3;&#x6784;"></a>&#x5B9A;&#x4E49;&#x4E0D;&#x540C;&#x6DF1;&#x5EA6;&#x7684;ResNet&#x7F51;&#x7EDC;&#x7ED3;&#x6784;</h2><ul><li><p>50&#x5C42;&#x6DF1;&#x5EA6;&#x7684;ResNet</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 50&#x5C42;&#x6DF1;&#x5EA6;&#x7684;ResNet&#x7F51;&#x7EDC;&#x914D;&#x7F6E;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">resnet_v2_50</span><span class="params">(inputs, num_classes = None,</span></span></span><br><span class="line"><span class="function"><span class="params">                global_pool = True,</span></span></span><br><span class="line"><span class="function"><span class="params">                reuse = None,</span></span></span><br><span class="line"><span class="function"><span class="params">                scope = <span class="string">&apos;resnet_v2_50&apos;</span>)</span>:</span></span><br><span class="line">    blocks = [</span><br><span class="line">        Block(<span class="string">&apos;block1&apos;</span>, bottleneck, [(<span class="number">256</span>, <span class="number">64</span>, <span class="number">1</span>)] * <span class="number">2</span> + [(<span class="number">256</span>, <span class="number">64</span>, <span class="number">2</span>)]),</span><br><span class="line">        Block(<span class="string">&apos;block2&apos;</span>, bottleneck, [(<span class="number">512</span>, <span class="number">128</span>, <span class="number">1</span>)] * <span class="number">3</span> + [(<span class="number">512</span>, <span class="number">128</span>, <span class="number">2</span>)]),</span><br><span class="line">        Block(<span class="string">&apos;block3&apos;</span>, bottleneck, [(<span class="number">1024</span>, <span class="number">256</span>, <span class="number">1</span>)] * <span class="number">5</span> + [(<span class="number">1024</span>, <span class="number">256</span>, <span class="number">2</span>)]),</span><br><span class="line">        Block(<span class="string">&apos;block4&apos;</span>, bottleneck, [(<span class="number">2048</span>, <span class="number">512</span>, <span class="number">1</span>)] * <span class="number">3</span>)]</span><br><span class="line">    <span class="keyword">return</span> resnet_v2(inputs, blocks, num_classes, global_pool,</span><br><span class="line">                    include_root_block = <span class="literal">True</span>, reuse = reuse,</span><br><span class="line">                    scope = scope)</span><br></pre></td></tr></table></figure></li><li><p>101&#x5C42;&#x6DF1;&#x5EA6;&#x7684;ResNet</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 101&#x5C42;&#x6DF1;&#x5EA6;&#x7684;ResNet&#x7F51;&#x7EDC;&#x914D;&#x7F6E;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">resnet_v2_101</span><span class="params">(inputs, num_classes = None,</span></span></span><br><span class="line"><span class="function"><span class="params">                global_pool = True,</span></span></span><br><span class="line"><span class="function"><span class="params">                reuse = None,</span></span></span><br><span class="line"><span class="function"><span class="params">                scope = <span class="string">&apos;resnet_v2_101&apos;</span>)</span>:</span></span><br><span class="line">    blocks = [</span><br><span class="line">        Block(<span class="string">&apos;block1&apos;</span>, bottleneck, [(<span class="number">256</span>, <span class="number">64</span>, <span class="number">1</span>)] * <span class="number">2</span>+ [(<span class="number">256</span>, <span class="number">64</span>, <span class="number">2</span>)]),</span><br><span class="line">        Block(<span class="string">&apos;block2&apos;</span>, bottleneck, [(<span class="number">512</span>, <span class="number">128</span>, <span class="number">1</span>)] * <span class="number">3</span> + [(<span class="number">512</span>, <span class="number">128</span>, <span class="number">2</span>)]),</span><br><span class="line">        Block(<span class="string">&apos;block3&apos;</span>, bottleneck, [(<span class="number">1024</span>, <span class="number">256</span>, <span class="number">1</span>)] * <span class="number">22</span> + [(<span class="number">1024</span>, <span class="number">256</span>, <span class="number">2</span>)]),</span><br><span class="line">        Block(<span class="string">&apos;block4&apos;</span>, bottleneck, [(<span class="number">2048</span>, <span class="number">512</span>, <span class="number">1</span>)] * <span class="number">3</span>)]</span><br><span class="line">    <span class="keyword">return</span> resnet_v2(inputs, blocks, num_classes, global_pool,</span><br><span class="line">                    include_root_block = <span class="literal">True</span>, reuse = reuse,</span><br><span class="line">                    scope = scope)</span><br></pre></td></tr></table></figure></li><li><p>152&#x5C42;&#x6DF1;&#x5EA6;&#x7684;ResNet</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 152&#x5C42;&#x6DF1;&#x5EA6;&#x7684;ResNet&#x7F51;&#x7EDC;&#x914D;&#x7F6E;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">resnet_v2_152</span><span class="params">(inputs, num_classes = None,</span></span></span><br><span class="line"><span class="function"><span class="params">                global_pool = True,</span></span></span><br><span class="line"><span class="function"><span class="params">                reuse = None,</span></span></span><br><span class="line"><span class="function"><span class="params">                scope = <span class="string">&apos;resnet_v2_152&apos;</span>)</span>:</span></span><br><span class="line">    blocks = [</span><br><span class="line">        Block(<span class="string">&apos;block1&apos;</span>, bottleneck, [(<span class="number">256</span>, <span class="number">64</span>, <span class="number">1</span>)] * <span class="number">2</span> + [(<span class="number">256</span>, <span class="number">64</span>, <span class="number">2</span>)]),</span><br><span class="line">        Block(<span class="string">&apos;block2&apos;</span>, bottleneck, [(<span class="number">512</span>, <span class="number">128</span>, <span class="number">1</span>)] * <span class="number">7</span> + [(<span class="number">512</span>, <span class="number">128</span>, <span class="number">2</span>)]),</span><br><span class="line">        Block(<span class="string">&apos;block3&apos;</span>, bottleneck, [(<span class="number">1024</span>, <span class="number">256</span>, <span class="number">1</span>)] * <span class="number">35</span> + [(<span class="number">1024</span>, <span class="number">256</span>, <span class="number">2</span>)]),</span><br><span class="line">        Block(<span class="string">&apos;block4&apos;</span>, bottleneck, [(<span class="number">2048</span>, <span class="number">512</span>, <span class="number">1</span>)] * <span class="number">3</span>)]</span><br><span class="line">    <span class="keyword">return</span> resnet_v2(inputs, blocks, num_classes, global_pool,</span><br><span class="line">                    include_root_block = <span class="literal">True</span>, reuse = reuse,</span><br><span class="line">                    scope = scope)</span><br></pre></td></tr></table></figure></li><li><p>200&#x5C42;&#x6DF1;&#x5EA6;&#x7684;ResNet</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 200&#x5C42;&#x6DF1;&#x5EA6;&#x7684;ResNet&#x7F51;&#x7EDC;&#x914D;&#x7F6E;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">resnet_v2_200</span><span class="params">(inputs, num_classes = None,</span></span></span><br><span class="line"><span class="function"><span class="params">                global_pool = True,</span></span></span><br><span class="line"><span class="function"><span class="params">                reuse = None,</span></span></span><br><span class="line"><span class="function"><span class="params">                scope = <span class="string">&apos;resnet_v2_200&apos;</span>)</span>:</span></span><br><span class="line">    blocks = [</span><br><span class="line">        Block(<span class="string">&apos;block1&apos;</span>, bottleneck, [(<span class="number">256</span>, <span class="number">64</span>, <span class="number">1</span>)] * <span class="number">2</span> + [(<span class="number">256</span>, <span class="number">64</span>, <span class="number">2</span>)]),</span><br><span class="line">        Block(<span class="string">&apos;block2&apos;</span>, bottleneck, [(<span class="number">512</span>, <span class="number">128</span>, <span class="number">1</span>)] * <span class="number">23</span> + [(<span class="number">512</span>, <span class="number">128</span>, <span class="number">2</span>)]),</span><br><span class="line">        Block(<span class="string">&apos;block3&apos;</span>, bottleneck, [(<span class="number">1024</span>, <span class="number">256</span>, <span class="number">1</span>)] * <span class="number">35</span> + [(<span class="number">1024</span>, <span class="number">256</span>, <span class="number">2</span>)]),</span><br><span class="line">        Block(<span class="string">&apos;block4&apos;</span>, bottleneck, [(<span class="number">2048</span>, <span class="number">512</span>, <span class="number">1</span>)] * <span class="number">3</span>)]</span><br><span class="line">    <span class="keyword">return</span> resnet_v2(inputs, blocks, num_classes, global_pool,</span><br><span class="line">                    include_root_block = <span class="literal">True</span>, reuse = reuse,</span><br><span class="line">                    scope = scope)</span><br></pre></td></tr></table></figure></li></ul><h2 id="&#x8017;&#x65F6;&#x6D4B;&#x8BD5;"><a href="#&#x8017;&#x65F6;&#x6D4B;&#x8BD5;" class="headerlink" title="&#x8017;&#x65F6;&#x6D4B;&#x8BD5;"></a>&#x8017;&#x65F6;&#x6D4B;&#x8BD5;</h2><ul><li><p>&#x5B9A;&#x4E49;&#x6D4B;&#x8BD5;&#x8017;&#x65F6;&#x51FD;&#x6570;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">time_tensorflow_run</span><span class="params">(session, target, info_string)</span>:</span></span><br><span class="line">    num_steps_burn_in = <span class="number">10</span>  <span class="comment"># &#x6253;&#x5370;&#x9608;&#x503C;</span></span><br><span class="line">    total_duration = <span class="number">0.0</span>    <span class="comment"># &#x6BCF;&#x4E00;&#x8F6E;&#x6240;&#x9700;&#x8981;&#x7684;&#x8FED;&#x4EE3;&#x65F6;&#x95F4;</span></span><br><span class="line">    total_duration_aquared = <span class="number">0.0</span>  <span class="comment"># &#x6BCF;&#x4E00;&#x8F6E;&#x6240;&#x9700;&#x8981;&#x7684;&#x8FED;&#x4EE3;&#x65F6;&#x95F4;&#x7684;&#x5E73;&#x65B9;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num_batches + num_steps_burn_in):</span><br><span class="line">        start_time = time.time()</span><br><span class="line">        _ = session.run(target)</span><br><span class="line">        duration = time.time() - start_time    <span class="comment"># &#x8BA1;&#x7B97;&#x8017;&#x65F6;</span></span><br><span class="line">        <span class="keyword">if</span> i &gt;= num_steps_burn_in:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> i % <span class="number">10</span>:</span><br><span class="line">                print(<span class="string">&quot;%s : step %d, duration = %.3f&quot;</span> % (datetime.now(), i - num_steps_burn_in, duration))</span><br><span class="line">            total_duration += duration</span><br><span class="line">            total_duration_aquared += duration * duration</span><br><span class="line">    mn = total_duration / num_batches   <span class="comment"># &#x8BA1;&#x7B97;&#x5747;&#x503C;</span></span><br><span class="line">    vr = total_duration_aquared / num_batches - mn * mn  <span class="comment"># &#x8BA1;&#x7B97;&#x65B9;&#x5DEE;</span></span><br><span class="line">    sd = math.sqrt(vr) <span class="comment"># &#x8BA1;&#x7B97;&#x6807;&#x51C6;&#x5DEE;</span></span><br><span class="line">    print(<span class="string">&quot;%s : %s across %d steps, %.3f +/- %.3f sec/batch&quot;</span> % (datetime.now(), info_string, num_batches, mn, sd))</span><br></pre></td></tr></table></figure></li><li><p>&#x8017;&#x65F6;&#x6D4B;&#x8BD5;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">batch_size = <span class="number">32</span></span><br><span class="line">height, width = <span class="number">224</span>, <span class="number">224</span></span><br><span class="line">inputs = tf.random_uniform((batch_size, height, width, <span class="number">3</span>))</span><br><span class="line"><span class="keyword">with</span> slim.arg_scope(resnet_arg_scope(is_training = <span class="literal">False</span>)):</span><br><span class="line">    net, end_points = resnet_v2_152(inputs, <span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    init = tf.global_variables_initializer()</span><br><span class="line">    sess.run(init)</span><br><span class="line">    num_batches = <span class="number">100</span></span><br><span class="line">    time_tensorflow_run(sess, net, <span class="string">&quot;Forward&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">2019-01-26 08:10:51.879413 : step 0, duration = 0.486</span><br><span class="line">2019-01-26 08:10:56.748640 : step 10, duration = 0.487</span><br><span class="line">2019-01-26 08:11:01.628659 : step 20, duration = 0.489</span><br><span class="line">2019-01-26 08:11:06.511324 : step 30, duration = 0.489</span><br><span class="line">2019-01-26 08:11:11.410210 : step 40, duration = 0.490</span><br><span class="line">2019-01-26 08:11:16.311633 : step 50, duration = 0.491</span><br><span class="line">2019-01-26 08:11:21.219118 : step 60, duration = 0.493</span><br><span class="line">2019-01-26 08:11:26.133231 : step 70, duration = 0.492</span><br><span class="line">2019-01-26 08:11:31.054586 : step 80, duration = 0.493</span><br><span class="line">2019-01-26 08:11:35.984226 : step 90, duration = 0.494</span><br><span class="line">2019-01-26 08:11:40.435636 : Forward across 100 steps, 0.490 +/- 0.002 sec/batch</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 卷积网络 </tag>
            
            <tag> TensorFlow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TensorFlow学习笔记10：Inception V3</title>
      <link href="/2019/08/12/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B010/"/>
      <url>/2019/08/12/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B010/</url>
      
        <content type="html"><![CDATA[<h1 id="Inception-V3&#x7ED3;&#x6784;"><a href="#Inception-V3&#x7ED3;&#x6784;" class="headerlink" title="Inception V3&#x7ED3;&#x6784;"></a>Inception V3&#x7ED3;&#x6784;</h1><p><img src="/2019/08/12/tf&#x5B66;&#x4E60;&#x7B14;&#x8BB0;10/1.png" alt></p><a id="more"></a><p>&#x503C;&#x5F97;&#x501F;&#x9274;&#x7684;&#x8BBE;&#x8BA1;CNN&#x7684;&#x601D;&#x60F3;&#x548C;Trick&#xFF1A;</p><ul><li>Factorization into small convolutions&#x5F88;&#x6709;&#x6548;&#xFF0C;&#x53EF;&#x4EE5;&#x964D;&#x4F4E;&#x53C2;&#x6570;&#x91CF;&#xFF0C;&#x51CF;&#x8F7B;&#x8FC7;&#x62DF;&#x5408;&#xFF0C;&#x589E;&#x52A0;&#x7F51;&#x7EDC;&#x975E;&#x7EBF;&#x6027;&#x7684;&#x8868;&#x8FBE;&#x80FD;&#x529B;&#x3002;</li><li>&#x5377;&#x79EF;&#x7F51;&#x7EDC;&#x4ECE;&#x8F93;&#x5165;&#x5230;&#x8F93;&#x51FA;&#xFF0C;&#x5E94;&#x8BE5;&#x8BA9;&#x56FE;&#x7247;&#x5C3A;&#x5BF8;&#x9010;&#x6E10;&#x51CF;&#x5C11;&#xFF0C;&#x8F93;&#x51FA;&#x901A;&#x9053;&#x9010;&#x6E10;&#x589E;&#x52A0;&#xFF0C;&#x5373;&#x8BA9;&#x7A7A;&#x95F4;&#x7ED3;&#x6784;&#x7B80;&#x5316;&#xFF0C;&#x5C06;&#x7A7A;&#x95F4;&#x4FE1;&#x606F;&#x8F6C;&#x5316;&#x4E3A;&#x9AD8;&#x9636;&#x62BD;&#x8C61;&#x7684;&#x7279;&#x5F81;&#x4FE1;&#x606F;&#x3002;</li><li>Inception Module&#x7528;&#x591A;&#x4E2A;&#x5206;&#x652F;&#x63D0;&#x53D6;&#x4E0D;&#x540C;&#x62BD;&#x8C61;&#x7A0B;&#x5EA6;&#x7684;&#x9AD8;&#x9636;&#x7279;&#x5F81;&#x7684;&#x601D;&#x8DEF;&#x5F88;&#x6709;&#x6548;&#xFF0C;&#x53EF;&#x4EE5;&#x4E30;&#x5BCC;&#x7F51;&#x7EDC;&#x7684;&#x8868;&#x8FBE;&#x80FD;&#x529B;&#x3002;</li></ul><h1 id="TensorFlow&#x5B9E;&#x73B0;"><a href="#TensorFlow&#x5B9E;&#x73B0;" class="headerlink" title="TensorFlow&#x5B9E;&#x73B0;"></a>TensorFlow&#x5B9E;&#x73B0;</h1><h2 id="&#x5B9A;&#x4E49;&#x51FD;&#x6570;-inception-v3-arg-scope"><a href="#&#x5B9A;&#x4E49;&#x51FD;&#x6570;-inception-v3-arg-scope" class="headerlink" title="&#x5B9A;&#x4E49;&#x51FD;&#x6570; inception_v3_arg_scope"></a>&#x5B9A;&#x4E49;&#x51FD;&#x6570; inception_v3_arg_scope</h2><p>&#x51FD;&#x6570; inception_v3_arg_scope &#x7528;&#x6765;&#x751F;&#x6210;&#x7F51;&#x7EDC;&#x4E2D;&#x7ECF;&#x5E38;&#x7528;&#x5230;&#x7684;&#x51FD;&#x6570;&#x7684;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;&#xFF0C;&#x6BD4;&#x5982;&#x5377;&#x8BB0;&#x7684;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#xFF0C;&#x6743;&#x91CD;&#x521D;&#x59CB;&#x5316;&#x65B9;&#x5F0F;&#xFF0C;&#x6807;&#x51C6;&#x5316;&#x5668;&#x7B49;&#x7B49;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x5D4C;&#x5957;&#x4E00;&#x4E2A;<code>slim.arg_scope</code>&#xFF0C;&#x5BF9;&#x5377;&#x79EF;&#x5C42;&#x751F;&#x6210;&#x51FD;&#x6570;<code>slim.conv2d</code>&#x7684;&#x51E0;&#x4E2A;&#x4EBA;&#x53C2;&#x6570;&#x8D4B;&#x4E88;&#x9ED8;&#x8BA4;&#x503C;&#x3002;&#x6700;&#x540E;&#x8FD4;&#x56DE;&#x5B9A;&#x4E49;&#x597D;&#x7684;scope&#x3002;<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">import</span> tensorflow.contrib.slim <span class="keyword">as</span> slim</span><br><span class="line"><span class="comment">#&#x5B9A;&#x4E49;&#x7B80;&#x5355;&#x7684;&#x51FD;&#x6570;&#x4EA7;&#x751F;&#x622A;&#x65AD;&#x7684;&#x6B63;&#x6001;&#x5206;&#x5E03;</span></span><br><span class="line">trunc_normal = <span class="keyword">lambda</span> stddev:tf.truncated_normal_initializer(<span class="number">0.0</span>,stddev)</span><br><span class="line"></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">&#x5B9A;&#x4E49;&#x51FD;&#x6570; inception_v3_arg_scope &#x7528;&#x6765;&#x751F;&#x6210;&#x7F51;&#x7EDC;&#x4E2D;&#x7ECF;&#x5E38;&#x7528;&#x5230;&#x7684;&#x51FD;&#x6570;&#x7684;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;</span></span><br><span class="line"><span class="string">L2&#x6B63;&#x5219;&#x7684;Weight_decay&#x9ED8;&#x8BA4;&#x503C;&#x4E3A;0.0004</span></span><br><span class="line"><span class="string">&#x6807;&#x51C6;&#x5DEE;stddev&#x9ED8;&#x8BA4;&#x503C;&#x4E3A;0.1</span></span><br><span class="line"><span class="string">&#x53C2;&#x6570;batch_norm_var_collection&#x9ED8;&#x8BA4;&#x503C;&#x4E3A;moving_vars</span></span><br><span class="line"><span class="string">batch normalization&#x53C2;&#x6570;&#x5B57;&#x5178;&#xFF1A;</span></span><br><span class="line"><span class="string">    &#x8870;&#x51CF;&#x7CFB;&#x6570;decay&#x4E3A;0.9997</span></span><br><span class="line"><span class="string">    epsilon&#x4E3A;0.001</span></span><br><span class="line"><span class="string">    updates_collections&#x4E3A;tf.GraphKeys.UPDATE_OPS</span></span><br><span class="line"><span class="string">    &#x5B57;&#x5178;variables_collections:</span></span><br><span class="line"><span class="string">        beta&#x548C;gamma&#x8BBE;&#x7F6E;&#x4E3A;None</span></span><br><span class="line"><span class="string">        moving_mean&#x548C;moving_variance&#x8BBE;&#x7F6E;&#x4E3A;batch_norm_var_collection</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inception_v3_arg_scope</span><span class="params">(weight_decay=<span class="number">0.00004</span>,stddev=<span class="number">0.1</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                        batch_norm_var_collection=<span class="string">&quot;moving_vars&quot;</span>)</span>:</span></span><br><span class="line">    batch_norm_params = {</span><br><span class="line">        <span class="string">&quot;decay&quot;</span>:<span class="number">0.9997</span>,<span class="string">&quot;epsilon&quot;</span>:<span class="number">0.001</span>,<span class="string">&quot;updates_collections&quot;</span>:tf.GraphKeys.UPDATE_OPS,</span><br><span class="line">        <span class="string">&quot;variables_collections&quot;</span>:{</span><br><span class="line">            <span class="string">&quot;beta&quot;</span>:<span class="literal">None</span>,<span class="string">&quot;gamma&quot;</span>:<span class="literal">None</span>,<span class="string">&quot;moving_mean&quot;</span>:[batch_norm_var_collection],</span><br><span class="line">            <span class="string">&quot;moving_variance&quot;</span>:[batch_norm_var_collection]</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">    &#x5D4C;&#x5957;slim.arg_scope</span></span><br><span class="line"><span class="string">    &#x6743;&#x91CD;&#x521D;&#x59CB;&#x5316;&#x5668;weight_initializer&#x8BBE;&#x7F6E;&#x4E3A;trunc_normal(stddev)</span></span><br><span class="line"><span class="string">    &#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x8BBE;&#x7F6E;&#x4E3A;ReLU</span></span><br><span class="line"><span class="string">    &#x6807;&#x51C6;&#x5316;&#x5668;&#x8BBE;&#x7F6E;&#x4E3A;slim.batch_norm</span></span><br><span class="line"><span class="string">    &#x6807;&#x51C6;&#x5316;&#x5668;&#x7684;&#x53C2;&#x6570;&#x8BBE;&#x7F6E;&#x4E3A;batch_norm_patams</span></span><br><span class="line"><span class="string">    &apos;&apos;&apos;</span></span><br><span class="line">    <span class="keyword">with</span> slim.arg_scope([slim.conv2d,slim.fully_connected],</span><br><span class="line">                        weights_regularizer=slim.l2_regularizer(weight_decay)):</span><br><span class="line">        <span class="comment">#&#x5BF9;&#x5377;&#x79EF;&#x5C42;&#x751F;&#x6210;&#x51FD;&#x6570;&#x7684;&#x51E0;&#x4E2A;&#x53C2;&#x6570;&#x8D4B;&#x4E88;&#x9ED8;&#x8BA4;&#x503C;</span></span><br><span class="line">        <span class="keyword">with</span> slim.arg_scope([slim.conv2d],</span><br><span class="line">                            weights_regularizer = tf.truncated_normal_initializer(stddev=stddev),</span><br><span class="line">                            activation_fc = tf.nn.relu,</span><br><span class="line">                            normalizer_fc = slim.batch_norm,</span><br><span class="line">                            normalizer_params = batch_norm_params) <span class="keyword">as</span> scope:</span><br><span class="line">            <span class="keyword">return</span> scope</span><br></pre></td></tr></table></figure></p><h2 id="&#x5B9A;&#x4E49;Inception-V3&#x7684;&#x5377;&#x79EF;&#x90E8;&#x5206;"><a href="#&#x5B9A;&#x4E49;Inception-V3&#x7684;&#x5377;&#x79EF;&#x90E8;&#x5206;" class="headerlink" title="&#x5B9A;&#x4E49;Inception V3&#x7684;&#x5377;&#x79EF;&#x90E8;&#x5206;"></a>&#x5B9A;&#x4E49;Inception V3&#x7684;&#x5377;&#x79EF;&#x90E8;&#x5206;</h2><p>&#x5B83;&#x53EF;&#x4EE5;&#x751F;&#x6210;Inception V3&#x7F51;&#x7EDC;&#x7684;&#x5377;&#x79EF;&#x90E8;&#x5206;&#x3002;<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">&#x5B9A;&#x4E49;Inception V3&#x7684;&#x5377;&#x79EF;&#x90E8;&#x5206;</span></span><br><span class="line"><span class="string">inputs&#x4E3A;&#x8F93;&#x5165;&#x56FE;&#x7247;&#x6570;&#x636E;&#x7684;tensor</span></span><br><span class="line"><span class="string">scope&#x4E3A;&#x5305;&#x542B;&#x4E86;&#x51FD;&#x6570;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;&#x7684;&#x73AF;&#x5883;</span></span><br><span class="line"><span class="string">&#x7528;&#x5B57;&#x5178;&#x8868;end_points&#x6765;&#x4FDD;&#x5B58;&#x67D0;&#x4E9B;&#x5173;&#x952E;&#x8282;&#x70B9;&#x4F9B;&#x4E4B;&#x540E;&#x4F7F;&#x7528;</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inception_v3_base</span><span class="params">(inputs,scope=None)</span>:</span></span><br><span class="line">    end_points = {}</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(scope,<span class="string">&quot;InceptionV3&quot;</span>,[inputs]):</span><br><span class="line">        <span class="comment">#&#x5BF9;slim.conv2d,slim.max_pool2d,slim.avg_pool2d&#x4E09;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#x8BBE;&#x7F6E;&#x9ED8;&#x8BA4;&#x503C;</span></span><br><span class="line">        <span class="keyword">with</span> slim.arg_scope([slim.conv2d,slim.max_pool2d,slim.avg_pool2d],stride = <span class="number">1</span>,padding = <span class="string">&quot;VALID&quot;</span>):                               </span><br><span class="line">            <span class="comment">#&#x5404;&#x53C2;&#x6570;&#x5206;&#x522B;&#x4E3A;&#x8F93;&#x5165;&#x7684;tensor,&#x8F93;&#x51FA;&#x7684;&#x901A;&#x9053;,&#x5377;&#x79EF;&#x6838;&#x5C3A;&#x5BF8;,&#x6B65;&#x957F;stride&#xFF0C;padding&#x6A21;&#x5F0F;</span></span><br><span class="line">            net = slim.conv2d(inputs,num_outputs=<span class="number">32</span>,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],stride=<span class="number">2</span>,scope=<span class="string">&quot;Conv2d_1a_3x3&quot;</span>)</span><br><span class="line">            net = slim.conv2d(net,num_outputs=<span class="number">32</span>,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],scope=<span class="string">&quot;Conv2d_2a_3x3&quot;</span>)</span><br><span class="line">            net = slim.conv2d(net,num_outputs=<span class="number">64</span>,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],padding=<span class="string">&quot;SAME&quot;</span>,scope=<span class="string">&quot;Conv2d_2b_3x3&quot;</span>)</span><br><span class="line">            net = slim.max_pool2d(net,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],stride=<span class="number">2</span>,scope=<span class="string">&quot;MaxPool_3a_3x3&quot;</span>)</span><br><span class="line">            net = slim.conv2d(net,num_outputs=<span class="number">80</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_3b_1x1&quot;</span>)</span><br><span class="line">            net = slim.conv2d(net,num_outputs=<span class="number">192</span>,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],scope=<span class="string">&quot;Conv2d_4a_3x3&quot;</span>)</span><br><span class="line">            net = slim.max_pool2d(net,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],stride=<span class="number">2</span>,scope=<span class="string">&quot;MaxPool_5a_3x3&quot;</span>)</span><br></pre></td></tr></table></figure></p><h3 id="&#x5B9A;&#x4E49;&#x7B2C;&#x4E00;&#x4E2A;Inception&#x6A21;&#x5757;"><a href="#&#x5B9A;&#x4E49;&#x7B2C;&#x4E00;&#x4E2A;Inception&#x6A21;&#x5757;" class="headerlink" title="&#x5B9A;&#x4E49;&#x7B2C;&#x4E00;&#x4E2A;Inception&#x6A21;&#x5757;"></a>&#x5B9A;&#x4E49;&#x7B2C;&#x4E00;&#x4E2A;Inception&#x6A21;&#x5757;</h3><ul><li><p><strong>&#x7B2C;&#x4E00;&#x4E2A;Inception Module</strong><br>  &#x7B2C;&#x4E00;&#x4E2A;Inception Module&#x540D;&#x79F0;&#x4E3A;Mixed_5b&#x3002;&#x8FD9;&#x4E2A;Inception Module&#x4E2D;&#x6709;4&#x4E2A;&#x5206;&#x652F;&#xFF1A;</p><ol><li>&#x7B2C;&#x4E00;&#x4E2A;&#x5206;&#x652F;&#x6709;64&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;</li><li>&#x7B2C;&#x4E8C;&#x4E2A;&#x5206;&#x652F;&#x6709;48&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;&#x8FDE;&#x63A5;&#x6709;64&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;5&#xD7;5&#x5377;&#x79EF;</li><li>&#x7B2C;&#x4E09;&#x4E2A;&#x5206;&#x652F;&#x6709;64&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;&#x518D;&#x8FDE;&#x7EED;&#x8FDE;&#x63A5;&#x4E24;&#x4E2A;&#x6709;96&#x901A;&#x9053;&#x7684;3&#xD7;3&#x5377;&#x79EF;</li><li><p>&#x7B2C;&#x56DB;&#x4E2A;&#x5206;&#x652F;&#x6709;&#x4E3A;3&#xD7;3&#x7684;&#x5E73;&#x5747;&#x6C60;&#x5316;&#xFF0C;&#x8FDE;&#x63A5;&#x6709;32&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;</p><p>&#x6700;&#x540E;&#x4F7F;&#x7528;<code>tf.concat</code>&#x5C06;&#x56DB;&#x4E2A;&#x5206;&#x652F;&#x7684;&#x8F93;&#x51FA;&#x5408;&#x5E76;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x751F;&#x6210;&#x8FD9;&#x4E2A;Inception Module&#x7684;&#x6700;&#x7EC8;&#x8F93;&#x51FA;&#x3002;4&#x4E2A;&#x5206;&#x652F;&#x7684;&#x8F93;&#x51FA;&#x901A;&#x9053;&#x6570;&#x4E4B;&#x548C;&#x4E3A;64+64+96+32=256&#xFF0C;&#x5373;&#x6700;&#x7EC8;&#x8F93;&#x51FA;&#x7684;&#x56FE;&#x7247;&#x5C3A;&#x5BF8;&#x4E3A;35&#xD7;35&#xD7;256&#x3002;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x5B9A;&#x4E49;&#x7B2C;&#x4E00;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;</span></span><br><span class="line"><span class="keyword">with</span> slim.arg_scope([slim.conv2d,slim.max_pool2d,slim.avg_pool2d],</span><br><span class="line">                    stride = <span class="number">1</span>,padding = <span class="string">&quot;SAME&quot;</span>):</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Mixed_5b&quot;</span>):</span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_0&quot;</span>):</span><br><span class="line">            batch_0 = slim.conv2d(net,num_outputs=<span class="number">64</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_1&quot;</span>):</span><br><span class="line">            batch_1 = slim.conv2d(net,num_outputs=<span class="number">48</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">            batch_1 = slim.conv2d(batch_1,num_outputs=<span class="number">64</span>,kernel_size=[<span class="number">5</span>,<span class="number">5</span>],scope=<span class="string">&quot;Conv2d_0b_5x5&quot;</span>)</span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_2&quot;</span>):</span><br><span class="line">            batch_2 = slim.conv2d(net,num_outputs=<span class="number">64</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">            batch_2 = slim.conv2d(batch_2,num_outputs=<span class="number">96</span>,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],scope=<span class="string">&quot;Conv2d_0b_3x3&quot;</span>)</span><br><span class="line">            batch_2 = slim.conv2d(batch_2,num_outputs=<span class="number">96</span>,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],scope=<span class="string">&quot;Conv2d_0c_3x3&quot;</span>)</span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_3&quot;</span>):</span><br><span class="line">            batch_3 = slim.avg_pool2d(net,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],scope=<span class="string">&quot;AvgPool_0a_3x3&quot;</span>)</span><br><span class="line">            batch_3 = slim.conv2d(batch_3,num_outputs=<span class="number">32</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0b_1x1&quot;</span>)</span><br><span class="line"> </span><br><span class="line">        net = tf.concat([batch_0,batch_1,batch_2,batch_3],<span class="number">3</span>)</span><br></pre></td></tr></table></figure></li></ol></li><li><p><strong>&#x7B2C;&#x4E8C;&#x4E2A;Inception Module</strong><br>  &#x7B2C;&#x4E8C;&#x4E2A;Inception Module&#x7684;&#x540D;&#x79F0;&#x4E3A;Mixed_5c&#x3002;&#x5B83;&#x540C;&#x6837;&#x4E5F;&#x6709;&#x56DB;&#x4E2A;&#x5206;&#x652F;&#xFF0C;&#x552F;&#x4E00;&#x4E0D;&#x540C;&#x7684;&#x662F;&#x7B2C;&#x56DB;&#x4E2A;&#x5206;&#x652F;&#x6700;&#x540E;&#x63A5;&#x7684;&#x662F;64&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#x3002;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x8F93;&#x51FA;&#x7684;tensor&#x7684;&#x6700;&#x7EC8;&#x5C3A;&#x5BF8;&#x4E3A;35&#xD7;5&#xD7;288&#x3002;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;</span></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Mixed_5c&quot;</span>):</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_0&quot;</span>):</span><br><span class="line">        batch_0 = slim.conv2d(net, num_outputs=<span class="number">64</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_1&quot;</span>):</span><br><span class="line">        batch_1 = slim.conv2d(net, num_outputs=<span class="number">48</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0b_1x1&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">64</span>, kernel_size=[<span class="number">5</span>, <span class="number">5</span>], scope=<span class="string">&quot;Conv2d_0c_5x5&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_2&quot;</span>):</span><br><span class="line">        batch_2 = slim.conv2d(net, num_outputs=<span class="number">64</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">96</span>, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&quot;Conv2d_0b_3x3&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">96</span>, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&quot;Conv2d_0c_3x3&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_3&quot;</span>):</span><br><span class="line">        batch_3 = slim.avg_pool2d(net, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&quot;AvgPool_0a_3x3&quot;</span>)</span><br><span class="line">        batch_3 = slim.conv2d(batch_3, num_outputs=<span class="number">64</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0b_1x1&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    net = tf.concat([batch_0, batch_1, batch_2, batch_3], <span class="number">3</span>)</span><br></pre></td></tr></table></figure></li><li><p><strong>&#x7B2C;&#x4E09;&#x4E2A;Inception Module</strong><br>  &#x7B2C;&#x4E09;&#x4E2A;Inception Module&#x7684;&#x540D;&#x79F0;&#x4E3A;Mixed_5d&#xFF0C;&#x548C;&#x4E0A;&#x4E00;&#x4E2A;Inception Module&#x5B8C;&#x5168;&#x76F8;&#x540C;&#x3002;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x7B2C;&#x4E09;&#x4E2A;Inception&#x6A21;&#x5757;</span></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Mixed_5d&quot;</span>):</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_0&quot;</span>):</span><br><span class="line">        batch_0 = slim.conv2d(net, num_outputs=<span class="number">64</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_1&quot;</span>):</span><br><span class="line">        batch_1 = slim.conv2d(net, num_outputs=<span class="number">48</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0b_1x1&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">64</span>, kernel_size=[<span class="number">5</span>, <span class="number">5</span>], scope=<span class="string">&quot;Conv2d_0c_5x5&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_2&quot;</span>):</span><br><span class="line">        batch_2 = slim.conv2d(net, num_outputs=<span class="number">64</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">96</span>, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&quot;Conv2d_0b_3x3&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">96</span>, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&quot;Conv2d_0c_3x3&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_3&quot;</span>):</span><br><span class="line">        batch_3 = slim.avg_pool2d(net, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&quot;AvgPool_0a_3x3&quot;</span>)</span><br><span class="line">        batch_3 = slim.conv2d(batch_3, num_outputs=<span class="number">64</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0b_1x1&quot;</span>)</span><br><span class="line"></span><br><span class="line">    net = tf.concat([batch_0, batch_1, batch_2, batch_3], <span class="number">3</span>)</span><br></pre></td></tr></table></figure></li></ul><h3 id="&#x5B9A;&#x4E49;&#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;"><a href="#&#x5B9A;&#x4E49;&#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;" class="headerlink" title="&#x5B9A;&#x4E49;&#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;"></a>&#x5B9A;&#x4E49;&#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;</h3><p>&#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;&#x662F;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x5927;&#x7684;&#x6A21;&#x5757;&#x7EC4;&#xFF0C;&#x5305;&#x542B;&#x4E86;5&#x4E2A;Inception Module&#x3002;&#x5176;&#x4E2D;&#x7B2C;&#x4E8C;&#x4E2A;&#x5230;&#x7B2C;&#x4E94;&#x4E2A;Inception Module&#x7684;&#x7ED3;&#x6784;&#x975E;&#x5E38;&#x76F8;&#x4F3C;&#x3002;</p><ul><li><p><strong>&#x7B2C;&#x4E00;&#x4E2A;Inception Module</strong><br>  &#x7B2C;&#x4E00;&#x4E2A;Inception Module&#x7684;&#x540D;&#x79F0;&#x4E3A;Mixed_6a&#xFF0C;&#x5305;&#x542B;&#x4E09;&#x4E2A;&#x5206;&#x652F;&#xFF1A;</p><ol><li>&#x7B2C;&#x4E00;&#x4E2A;&#x5206;&#x652F;&#x4E3A;384&#x901A;&#x9053;&#x7684;3&#xD7;3&#x5377;&#x79EF;&#xFF0C;&#x6B65;&#x957F;&#x4E3A;2</li><li>&#x7B2C;&#x4E8C;&#x4E2A;&#x5206;&#x652F;&#x6709;&#x4E09;&#x5C42;&#xFF0C;&#x5206;&#x522B;&#x4E3A;64&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;&#x548C;&#x4E24;&#x4E2A;96&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;3&#xD7;3&#x5377;&#x79EF;&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x5C42;&#x7684;&#x6B65;&#x957F;&#x4E3A;2&#x3002;</li><li>&#x7B2C;&#x4E09;&#x4E2A;&#x5206;&#x652F;&#x4E3A;3&#xD7;3&#x7684;&#x6C60;&#x5316;&#x5C42;&#xFF0C;&#x6B65;&#x957F;&#x4E3A;2<br>&#x6700;&#x540E;&#x7528;<code>tf.concat</code>&#x5C06;&#x4E09;&#x4E2A;&#x5206;&#x652F;&#x5728;&#x8F93;&#x51FA;&#x901A;&#x9053;&#x4E0A;&#x5408;&#x5E76;&#xFF0C;&#x6700;&#x540E;&#x7684;&#x8F93;&#x51FA;&#x5C3A;&#x5BF8;&#x4E3A;17&#xD7;17&#xD7;(384+96+256)=17&#xD7;17&#xD7;768<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x5B9A;&#x4E49;&#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;,&#x7B2C;&#x4E00;&#x4E2A;Inception&#x6A21;&#x5757;</span></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Mixed_6a&quot;</span>):</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_0&quot;</span>):</span><br><span class="line">        batch_0 = slim.conv2d(net, num_outputs=<span class="number">384</span>, kernel_size=[<span class="number">3</span>,<span class="number">3</span>],</span><br><span class="line">                                stride=<span class="number">2</span>, padding=<span class="string">&quot;VALID&quot;</span>,scope=<span class="string">&quot;Conv2d_1a_1x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_1&quot;</span>):</span><br><span class="line">        batch_1 = slim.conv2d(net, num_outputs=<span class="number">64</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">96</span>, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&quot;Conv2d_0b_3x3&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">96</span>, kernel_size=[<span class="number">3</span>, <span class="number">3</span>],</span><br><span class="line">                                stride=<span class="number">2</span>, padding=<span class="string">&quot;VALID&quot;</span>,scope=<span class="string">&quot;Conv2d_1a_1x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_2&quot;</span>):</span><br><span class="line">        batch_2 = slim.max_pool2d(net,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],stride=<span class="number">2</span>,padding=<span class="string">&quot;VALID&quot;</span>,</span><br><span class="line">                                    scope=<span class="string">&quot;MaxPool_1a_3x3&quot;</span>)</span><br><span class="line"></span><br><span class="line">    net = tf.concat([batch_0, batch_1, batch_2], <span class="number">3</span>)</span><br></pre></td></tr></table></figure></li></ol></li><li><p><strong>&#x7B2C;&#x4E8C;&#x4E2A;Inception Module</strong><br>  &#x540D;&#x79F0;&#x4E3A;Mixed_6b&#xFF0C;&#x5B83;&#x6709;&#x56DB;&#x4E2A;&#x5206;&#x652F;&#xFF1A;</p><ol><li>&#x7B2C;&#x4E00;&#x4E2A;&#x5206;&#x652F;&#x4E3A;193&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;</li><li>&#x7B2C;&#x4E8C;&#x4E2A;&#x5206;&#x652F;&#x6709;&#x4E09;&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#xFF0C;&#x5206;&#x522B;&#x4E3A;128&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;128&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;7&#x5377;&#x79EF;&#xFF0C;&#x4EE5;&#x53CA;192&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;7&#xD7;1&#x5377;&#x79EF;&#xFF0C;&#x8FD9;&#x91CC;&#x7528;&#x5230;&#x4E86;Factorization into small convolutions&#x601D;&#x60F3;&#xFF0C;&#x4E32;&#x8054;&#x7684;1&#xD7;7&#x5377;&#x79EF;&#x548C;7&#xD7;1&#x5377;&#x79EF;&#x76F8;&#x5F53;&#x4E8E;&#x5408;&#x6210;&#x4E00;&#x4E2A;7&#xD7;7&#x5377;&#x79EF;&#x3002;&#x5927;&#x5927;&#x51CF;&#x5C11;&#x4E86;&#x53C2;&#x6570;&#xFF0C;&#x51CF;&#x8F7B;&#x4E86;&#x8FC7;&#x62DF;&#x5408;&#xFF0C;&#x540C;&#x4E8B;&#x591A;&#x4E86;&#x4E00;&#x4E2A;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x589E;&#x52A0;&#x4E86;&#x975E;&#x7EBF;&#x6027;&#x7279;&#x5F81;&#x53D8;&#x6362;&#x3002;</li><li>&#x7B2C;&#x4E09;&#x4E2A;&#x5206;&#x652F;&#x6709;&#x4E94;&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#xFF0C;&#x5206;&#x522B;&#x4E3A;128&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;128&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;7&#xD7;1&#x5377;&#x79EF;&#xFF0C;128&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;128&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;7&#x5377;&#x79EF;&#xFF0C;128&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;7&#xD7;1&#x5377;&#x79EF;&#x548C;192&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;7&#x5377;&#x79EF;</li><li>&#x7B2C;&#x56DB;&#x4E2A;&#x5206;&#x652F;&#x4E3A;3&#xD7;3&#x7684;&#x5E73;&#x5747;&#x6C60;&#x5316;&#x5C42;&#xFF0C;&#x518D;&#x8FDE;&#x63A5;192&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#x3002;<br>&#x6700;&#x540E;&#x56DB;&#x4E2A;&#x5206;&#x652F;&#x5408;&#x5E76;&#xFF0C;&#x8F93;&#x51FA;&#x7684;tensor&#x5C3A;&#x5BF8;&#x4E3A;17&#xD7;17&#xD7;(192+192+192+192)=17&#xD7;17&#xD7;768<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x5B9A;&#x4E49;&#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;,&#x7B2C;&#x4E00;&#x4E2A;Inception&#x6A21;&#x5757;</span></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Mixed_6b&quot;</span>):</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_0&quot;</span>):</span><br><span class="line">        batch_0 = slim.conv2d(net,num_outputs=<span class="number">192</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_1&quot;</span>):</span><br><span class="line">        batch_1 = slim.conv2d(net, num_outputs=<span class="number">128</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">128</span>, kernel_size=[<span class="number">1</span>,<span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0b_1x7&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0c_7x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_2&quot;</span>):</span><br><span class="line">        batch_2 = slim.conv2d(net, num_outputs=<span class="number">128</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">128</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0b_7x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">128</span>, kernel_size=[<span class="number">1</span>, <span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0c_1x7&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">128</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0d_7x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">1</span>, <span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0e_1x7&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_3&quot;</span>):</span><br><span class="line">        batch_3 = slim.avg_pool2d(net, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&quot;AvgPool_0a_3x3&quot;</span>)</span><br><span class="line">        batch_3 = slim.conv2d(batch_3, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0b_1x1&quot;</span>)</span><br><span class="line"></span><br><span class="line">    net = tf.concat([batch_0, batch_1, batch_2,batch_3], <span class="number">3</span>)</span><br></pre></td></tr></table></figure></li></ol></li><li><p><strong>&#x7B2C;&#x4E09;&#x4E2A;Inception Module</strong><br>  &#x540D;&#x79F0;&#x4E3A;Mixed_6c&#xFF0C;&#x548C;&#x524D;&#x4E00;&#x4E2A;Inception Module&#x975E;&#x5E38;&#x76F8;&#x4F3C;&#xFF0C;&#x552F;&#x4E00;&#x4E0D;&#x540C;&#x7684;&#x5730;&#x65B9;&#x5C31;&#x662F;&#x7B2C;&#x4E8C;&#x548C;&#x7B2C;&#x4E09;&#x5206;&#x652F;&#x4E2D;&#x524D;&#x51E0;&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#x7684;&#x8F93;&#x51FA;&#x901A;&#x9053;&#x4ECE;128&#x53D8;&#x6210;&#x4E86;160&#x3002;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x5B9A;&#x4E49;&#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;,&#x7B2C;&#x4E09;&#x4E2A;Inception&#x6A21;&#x5757;</span></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Mixed_6c&quot;</span>):</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_0&quot;</span>):</span><br><span class="line">        batch_0 = slim.conv2d(net,num_outputs=<span class="number">192</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_1&quot;</span>):</span><br><span class="line">        batch_1 = slim.conv2d(net, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">1</span>,<span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0b_1x7&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0c_7x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_2&quot;</span>):</span><br><span class="line">        batch_2 = slim.conv2d(net, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0b_7x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">1</span>, <span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0c_1x7&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0d_7x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">1</span>, <span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0e_1x7&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_3&quot;</span>):</span><br><span class="line">        batch_3 = slim.avg_pool2d(net, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&quot;AvgPool_0a_3x3&quot;</span>)</span><br><span class="line">        batch_3 = slim.conv2d(batch_3, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0b_1x1&quot;</span>)</span><br><span class="line"></span><br><span class="line">    net = tf.concat([batch_0, batch_1, batch_2,batch_3], <span class="number">3</span>)</span><br></pre></td></tr></table></figure></li><li><p><strong>&#x7B2C;&#x56DB;&#x4E2A;Inception Module</strong><br>  &#x540D;&#x79F0;&#x4E3A;Mixed_d&#xFF0C;&#x548C;Mixed_6c&#x5B8C;&#x5168;&#x4E00;&#x81F4;&#x3002;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x5B9A;&#x4E49;&#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;,&#x7B2C;&#x56DB;&#x4E2A;Inception&#x6A21;&#x5757;</span></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Mixed_6d&quot;</span>):</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_0&quot;</span>):</span><br><span class="line">        batch_0 = slim.conv2d(net,num_outputs=<span class="number">192</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_1&quot;</span>):</span><br><span class="line">        batch_1 = slim.conv2d(net, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">1</span>,<span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0b_1x7&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0c_7x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_2&quot;</span>):</span><br><span class="line">        batch_2 = slim.conv2d(net, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0b_7x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">1</span>, <span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0c_1x7&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0d_7x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">1</span>, <span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0e_1x7&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_3&quot;</span>):</span><br><span class="line">        batch_3 = slim.avg_pool2d(net, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&quot;AvgPool_0a_3x3&quot;</span>)</span><br><span class="line">        batch_3 = slim.conv2d(batch_3, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0b_1x1&quot;</span>)</span><br><span class="line"></span><br><span class="line">    net = tf.concat([batch_0, batch_1, batch_2,batch_3], <span class="number">3</span>)</span><br></pre></td></tr></table></figure></li><li><p><strong>&#x7B2C;&#x4E94;&#x4E2A;Inception Module</strong><br>  &#x540D;&#x79F0;&#x4E3A;Mixed_6e&#xFF0C;&#x548C;&#x524D;&#x4E24;&#x4E2A;Inception Module&#x4E5F;&#x5B8C;&#x5168;&#x4E00;&#x81F4;&#x3002;&#x8FD9;&#x662F;&#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;Inception Module&#x3002;&#x6211;&#x4EEC;&#x5C06;Mixed_6e&#x5B58;&#x50A8;&#x4E8E;end_points&#x4E2D;&#xFF0C;&#x4F5C;&#x4E3A;Auxiliary Classifier&#x8F85;&#x52A9;&#x6A21;&#x578B;&#x7684;&#x5206;&#x7C7B;&#x3002;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x5B9A;&#x4E49;&#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;,&#x7B2C;&#x4E94;&#x4E2A;Inception&#x6A21;&#x5757;</span></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Mixed_6e&quot;</span>):</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_0&quot;</span>):</span><br><span class="line">        batch_0 = slim.conv2d(net,num_outputs=<span class="number">192</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_1&quot;</span>):</span><br><span class="line">        batch_1 = slim.conv2d(net, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">1</span>,<span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0b_1x7&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0c_7x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_2&quot;</span>):</span><br><span class="line">        batch_2 = slim.conv2d(net, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0b_7x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">1</span>, <span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0c_1x7&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0d_7x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">1</span>, <span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0e_1x7&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_3&quot;</span>):</span><br><span class="line">        batch_3 = slim.avg_pool2d(net, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&quot;AvgPool_0a_3x3&quot;</span>)</span><br><span class="line">        batch_3 = slim.conv2d(batch_3, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0b_1x1&quot;</span>)</span><br><span class="line"></span><br><span class="line">    net = tf.concat([batch_0, batch_1, batch_2,batch_3], <span class="number">3</span>)</span><br><span class="line"><span class="comment">#&#x7B2C;&#x4E8C;&#x4E2A;&#x6A21;&#x5757;&#x7EC4;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;Inception&#x6A21;&#x5757;&#xFF0C;&#x5C06;Mixed_6e&#x5B58;&#x50A8;&#x4E8E;end_points&#x4E2D;</span></span><br><span class="line">end_points[<span class="string">&quot;Mixed_6e&quot;</span>] = net</span><br></pre></td></tr></table></figure></li></ul><h3 id="&#x5B9A;&#x4E49;&#x7B2C;&#x4E09;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;"><a href="#&#x5B9A;&#x4E49;&#x7B2C;&#x4E09;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;" class="headerlink" title="&#x5B9A;&#x4E49;&#x7B2C;&#x4E09;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;"></a>&#x5B9A;&#x4E49;&#x7B2C;&#x4E09;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;</h3><p>&#x7B2C;&#x4E09;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;&#x5305;&#x542B;&#x4E86;3&#x4E2A;Inception Module&#x3002;&#x5176;&#x4E2D;&#x540E;&#x4E24;&#x4E2A;Inception Module&#x7684;&#x7ED3;&#x6784;&#x975E;&#x5E38;&#x76F8;&#x4F3C;&#x3002;</p><ul><li><p><strong>&#x7B2C;&#x4E00;&#x4E2A;Inception Module</strong><br>  &#x540D;&#x79F0;&#x4E3A;Mixed_7a&#xFF0C;&#x5305;&#x542B;&#x4E86;&#x4E09;&#x4E2A;&#x5206;&#x652F;&#xFF1A;</p><ol><li>&#x7B2C;&#x4E00;&#x4E2A;&#x5206;&#x652F;&#x4E3A;192&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;&#x518D;&#x63A5;320&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;3&#xD7;3&#x5377;&#x79EF;&#xFF0C;&#x6B65;&#x957F;&#x4E3A;2</li><li>&#x7B2C;&#x4E8C;&#x4E2A;&#x5206;&#x652F;&#x6709;&#x56DB;&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#xFF0C;&#x5206;&#x522B;&#x4E3A;192&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;192&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;7&#x5377;&#x79EF;&#xFF0C;192&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;7&#xD7;1&#x5377;&#x79EF;&#x548C;192&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;3&#xD7;3&#x5377;&#x79EF;&#x3002;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#x6B65;&#x957F;&#x4E3A;2&#xFF0C;padding&#x4E3A;VALID</li><li>&#x7B2C;&#x4E09;&#x4E2A;&#x5206;&#x652F;&#x4E3A;&#x4E00;&#x4E2A;3&#xD7;3&#x6700;&#x5927;&#x6C60;&#x5316;&#x5C42;&#xFF0C;&#x6B65;&#x957F;&#x4E3A;2&#xFF0C;padding&#x4E3A;VALID&#x3002;<br>&#x6700;&#x540E;&#x5408;&#x5E76;&#x5F97;&#x5230;&#x7684;tensor&#x5C3A;&#x5BF8;&#x4E3A;&#x4E3A;3&#xD7;3&#xD7;(320+192+768)=8&#xD7;8&#xD7;1280&#x3002;<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x5B9A;&#x4E49;&#x7B2C;&#x4E09;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;,&#x7B2C;&#x4E00;&#x4E2A;Inception&#x6A21;&#x5757;</span></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Mixed_7a&quot;</span>):</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_0&quot;</span>):</span><br><span class="line">        batch_0 = slim.conv2d(net, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_0 = slim.conv2d(net, num_outputs=<span class="number">320</span>, kernel_size=[<span class="number">3</span>, <span class="number">3</span>],stride=<span class="number">2</span>,</span><br><span class="line">                                padding=<span class="string">&quot;VALID&quot;</span>,scope=<span class="string">&quot;Conv2d_1a_3x3&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_1&quot;</span>):</span><br><span class="line">        batch_1 = slim.conv2d(net, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">1</span>,<span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0b_1x7&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0c_7x1&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], stride=<span class="number">2</span>,</span><br><span class="line">                                padding=<span class="string">&quot;VALID&quot;</span>,scope=<span class="string">&quot;Conv2d_1a_3x3&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_2&quot;</span>):</span><br><span class="line">        batch_2 = slim.max_pool2d(net, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], stride=<span class="number">2</span>, padding=<span class="string">&quot;VALID&quot;</span>,</span><br><span class="line">                                    scope=<span class="string">&quot;MaxPool_1a_3x3&quot;</span>)</span><br><span class="line"></span><br><span class="line">    net = tf.concat([batch_0, batch_1, batch_2], <span class="number">3</span>)</span><br></pre></td></tr></table></figure></li></ol></li><li><p><strong>&#x7B2C;&#x4E8C;&#x4E2A;Inception Module</strong><br>  &#x540D;&#x79F0;&#x4E3A;Mixed_7b&#xFF0C;&#x5B83;&#x6709;&#x56DB;&#x4E2A;&#x5206;&#x652F;&#xFF1A;</p><ol><li>&#x7B2C;&#x4E00;&#x4E2A;&#x5206;&#x652F;&#x4E3A;320&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;</li><li>&#x7B2C;&#x4E8C;&#x4E2A;&#x5206;&#x652F;&#x5148;&#x662F;&#x4E00;&#x4E2A;384&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;&#x968F;&#x540E;&#x5728;&#x5206;&#x652F;&#x5185;&#x5F00;&#x4E24;&#x4E2A;&#x5206;&#x652F;&#xFF0C;&#x5206;&#x522B;&#x4E3A;384&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;3&#x5377;&#x79EF;&#x548C;384&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;3&#xD7;1&#x5377;&#x79EF;&#xFF0C;&#x7136;&#x540E;&#x7528;<code>tf.concat</code>&#x5408;&#x5E76;&#xFF0C;&#x5F97;&#x5230;&#x7684;tensor&#x7684;&#x5C3A;&#x5BF8;&#x4E3A;8&#xD7;8&#xD7;(384+384)=8&#xD7;8&#xD7;768</li><li>&#x7B2C;&#x4E09;&#x4E2A;&#x5206;&#x652F;&#x5148;&#x662F;48&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;&#x7136;&#x540E;&#x662F;384&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;3&#xD7;3&#x5377;&#x79EF;&#xFF0C;&#x7136;&#x540E;&#x540C;&#x6837;&#x5728;&#x5206;&#x652F;&#x5185;&#x62C6;&#x6210;&#x4E24;&#x4E2A;&#x5206;&#x652F;&#xFF0C;&#x5206;&#x522B;&#x4E3A;384&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;3&#x5377;&#x79EF;&#x548C;384&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;3&#xD7;1&#x5377;&#x79EF;</li><li>&#x7B2C;&#x56DB;&#x4E2A;&#x5206;&#x652F;&#x4E3A;&#x4E00;&#x4E2A;3&#xD7;3&#x7684;&#x5E73;&#x5747;&#x6C60;&#x5316;&#x5C42;&#x540E;&#x63A5;&#x4E00;&#x4E2A;192&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#x3002;<br>&#x6700;&#x540E;&#x5408;&#x5E76;&#x5F97;&#x5230;&#x7684;tensor&#x7684;&#x5C3A;&#x5BF8;&#x4E3A;8&#xD7;8&#xD7;(320+768+768+192)=8&#xD7;8&#xD7;2048<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x5B9A;&#x4E49;&#x7B2C;&#x4E09;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;,&#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;</span></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Mixed_7b&quot;</span>):</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_0&quot;</span>):</span><br><span class="line">        batch_0 = slim.conv2d(net, num_outputs=<span class="number">320</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_1&quot;</span>):</span><br><span class="line">        batch_1 = slim.conv2d(net, num_outputs=<span class="number">384</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_1 = tf.concat([</span><br><span class="line">            slim.conv2d(batch_1,num_outputs=<span class="number">384</span>,kernel_size=[<span class="number">1</span>,<span class="number">3</span>],scope=<span class="string">&quot;Conv2d_0b_1x3&quot;</span>),</span><br><span class="line">            slim.conv2d(batch_1,num_outputs=<span class="number">384</span>,kernel_size=[<span class="number">3</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0b_3x1&quot;</span>)],axis=<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_2&quot;</span>):</span><br><span class="line">        batch_2 = slim.conv2d(net,num_outputs=<span class="number">448</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2,num_outputs=<span class="number">384</span>,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],scope=<span class="string">&quot;Conv2d_0b_3x3&quot;</span>)</span><br><span class="line">        batch_2 = tf.concat([</span><br><span class="line">            slim.conv2d(batch_2,num_outputs=<span class="number">384</span>,kernel_size=[<span class="number">1</span>,<span class="number">3</span>],scope=<span class="string">&quot;Conv2d_0c_1x3&quot;</span>),</span><br><span class="line">            slim.conv2d(batch_2,num_outputs=<span class="number">384</span>,kernel_size=[<span class="number">3</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0d_3x1&quot;</span>)],axis=<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_3&quot;</span>):</span><br><span class="line">        batch_3 = slim.avg_pool2d(net,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],scope=<span class="string">&quot;AvgPool_0a_3x3&quot;</span>)</span><br><span class="line">        batch_3 = slim.conv2d(batch_3,num_outputs=<span class="number">192</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0b_1x1&quot;</span>)</span><br><span class="line"></span><br><span class="line">net = tf.concat([batch_0, batch_1, batch_2,batch_3], <span class="number">3</span>)</span><br></pre></td></tr></table></figure></li></ol></li><li><p><em>&#x7B2C;&#x4E09;&#x4E2A;Inception Module*</em><br>  &#x540D;&#x79F0;&#x4E3A;Mixed_7c&#xFF0C;&#x5B83;&#x548C;&#x524D;&#x4E00;&#x4E2A;Inception Module&#x5B8C;&#x5168;&#x4E00;&#x81F4;&#x3002;&#x6700;&#x540E;&#x6211;&#x4EEC;&#x8FD4;&#x56DE;&#x8FD9;&#x4E2A;Inception Module&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x4F5C;&#x4E3A;inception_v3_base&#x51FD;&#x6570;&#x7684;&#x6700;&#x7EC8;&#x8F93;&#x51FA;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    <span class="comment"># &#x5B9A;&#x4E49;&#x7B2C;&#x4E09;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;,&#x7B2C;&#x4E09;&#x4E2A;Inception&#x6A21;&#x5757;</span></span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Mixed_7c&quot;</span>):</span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_0&quot;</span>):</span><br><span class="line">            batch_0 = slim.conv2d(net, num_outputs=<span class="number">320</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_1&quot;</span>):</span><br><span class="line">            batch_1 = slim.conv2d(net, num_outputs=<span class="number">384</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">            batch_1 = tf.concat([</span><br><span class="line">                slim.conv2d(batch_1,num_outputs=<span class="number">384</span>,kernel_size=[<span class="number">1</span>,<span class="number">3</span>],scope=<span class="string">&quot;Conv2d_0b_1x3&quot;</span>),</span><br><span class="line">                slim.conv2d(batch_1,num_outputs=<span class="number">384</span>,kernel_size=[<span class="number">3</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0b_3x1&quot;</span>)],axis=<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_2&quot;</span>):</span><br><span class="line">            batch_2 = slim.conv2d(net,num_outputs=<span class="number">448</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">            batch_2 = slim.conv2d(batch_2,num_outputs=<span class="number">384</span>,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],scope=<span class="string">&quot;Conv2d_0b_3x3&quot;</span>)</span><br><span class="line">            batch_2 = tf.concat([</span><br><span class="line">                slim.conv2d(batch_2,num_outputs=<span class="number">384</span>,kernel_size=[<span class="number">1</span>,<span class="number">3</span>],scope=<span class="string">&quot;Conv2d_0c_1x3&quot;</span>),</span><br><span class="line">                slim.conv2d(batch_2,num_outputs=<span class="number">384</span>,kernel_size=[<span class="number">3</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0d_3x1&quot;</span>)],axis=<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_3&quot;</span>):</span><br><span class="line">            batch_3 = slim.avg_pool2d(net,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],scope=<span class="string">&quot;AvgPool_0a_3x3&quot;</span>)</span><br><span class="line">            batch_3 = slim.conv2d(batch_3,num_outputs=<span class="number">192</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0b_1x1&quot;</span>)</span><br><span class="line"> </span><br><span class="line">    net = tf.concat([batch_0, batch_1, batch_2,batch_3], <span class="number">3</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> net,end_points</span><br></pre></td></tr></table></figure></li></ul><h2 id="&#x5B9E;&#x73B0;Inception-v3&#x51FD;&#x6570;"><a href="#&#x5B9E;&#x73B0;Inception-v3&#x51FD;&#x6570;" class="headerlink" title="&#x5B9E;&#x73B0;Inception_v3&#x51FD;&#x6570;"></a>&#x5B9E;&#x73B0;Inception_v3&#x51FD;&#x6570;</h2><p>&#x5B9E;&#x73B0;Inception V3&#x7F51;&#x7EDC;&#x7684;&#x6700;&#x540E;&#x4E00;&#x90E8;&#x5206;&#x2014;&#x2014;&#x5168;&#x5C40;&#x5E73;&#x5747;&#x6C60;&#x5316;&#xFF0C;Softmax&#x548C;Auxiliary Logits&#x3002;</p><ul><li><p><strong>&#x51FD;&#x6570;Inception_v3&#x7684;&#x8F93;&#x5165;&#x53C2;&#x6570;</strong></p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inception_v3</span><span class="params">(inputs,num_classes=<span class="number">1000</span>,is_training=True,droupot_keep_prob = <span class="number">0.8</span>,prediction_fn = slim.softmax,spatial_squeeze = True,reuse = None, scope=<span class="string">&quot;InceptionV3&quot;</span>)</span>:</span> </span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">InceptionV3&#x6574;&#x4E2A;&#x7F51;&#x7EDC;&#x7684;&#x6784;&#x5EFA;</span></span><br><span class="line"><span class="string">param :</span></span><br><span class="line"><span class="string">inputs -- &#x8F93;&#x5165;tensor</span></span><br><span class="line"><span class="string">num_classes -- &#x6700;&#x540E;&#x5206;&#x7C7B;&#x6570;&#x76EE;</span></span><br><span class="line"><span class="string">is_training -- &#x662F;&#x5426;&#x662F;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;</span></span><br><span class="line"><span class="string">droupot_keep_prob -- dropout&#x4FDD;&#x7559;&#x8282;&#x70B9;&#x6BD4;&#x4F8B;</span></span><br><span class="line"><span class="string">prediction_fn -- &#x6700;&#x540E;&#x5206;&#x7C7B;&#x51FD;&#x6570;&#xFF0C;&#x9ED8;&#x8BA4;&#x4E3A;softmax</span></span><br><span class="line"><span class="string">patial_squeeze -- &#x662F;&#x5426;&#x5BF9;&#x8F93;&#x51FA;&#x53BB;&#x9664;&#x7EF4;&#x5EA6;&#x4E3A;1&#x7684;&#x7EF4;&#x5EA6;</span></span><br><span class="line"><span class="string">reuse -- &#x662F;&#x5426;&#x5BF9;&#x7F51;&#x7EDC;&#x548C;Variable&#x91CD;&#x590D;&#x4F7F;&#x7528;</span></span><br><span class="line"><span class="string">scope -- &#x51FD;&#x6570;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;&#x73AF;&#x5883;</span></span><br><span class="line"><span class="string">return:</span></span><br><span class="line"><span class="string">logits -- &#x6700;&#x540E;&#x8F93;&#x51FA;&#x7ED3;&#x679C;</span></span><br><span class="line"><span class="string">end_points -- &#x5305;&#x542B;&#x8F85;&#x52A9;&#x8282;&#x70B9;&#x7684;&#x91CD;&#x8981;&#x8282;&#x70B9;&#x5B57;&#x5178;&#x8868;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>Auxiliary Logits&#x90E8;&#x5206;&#x7684;&#x903B;&#x8F91;</strong><br>  Auxiliary Logits&#x4F5C;&#x4E3A;&#x8F85;&#x52A9;&#x5206;&#x7C7B;&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x5BF9;&#x5206;&#x7C7B;&#x7ED3;&#x679C;&#x9884;&#x6D4B;&#x6709;&#x5F88;&#x5927;&#x7684;&#x5E2E;&#x52A9;&#x3002;&#x901A;&#x8FC7;end_points&#x5F97;&#x5230;Mixed_6e&#x540E;&#xFF1A;</p><ul><li>&#x8FDE;&#x63A5;&#x4E00;&#x4E2A;5&#xD7;5&#x7684;&#x5E73;&#x5747;&#x6C60;&#x5316;&#xFF0C;&#x6B65;&#x957F;&#x4E3A;3&#xFF0C;padding&#x8BBE;&#x4E3A;VALID&#xFF0C;&#x8FD9;&#x6837;&#x8F93;&#x51FA;&#x7684;&#x5C3A;&#x5BF8;&#x5C31;&#x4ECE;17&#xD7;17&#xD7;768&#x53D8;&#x6210;5&#xD7;5&#xD7;768&#x3002;</li><li>&#x63A5;&#x7740;&#x8FDE;&#x63A5;&#x4E00;&#x4E2A;128&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#x548C;&#x4E00;&#x4E2A;768&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;5&#xD7;5&#x5377;&#x79EF;&#xFF0C;&#x8FD9;&#x91CC;&#x6743;&#x91CD;&#x521D;&#x59CB;&#x5316;&#x65B9;&#x5F0F;&#x91CD;&#x8BBE;&#x4E3A;&#x6807;&#x51C6;&#x5DEE;&#x4E3A;0.01&#x7684;&#x6B63;&#x6001;&#x5206;&#x5E03;&#xFF0C;padding&#x8BBE;&#x7F6E;&#x4E3A;VALID&#xFF0C;&#x8F93;&#x51FA;&#x5C3A;&#x5BF8;&#x53D8;&#x4E3A;1&#xD7;1&#xD7;768</li><li>&#x7136;&#x540E;&#x518D;&#x63A5;&#x4E00;&#x4E2A;&#x8F93;&#x51FA;&#x901A;&#x9053;&#x4E3A;num_classes&#x7684;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;&#x4E0D;&#x8BBE;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x548C;&#x89C4;&#x8303;&#x5316;&#x51FD;&#x6570;&#x6743;&#x91CD;&#x521D;&#x59CB;&#x65B9;&#x5F0F;&#x91CD;&#x8BBE;&#x4E3A;&#x6807;&#x51C6;&#x5DEE;&#x4E3A;0.001&#x7684;&#x6B63;&#x6001;&#x5206;&#x5E03;&#xFF0C;&#x8FD9;&#x6837;&#x8F93;&#x51FA;&#x5C31;&#x53D8;&#x6210;&#x4E86;1&#xD7;1&#xD7;1000</li><li>&#x6700;&#x540E;&#x4F7F;&#x7528;<code>tf.squeeze</code>&#x51FD;&#x6570;&#x6D88;&#x9664;&#x8F93;&#x51FA;tensor&#x4E2D;&#x524D;&#x4E24;&#x4E2A;&#x4E3A;1&#x7684;&#x7EF4;&#x5EA6;&#x3002;&#x5C06;&#x8F85;&#x52A9;&#x5206;&#x7C7B;&#x8282;&#x70B9;&#x7684;&#x8F93;&#x51FA;aux_logits&#x50A8;&#x5B58;&#x5230;&#x5B57;&#x5178;&#x8868;end_points&#x4E2D;&#x3002;<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">aux_logits = end_points[<span class="string">&quot;Mixed_6e&quot;</span>]</span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;AuxLogits&quot;</span>):</span><br><span class="line">    aux_logits = slim.avg_pool2d(aux_logits,kernel_size=[<span class="number">5</span>,<span class="number">5</span>],stride=<span class="number">3</span>,</span><br><span class="line">                                    padding=<span class="string">&quot;VALID&quot;</span>,scope=<span class="string">&quot;Avgpool_1a_5x5&quot;</span>)</span><br><span class="line">    aux_logits = slim.conv2d(aux_logits,num_outputs=<span class="number">128</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_1b_1x1&quot;</span>)</span><br><span class="line">    aux_logits = slim.conv2d(aux_logits,num_outputs=<span class="number">768</span>,kernel_size=[<span class="number">5</span>,<span class="number">5</span>],</span><br><span class="line">                                weights_initializer=trunc_normal(<span class="number">0.01</span>),padding=<span class="string">&quot;VALID&quot;</span>,</span><br><span class="line">                                scope=<span class="string">&quot;Conv2d_2a_5x5&quot;</span>)</span><br><span class="line">    aux_logits = slim.conv2d(aux_logits,num_outputs=num_classes,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">                                activation_fn=<span class="literal">None</span>,normalizer_fn=<span class="literal">None</span>,</span><br><span class="line">                                weights_initializer=trunc_normal(<span class="number">0.001</span>),scope=<span class="string">&quot;Conv2d_1b_1x1&quot;</span>)</span><br><span class="line">    <span class="comment">#&#x6D88;&#x9664;tensor&#x4E2D;&#x524D;&#x4E24;&#x4E2A;&#x7EF4;&#x5EA6;&#x4E3A;1&#x7684;&#x7EF4;&#x5EA6;</span></span><br><span class="line">    <span class="keyword">if</span> spatial_squeeze:</span><br><span class="line">        aux_logits = tf.squeeze(aux_logits,axis=[<span class="number">1</span>,<span class="number">2</span>],name=<span class="string">&quot;SpatialSqueeze&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#&#x5C06;&#x8F85;&#x52A9;&#x8282;&#x70B9;&#x5206;&#x7C7B;&#x7684;&#x8F93;&#x51FA;aux_logits&#x5B58;&#x5230;end_points&#x4E2D;</span></span><br><span class="line">    end_points[<span class="string">&quot;AuxLogits&quot;</span>] = aux_logits</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>&#x5206;&#x7C7B;&#x9884;&#x6D4B;&#x90E8;&#x5206;&#x903B;&#x8F91;</strong><br>  &#x5F97;&#x5230;Mixed_7e&#x5373;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#x7684;&#x8F93;&#x51FA;&#x540E;&#xFF1A;</p><ul><li>&#x63A5;&#x4E00;&#x4E2A;8&#xD7;8&#x5168;&#x5C40;&#x5E73;&#x5747;&#x6C60;&#x5316;&#xFF0C;padding&#x8BBE;&#x7F6E;&#x4E3A;VALID&#xFF0C;tensor&#x7684;&#x5C3A;&#x5BF8;&#x5C31;&#x53D8;&#x6210;&#x4E86;1&#xD7;1&#xD7;2048</li><li>&#x7136;&#x540E;&#x63A5;&#x4E00;&#x4E2A;Dropout&#x5C42;&#xFF0C;&#x8282;&#x70B9;&#x4FDD;&#x7559;&#x7387;&#x4E3A;dropout_keep_prob</li><li>&#x63A5;&#x7740;&#x8FDE;&#x63A5;&#x4E00;&#x4E2A;&#x8F93;&#x51FA;&#x901A;&#x9053;&#x4E3A;1000&#x7684;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x548C;&#x89C4;&#x8303;&#x5316;&#x51FD;&#x6570;&#x8BBE;&#x4E3A;&#x7A7A;</li><li>&#x7136;&#x540E;&#x7528;<code>tf.squeeze</code>&#x53BB;&#x9664;&#x8F93;&#x51FA;tensor&#x4E2D;&#x7EF4;&#x6570;&#x4E3A;1&#x7684;&#x7EF4;&#x5EA6;</li><li>&#x6700;&#x540E;&#x8FDE;&#x63A5;&#x4E00;&#x4E2A;Softmax&#x5BF9;&#x7ED3;&#x679C;&#x8FDB;&#x884C;&#x5206;&#x7C7B;&#x9884;&#x6D4B;&#xFF0C;&#x8F93;&#x51FA;&#x7684;&#x7ED3;&#x679C;&#x5B58;&#x50A8;&#x5230;end_points&#x4E2D;<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x6B63;&#x5E38;&#x5206;&#x7C7B;&#x9884;&#x6D4B;</span></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Logits&quot;</span>):</span><br><span class="line">    net = slim.avg_pool2d(net,kernel_size=[<span class="number">8</span>,<span class="number">8</span>],padding=<span class="string">&quot;VALID&quot;</span>,</span><br><span class="line">                            scope=<span class="string">&quot;Avgpool_1a_8x8&quot;</span>)</span><br><span class="line">    net = slim.dropout(net,keep_prob=droupot_keep_prob,scope=<span class="string">&quot;Dropout_1b&quot;</span>)</span><br><span class="line">    end_points[<span class="string">&quot;Logits&quot;</span>] = net</span><br><span class="line"></span><br><span class="line">    logits = slim.conv2d(net,num_outputs=num_classes,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],activation_fn=<span class="literal">None</span>,</span><br><span class="line">                            normalizer_fn=<span class="literal">None</span>,scope=<span class="string">&quot;Conv2d_1c_1x1&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> spatial_squeeze:</span><br><span class="line">        logits = tf.squeeze(logits,axis=[<span class="number">1</span>,<span class="number">2</span>],name=<span class="string">&quot;SpatialSqueeze&quot;</span>)</span><br><span class="line"></span><br><span class="line">end_points[<span class="string">&quot;Logits&quot;</span>] = logits</span><br><span class="line">end_points[<span class="string">&quot;Predictions&quot;</span>] = prediction_fn(logits,scope=<span class="string">&quot;Predictions&quot;</span>)</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>inception_v3&#x51FD;&#x6570;&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#x6C47;&#x603B;&#xFF1A;<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inception_v3</span><span class="params">(inputs,num_classes=<span class="number">1000</span>,is_training=True,droupot_keep_prob = <span class="number">0.8</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                 prediction_fn = slim.softmax,spatial_squeeze = True,reuse = None,scope=<span class="string">&quot;InceptionV3&quot;</span>)</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    InceptionV3&#x6574;&#x4E2A;&#x7F51;&#x7EDC;&#x7684;&#x6784;&#x5EFA;</span></span><br><span class="line"><span class="string">    param :</span></span><br><span class="line"><span class="string">    inputs -- &#x8F93;&#x5165;tensor</span></span><br><span class="line"><span class="string">    num_classes -- &#x6700;&#x540E;&#x5206;&#x7C7B;&#x6570;&#x76EE;</span></span><br><span class="line"><span class="string">    is_training -- &#x662F;&#x5426;&#x662F;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;</span></span><br><span class="line"><span class="string">    droupot_keep_prob -- dropout&#x4FDD;&#x7559;&#x8282;&#x70B9;&#x6BD4;&#x4F8B;</span></span><br><span class="line"><span class="string">    prediction_fn -- &#x6700;&#x540E;&#x5206;&#x7C7B;&#x51FD;&#x6570;&#xFF0C;&#x9ED8;&#x8BA4;&#x4E3A;softmax</span></span><br><span class="line"><span class="string">    patial_squeeze -- &#x662F;&#x5426;&#x5BF9;&#x8F93;&#x51FA;&#x53BB;&#x9664;&#x7EF4;&#x5EA6;&#x4E3A;1&#x7684;&#x7EF4;&#x5EA6;</span></span><br><span class="line"><span class="string">    reuse -- &#x662F;&#x5426;&#x5BF9;&#x7F51;&#x7EDC;&#x548C;Variable&#x91CD;&#x590D;&#x4F7F;&#x7528;</span></span><br><span class="line"><span class="string">    scope -- &#x51FD;&#x6570;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;&#x73AF;&#x5883;</span></span><br><span class="line"><span class="string">    return:</span></span><br><span class="line"><span class="string">    logits -- &#x6700;&#x540E;&#x8F93;&#x51FA;&#x7ED3;&#x679C;</span></span><br><span class="line"><span class="string">    end_points -- &#x5305;&#x542B;&#x8F85;&#x52A9;&#x8282;&#x70B9;&#x7684;&#x91CD;&#x8981;&#x8282;&#x70B9;&#x5B57;&#x5178;&#x8868;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(scope,<span class="string">&quot;InceptionV3&quot;</span>,[inputs,num_classes],</span><br><span class="line">                           reuse=reuse) <span class="keyword">as</span> scope:</span><br><span class="line">        <span class="keyword">with</span> slim.arg_scope([slim.batch_norm,slim.dropout],</span><br><span class="line">                            is_training = is_training):</span><br><span class="line">            net,end_points = inception_v3_base(inputs,scope=scope)     <span class="comment">#&#x524D;&#x9762;&#x5B9A;&#x4E49;&#x7684;&#x6574;&#x4E2A;&#x5377;&#x79EF;&#x7F51;&#x7EDC;&#x90E8;&#x5206;</span></span><br><span class="line"> </span><br><span class="line">            <span class="comment">#&#x8F85;&#x52A9;&#x5206;&#x7C7B;&#x8282;&#x70B9;&#x90E8;&#x5206;</span></span><br><span class="line">            <span class="keyword">with</span> slim.arg_scope([slim.conv2d,slim.max_pool2d,slim.avg_pool2d],</span><br><span class="line">                                stride = <span class="number">1</span>,padding = <span class="string">&quot;SAME&quot;</span>):</span><br><span class="line">                <span class="comment">#&#x901A;&#x8FC7;end_points&#x53D6;&#x5230;Mixed_6e</span></span><br><span class="line">                aux_logits = end_points[<span class="string">&quot;Mixed_6e&quot;</span>]</span><br><span class="line">                <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;AuxLogits&quot;</span>):</span><br><span class="line">                    aux_logits = slim.avg_pool2d(aux_logits,kernel_size=[<span class="number">5</span>,<span class="number">5</span>],stride=<span class="number">3</span>,</span><br><span class="line">                                                 padding=<span class="string">&quot;VALID&quot;</span>,scope=<span class="string">&quot;Avgpool_1a_5x5&quot;</span>)</span><br><span class="line">                    aux_logits = slim.conv2d(aux_logits,num_outputs=<span class="number">128</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_1b_1x1&quot;</span>)</span><br><span class="line">                    aux_logits = slim.conv2d(aux_logits,num_outputs=<span class="number">768</span>,kernel_size=[<span class="number">5</span>,<span class="number">5</span>],</span><br><span class="line">                                             weights_initializer=trunc_normal(<span class="number">0.01</span>),padding=<span class="string">&quot;VALID&quot;</span>,</span><br><span class="line">                                             scope=<span class="string">&quot;Conv2d_2a_5x5&quot;</span>)</span><br><span class="line">                    aux_logits = slim.conv2d(aux_logits,num_outputs=num_classes,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">                                             activation_fn=<span class="literal">None</span>,normalizer_fn=<span class="literal">None</span>,</span><br><span class="line">                                             weights_initializer=trunc_normal(<span class="number">0.001</span>),scope=<span class="string">&quot;Conv2d_1b_1x1&quot;</span>)</span><br><span class="line">                    <span class="comment">#&#x6D88;&#x9664;tensor&#x4E2D;&#x524D;&#x4E24;&#x4E2A;&#x7EF4;&#x5EA6;&#x4E3A;1&#x7684;&#x7EF4;&#x5EA6;</span></span><br><span class="line">                    <span class="keyword">if</span> spatial_squeeze:</span><br><span class="line">                        aux_logits = tf.squeeze(aux_logits,axis=[<span class="number">1</span>,<span class="number">2</span>],name=<span class="string">&quot;SpatialSqueeze&quot;</span>)</span><br><span class="line"> </span><br><span class="line">                    end_points[<span class="string">&quot;AuxLogits&quot;</span>] = aux_logits    <span class="comment">#&#x5C06;&#x8F85;&#x52A9;&#x8282;&#x70B9;&#x5206;&#x7C7B;&#x7684;&#x8F93;&#x51FA;aux_logits&#x5B58;&#x5230;end_points&#x4E2D;</span></span><br><span class="line"> </span><br><span class="line">                <span class="comment">#&#x6B63;&#x5E38;&#x5206;&#x7C7B;&#x9884;&#x6D4B;</span></span><br><span class="line">                <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Logits&quot;</span>):</span><br><span class="line">                    net = slim.avg_pool2d(net,kernel_size=[<span class="number">8</span>,<span class="number">8</span>],padding=<span class="string">&quot;VALID&quot;</span>,</span><br><span class="line">                                          scope=<span class="string">&quot;Avgpool_1a_8x8&quot;</span>)</span><br><span class="line">                    net = slim.dropout(net,keep_prob=droupot_keep_prob,scope=<span class="string">&quot;Dropout_1b&quot;</span>)</span><br><span class="line">                    end_points[<span class="string">&quot;Logits&quot;</span>] = net</span><br><span class="line"> </span><br><span class="line">                    logits = slim.conv2d(net,num_outputs=num_classes,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],activation_fn=<span class="literal">None</span>,</span><br><span class="line">                                         normalizer_fn=<span class="literal">None</span>,scope=<span class="string">&quot;Conv2d_1c_1x1&quot;</span>)</span><br><span class="line">                    <span class="keyword">if</span> spatial_squeeze:</span><br><span class="line">                        logits = tf.squeeze(logits,axis=[<span class="number">1</span>,<span class="number">2</span>],name=<span class="string">&quot;SpatialSqueeze&quot;</span>)</span><br><span class="line">                </span><br><span class="line">                end_points[<span class="string">&quot;Logits&quot;</span>] = logits</span><br><span class="line">                end_points[<span class="string">&quot;Predictions&quot;</span>] = prediction_fn(logits,scope=<span class="string">&quot;Predictions&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> logits,end_points</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 卷积网络 </tag>
            
            <tag> TensorFlow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文阅读笔记10：FCOS:Fully Convolutional One-Stage Object Detection</title>
      <link href="/2019/08/09/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B010/"/>
      <url>/2019/08/09/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B010/</url>
      
        <content type="html"><![CDATA[<blockquote><p>&#x8BBA;&#x6587;&#x5730;&#x5740;&#xFF1A;<a href="https://arxiv.org/pdf/1904.01355.pdf" target="_blank" rel="noopener">https://arxiv.org/pdf/1904.01355.pdf</a><br>&#x4EE3;&#x7801;&#x5730;&#x5740;&#xFF1A;<a href="https://github.com/tianzhi0549/FCOS" target="_blank" rel="noopener">https://github.com/tianzhi0549/FCOS</a></p></blockquote><h1 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h1><p>&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x79CD;&#x5168;&#x5377;&#x79EF;&#x7684; one-stage &#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x5668;&#xFF08;FCOS, Fully Convolutional One Stage&#xFF09;, &#x5B83;&#x4EE5;&#x5BF9;&#x6BCF;&#x4E2A;&#x50CF;&#x7D20;&#x8FDB;&#x884C;&#x9884;&#x6D4B;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x89E3;&#x51B3;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x95EE;&#x9898;&#xFF0C;&#x7C7B;&#x4F3C;&#x4E8E;&#x8BED;&#x4E49;&#x5206;&#x5272;&#x3002;&#x51E0;&#x4E4E;&#x6240;&#x6709;&#x7684; SOTA &#x7269;&#x4F53;&#x68C0;&#x6D4B;&#x5668;&#xFF0C;&#x5982; RetinaNet&#xFF0C;SSD&#xFF0C;YOLOv3 &#x548C; Faster R-CNN &#x90FD;&#x4F9D;&#x8D56;&#x4E8E;&#x9884;&#x5B9A;&#x4E49;&#x7684; anchor box&#x3002;&#x76F8;&#x6BD4;&#x4E4B;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x7684; FCOS &#x4E0D;&#x9700;&#x8981; anchor box&#xFF0C;&#x540C;&#x65F6;&#x4E5F;&#x4E0D;&#x9700;&#x8981; proposals (&#x5373; One-Stage)&#x3002;&#x901A;&#x8FC7;&#x6D88;&#x9664;&#x5BF9;&#x9884;&#x5B9A;&#x4E49; anchor &#x7684;&#x4F9D;&#x8D56;&#xFF0C;FCOS &#x5B8C;&#x5168;&#x907F;&#x514D;&#x4E86;&#x4E0E; anchor box &#x76F8;&#x5173;&#x7684;&#x590D;&#x6742;&#x8BA1;&#x7B97;&#xFF0C;&#x4F8B;&#x5982;&#x5728;&#x8BAD;&#x7EC3;&#x671F;&#x95F4;&#x8BA1;&#x7B97; overlapping &#x5E76;&#x663E;&#x7740;&#x51CF;&#x5C11; training memory footprint&#x3002;&#x66F4;&#x91CD;&#x8981;&#x7684;&#x662F;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x907F;&#x514D;&#x4E86;&#x4E0E; anchor &#x76F8;&#x5173;&#x7684;&#x6240;&#x6709;&#x8D85;&#x53C2;&#x6570;&#xFF0C;&#x8FD9;&#x4E9B;&#x53C2;&#x6570;&#x901A;&#x5E38;&#x5BF9;&#x6700;&#x7EC8;&#x68C0;&#x6D4B;&#x6027;&#x80FD;&#x975E;&#x5E38;&#x654F;&#x611F;&#x3002;&#x51ED;&#x501F;&#x552F;&#x4E00;&#x7684;&#x540E;&#x5904;&#x7406;&#x64CD;&#x4F5C;&#x975E;&#x6700;&#x5927;&#x6291;&#x5236;&#xFF08;NMS&#xFF09;&#xFF0C;&#x6211;&#x4EEC;&#x7684; FCOS &#x4F18;&#x4E8E;&#x4E4B;&#x524D;&#x7684; anchor-based one-stage detectors&#xFF0C;&#x5E76;&#x4E14;&#x7ED3;&#x6784;&#x66F4;&#x7B80;&#x5355;&#x3002;&#x6211;&#x4EEC;&#x9996;&#x6B21;&#x5C55;&#x793A;&#x4E86;&#x4E00;&#x79CD;&#x66F4;&#x52A0;&#x7B80;&#x5355;&#x7075;&#x6D3B;&#x7684;&#x68C0;&#x6D4B;&#x6846;&#x67B6;&#xFF0C;&#x53EF;&#x4EE5;&#x63D0;&#x9AD8;&#x68C0;&#x6D4B;&#x7CBE;&#x5EA6;&#x3002;&#x6211;&#x4EEC;&#x5E0C;&#x671B; FCOS &#x6846;&#x67B6;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x8BB8;&#x591A;&#x5176;&#x4ED6;&#x5B9E;&#x4F8B;&#x7EA7;&#x4EFB;&#x52A1;&#x7B80;&#x5355;&#x800C;&#x5F3A;&#x5927;&#x7684;&#x66FF;&#x4EE3;&#x65B9;&#x6848;&#x3002;</p><a id="more"></a><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>Anchor-based&#x68C0;&#x6D4B;&#x5668;&#x5B58;&#x5728;&#x7684;&#x7F3A;&#x70B9;&#xFF1A;</p><ul><li>&#x5982; Faster R-CNN &#x548C; Focal Loss &#x6240;&#x793A;&#xFF0C;&#x68C0;&#x6D4B;&#x6027;&#x80FD;&#x5BF9;&#x4E8E;&#x5C3A;&#x5BF8;&#xFF0C;&#x5BBD;&#x9AD8;&#x6BD4;&#x548C; anchor &#x6570;&#x91CF;&#x975E;&#x5E38;&#x654F;&#x611F;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x5728;RetinaNet &#x4E2D;&#xFF0C;&#x6839;&#x636E; COCO &#x7684; benchmark &#x4E0A;&#xFF0C;&#x4EC5;&#x4EC5;&#x6539;&#x53D8;&#x8FD9;&#x4E9B;&#x8D85;&#x53C2;&#x6570;&#x5C31;&#x4F1A;&#x5F71;&#x54CD;AP&#x7684;&#x6027;&#x80FD;&#x63D0;&#x5347;4&#xFF05;[13]&#x3002; &#x56E0;&#x6B64;&#xFF0C;&#x5BF9;&#x4E8E; anchor-based &#x68C0;&#x6D4B;&#x5668;&#x9700;&#x8981;&#x4ED4;&#x7EC6;&#x8C03;&#x6574;&#x8FD9;&#x4E9B;&#x8D85;&#x53C2;&#x6570;&#x3002;</li><li>&#x5373;&#x4F7F;&#x7ECF;&#x8FC7;&#x7CBE;&#x5FC3;&#x8BBE;&#x8BA1;&#xFF0C;&#x7531;&#x4E8E; anchor box &#x7684;&#x6BD4;&#x4F8B;&#x548C;&#x5BBD;&#x9AD8;&#x6BD4;&#x4FDD;&#x6301;&#x56FA;&#x5B9A;&#xFF0C;detectors &#x5728;&#x5904;&#x7406;&#x5177;&#x6709;&#x8F83;&#x5927;&#x5F62;&#x72B6;&#x53D8;&#x5316;&#x7684;&#x7269;&#x4F53;&#x96C6;&#x5408;&#x65F6;&#x4F1A;&#x9047;&#x5230;&#x56F0;&#x96BE;&#xFF0C;&#x7279;&#x522B;&#x662F;&#x5BF9;&#x4E8E;&#x5C0F;&#x7269;&#x4F53;&#x3002; &#x9884;&#x5B9A;&#x4E49;&#x7684; anchor box &#x4E5F;&#x59A8;&#x788D;&#x4E86;&#x63A2;&#x6D4B;&#x5668;&#x7684;&#x6CDB;&#x5316;&#x80FD;&#x529B;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4EEC;&#x9700;&#x8981;&#x5728;&#x5177;&#x6709;&#x4E0D;&#x540C;&#x7269;&#x4F53;&#x5C3A;&#x5BF8;&#x6216;&#x5BBD;&#x9AD8;&#x6BD4;&#x7684;&#x65B0;&#x63A2;&#x6D4B;&#x4EFB;&#x52A1;&#x4E0A;&#x8FDB;&#x884C;&#x91CD;&#x65B0;&#x8BBE;&#x5B9A;&#x3002;</li><li>&#x4E3A;&#x4E86;&#x5B9E;&#x73B0;&#x9AD8;&#x53EC;&#x56DE;&#x7387;&#xFF0C;anchor-based &#x68C0;&#x6D4B;&#x5668;&#x9700;&#x8981;&#x5C06; anchor box &#x5BC6;&#x96C6;&#x5730;&#x653E;&#x7F6E;&#x5728;&#x8F93;&#x5165;&#x56FE;&#x50CF;&#x4E0A;&#xFF08;&#x4F8B;&#x5982;&#xFF0C;&#x5728;&#x7279;&#x5F81;&#x91D1;&#x5B57;&#x5854;&#x7F51;&#x7EDC;(FPN)&#x4E2D;, &#x5BF9;&#x4E8E;&#x77ED;&#x8FB9;&#x50CF;&#x7D20;&#x4E3A; 800 &#x7684;&#x8F93;&#x5165;&#x56FE;&#x50CF;, &#x4F1A;&#x4EA7;&#x751F;&#x8D85;&#x8FC7; 180K &#x7684; anchor box&#xFF09;&#x3002; &#x5927;&#x591A;&#x6570;&#x8FD9;&#x4E9B; anchor box &#x5728;&#x8BAD;&#x7EC3;&#x671F;&#x95F4;&#x4F1A;&#x88AB;&#x6807;&#x8BB0;&#x4E3A; negative samples&#x3002; &#x8FC7;&#x591A;&#x7684; negative samples &#x52A0;&#x5267;&#x4E86; training &#x8FC7;&#x7A0B;&#x4E2D;&#x6B63;&#x8D1F;&#x6837;&#x672C;&#x4E4B;&#x95F4;&#x7684;&#x4E0D;&#x5E73;&#x8861;&#x6027;&#x3002;</li><li>&#x5F53;&#x5728;&#x8BAD;&#x7EC3;&#x671F;&#x95F4;&#x8BA1;&#x7B97;&#x6240;&#x6709; anchor box &#x548C; GT box &#x4E4B;&#x95F4;&#x7684; IOU &#x65F6;&#xFF0C;&#x8FC7;&#x591A;&#x6570;&#x91CF;&#x7684; anchor box &#x4E5F;&#x663E;&#x8457;&#x589E;&#x52A0;&#x4E86;&#x8BA1;&#x7B97;&#x91CF;&#x548C;&#x5B58;&#x50A8;&#x5668;&#x5360;&#x7528;&#x91CF;&#x3002;</li></ul><p>&#x57FA;&#x4E8E; anchor-based &#x7684;&#x68C0;&#x6D4B;&#x65B9;&#x6CD5;&#x504F;&#x79BB;&#x5168;&#x5377;&#x79EF;&#x9884;&#x6D4B;&#x7684;&#x6846;&#x67B6;&#xFF0C;&#x800C;&#x672C;&#x6587;&#x5C1D;&#x8BD5;&#x7C7B;&#x4F3C;&#x4E8E;&#x8BED;&#x4E49;&#x5206;&#x5272;&#x7684;&#x50CF;&#x7D20;&#x7EA7;&#x9884;&#x6D4B;&#x5E94;&#x7528;&#x81F3;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x4EFB;&#x52A1;&#x4E2D;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#xFF0C;&#x8BED;&#x4E49;&#x5206;&#x5272;&#xFF0C;&#x5173;&#x952E;&#x70B9;&#x68C0;&#x6D4B;&#x7B49;&#x51E0;&#x79CD;&#x4EFB;&#x52A1;&#x53EF;&#x4EE5;&#x7CC5;&#x5408;&#x5230;&#x4E00;&#x4E2A;&#x6A21;&#x578B;&#x4E2D;&#x3002;&#x4E00;&#x4E9B;&#x5DE5;&#x4F5C;&#x5982; Dense-Box&#xFF0C;UnitBox &#x66FE;&#x5229;&#x7528;&#x57FA;&#x4E8E; FCN-based &#x7684;&#x6846;&#x67B6;&#x8FDB;&#x884C;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x3002;&#x4F46;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x5728;&#x67D0;&#x4E00;&#x5C42;&#x7684; feature map &#x4E0A;&#x76F4;&#x63A5;&#x9884;&#x6D4B;4D&#x5750;&#x6807;&#x53CA;&#x7C7B;&#x522B;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#x5DE6;&#x4FA7;&#x6240;&#x793A;&#xFF0C;4D&#x5411;&#x91CF;&#x8868;&#x793A;&#x4E86;&#x8FB9;&#x6846;&#x7684;&#x8FB9;&#x8DDD;&#x79BB;&#x8BE5;&#x50CF;&#x7D20;&#x70B9;&#x7684;&#x504F;&#x79FB;&#x3002;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x4E0E;&#x8BED;&#x4E49;&#x5206;&#x5272;&#x7684;&#x5168;&#x5377;&#x79EF;&#x76F8;&#x7C7B;&#x4F3C;&#xFF0C;&#x4F46;&#x6BCF;&#x4E2A;&#x4F4D;&#x7F6E;&#x9700;&#x8981;&#x56DE;&#x5F52;&#x4E00;&#x4E2A;&#x8FDE;&#x7EED;&#x7684;4D&#x5411;&#x91CF;&#x3002;&#x4E3A;&#x4E86;&#x5904;&#x7406;&#x4E0D;&#x540C;&#x5927;&#x5C0F;&#x7684;&#x8FB9;&#x6846;&#xFF0C;DenseBox &#x5C06;&#x8BAD;&#x7EC3;&#x56FE;&#x7247;&#x8C03;&#x6574;&#x4E3A;&#x56FA;&#x5B9A;&#x5C3A;&#x5BF8;&#x3002;DenseBox &#x5FC5;&#x987B;&#x8981;&#x5728;&#x56FE;&#x50CF;&#x91D1;&#x5B57;&#x5854;&#x4E0A;&#x8FDB;&#x884C;&#x68C0;&#x6D4B;&#xFF0C;&#x8FDD;&#x53CD;&#x4E86;&#x5168;&#x5377;&#x79EF;&#x5BF9;&#x6240;&#x6709;&#x5377;&#x79EF;&#x53EA;&#x8BA1;&#x7B97;&#x4E00;&#x6B21;&#x7684;&#x601D;&#x60F3;&#x3002;&#x800C;&#x4E14;&#xFF0C;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x5927;&#x591A;&#x5E94;&#x7528;&#x5728;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x7684;&#x7279;&#x6B8A;&#x573A;&#x666F;&#x4E2D;&#xFF0C;&#x6BD4;&#x5982;&#x6587;&#x672C;&#x68C0;&#x6D4B;&#x6216;&#x8005;&#x4EBA;&#x8138;&#x68C0;&#x6D4B;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#x53F3;&#x4FA7;&#x6240;&#x793A;&#xFF0C;&#x8F83;&#x591A;&#x7684;&#x91CD;&#x53E0;&#x6846;&#x9020;&#x6210;&#x4E86;&#x6A21;&#x7CCA;&#xFF0C;&#x65E0;&#x6CD5;&#x786E;&#x5B9A;&#x91CD;&#x53E0;&#x533A;&#x57DF;&#x5E94;&#x8BE5;&#x5BF9;&#x54EA;&#x4E2A;&#x6846;&#x8FDB;&#x884C;&#x56DE;&#x5F52;&#x3002;&#x672C;&#x6587;&#x8BC1;&#x660E;&#x901A;&#x8FC7;FPN&#x7ED3;&#x6784;&#x53EF;&#x4EE5;&#x6D88;&#x9664;&#x8FD9;&#x79CD;&#x6A21;&#x7CCA;&#x3002;&#x672C;&#x6587;&#x53D1;&#x73B0;&#x5728;&#x8DDD;&#x79BB;&#x76EE;&#x6807;&#x4E2D;&#x5FC3;&#x8F83;&#x8FDC;&#x7684;&#x4F4D;&#x7F6E;&#x4F1A;&#x9884;&#x6D4B;&#x4E00;&#x5B9A;&#x6570;&#x91CF;&#x4F4E;&#x8D28;&#x91CF;&#x7684;&#x8FB9;&#x754C;&#x6846;&#x3002;&#x4E3A;&#x4E86;&#x6253;&#x538B;&#x8FD9;&#x4E9B;&#x8FB9;&#x6846;&#xFF0C;&#x672C;&#x6587;&#x8BBE;&#x8BA1;&#x4E86;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5206;&#x652F;&#x201D;center-ness&#x201D;&#xFF0C;&#x7528;&#x4E8E;&#x9884;&#x6D4B;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x4E0E;&#x5BF9;&#x5E94;&#x8FB9;&#x6846;&#x4E2D;&#x5FC3;&#x7684;&#x504F;&#x5DEE;&#x3002;&#x6240;&#x5F97;&#x7684;&#x5206;&#x6570;&#x7528;&#x4E8E; down-weight &#x4F4E;&#x8D28;&#x91CF;&#x7684;&#x68C0;&#x6D4B;&#x6846;&#xFF0C;&#x6700;&#x540E;&#x901A;&#x8FC7;NMS&#x5C06;&#x68C0;&#x6D4B;&#x7ED3;&#x679C;&#x8FDB;&#x884C;&#x878D;&#x5408;&#x3002;</p><p><img src="/2019/08/09/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;10/1.png" alt></p><p>&#x8FD9;&#x4E2A;&#x65B0;&#x7684;&#x68C0;&#x6D4B;&#x6846;&#x67B6;&#x62E5;&#x6709;&#x4EE5;&#x4E0B;&#x4F18;&#x70B9;&#xFF1A;</p><ul><li>&#x68C0;&#x6D4B;&#x4EFB;&#x52A1;&#x73B0;&#x5728;&#x4E0E;&#x8BB8;&#x591A;&#x5176;&#x4ED6; FCN &#x53EF;&#x89E3;&#x51B3;&#x7684;&#x4EFB;&#x52A1;&#xFF08;&#x4F8B;&#x5982;&#x8BED;&#x4E49;&#x5206;&#x5272;&#xFF09;&#x76F8;&#x7EDF;&#x4E00;&#xFF0C;&#x4ECE;&#x800C;&#x53EF;&#x4EE5;&#x66F4;&#x8F7B;&#x677E;&#x5730;&#x91CD;&#x590D;&#x4F7F;&#x7528;&#x8FD9;&#x4E9B;&#x4EFB;&#x52A1;&#x4E2D;&#x7684;&#x60F3;&#x6CD5;&#x3002;</li><li>&#x68C0;&#x6D4B;&#x53D8;&#x4E3A; proposal free &#x548C; anchor free&#xFF0C;&#x8FD9;&#x663E;&#x8457;&#x51CF;&#x5C11;&#x4E86;&#x8D85;&#x53C2;&#x6570;&#x7684;&#x6570;&#x91CF;&#x3002; &#x8D85;&#x53C2;&#x6570;&#x901A;&#x5E38;&#x9700;&#x8981;&#x542F;&#x53D1;&#x5F0F;&#x8C03;&#x6574;&#xFF0C;&#x5E76;&#x4E14;&#x6D89;&#x53CA;&#x8BB8;&#x591A;&#x6280;&#x5DE7;&#x624D;&#x80FD;&#x83B7;&#x5F97;&#x826F;&#x597D;&#x7684;&#x6027;&#x80FD;&#x3002; &#x800C;&#x6211;&#x4EEC;&#x7684;&#x65B0;&#x68C0;&#x6D4B;&#x6846;&#x67B6;&#x4F7F;&#x68C0;&#x6D4B;&#x5668;&#xFF0C;&#x7279;&#x522B;&#x662F;&#x4F7F;&#x5B83;&#x7684; training &#x9636;&#x6BB5;&#x53D8;&#x5F97;&#x76F8;&#x5F53;&#x7B80;&#x5355;&#x3002; &#x6B64;&#x5916;&#xFF0C;&#x901A;&#x8FC7;&#x6D88;&#x9664; anchor box&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x65B0;&#x63A2;&#x6D4B;&#x5668;&#x5B8C;&#x5168;&#x907F;&#x514D;&#x4E86;&#x590D;&#x6742;&#x7684; IOU &#x8BA1;&#x7B97;&#x4EE5;&#x53CA;&#x8BAD;&#x7EC3;&#x671F;&#x95F4; anchor box &#x548C; GT box &#x4E4B;&#x95F4;&#x7684;&#x5339;&#x914D;&#xFF0C;&#x5E76;&#x5C06;&#x603B;&#x7684;&#x8BAD;&#x7EC3;&#x5185;&#x5B58;&#x5360;&#x7528;(training memory footprint)&#x51CF;&#x5C11;&#x4E86;2&#x500D;&#x5DE6;&#x53F3;&#x3002;</li><li>&#x6211;&#x4EEC;&#x5728; One-Stage Detectors &#x4E2D;&#x5B9E;&#x73B0;&#x4E86; SOTA &#x7684;&#x7ED3;&#x679C;&#x3002; &#x6211;&#x4EEC;&#x7684;&#x5B9E;&#x9A8C;&#x8FD8;&#x8868;&#x660E;&#xFF0C;&#x672C;&#x6587;&#x6240;&#x63D0;&#x51FA;&#x7684; FCOS &#x53EF;&#x4EE5;&#x7528;&#x4F5C; Two-Stage Detectors &#x4E2D;&#x7684; RPN&#xFF0C;&#x5E76;&#x4E14;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x6BD4;&#x57FA;&#x4E8E; anchor &#x7684; RPN &#x66F4;&#x597D;&#x7684;&#x6027;&#x80FD;&#x3002; &#x9274;&#x4E8E;&#x66F4;&#x7B80;&#x5355;&#x7684; anchor free Detectors &#x5177;&#x6709;&#x66F4;&#x597D;&#x7684;&#x6027;&#x80FD;&#xFF0C;&#x6211;&#x4EEC;&#x9F13;&#x52B1;&#x5927;&#x5BB6;&#x91CD;&#x65B0;&#x8003;&#x8651;&#x7269;&#x4F53;&#x68C0;&#x6D4B;&#x4E2D; anchor &#x7684;&#x5FC5;&#x8981;&#x6027;&#xFF0C;&#x867D;&#x7136;&#x76EE;&#x524D;&#x8FD9;&#x88AB;&#x8BA4;&#x4E3A;&#x662F;&#x68C0;&#x6D4B;&#x4EFB;&#x52A1;&#x7684;&#x4E8B;&#x5B9E;&#x6807;&#x51C6;(defacto standard for detection)&#x3002;</li><li>&#x6211;&#x4EEC;&#x6240;&#x63D0;&#x51FA;&#x7684; detector &#x53EA;&#x9700;&#x505A;&#x5F88;&#x5C0F;&#x7684;&#x4FEE;&#x6539;&#x5C31;&#x53EF;&#x4EE5;&#x7ACB;&#x5373;&#x6269;&#x5C55;&#x5230;&#x5176;&#x4ED6;&#x89C6;&#x89C9;&#x4EFB;&#x52A1;&#xFF0C;&#x5305;&#x62EC;&#x5B9E;&#x4F8B;&#x5206;&#x5272;&#x548C;&#x5173;&#x952E;&#x70B9;&#x68C0;&#x6D4B;&#x3002; &#x6211;&#x4EEC;&#x76F8;&#x4FE1;&#x8FD9;&#x79CD;&#x65B0;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x6210;&#x4E3A;&#x8BB8;&#x591A;&#x5B9E;&#x4F8B;&#x7EA7;&#x9884;&#x6D4B;&#x95EE;&#x9898;&#x7684;&#x65B0; baseline&#x3002;</li></ul><h1 id="Related-Work"><a href="#Related-Work" class="headerlink" title="Related Work"></a>Related Work</h1><ul><li><p><strong>Anchor-based Detectors</strong></p></li><li><p><strong>Anchor-free Detectors</strong></p></li></ul><h1 id="Our-Approach"><a href="#Our-Approach" class="headerlink" title="Our Approach"></a>Our Approach</h1><p>&#x5728;&#x672C;&#x8282;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x9996;&#x5148;&#x4EE5;&#x9010;&#x50CF;&#x7D20;&#x9884;&#x6D4B;&#x7684;&#x65B9;&#x5F0F;&#x91CD;&#x65B0;&#x6784;&#x9020;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x4EFB;&#x52A1;&#x3002; &#x63A5;&#x4E0B;&#x6765;&#xFF0C;&#x6211;&#x4EEC;&#x5C55;&#x793A;&#x4E86;&#x6211;&#x4EEC;&#x5982;&#x4F55;&#x5229;&#x7528;&#x591A;&#x7EA7;&#x9884;&#x6D4B;(multi-level prediction)&#x6765;&#x6539;&#x5584;&#x53EC;&#x56DE;&#x7387;&#x5E76;&#x89E3;&#x51B3;&#x8BAD;&#x7EC3;&#x4E2D;&#x91CD;&#x53E0;&#x8FB9;&#x754C;&#x6846;&#x5BFC;&#x81F4;&#x7684;&#x6A21;&#x7CCA;&#x6027;&#x3002; &#x6700;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x5C55;&#x793A;&#x4E86;&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x7684; &#x201C;center-ness&#x201D; &#x5206;&#x652F;&#xFF0C;&#x5B83;&#x6709;&#x52A9;&#x4E8E;&#x6291;&#x5236;&#x4F4E;&#x8D28;&#x91CF;&#x7684;&#x68C0;&#x6D4B;&#x8FB9;&#x754C;&#x6846;&#x5E76;&#x5927;&#x5E45;&#x63D0;&#x9AD8;&#x6574;&#x4F53;&#x6027;&#x80FD;.</p><h2 id="Fully-Convolutional-One-Stage-Object-Detector"><a href="#Fully-Convolutional-One-Stage-Object-Detector" class="headerlink" title="Fully Convolutional One-Stage Object Detector"></a>Fully Convolutional One-Stage Object Detector</h2><p>&#x8BBE;$F_i \in R^{H&#xD7;W&#xD7;C}$&#x662F; backbone CNN &#x7B2C; $i$ &#x5C42;&#x7684; feature maps&#xFF0C;$s$ &#x4E3A;&#x8BE5;&#x5C42;&#x4E4B;&#x524D;&#x7684;&#x603B;&#x6B65;&#x957F;&#x3002;&#x8F93;&#x5165;&#x56FE;&#x7247;&#x7684;&#x771F;&#x5B9E;&#x6846;&#x5B9A;&#x4E49;&#x4E3A;$\lbrace B_i \rbrace$&#xFF0C;$B_i=(x_0^{(i)},y_0^{(i)},x_1^{(i)},y_1^{(i)},c^{(i)})\in R^4&#xD7;\lbrace1,2&#x2026;C\rbrace$&#x3002;&#x5176;&#x4E2D;$(x_0^{(i)},y_0^{(i)})$&#x548C;$(x_1^{(i)},y_1^{(i)})$&#x5206;&#x522B;&#x4E3A;&#x8FB9;&#x754C;&#x6846;&#x5DE6;&#x4E0A;&#x89D2;&#x70B9;&#x548C;&#x53F3;&#x4E0B;&#x89D2;&#x70B9;&#x7684;&#x5750;&#x6807;&#xFF0C;$c^{(i)}$&#x4E3A;&#x8FB9;&#x754C;&#x6846;&#x5185;&#x7684;object&#x7684;&#x7C7B;&#x522B;&#x3002;</p><p>&#x5BF9;&#x4E8E; feature maps $F_i$ &#x4E0A;&#x7684;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;$(x,y)$&#xFF0C;&#x6211;&#x4EEC;&#x90FD;&#x53EF;&#x4EE5;&#x5C06;&#x5176;&#x6620;&#x5C04;&#x56DE;&#x8F93;&#x5165;&#x56FE;&#x50CF;&#x7684;&#x5750;&#x6807;$(\lfloor\frac{s}{2}\rfloor+xs,\lfloor\frac{s}{2}\rfloor+ys)$&#xFF0C;&#x5B83;&#x5DEE;&#x4E0D;&#x591A;&#x521A;&#x597D;&#x4F4D;&#x4E8E;&#x4F4D;&#x7F6E;$(x,y)$&#x7684;&#x611F;&#x53D7;&#x91CE;&#x4E2D;&#x5FC3;&#x9644;&#x8FD1;&#x3002;&#x4E0E; anchor based detectors &#x5C06;&#x8F93;&#x5165;&#x56FE;&#x50CF;&#x4E0A;&#x7684;&#x4F4D;&#x7F6E;&#x89C6;&#x4E3A; anchor box &#x7684;&#x4E2D;&#x5FC3;&#x5E76;&#x5BF9;&#x8FD9;&#x4E9B; anchor box &#x7684;&#x76EE;&#x6807;&#x8FB9;&#x754C;&#x6846;&#x8FDB;&#x884C;&#x56DE;&#x5F52;&#x4E0D;&#x540C;&#xFF0C;&#x6211;&#x4EEC;&#x76F4;&#x63A5;&#x56DE;&#x5F52;&#x6BCF;&#x4E2A;&#x4F4D;&#x7F6E;&#x7684;&#x76EE;&#x6807;&#x8FB9;&#x754C;&#x6846;&#x3002; &#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x7684; Detector &#x76F4;&#x63A5;&#x5C06; location &#x89C6;&#x4E3A;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x800C;&#x4E0D;&#x662F;&#x5C06; anchor box &#x89C6;&#x4E3A;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#xFF0C;&#x8FD9;&#x4E0E;&#x7528;&#x4E8E;&#x8BED;&#x4E49;&#x5206;&#x5272;&#x7684;FCN&#x76F8;&#x540C;&#x3002;</p><p>&#x5177;&#x4F53;&#x800C;&#x8A00;&#xFF0C;&#x5982;&#x679C;&#x4F4D;&#x7F6E;$(x,y)$&#x843D;&#x5165;&#x5230;&#x4EFB;&#x4F55; GT Box &#x5185;&#x90E8;, &#x90A3;&#x4E48;&#x4E45;&#x5C06;&#x5176;&#x89C6;&#x4E3A;&#x6B63;&#x6837;&#x672C;, &#x5E76;&#x4E14;&#x8BE5;&#x4F4D;&#x7F6E;&#x7684;&#x7C7B;&#x6807;&#x7B7E;$c^\star$&#x5C31;&#x662F;$B_i$&#x7684;&#x7C7B;&#x6807;&#x7B7E;&#xFF0C;&#x5426;&#x5219;&#x5B83;&#x5C31;&#x662F;&#x8D1F;&#x6837;&#x672C;&#x5E76;&#x4E14;$c^\star=0$&#xFF08;&#x80CC;&#x666F;&#x7C7B;&#xFF09;&#x3002;&#x9664;&#x4E86;&#x7528;&#x4E8E;&#x5206;&#x7C7B;&#x7684;&#x6807;&#x7B7E;&#x4E4B;&#x5916;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x6709;&#x4E00;&#x4E2A; 4D &#x7684;&#x5B9E;&#x6570;&#x5411;&#x91CF;$t^\star=(l^\star,t^\star,r^\star,b^\star)$, &#x8BE5;&#x5411;&#x91CF;&#x662F;&#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x7684;&#x56DE;&#x5F52;&#x76EE;&#x6807;&#x3002;&#x8FD9;&#x91CC;$l^\star,t^\star,r^\star,b^\star$&#x662F;&#x4ECE; location &#x5230; bbox &#x56DB;&#x6761;&#x8FB9;&#x7684;&#x8DDD;&#x79BB;&#xFF0C;&#x5982;&#x56FE;1&#xFF08;&#x5DE6;&#xFF09;&#x6240;&#x793A;&#x3002;&#x5982;&#x679C;&#x67D0;&#x4E2A;&#x4F4D;&#x7F6E;&#x5C5E;&#x4E8E;&#x591A;&#x4E2A;&#x8FB9;&#x754C;&#x6846;&#xFF0C;&#x5219;&#x4F1A;&#x5C06;&#x5176;&#x89C6;&#x4E3A;&#x6A21;&#x7CCA;&#x6837;&#x672C;&#x3002;&#x73B0;&#x5728;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9009;&#x62E9;&#x5177;&#x6709;&#x6700;&#x5C0F;&#x9762;&#x79EF;&#x7684;&#x8FB9;&#x754C;&#x6846;&#x4F5C;&#x4E3A;&#x5176;&#x56DE;&#x5F52;&#x76EE;&#x6807;(&#x6700;&#x7B80;&#x5355;&#x7684;&#x7B56;&#x7565;)&#x3002; &#x5728;&#x4E0B;&#x4E00;&#x8282;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5C06; &#x5C55;&#x793A;&#x901A;&#x8FC7;&#x591A;&#x7EA7;&#x9884;&#x6D4B;&#xFF0C;&#x53EF;&#x4EE5;&#x663E;&#x8457;&#x51CF;&#x5C11;&#x6A21;&#x7CCA;&#x6837;&#x672C;&#x7684;&#x6570;&#x91CF;&#x3002; &#x5F62;&#x5F0F;&#x4E0A;&#xFF0C;&#x5982;&#x679C;&#x4F4D;&#x7F6E;$(x,y)$&#x4E0E;&#x8FB9;&#x754C;&#x6846;$B_i$&#x76F8;&#x5173;&#x8054;&#xFF0C;&#x5219;&#x8BE5;&#x4F4D;&#x7F6E;&#x7684;&#x8BAD;&#x7EC3;&#x56DE;&#x5F52;&#x76EE;&#x6807;&#x53EF;&#x4EE5;&#x8868;&#x793A;&#x4E3A;:</p><script type="math/tex; mode=display">\left \{  \begin{array}{lr}    l^\star=x-x_0^{(i)}, & t^\star=y-Y_0^{(i)} \\    r^\star=x_1^{(i)}-x, & b^\star=y_1^{(i)}-y  \end{array}\right.</script><p>&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;FCOS &#x53EF;&#x4EE5;&#x5229;&#x7528;&#x5C3D;&#x53EF;&#x80FD;&#x591A;&#x7684;&#x524D;&#x666F;&#x6837;&#x672C;&#x6765;&#x8BAD;&#x7EC3;&#x56DE;&#x5F52;&#x91CF;&#x3002;(GT box &#x5185;&#x7684;&#x6BCF;&#x4E2A;&#x50CF;&#x7D20;&#x70B9;&#x90FD;&#x662F;&#x6B63;&#x6837;&#x672C;) &#x5B83;&#x4E0E;&#x57FA;&#x4E8E; anchor &#x7684;&#x63A2;&#x6D4B;&#x5668;&#x4E0D;&#x540C;&#xFF0C;anchor-based detectors &#x4EC5;&#x4EC5;&#x5C06;&#x4E0E; GT box &#x5177;&#x6709;&#x8DB3;&#x591F; IOU &#x7684;anchor box &#x4F5C;&#x4E3A;&#x6B63;&#x6837;&#x672C;&#x3002;&#x6211;&#x4EEC;&#x8BA4;&#x4E3A;&#xFF0C;&#x8FD9;&#x53EF;&#x80FD;&#x662F; FCOS &#x4F18;&#x4E8E; anchor-based &#x7684;&#x539F;&#x56E0;&#x4E4B;&#x4E00;&#x3002;</p><p><strong>Network Outputs</strong><br>&#x5BF9;&#x5E94;&#x4E8E; training targets&#xFF0C;&#x6211;&#x4EEC;&#x7F51;&#x7EDC;&#x7684;&#x6700;&#x540E;&#x4E00;&#x5C42;&#x4F1A;&#x9884;&#x6D4B;&#x7528;&#x4E8E;&#x5206;&#x7C7B;&#x7684; 80D &#x5411;&#x91CF;$\vec{p}$&#x548C; bounding box &#x5750;&#x6807; 4D &#x5411;&#x91CF;$\vec{t}=(l&#xFF0C;t&#xFF0C;r&#xFF0C;b)$&#x3002;&#x8DDF;&#x968F; R-CNN &#x7684;&#x505A;&#x6CD5;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x662F;&#x8BAD;&#x7EC3;&#x591A;&#x7C7B;&#x5206;&#x7C7B;&#x5668;&#xFF0C;&#x800C;&#x662F;&#x8BAD;&#x7EC3; C &#x4E2A;&#x4E8C;&#x5143;&#x5206;&#x7C7B;&#x5668;&#x3002;&#x4E0E; R-CNN &#x7C7B;&#x4F3C;&#xFF0C;&#x6211;&#x4EEC;&#x5728; backbone &#x7F51;&#x7EDC;&#x7684;&#x7279;&#x5F81;&#x56FE;&#x8C31;&#x4E4B;&#x540E;&#x5206;&#x522B;&#x4E3A;&#x5206;&#x7C7B;&#x548C;&#x56DE;&#x5F52;&#x5206;&#x652F;&#x6DFB;&#x52A0;&#x4E86; &#x56DB;&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x7531;&#x4E8E;&#x56DE;&#x5F52;&#x76EE;&#x6807;&#x603B;&#x662F;&#x6B63;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;$exp(x)$&#x5C06;&#x4EFB;&#x610F;&#x7684;&#x5B9E;&#x6570;&#x90FD;&#x6620;&#x5C04;&#x5230;&#x56DE;&#x5F52;&#x5206;&#x652F;&#x9876;&#x90E8;&#x7684;$(0,\infty)$&#x3002;&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;FCOS &#x7684;&#x7F51;&#x7EDC;&#x8F93;&#x51FA;&#x53D8;&#x91CF;&#x6BD4;&#x5E38;&#x7528;&#x7684; anchor based detectors &#x5C11; 9 &#x500D;&#xFF0C;&#x5176;&#x4E2D;&#x6BCF;&#x4E2A;&#x4F4D;&#x7F6E;&#x6709; 9 &#x4E2A; anchor boxes&#x3002;</p><p><strong>Loss Function</strong><br>&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x6211;&#x4EEC;&#x7684;&#x8BAD;&#x7EC3;&#x635F;&#x5931;&#x51FD;&#x6570;&#x5982;&#x4E0B;&#xFF1A;</p><script type="math/tex; mode=display">L(\lbrace p_{x,y}\rbrace,\lbrace t_{x,y}\rbrace)=\frac{1}{N_{pos}}\sum_{x,y}L_cls(p_{x,y},c_{x,y}^\star)+\frac{\lambda}{N_pos}\sum_{x,y}I_{\lbrace c_{x,y}^\star >0\rbrace}L_{reg}(t_{x,y},t_{x,y}^\star)</script><p>&#x5176;&#x4E2D;$L_{cls}$&#x4E3A; focal loss&#xFF0C;$L_{reg}$&#x4E3A; IOU loss&#x3002;$N_{pos}$&#x4E3A;&#x6B63;&#x6837;&#x672C;&#x6570;&#xFF0C;$\lambda$&#x5728;&#x672C;&#x6587;&#x4E2D;&#x4E3A;1&#x6765;&#x5E73;&#x8861;$L_{reg}$&#x7684;&#x6743;&#x91CD;&#x3002;&#x6C42;&#x548C;&#x662F;&#x901A;&#x8FC7;&#x5BF9;feature maps $F_i$ &#x4E0A;&#x7684;&#x6240;&#x6709;&#x70B9;&#x8FDB;&#x884C;&#x8BA1;&#x7B97;&#x5F97;&#x5230;&#x7684;&#x3002;$I_{\lbrace c_{x,y}^\star &gt;0\rbrace}$&#x662F;&#x4E00;&#x4E2A;indicator function&#xFF0C;&#x5F53;$c_i^\star&gt;0$&#x65F6;&#x4E3A;1&#xFF0C;&#x5426;&#x5219;&#x4E3A;0&#x3002;</p><p><strong>Inference</strong><br>FCOS &#x7684; Inference &#x5F88;&#x7B80;&#x5355;&#x3002;&#x7ED9;&#x5B9A;&#x8F93;&#x5165;&#x56FE;&#x50CF;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x5176;&#x653E;&#x5165;&#x7F51;&#x7EDC;&#x8FDB;&#x884C;&#x4E00;&#x6B21; forward &#x8BA1;&#x7B97;, &#x5E76;&#x83B7;&#x5F97; feature map $F_i$ &#x4E0A;&#x7684;&#x6BCF;&#x4E2A;&#x4F4D;&#x7F6E;&#x7684;&#x5206;&#x7C7B;&#x5206;&#x6570;$p_{x,y}$&#x548C;&#x56DE;&#x5F52;&#x9884;&#x6D4B;&#x503C;$t_{x,y}$&#x3002; &#x8DDF;&#x968F; R-CNN &#x7684;&#x8BBE;&#x5B9A;&#xFF0C;&#x6211;&#x4EEC;&#x9009;&#x62E9;$p_{x,y}&gt;0.0$&#x7684;&#x4F4D;&#x7F6E;&#x4F5C;&#x4E3A;&#x6B63;&#x6837;&#x672C;&#x5E76;&#x901A;&#x8FC7;&#x4E0A;&#x8FF0;&#x516C;&#x5F0F;&#x6765;&#x83B7;&#x5F97;&#x9884;&#x6D4B;&#x7684;&#x8FB9;&#x754C;&#x6846;&#x3002;</p><h2 id="Multi-level-Prediction-with-FPN-for-FCOS"><a href="#Multi-level-Prediction-with-FPN-for-FCOS" class="headerlink" title="Multi-level Prediction with FPN for FCOS"></a>Multi-level Prediction with FPN for FCOS</h2><p>&#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x6211;&#x4EEC;&#x5C55;&#x793A;&#x4E86;&#x5982;&#x4F55;&#x901A;&#x8FC7; FPN &#x7684;&#x591A;&#x7EA7;&#x9884;&#x6D4B;&#x6765;&#x89E3;&#x51B3;&#x6240;&#x63D0;&#x51FA;&#x7684; FCOS &#x5B58;&#x5728;&#x7684;&#x4E24;&#x4E2A;&#x53EF;&#x80FD;&#x95EE;&#x9898;&#x3002;</p><ol><li>CNN &#x4E2D;&#x6700;&#x540E;&#x7684; feature maps &#x7684;&#x5927;&#x6B65;&#x5E45;&#xFF08;&#x4F8B;&#x5982;&#xFF0C;16&#xFF09;&#x53EF;&#x80FD;&#x56DE;&#x5BFC;&#x81F4;&#x76F8;&#x5BF9;&#x8F83;&#x4F4E;&#x7684; best possible recall (BPR)&#x3002;&#x5BF9;&#x4E8E;&#x57FA;&#x4E8E; anchor &#x7684;&#x68C0;&#x6D4B;&#x5668;&#xFF0C;&#x7531;&#x4E8E;&#x5927;&#x6B65;&#x5E45;&#x5BFC;&#x81F4;&#x7684;&#x4F4E;&#x53EC;&#x56DE;&#x7387;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x964D;&#x4F4E; positive anchor boxes &#x6240;&#x9700;&#x7684; IOU &#x5206;&#x6570;&#x6765;&#x5728;&#x4E00;&#x5B9A;&#x7A0B;&#x5EA6;&#x4E0A;&#x5F97;&#x5230;&#x7F13;&#x89E3;&#x3002;&#x800C;&#x5BF9;&#x4E8E; FCOS&#xFF0C;&#x4E4D;&#x4E00;&#x770B;&#x53EF;&#x80FD;&#x8BA4;&#x4E3A;&#x5176; BPR &#x4F1A;&#x8FDC;&#x4F4E;&#x4E8E;&#x57FA;&#x4E8E; anchor &#x7684;&#x68C0;&#x6D4B;&#x5668;&#xFF0C;&#x56E0;&#x4E3A; &#x7F51;&#x7EDC;&#x65E0;&#x6CD5;&#x53EC;&#x56DE;&#x7531;&#x4E8E;&#x5927;&#x6B65;&#x5E45;&#x800C;&#x6700;&#x7EC8;&#x5728; feature map &#x4E0A;&#x6CA1;&#x6709;&#x4F4D;&#x7F6E;&#x7F16;&#x7801;&#x7684;&#x5BF9;&#x8C61;&#x3002;&#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x6211;&#x4EEC;&#x51ED;&#x7ECF;&#x9A8C;&#x8BC1;&#x660E;&#xFF0C;&#x5373;&#x4F7F;&#x6B65;&#x5E45;&#x5F88;&#x5927;&#xFF0C;&#x57FA;&#x4E8E; FCN &#x7684; FCOS &#x4ECD;&#x7136;&#x80FD;&#x591F;&#x4EA7;&#x751F;&#x826F;&#x597D;&#x7684;BPR&#xFF0C;&#x5B83;&#x751A;&#x81F3;&#x53EF;&#x4EE5;&#x6BD4;&#x5B98;&#x65B9;&#x5B9E;&#x73B0;&#x7684; Detectron &#x4E2D;&#x57FA;&#x4E8E; anchor &#x7684;&#x68C0;&#x6D4B;&#x5668; RetinaNet &#x7684; BPR &#x66F4;&#x597D;&#x3002;&#xFF08;&#x53C2;&#x89C1;&#x8868;1&#xFF09;&#x3002;&#x56E0;&#x6B64;&#xFF0C;BPR &#x5B9E;&#x9645;&#x4E0A;&#x4E0D;&#x662F; FCOS &#x65E0;&#x6CD5;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x5229;&#x7528;&#x591A;&#x7EA7; FPN &#x9884;&#x6D4B;&#xFF0C;&#x53EF;&#x4EE5;&#x8FDB;&#x4E00;&#x6B65;&#x6539;&#x8FDB; BPR &#x4EE5;&#x5339;&#x914D;&#x57FA;&#x4E8E; anchor &#x7684; RetinaNet &#x6700;&#x4F73;BPR&#x3002;</li><li>&#x4E0E; GT box &#x7684;&#x591A;&#x4E2A;&#x91CD;&#x53E0;&#x4F1A;&#x5BFC;&#x81F4;&#x5728;&#x8BAD;&#x7EC3;&#x671F;&#x95F4;&#x4EA7;&#x751F;&#x96BE;&#x4EE5;&#x7406;&#x89E3;&#x7684;&#x6A21;&#x7CCA;&#x6027;&#xFF0C;&#x5373;&#x54EA;&#x4E2A;&#x8FB9;&#x754C;&#x6846;&#x5E94;&#x8BE5;&#x5728;&#x91CD;&#x53E0;&#x4F4D;&#x7F6E;&#x8FDB;&#x884C;&#x56DE;&#x5F52;&#xFF1F;&#x8FD9;&#x79CD;&#x6A21;&#x7CCA;&#x6027;&#x5BFC;&#x81F4;&#x57FA;&#x4E8E; FCN &#x7684;&#x68C0;&#x6D4B;&#x5668;&#x7684;&#x6027;&#x80FD;&#x4E0B;&#x964D;&#x3002;&#x5728;&#x672C;&#x6587;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x8868;&#x660E;&#xFF0C;&#x4F7F;&#x7528;&#x591A;&#x7EA7;&#x9884;&#x6D4B;&#x53EF;&#x4EE5;&#x6781;&#x5927;&#x5730;&#x89E3;&#x51B3;&#x6A21;&#x7CCA;&#x6027;&#xFF0C;&#x5E76;&#x4E14;&#x4E0E;&#x57FA;&#x4E8E; anchor &#x7684;&#x68C0;&#x6D4B;&#x5668;&#x76F8;&#x6BD4;&#xFF0C;&#x57FA;&#x4E8E; FCN &#x7684;&#x68C0;&#x6D4B;&#x5668;&#x53EF;&#x4EE5;&#x83B7;&#x5F97;&#x76F8;&#x540C;&#x7684;&#xFF0C;&#x6709;&#x65F6;&#x751A;&#x81F3;&#x66F4;&#x597D;&#x7684;&#x6027;&#x80FD;&#x3002;</li></ol><p>&#x6211;&#x4EEC;&#x5728;&#x4E0D;&#x540C;&#x7EA7;&#x522B;&#x7684;&#x7279;&#x5F81;&#x56FE;&#x4E0A;&#x68C0;&#x6D4B;&#x5230;&#x4E0D;&#x540C;&#x5927;&#x5C0F;&#x7684;&#x5BF9;&#x8C61;&#x3002;&#x5177;&#x4F53;&#x6765;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x5B9A;&#x4E49;&#x4E3A; $\lbrace P_3,P_4,P_5,P_6,P_7\rbrace$ &#x7684;&#x4E94;&#x4E2A;&#x7EA7;&#x522B;&#x7684; feature map&#x3002;$P_3$&#xFF0C;$P_4$ &#x548C; $P_5$ &#x7531; backbone CNN &#x7684;&#x7279;&#x5F81;&#x56FE; $C_3$&#xFF0C;$C_4$ &#x548C; $C_5$ &#x548C;&#x5177;&#x6709;&#x6A2A;&#x5411;&#x8FDE;&#x63A5;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#x5C42;&#x4EA7;&#x751F;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;. $P_6$ &#x548C; $P_7$ &#x901A;&#x8FC7;&#x5206;&#x522B;&#x5728; $P_5$ &#x548C; $P_6$ &#x4E0A;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x6B65;&#x957F;&#x4E3A; 2 &#x7684;&#x5377;&#x79EF;&#x5C42;&#x4EA7;&#x751F;. &#x6700;&#x7EC8;&#xFF0C;&#x7279;&#x5F81;&#x5C42;&#x7EA7; $P_3$&#xFF0C;$P_4$&#xFF0C;$P_5$&#xFF0C;$P_6$ &#x548C; $P_7$ &#x5177;&#x6709;&#x7684;&#x6B65;&#x5E45;&#x5206;&#x522B;&#x4E3A; 8,16,32,64&#x548C;128&#x3002;</p><p><img src="/2019/08/09/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;10/2.png" alt></p><p>&#x4E0E; anchor based detectors &#x5C06;&#x4E0D;&#x540C;&#x5927;&#x5C0F;&#x7684; anchor &#x5206;&#x914D;&#x7ED9;&#x4E0D;&#x540C;&#x7684;&#x7279;&#x5F81;&#x7EA7;&#x522B;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x662F;&#xFF0C;&#x6211;&#x4EEC;&#x76F4;&#x63A5;&#x9650;&#x5236;&#x8FB9;&#x754C;&#x6846;&#x56DE;&#x5F52;&#x7684;&#x8303;&#x56F4;&#x3002; &#x66F4;&#x5177;&#x4F53;&#x5730;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x9996;&#x5148;&#x8BA1;&#x7B97;&#x6240;&#x6709;&#x7279;&#x5F81;&#x7EA7;&#x522B;&#x4E0A;&#x6BCF;&#x4E2A;&#x4F4D;&#x7F6E;&#x7684;&#x56DE;&#x5F52;&#x76EE;&#x6807;$l^\star$&#xFF0C;$t^\star$&#xFF0C;$r^\star$&#x548C;$b^\star$&#x3002;&#x5982;&#x679C;&#x4F4D;&#x7F6E;&#x6EE1;&#x8DB3; $max(l^\star,t^\star,r^\star,b^\star)&gt; m_i$&#x6216;$max(l^\star,t^\star,r^\star,b^\star)&lt; m_{i-1}$&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x5C06;&#x5176;&#x8BBE;&#x7F6E;&#x4E3A;&#x8D1F;&#x6837;&#x672C;&#x5E76;&#x4E14;&#x518D;&#x4E5F;&#x4E0D;&#x4F1A;&#x5BF9;&#x8BE5;&#x4F4D;&#x7F6E;&#x8FDB;&#x884C;&#x56DE;&#x5F52;&#x64CD;&#x4F5C;&#x3002;&#x8FD9;&#x91CC;&#x7684; $m_i$ &#x662F;&#x7279;&#x5F81;&#x5C42;&#x7EA7; $i$ &#x9700;&#x8981;&#x56DE;&#x5F52;&#x7684;&#x6700;&#x5927;&#x8DDD;&#x79BB;&#x3002;&#x5728;&#x672C;&#x6587;&#x4E2D;&#xFF0C;$m_2$&#xFF0C;$m_3$&#xFF0C;$m_4$&#xFF0C;$m_5$&#xFF0C;$m_6$&#x548C;$m_7$&#x5206;&#x522B;&#x8BBE;&#x7F6E;&#x4E3A;0,64,128,256,512&#x548C;$\infty$&#x3002; &#x7531;&#x4E8E; &#x5177;&#x6709;&#x4E0D;&#x540C;&#x5927;&#x5C0F;&#x7684;&#x5BF9;&#x8C61;&#x88AB;&#x5206;&#x914D;&#x7ED9;&#x4E0D;&#x540C;&#x7684;&#x7279;&#x5F81;&#x7EA7;&#x522B;(&#x8FD9;&#x91CC;&#x662F;&#x4E0E; FoveaBox &#x7684;&#x4E00;&#x5904;&#x91CD;&#x8981;&#x533A;&#x522B;) &#x5E76;&#x4E14; &#x5927;&#x591A;&#x6570;&#x91CD;&#x53E0;&#x53D1;&#x751F;&#x5728;&#x5177;&#x6709;&#x663E;&#x8457;&#x4E0D;&#x540C;&#x5927;&#x5C0F;&#x7684;&#x5BF9;&#x8C61;&#x4E4B;&#x95F4;&#xFF0C;&#x56E0;&#x6B64;&#x591A;&#x7EA7;&#x9884;&#x6D4B;&#x53EF;&#x4EE5;&#x5728;&#x5F88;&#x5927;&#x7A0B;&#x5EA6;&#x4E0A;&#x51CF;&#x8F7B;&#x4E0A;&#x8FF0;&#x6A21;&#x7CCA;&#x6027;&#x5E76;&#x4E14;&#x5C06;&#x57FA;&#x4E8E; FCN &#x7684;&#x68C0;&#x6D4B;&#x5668;&#x63D0;&#x5347;&#x5230;&#x4E0E;&#x57FA;&#x4E8E; anchor &#x7684;&#x68C0;&#x6D4B;&#x5668;&#x76F8;&#x540C;&#x7684;&#x68C0;&#x6D4B;&#x6027;&#x80FD;&#xFF0C;&#x5982;&#x6211;&#x4EEC;&#x540E;&#x9762;&#x7684;&#x5B9E;&#x9A8C;&#x6240;&#x793A;&#x3002;</p><p>&#x6700;&#x540E;&#xFF0C;&#x8DDF;&#x968F; R-CNN &#x548C; Fast R-CNN &#x7684;&#x8BBE;&#x5B9A;&#xFF0C;&#x6211;&#x4EEC; &#x5171;&#x4EAB;&#x4E0D;&#x540C;&#x7279;&#x5F81;&#x7EA7;&#x522B;&#x4E4B;&#x95F4;&#x7684;&#x5934;&#x90E8;(&#x8FD9;&#x662F;&#x4E0E;&#x5176;&#x4ED6; Detector &#x7684;&#x4E0D;&#x540C;&#x4E4B;&#x5904;, &#x5176;&#x4ED6;&#x7684;&#x90FD;&#x662F;&#x6BCF;&#x4E2A;&#x7279;&#x5F81;&#x5C42;&#x7EA7;&#x72EC;&#x7ACB;&#x7684;&#x6267;&#x884C;&#x5206;&#x7C7B;&#x548C;&#x56DE;&#x5F52;)&#xFF0C;&#x8FD9;&#x6837;&#x4E0D;&#x4EC5;&#x4F7F;&#x68C0;&#x6D4B;&#x5668;&#x53C2;&#x6570;&#x9AD8;&#x6548;&#xFF0C;&#x800C;&#x4E14;&#x80FD;&#x591F;&#x63D0;&#x9AD8;&#x68C0;&#x6D4B;&#x6027;&#x80FD;&#x3002; &#x7136;&#x800C;&#xFF0C;&#x6211;&#x4EEC;&#x89C2;&#x5BDF;&#x5230;&#x4E0D;&#x540C;&#x7684;&#x7279;&#x5F81;&#x6C34;&#x5E73;&#x9700;&#x8981;&#x56DE;&#x5F52;&#x4E0D;&#x540C;&#x7684;&#x5C3A;&#x5BF8;&#x8303;&#x56F4;&#xFF08;&#x4F8B;&#x5982;&#xFF0C;$P_3$ &#x7684;&#x5C3A;&#x5BF8;&#x8303;&#x56F4;&#x662F; [0,64] &#x800C; $P_4$ &#x7684;&#x5C3A;&#x5BF8;&#x8303;&#x56F4;&#x662F; [64,128]&#xFF09;&#xFF0C;&#x56E0;&#x6B64; &#x5728;&#x4E0D;&#x540C;&#x7684;&#x7279;&#x5F81;&#x5C42;&#x4F7F;&#x7528;&#x76F8;&#x540C;&#x7684;&#x56DE;&#x5F52; heads &#x662F;&#x4E0D;&#x5408;&#x7406;&#x7684;&#x3002; &#x6545;&#x6B64;, &#x6211;&#x4EEC;&#x4E0D;&#x4F7F;&#x7528;&#x6807;&#x51C6;&#x7684; $exp(x)$&#xFF0C;&#x800C;&#x662F;&#x4F7F;&#x7528;&#x5E26;&#x6709;&#x53EF;&#x8BAD;&#x7EC3;&#x6807;&#x91CF; $s_i% &#x7684; $exp(s_i x)$ &#x6765;&#x81EA;&#x52A8;&#x8C03;&#x6574;&#x7279;&#x5F81;&#x7EA7; $P_i$ &#x7684;&#x6307;&#x6570;&#x51FD;&#x6570;&#x7684;&#x57FA;&#x6570;&#xFF0C;&#x4ECE;&#x800C;&#x51ED;&#x7ECF;&#x9A8C;&#x63D0;&#x9AD8;&#x68C0;&#x6D4B;&#x6027;&#x80FD;&#x3002;</p><h2 id="Center-ness-for-FCOS"><a href="#Center-ness-for-FCOS" class="headerlink" title="Center-ness for FCOS"></a>Center-ness for FCOS</h2><p>&#x5728; FCOS &#x4E2D;&#x4F7F;&#x7528;&#x591A;&#x7EA7;&#x9884;&#x6D4B;&#x540E;&#xFF0C;FCOS &#x548C; anchor based &#x7684;&#x68C0;&#x6D4B;&#x5668;&#x4E4B;&#x95F4;&#x4ECD;&#x5B58;&#x5728;&#x6027;&#x80FD;&#x5DEE;&#x8DDD;&#x3002; &#x6211;&#x4EEC;&#x89C2;&#x5BDF;&#x5230;&#x8FD9;&#x662F;&#x7531;&#x4E8E;&#x8FDC;&#x79BB;&#x7269;&#x4F53;&#x4E2D;&#x5FC3;&#x7684;&#x4F4D;&#x7F6E;&#x4EA7;&#x751F;&#x7684;&#x8BB8;&#x591A;&#x4F4E;&#x8D28;&#x91CF;&#x9884;&#x6D4B;&#x8FB9;&#x754C;&#x6846;&#x9020;&#x6210;&#x7684;&#x3002;</p><p>&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x79CD;&#x7B80;&#x5355;&#x800C;&#x6709;&#x6548;&#x7684;&#x7B56;&#x7565;&#x6765;&#x6291;&#x5236;&#x8FD9;&#x4E9B;&#x4F4E;&#x8D28;&#x91CF;&#x7684;&#x68C0;&#x6D4B;&#x8FB9;&#x754C;&#x6846;&#x800C;&#x4E0D;&#x5F15;&#x5165;&#x4EFB;&#x4F55;&#x8D85;&#x53C2;&#x6570;&#x3002; &#x5177;&#x4F53;&#x6765;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x5355;&#x5C42;&#x5206;&#x652F;&#xFF0C;&#x4E0E;&#x5206;&#x7C7B;&#x5206;&#x652F;&#x5E76;&#x884C;&#xFF0C;&#x4EE5;&#x9884;&#x6D4B;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#x7684;&#x201C;&#x4E2D;&#x5FC3;&#x6982;&#x7387;(center-ness)&#x201D;&#xFF08;&#x5373;&#xFF0C;&#x4ECE;&#x8BE5;&#x4F4D;&#x7F6E;&#x5230;&#x8BE5;&#x4F4D;&#x7F6E;&#x6240;&#x8D1F;&#x8D23;&#x7684;&#x5BF9;&#x8C61;&#x7684;&#x4E2D;&#x5FC3;&#x7684;&#x8DDD;&#x79BB;&#xFF09;&#x5982;&#x56FE;2&#x6240;&#x793A;&#xFF0C; &#x7ED9;&#x5B9A;&#x4F4D;&#x7F6E;&#x7684;&#x56DE;&#x5F52;&#x76EE;&#x6807;$l^\star$&#xFF0C;$t^\star$&#xFF0C;$r^\star$&#x548C;$b^\star$&#xFF0C;center-ness target &#x5B9A;&#x4E49;&#x4E3A;</p><script type="math/tex; mode=display">centerness^\star = \sqrt{\frac{min(l^\star,r^\star)}{max(l^\star,r^\star)}×\frac{min(t^\star,b^\star)}{max(t^\star,b^\star)}}</script><p>&#x6211;&#x4EEC;&#x5728;&#x8FD9;&#x91CC;&#x4F7F;&#x7528; sqrt &#x6765;&#x51CF;&#x7F13;&#x4E2D;&#x5FC3;&#x7684;&#x8870;&#x51CF;&#x3002;center-ness &#x4ECE;0&#x5230;1&#xFF0C;&#x56E0;&#x6B64;&#x7528; &#x4E8C;&#x5143;&#x4EA4;&#x53C9;&#x71B5;&#xFF08;BCE&#xFF09;&#x635F;&#x5931;&#x8BAD;&#x7EC3;&#x3002; &#x635F;&#x5931;&#x88AB;&#x6DFB;&#x52A0;&#x5230;&#x4E0A;&#x8FF0;&#x635F;&#x5931;&#x51FD;&#x6570;&#x516C;&#x5F0F;&#x4E2D;&#x3002; &#x5728;&#x6D4B;&#x8BD5;&#x65F6;&#xFF0C;&#x901A;&#x8FC7;&#x5C06;&#x9884;&#x6D4B;&#x7684; center-ness &#x4E0E;&#x76F8;&#x5E94;&#x7684;&#x5206;&#x7C7B;&#x5F97;&#x5206;&#x76F8;&#x4E58;&#x6765;&#x8BA1;&#x7B97;&#x6700;&#x7EC8;&#x5F97;&#x5206;&#xFF08;&#x7528;&#x4E8E;&#x5BF9;&#x68C0;&#x6D4B;&#x5230;&#x7684;&#x8FB9;&#x754C;&#x6846;&#x8FDB;&#x884C;&#x6392;&#x540D;&#xFF09;&#x3002;&#x56E0;&#x6B64;&#xFF0C;center-ness &#x53EF;&#x4EE5;&#x4F7F;&#x8FDC;&#x79BB;&#x7269;&#x4F53;&#x4E2D;&#x5FC3;&#x7684;&#x8FB9;&#x754C;&#x6846;&#x7684; scores &#x51CF;&#x5C0F;&#x3002;&#x7ED3;&#x679C;&#xFF0C;&#x8FD9;&#x4E9B;&#x4F4E;&#x8D28;&#x91CF;&#x7684;&#x8FB9;&#x754C;&#x6846;&#x5F88;&#x53EF;&#x80FD;&#x88AB;&#x6700;&#x7EC8;&#x7684;&#x975E;&#x6700;&#x5927;&#x6291;&#x5236;&#xFF08;NMS&#xFF09;&#x8FC7;&#x7A0B;&#x6EE4;&#x9664;&#xFF0C;&#x4ECE;&#x800C;&#x663E;&#x8457;&#x63D0;&#x9AD8;&#x4E86;&#x68C0;&#x6D4B;&#x6027;&#x80FD;&#x3002;</p><p>&#x57FA;&#x4E8E; anchor &#x7684;&#x68C0;&#x6D4B;&#x5668;&#x4F7F;&#x7528;&#x4E24;&#x4E2A; IOU &#x9608;&#x503C; $T_{low}$ &#x548C; $T_{high}$ &#x5C06; anchor boxes &#x6807;&#x8BB0;&#x4E3A;&#x8D1F;&#x3001;&#x5FFD;&#x7565;&#x548C;&#x6B63;&#x6837;&#x672C;&#xFF0C;center-ness &#x53EF;&#x4EE5;&#x770B;&#x4F5C;&#x662F;&#x4E00;&#x4E2A; &#x8F6F;&#x9608;&#x503C;&#x3002;&#x5B83;&#x662F;&#x5728;&#x7F51;&#x7EDC;&#x8BAD;&#x7EC3;&#x4E2D;&#x5B66;&#x4E60;&#x7684;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x8C03;&#x6574;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x5229;&#x7528;&#x8BE5;&#x7B56;&#x7565;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x68C0;&#x6D4B;&#x5668;&#x4ECD;&#x7136;&#x53EF;&#x4EE5;&#x5C06;&#x4EFB;&#x4F55;&#x843D;&#x5728; GT Box &#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#x89C6;&#x4E3A;&#x6B63;&#x6837;&#x672C;&#xFF0C;&#x9664;&#x4E86;&#x4E0A;&#x8FF0;&#x591A;&#x5C42;&#x9884;&#x6D4B;&#x4E2D;&#x8BBE;&#x7F6E;&#x4E3A;&#x8D1F;&#x6837;&#x672C;&#x7684;&#x4F4D;&#x7F6E;&#x5916;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x4E3A;&#x56DE;&#x5F52;&#x5668;&#x4F7F;&#x7528;&#x5C3D;&#x53EF;&#x80FD;&#x591A;&#x7684;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x3002;</p><h1 id="Experiments"><a href="#Experiments" class="headerlink" title="Experiments"></a>Experiments</h1><p>&#x4E0D;&#x518D;&#x53D9;&#x8FF0;</p><h2 id="Ablation-Study"><a href="#Ablation-Study" class="headerlink" title="Ablation Study"></a>Ablation Study</h2><h3 id="Multi-level-Prediction-with-FPN"><a href="#Multi-level-Prediction-with-FPN" class="headerlink" title="Multi-level Prediction with FPN"></a>Multi-level Prediction with FPN</h3><p><img src="/2019/08/09/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;10/3.png" alt></p><h3 id="With-or-Without-Center-ness"><a href="#With-or-Without-Center-ness" class="headerlink" title="With or Without Center-ness"></a>With or Without Center-ness</h3><p><img src="/2019/08/09/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;10/4.png" alt></p><h3 id="FCOS-vs-Anchor-based-Detectors"><a href="#FCOS-vs-Anchor-based-Detectors" class="headerlink" title="FCOS vs. Anchor-based Detectors"></a>FCOS vs. Anchor-based Detectors</h3><p><img src="/2019/08/09/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;10/5.png" alt></p><h2 id="Comparison-with-State-of-the-art-Detectors"><a href="#Comparison-with-State-of-the-art-Detectors" class="headerlink" title="Comparison with State-of-the-art Detectors"></a>Comparison with State-of-the-art Detectors</h2><p><img src="/2019/08/09/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;10/6.png" alt></p><h1 id="Extensions-on-Region-Proposal-Networks"><a href="#Extensions-on-Region-Proposal-Networks" class="headerlink" title="Extensions on Region Proposal Networks"></a>Extensions on Region Proposal Networks</h1><p><img src="/2019/08/09/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;10/7.png" alt></p><h1 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h1><p>&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x79CD; anchor freee, proposal free &#x7684;&#x5355;&#x7EA7;&#x63A2;&#x6D4B;&#x5668;FCOS&#x3002; &#x5982;&#x5B9E;&#x9A8C;&#x6240;&#x793A;&#xFF0C;FCOS&#x4E0E;&#x6D41;&#x884C;&#x7684; anchor based &#x7684;&#x4E00;&#x7EA7;&#x63A2;&#x6D4B;&#x5668;&#x76F8;&#x6BD4;&#x66F4;&#x5177;&#x6709;&#x4F18;&#x52BF;&#xFF0C;&#x5305;&#x62EC;RetinaNet&#xFF0C;YOLO&#x548C;SSD&#xFF0C;&#x4F46;&#x8BBE;&#x8BA1;&#x590D;&#x6742;&#x6027;&#x8981;&#x4F4E;&#x5F97;&#x591A;&#x3002; FCOS&#x5B8C;&#x5168;&#x907F;&#x514D;&#x4E86;&#x4E0E; anchor &#x76F8;&#x5173;&#x7684;&#x6240;&#x6709;&#x8BA1;&#x7B97;&#x548C;&#x8D85;&#x53C2;&#x6570;&#xFF0C;&#x5E76;&#x4EE5;&#x6BCF;&#x50CF;&#x7D20;&#x9884;&#x6D4B;&#x65B9;&#x5F0F;&#x89E3;&#x51B3;&#x4E86;&#x5BF9;&#x8C61;&#x68C0;&#x6D4B;&#xFF0C;&#x7C7B;&#x4F3C;&#x4E8E;&#x5176;&#x4ED6;&#x5BC6;&#x96C6;&#x9884;&#x6D4B;&#x4EFB;&#x52A1;&#xFF0C;&#x4F8B;&#x5982;&#x8BED;&#x4E49;&#x5206;&#x5272;&#x3002; FCOS&#x8FD8;&#x5728;&#x4E00;&#x7EA7;&#x63A2;&#x6D4B;&#x5668;&#x4E2D;&#x5B9E;&#x73B0;&#x4E86;&#x6700;&#x5148;&#x8FDB;&#x7684;&#x6027;&#x80FD;&#x3002; &#x6211;&#x4EEC;&#x8FD8;&#x8868;&#x660E;&#xFF0C;FCOS&#x53EF;&#x7528;&#x4F5C;&#x4E24;&#x7EA7;&#x63A2;&#x6D4B;&#x5668;&#x4E2D;&#x7684;RPN&#xFF0C;&#x901F;&#x5EA6;&#x66F4;&#x5FEB;&#x7684;R-CNN&#xFF0C;&#x5E76;&#x4E14;&#x5927;&#x5E45;&#x4F18;&#x4E8E;&#x5176;RPN&#x3002; &#x9274;&#x4E8E;&#x5176;&#x6709;&#x6548;&#x6027;&#x548C;&#x6548;&#x7387;&#xFF0C;&#x6211;&#x4EEC;&#x5E0C;&#x671B;FCOS&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x5F53;&#x524D;&#x4E3B;&#x6D41;&#x951A;&#x70B9;&#x63A2;&#x6D4B;&#x5668;&#x7684;&#x5F3A;&#x5927;&#x800C;&#x7B80;&#x5355;&#x7684;&#x66FF;&#x4EE3;&#x65B9;&#x6848;&#x3002; &#x6211;&#x4EEC;&#x8FD8;&#x76F8;&#x4FE1;FCOS&#x53EF;&#x4EE5;&#x6269;&#x5C55;&#x5230;&#x89E3;&#x51B3;&#x8BB8;&#x591A;&#x5176;&#x4ED6;&#x5B9E;&#x4F8B;&#x7EA7;&#x8BC6;&#x522B;&#x4EFB;&#x52A1;&#x3002;</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 目标检测 </tag>
            
            <tag> anchor-free </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tensorflow-Slim简介</title>
      <link href="/2019/08/08/tensorflow-slim/"/>
      <url>/2019/08/08/tensorflow-slim/</url>
      
        <content type="html"><![CDATA[<h1 id="Slim&#x7B80;&#x4ECB;"><a href="#Slim&#x7B80;&#x4ECB;" class="headerlink" title="Slim&#x7B80;&#x4ECB;"></a>Slim&#x7B80;&#x4ECB;</h1><p>slim&#x662F;&#x4E00;&#x4E2A;&#x4F7F;&#x6784;&#x5EFA;&#xFF0C;&#x8BAD;&#x7EC3;&#xFF0C;&#x8BC4;&#x4F30;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x53D8;&#x5F97;&#x7B80;&#x5355;&#x7684;&#x5E93;&#x3002;&#x5B83;&#x53EF;&#x4EE5;&#x6D88;&#x9664;&#x539F;&#x751F;tensorflow&#x91CC;&#x9762;&#x5F88;&#x591A;&#x91CD;&#x590D;&#x7684;&#x6A21;&#x677F;&#x6027;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x8BA9;&#x4EE3;&#x7801;&#x66F4;&#x7D27;&#x51D1;&#xFF0C;&#x66F4;&#x5177;&#x5907;&#x53EF;&#x8BFB;&#x6027;&#x3002;&#x53E6;&#x5916;slim&#x63D0;&#x4F9B;&#x4E86;&#x5F88;&#x591A;&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x65B9;&#x9762;&#x7684;&#x8457;&#x540D;&#x6A21;&#x578B;&#xFF08;VGG, AlexNet&#x7B49;&#xFF09;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x4EC5;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#xFF0C;&#x751A;&#x81F3;&#x80FD;&#x4EE5;&#x5404;&#x79CD;&#x65B9;&#x5F0F;&#x8FDB;&#x884C;&#x6269;&#x5C55;&#x3002;</p><a id="more"></a><ul><li>&#x5BFC;&#x5165;Slim<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow.contrib.slim <span class="keyword">as</span> slim</span><br></pre></td></tr></table></figure></li></ul><h1 id="TF-Slim&#x7684;&#x4F18;&#x70B9;"><a href="#TF-Slim&#x7684;&#x4F18;&#x70B9;" class="headerlink" title="TF-Slim&#x7684;&#x4F18;&#x70B9;"></a>TF-Slim&#x7684;&#x4F18;&#x70B9;</h1><ul><li>&#x5141;&#x8BB8;&#x7528;&#x6237;&#x901A;&#x8FC7;&#x51CF;&#x5C11;&#x6A21;&#x677F;&#x4EE3;&#x7801;&#x4F7F;&#x5F97;&#x6A21;&#x578B;&#x66F4;&#x52A0;&#x7B80;&#x6D01;&#x3002;&#x8FD9;&#x4E2A;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4F7F;&#x7528;argument scoping&#x548C;&#x5927;&#x91CF;&#x7684;&#x9AD8;&#x5C42;layers&#x3001;variables&#x6765;&#x5B9E;&#x73B0;</li><li>&#x901A;&#x8FC7;&#x4F7F;&#x7528;&#x5E38;&#x7528;&#x7684;&#x6B63;&#x5219;&#x5316;&#xFF08; regularizers&#xFF09;&#x4F7F;&#x5F97;&#x5EFA;&#x7ACB;&#x6A21;&#x578B;&#x66F4;&#x52A0;&#x7B80;&#x5355;&#xFF1B;</li><li>&#x4E00;&#x4E9B;&#x5E7F;&#x6CDB;&#x4F7F;&#x7528;&#x7684;&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x76F8;&#x5173;&#x7684;&#x6A21;&#x578B;&#xFF08;&#x6BD4;&#x5982;VGG&#xFF0C;AlexNet&#xFF09;&#x5DF2;&#x7ECF;&#x5728;slim&#x4E2D;&#x5B9A;&#x4E49;&#x597D;&#x4E86;&#xFF0C;&#x7528;&#x6237;&#x53EF;&#x4EE5;&#x5F88;&#x65B9;&#x4FBF;&#x7684;&#x4F7F;&#x7528;&#xFF1B;&#x8FD9;&#x4E9B;&#x65E2;&#x53EF;&#x4EE5;&#x5F53;&#x6210;&#x9ED1;&#x76D2;&#x4F7F;&#x7528;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x88AB;&#x6269;&#x5C55;&#x4F7F;&#x7528;&#xFF0C;&#x6BD4;&#x5982;&#x6DFB;&#x52A0;&#x4E00;&#x4E9B;&#x201C;multiple heads&#x201D;&#x5230;&#x4E0D;&#x540C;&#x7684;&#x5185;&#x90E8;&#x7684;&#x5C42;&#xFF1B;</li><li>Slim&#x4F7F;&#x5F97;&#x6269;&#x5C55;&#x590D;&#x6742;&#x6A21;&#x578B;&#x53D8;&#x5F97;&#x5BB9;&#x6613;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x7684;&#x6A21;&#x578B;&#x7684;checkpoints&#x6765;&#x5F00;&#x59CB;&#x8BAD;&#x7EC3;&#x7B97;&#x6CD5;&#x3002;</li></ul><h1 id="TF-Slim&#x7684;&#x4E3B;&#x8981;&#x7EC4;&#x4EF6;"><a href="#TF-Slim&#x7684;&#x4E3B;&#x8981;&#x7EC4;&#x4EF6;" class="headerlink" title="TF-Slim&#x7684;&#x4E3B;&#x8981;&#x7EC4;&#x4EF6;"></a>TF-Slim&#x7684;&#x4E3B;&#x8981;&#x7EC4;&#x4EF6;</h1><p>TF-Slim&#x7531;&#x51E0;&#x4E2A;&#x72EC;&#x7ACB;&#x5B58;&#x5728;&#x7684;&#x7EC4;&#x4EF6;&#x7EC4;&#x6210;&#xFF0C;&#x4E3B;&#x8981;&#x5305;&#x62EC;&#x4EE5;&#x4E0B;&#x51E0;&#x4E2A;&#xFF1A;</p><ul><li><p><strong>arg_scope</strong><br>  &#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x4F5C;&#x7528;&#x57DF;&#xFF08;scope&#xFF09;&#xFF0C;&#x79F0;&#x4E3A;arg_scope&#xFF0C;&#x5728;&#x8BE5;&#x4F5C;&#x7528;&#x57DF;&#xFF08;scope&#xFF09;&#x4E2D;&#xFF0C;&#x7528;&#x6237;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x4E00;&#x4E9B;&#x9ED8;&#x8BA4;&#x7684;&#x53C2; &#x6570;&#xFF0C;&#x7528;&#x4E8E;&#x7279;&#x5B9A;&#x7684;&#x64CD;&#x4F5C;&#xFF1B;<br>  &#x5982;&#x679C;&#x4F60;&#x7684;&#x7F51;&#x7EDC;&#x4E2D;&#x6709;&#x5927;&#x91CF;&#x7684;&#x76F8;&#x540C;&#x7684;&#x53C2;&#x6570;&#xFF1A;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">net = slim.conv2d(inputs, <span class="number">64</span>, [<span class="number">11</span>, <span class="number">11</span>], <span class="number">4</span>, padding=<span class="string">&apos;SAME&apos;</span>,</span><br><span class="line">              weights_initializer=tf.truncated_normal_initializer(stddev=<span class="number">0.01</span>),</span><br><span class="line">              weights_regularizer=slim.l2_regularizer(<span class="number">0.0005</span>), scope=<span class="string">&apos;conv1&apos;</span>)</span><br><span class="line">net = slim.conv2d(net, <span class="number">128</span>, [<span class="number">11</span>, <span class="number">11</span>], padding=<span class="string">&apos;VALID&apos;</span>,</span><br><span class="line">              weights_initializer=tf.truncated_normal_initializer(stddev=<span class="number">0.01</span>),</span><br><span class="line">              weights_regularizer=slim.l2_regularizer(<span class="number">0.0005</span>), scope=<span class="string">&apos;conv2&apos;</span>)</span><br><span class="line">net = slim.conv2d(net, <span class="number">256</span>, [<span class="number">11</span>, <span class="number">11</span>], padding=<span class="string">&apos;SAME&apos;</span>,</span><br><span class="line">              weights_initializer=tf.truncated_normal_initializer(stddev=<span class="number">0.01</span>),</span><br><span class="line">              weights_regularizer=slim.l2_regularizer(<span class="number">0.0005</span>), scope=<span class="string">&apos;conv3&apos;</span>)</span><br></pre></td></tr></table></figure><p>  &#x7528;arg_scope&#x5904;&#x7406;&#x4E00;&#x4E0B;&#xFF1A;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> slim.arg_scope([slim.conv2d], padding=<span class="string">&apos;SAME&apos;</span>,</span><br><span class="line">                  weights_initializer=tf.truncated_normal_initializer(stddev=<span class="number">0.01</span>)</span><br><span class="line">                  weights_regularizer=slim.l2_regularizer(<span class="number">0.0005</span>)):</span><br><span class="line">    net = slim.conv2d(inputs, <span class="number">64</span>, [<span class="number">11</span>, <span class="number">11</span>], scope=<span class="string">&apos;conv1&apos;</span>)</span><br><span class="line">    net = slim.conv2d(net, <span class="number">128</span>, [<span class="number">11</span>, <span class="number">11</span>], padding=<span class="string">&apos;VALID&apos;</span>, scope=<span class="string">&apos;conv2&apos;</span>)</span><br><span class="line">    net = slim.conv2d(net, <span class="number">256</span>, [<span class="number">11</span>, <span class="number">11</span>], scope=<span class="string">&apos;conv3&apos;</span>)</span><br></pre></td></tr></table></figure><p>  arg_scope&#x5728;&#x4F5C;&#x7528;&#x8303;&#x56F4;&#x5185;&#x5B9A;&#x4E49;&#x4E86;&#x6307;&#x5B9A;&#x5C42;&#x7684;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;&#xFF0C;&#x82E5;&#x60F3;&#x7279;&#x522B;&#x6307;&#x5B9A;&#x67D0;&#x4E9B;&#x5C42;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x53EF;&#x4EE5;&#x91CD;&#x65B0;&#x8D4B;&#x503C;&#xFF08;&#x76F8;&#x5F53;&#x4E8E;&#x91CD;&#x5199;&#xFF09;</p></li><li><p><strong>data</strong><br>  &#x5305;&#x542B;TF-Slim&#x7684;dataset&#x5B9A;&#x4E49;&#xFF0C;data providers&#xFF0C;parallel_reader&#xFF0C;&#x548C; decoding utilities&#xFF1B;</p></li><li><strong>evaluation</strong><br>  &#x5305;&#x542B;&#x7528;&#x4E8E;&#x6A21;&#x578B;&#x8BC4;&#x4F30;&#x7684;&#x5E38;&#x89C4;&#x51FD;&#x6570;&#xFF1B;</li><li><p><strong>layers</strong><br>  &#x5305;&#x542B;&#x7528;&#x4E8E;&#x5EFA;&#x7ACB;&#x6A21;&#x578B;&#x7684;&#x9AD8;&#x7EA7;layers&#xFF1B;<br>  &#x6BD4;&#x5982;&#x5206;&#x522B;&#x7528;TensorFlow&#x548C;Slim&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#x7684;&#x6848;&#x4F8B;&#xFF1A;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#tensorflow&#x5B9E;&#x73B0;&#x5377;&#x79EF;&#x5C42;</span></span><br><span class="line"><span class="keyword">with</span> tf.name_scope(<span class="string">&apos;conv1_1&apos;</span>) <span class="keyword">as</span> scope:</span><br><span class="line">    kernel = tf.Variable(tf.truncated_normal([<span class="number">3</span>, <span class="number">3</span>, <span class="number">64</span>, <span class="number">128</span>], dtype=tf.float32,</span><br><span class="line">                                       stddev=<span class="number">1e-1</span>), name=<span class="string">&apos;weights&apos;</span>)</span><br><span class="line">    conv = tf.nn.conv2d(input, kernel, [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>], padding=<span class="string">&apos;SAME&apos;</span>)</span><br><span class="line">    biases = tf.Variable(tf.constant(<span class="number">0.0</span>, shape=[<span class="number">128</span>], dtype=tf.float32),</span><br><span class="line">                   trainable=<span class="literal">True</span>, name=<span class="string">&apos;biases&apos;</span>)</span><br><span class="line">    bias = tf.nn.bias_add(conv, biases)</span><br><span class="line">    conv1 = tf.nn.relu(bias, name=scope)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#slim&#x5B9E;&#x73B0;&#x5377;&#x79EF;&#x5C42;</span></span><br><span class="line">net = slim.conv2d(input, <span class="number">128</span>, [<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&apos;conv1_1&apos;</span>)</span><br></pre></td></tr></table></figure><p>  &#x53E6;&#x5916;&#xFF0C;&#x6BD4;&#x8F83;&#x5438;&#x5F15;&#x4EBA;&#x7684;&#x662F;slim&#x4E2D;&#x7684;repeat&#x548C;stack&#x64CD;&#x4F5C;&#xFF0C;&#x5047;&#x8BBE;&#x5B9A;&#x4E49;&#x4E09;&#x4E2A;&#x76F8;&#x540C;&#x7684;&#x5377;&#x79EF;&#x5C42;&#xFF0C;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">net = slim.conv2d(net, <span class="number">256</span>, [<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&apos;conv3_1&apos;</span>)</span><br><span class="line">net = slim.conv2d(net, <span class="number">256</span>, [<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&apos;conv3_2&apos;</span>)</span><br><span class="line">net = slim.conv2d(net, <span class="number">256</span>, [<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&apos;conv3_3&apos;</span>)</span><br><span class="line">net = slim.max_pool2d(net, [<span class="number">2</span>, <span class="number">2</span>], scope=<span class="string">&apos;pool2&apos;</span>)</span><br></pre></td></tr></table></figure><p>  &#x5728;slim&#x4E2D;&#x7684;repeat&#x64CD;&#x4F5C;&#x53EF;&#x51CF;&#x5C11;&#x4EE3;&#x7801;&#x91CF;&#xFF1A;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net = slim.repeat(net, <span class="number">3</span>, slim.conv2d, <span class="number">256</span>, [<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&apos;conv3&apos;</span>)</span><br><span class="line">net = slim.max_pool2d(net, [<span class="number">2</span>, <span class="number">2</span>], scope=<span class="string">&apos;pool2&apos;</span>)</span><br></pre></td></tr></table></figure><p>  stack&#x662F;&#x5904;&#x7406;&#x5377;&#x79EF;&#x6838;&#x6216;&#x8005;&#x8F93;&#x51FA;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x60C5;&#x51B5;&#xFF1A;&#x5047;&#x8BBE;&#x5B9A;&#x4E49;&#x4E09;&#x5C42;FC&#xFF1A;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Verbose way:</span></span><br><span class="line">x = slim.fully_connected(x, <span class="number">32</span>, scope=<span class="string">&apos;fc/fc_1&apos;</span>)</span><br><span class="line">x = slim.fully_connected(x, <span class="number">64</span>, scope=<span class="string">&apos;fc/fc_2&apos;</span>)</span><br><span class="line">x = slim.fully_connected(x, <span class="number">128</span>, scope=<span class="string">&apos;fc/fc_3&apos;</span>)</span><br></pre></td></tr></table></figure><p>  &#x4F7F;&#x7528;stack&#x64CD;&#x4F5C;&#xFF1A;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slim.stack(x, slim.fully_connected, [<span class="number">32</span>, <span class="number">64</span>, <span class="number">128</span>], scope=<span class="string">&apos;fc&apos;</span>)</span><br></pre></td></tr></table></figure><p>  &#x5377;&#x79EF;&#x5C42;&#x4F7F;&#x7528;stack&#x64CD;&#x4F5C;&#xFF1A;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x666E;&#x901A;&#x65B9;&#x6CD5;:</span></span><br><span class="line">x = slim.conv2d(x, <span class="number">32</span>, [<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&apos;core/core_1&apos;</span>)</span><br><span class="line">x = slim.conv2d(x, <span class="number">32</span>, [<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&apos;core/core_2&apos;</span>)</span><br><span class="line">x = slim.conv2d(x, <span class="number">64</span>, [<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&apos;core/core_3&apos;</span>)</span><br><span class="line">x = slim.conv2d(x, <span class="number">64</span>, [<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&apos;core/core_4&apos;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x7B80;&#x4FBF;&#x65B9;&#x6CD5;:</span></span><br><span class="line">slim.stack(x, slim.conv2d, [(<span class="number">32</span>, [<span class="number">3</span>, <span class="number">3</span>]), (<span class="number">32</span>, [<span class="number">1</span>, <span class="number">1</span>]), (<span class="number">64</span>, [<span class="number">3</span>, <span class="number">3</span>]), (<span class="number">64</span>, [<span class="number">1</span>, <span class="number">1</span>])], scope=<span class="string">&apos;core&apos;</span>)</span><br></pre></td></tr></table></figure></li><li><p><strong>learning</strong><br>  &#x5305;&#x542B;&#x4E00;&#x4E9B;&#x7528;&#x4E8E;&#x8BAD;&#x7EC3;&#x6A21;&#x578B;&#x7684;&#x5E38;&#x89C4;&#x51FD;&#x6570;&#xFF1B;</p></li><li><strong>losses</strong><br>  &#x5305;&#x542B;&#x4E00;&#x4E9B;&#x7528;&#x4E8E;loss function&#x7684;&#x51FD;&#x6570;&#xFF1B;</li><li><strong>metrics</strong><br>  &#x5305;&#x542B;&#x4E00;&#x4E9B;&#x70ED;&#x95E8;&#x7684;&#x8BC4;&#x4EF7;&#x6807;&#x51C6;&#xFF1B;</li><li><strong>nets</strong><br>  &#x5305;&#x542B;&#x4E00;&#x4E9B;&#x70ED;&#x95E8;&#x7684;&#x7F51;&#x7EDC;&#x5B9A;&#x4E49;&#xFF0C;&#x5982;VGG&#xFF0C;AlexNet&#x7B49;&#x6A21;&#x578B;&#xFF1B;</li><li><strong>queues</strong><br>  &#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x5185;&#x5BB9;&#x7BA1;&#x7406;&#x8005;&#xFF0C;&#x4F7F;&#x5F97;&#x53EF;&#x4EE5;&#x5F88;&#x5BB9;&#x6613;&#x3001;&#x5F88;&#x5B89;&#x5168;&#x5730;&#x542F;&#x52A8;&#x548C;&#x5173;&#x95ED;QueueRunners&#xFF1B;</li><li><strong>regularizers</strong><br>  &#x5305;&#x542B;&#x6743;&#x91CD;&#x6B63;&#x5219;&#x5316;&#xFF1B;</li><li><strong>variables</strong><br>  &#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x65B9;&#x4FBF;&#x7684;&#x5C01;&#x88C5;&#xFF0C;&#x7528;&#x4E8E;&#x53D8;&#x91CF;&#x521B;&#x5EFA;&#x548C;&#x4F7F;&#x7528;&#x3002;<br>  &#x53D8;&#x91CF;&#x5206;&#x4E3A;&#x4E24;&#x7C7B;&#xFF1A;&#x6A21;&#x578B;&#x53D8;&#x91CF;&#x548C;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x3002;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x662F;&#x4E0D;&#x4F5C;&#x4E3A;&#x6A21;&#x578B;&#x53C2;&#x6570;&#x4FDD;&#x5B58;&#x7684;&#xFF0C;&#x800C;&#x6A21;&#x578B;&#x53D8;&#x91CF;&#x4F1A;&#x518D;save&#x7684;&#x65F6;&#x5019;&#x4FDD;&#x5B58;&#x4E0B;&#x6765;&#x3002;&#x8BF8;&#x5982;global_step&#x4E4B;&#x7C7B;&#x7684;&#x5C31;&#x662F;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x3002;slim&#x4E2D;&#x53EF;&#x4EE5;&#x5199;&#x660E;&#x53D8;&#x91CF;&#x5B58;&#x653E;&#x7684;&#x8BBE;&#x5907;&#xFF0C;&#x6B63;&#x5219;&#x548C;&#x521D;&#x59CB;&#x5316;&#x89C4;&#x5219;&#x3002;&#x8FD8;&#x6709;&#x83B7;&#x53D6;&#x53D8;&#x91CF;&#x7684;&#x51FD;&#x6570;&#x4E5F;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x4E00;&#x4E0B;&#xFF0C;get_variables&#x662F;&#x8FD4;&#x56DE;&#x6240;&#x6709;&#x7684;&#x53D8;&#x91CF;&#x3002;<br>  slim&#x4E2D;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#x7684;&#x5B9E;&#x4F8B;&#xFF1A;  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Model Variables</span></span><br><span class="line">weights = slim.model_variable(<span class="string">&apos;weights&apos;</span>,</span><br><span class="line">                            shape=[<span class="number">10</span>, <span class="number">10</span>, <span class="number">3</span> , <span class="number">3</span>],</span><br><span class="line">                            initializer=tf.truncated_normal_initializer(stddev=<span class="number">0.1</span>),</span><br><span class="line">                            regularizer=slim.l2_regularizer(<span class="number">0.05</span>),</span><br><span class="line">                            device=<span class="string">&apos;/CPU:0&apos;</span>)</span><br><span class="line">model_variables = slim.get_model_variables()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Regular variables</span></span><br><span class="line">my_var = slim.variable(<span class="string">&apos;my_var&apos;</span>,</span><br><span class="line">                    shape=[<span class="number">20</span>, <span class="number">1</span>],</span><br><span class="line">                    initializer=tf.zeros_initializer())</span><br><span class="line">regular_variables_and_model_variables = slim.get_variables()</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TensorFlow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TensorFlow学习笔记8：AlexNet</title>
      <link href="/2019/08/08/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B08/"/>
      <url>/2019/08/08/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B08/</url>
      
        <content type="html"><![CDATA[<h1 id="AlexNet"><a href="#AlexNet" class="headerlink" title="AlexNet"></a>AlexNet</h1><p>AlexNet&#x662F;Hinton&#x7684;&#x5B66;&#x751F;Alex Krizhevsky&#x5728;2012&#x5E74;&#x63D0;&#x51FA;&#x7684;&#x6DF1;&#x5EA6;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x5B83;&#x662F;LeNet&#x4E00;&#x79CD;&#x66F4;&#x6DF1;&#x66F4;&#x5BBD;&#x7684;&#x7248;&#x672C;&#x3002;&#x5728;AlexNet&#x4E0A;&#x9996;&#x6B21;&#x5E94;&#x7528;&#x4E86;&#x51E0;&#x4E2A;trick&#xFF0C;ReLU&#x3001;Dropout&#x548C;LRN&#x3002;AlexNet&#x5305;&#x542B;&#x4E86;6&#x4EBF;3000&#x4E07;&#x4E2A;&#x8FDE;&#x63A5;&#xFF0C;6000&#x4E07;&#x4E2A;&#x53C2;&#x6570;&#x548C;65&#x4E07;&#x4E2A;&#x795E;&#x7ECF;&#x5143;&#xFF0C;&#x6709;5&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#xFF0C;3&#x4E2A;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x3002;&#x5728;ILSVRC 2012&#x6BD4;&#x8D5B;&#x4E2D;&#xFF0C;AlexNet&#x4EE5;top-5&#x7684;&#x9519;&#x8BEF;&#x7387;&#x4E3A;16.4%&#x7684;&#x663E;&#x8457;&#x4F18;&#x52BF;&#x593A;&#x5F97;&#x51A0;&#x519B;&#xFF0C;&#x7B2C;&#x4E8C;&#x540D;&#x7684;&#x6210;&#x7EE9;&#x662F;26.2%&#x3002;AlexNet&#x7684;trick&#x4E3B;&#x8981;&#x5305;&#x62EC;&#xFF1A;</p><a id="more"></a><ol><li>&#x6210;&#x529F;&#x4F7F;&#x7528;RELU&#x4F5C;&#x4E3A;CNN&#x7684;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x9A8C;&#x8BC1;&#x5176;&#x6548;&#x679C;&#x5728;&#x8F83;&#x6DF1;&#x7684;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x6548;&#x679C;&#x8D85;&#x8FC7;&#x4E86;sigmoid&#xFF0C;&#x89E3;&#x51B3;&#x4E86;sigmoid&#x5728;&#x6DF1;&#x5C42;&#x7684;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x68AF;&#x5EA6;&#x5F25;&#x6563;&#x7684;&#x95EE;&#x9898;&#x3002;</li><li>&#x4F7F;&#x7528;Dropout&#x6765;&#x968F;&#x673A;&#x4F7F;&#x5F97;&#x4E00;&#x90E8;&#x5206;&#x795E;&#x7ECF;&#x5143;&#x5931;&#x6D3B;&#xFF0C;&#x6765;&#x907F;&#x514D;&#x6A21;&#x578B;&#x7684;&#x8FC7;&#x62DF;&#x5408;&#xFF0C;&#x5728;AlexNet&#x4E2D;&#xFF0C;dropout&#x4E3B;&#x8981;&#x5E94;&#x7528;&#x5728;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x3002;</li><li>&#x4F7F;&#x7528;&#x91CD;&#x53E0;&#x7684;&#x6700;&#x5927;&#x6C60;&#x5316;&#xFF0C;&#x4EE5;&#x524D;&#x5728;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#x5927;&#x90E8;&#x5206;&#x90FD;&#x91C7;&#x7528;&#x5E73;&#x5747;&#x6C60;&#x5316;&#xFF0C;&#x5728;AlexNet&#x4E2D;&#x90FD;&#x662F;&#x4F7F;&#x7528;&#x6700;&#x5927;&#x6C60;&#x5316;&#xFF0C;&#x6700;&#x5927;&#x6C60;&#x5316;&#x53EF;&#x4EE5;&#x907F;&#x514D;&#x5E73;&#x5747;&#x6C60;&#x5316;&#x7684;&#x6A21;&#x7CCA;&#x5316;&#x6548;&#x679C;&#x3002;&#x91CD;&#x53E0;&#x7684;&#x6700;&#x5927;&#x6C60;&#x5316;&#x662F;&#x6307;&#x5377;&#x79EF;&#x6838;&#x7684;&#x5C3A;&#x5BF8;&#x8981;&#x5927;&#x4E8E;&#x6B65;&#x957F;&#xFF0C;&#x8FD9;&#x6837;&#x6C60;&#x5316;&#x5C42;&#x7684;&#x8F93;&#x51FA;&#x4E4B;&#x95F4;&#x4F1A;&#x6709;&#x91CD;&#x53E0;&#x548C;&#x8986;&#x76D6;&#xFF0C;&#x63D0;&#x5347;&#x7279;&#x5F81;&#x7684;&#x4E30;&#x5BCC;&#x6027;&#x3002;&#x5728;AlexNet&#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x5377;&#x79EF;&#x6838;&#x5927;&#x5C0F;&#x4E3A;3&#xD7;3&#xFF0C;&#x6A2A;&#x5411;&#x548C;&#x7EB5;&#x5411;&#x7684;&#x6B65;&#x957F;&#x90FD;&#x4E3A;2&#x3002;</li><li>&#x4F7F;&#x7528;LRN&#x5C42;&#xFF0C;&#x5BF9;&#x5C40;&#x90E8;&#x795E;&#x7ECF;&#x5143;&#x7684;&#x6D3B;&#x52A8;&#x521B;&#x5EFA;&#x6709;&#x7ADE;&#x4E89;&#x673A;&#x5236;&#xFF0C;&#x8BA9;&#x54CD;&#x5E94;&#x8F83;&#x5927;&#x7684;&#x503C;&#x53D8;&#x5F97;&#x76F8;&#x5BF9;&#x66F4;&#x5927;&#xFF0C;&#x5E76;&#x6291;&#x5236;&#x53CD;&#x9988;&#x8F83;&#x5C0F;&#x7684;&#x795E;&#x7ECF;&#x5143;&#xFF0C;&#x6765;&#x589E;&#x5F3A;&#x6A21;&#x578B;&#x7684;&#x6CDB;&#x5316;&#x80FD;&#x529B;&#x3002;</li><li>&#x4F7F;&#x7528;&#x4E86;CUDA&#x6765;&#x52A0;&#x901F;&#x6DF1;&#x5EA6;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x8BAD;&#x7EC3;&#x3002;</li><li>&#x6570;&#x636E;&#x589E;&#x5F3A;&#xFF0C;&#x968F;&#x673A;&#x4ECE;256&#xD7;256&#x7684;&#x539F;&#x59CB;&#x56FE;&#x50CF;&#x4E2D;&#x622A;&#x53D6;224&#xD7;224&#x7684;&#x56FE;&#x50CF;&#x4EE5;&#x53CA;&#x968F;&#x673A;&#x7FFB;&#x8F6C;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x6570;&#x636E;&#x589E;&#x5F3A;&#xFF0C;&#x5728;&#x53C2;&#x6570;&#x4F17;&#x591A;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4F1A;&#x9677;&#x5165;&#x5230;&#x8FC7;&#x62DF;&#x5408;&#x4E2D;&#xFF0C;&#x4F7F;&#x7528;&#x6570;&#x636E;&#x589E;&#x5F3A;&#x53EF;&#x4EE5;&#x51CF;&#x7F13;&#x8FC7;&#x62DF;&#x5408;&#xFF0C;&#x63D0;&#x5347;&#x6CDB;&#x5316;&#x80FD;&#x529B;&#x3002;&#x8FDB;&#x884C;&#x9884;&#x6D4B;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x63D0;&#x53D6;&#x56FE;&#x7247;&#x7684;&#x56DB;&#x4E2A;&#x89D2;&#x52A0;&#x4E2D;&#x95F4;&#x4F4D;&#x7F6E;&#xFF0C;&#x5E76;&#x8FDB;&#x884C;&#x5DE6;&#x53F3;&#x7FFB;&#x8F6C;&#xFF0C;&#x4E00;&#x5171;10&#x5F20;&#x56FE;&#x7247;&#xFF0C;&#x5BF9;&#x5B83;&#x4EEC;&#x8FDB;&#x884C;&#x9884;&#x6D4B;&#x5E76;&#x53D6;10&#x6B21;&#x7ED3;&#x679C;&#x7684;&#x5E73;&#x5747;&#x503C;&#x3002;&#x5728;AlexNet&#x8BBA;&#x6587;&#x4E2D;&#x4E5F;&#x63D0;&#x5230;&#x4E86;&#xFF0C;&#x5BF9;&#x56FE;&#x50CF;&#x7684;RGB&#x6570;&#x636E;&#x8FDB;&#x884C;PCA&#x5904;&#x7406;&#xFF0C;&#x5E76;&#x505A;&#x4E00;&#x4E2A;&#x6807;&#x51C6;&#x5DEE;&#x4E3A;0.1&#x7684;&#x9AD8;&#x65AF;&#x6270;&#x52A8;&#xFF0C;&#x589E;&#x52A0;&#x4E00;&#x4E9B;&#x566A;&#x58F0;&#xFF0C;&#x53EF;&#x4EE5;&#x964D;&#x4F4E;1%&#x7684;&#x9519;&#x8BEF;&#x7387;&#x3002;</li></ol><h1 id="&#x7F51;&#x7EDC;&#x7ED3;&#x6784;"><a href="#&#x7F51;&#x7EDC;&#x7ED3;&#x6784;" class="headerlink" title="&#x7F51;&#x7EDC;&#x7ED3;&#x6784;"></a>&#x7F51;&#x7EDC;&#x7ED3;&#x6784;</h1><p><img src="/2019/08/08/tf&#x5B66;&#x4E60;&#x7B14;&#x8BB0;8/1.png" alt></p><h1 id="TensorFlow&#x5B9E;&#x73B0;"><a href="#TensorFlow&#x5B9E;&#x73B0;" class="headerlink" title="TensorFlow&#x5B9E;&#x73B0;"></a>TensorFlow&#x5B9E;&#x73B0;</h1><ol><li><p>&#x7B2C;&#x4E00;&#x5C42;&#x5377;&#x79EF;&#x5C42;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> tf.name_scope(<span class="string">&quot;conv1&quot;</span>) <span class="keyword">as</span> scope:</span><br><span class="line">    <span class="comment">#&#x8BBE;&#x7F6E;&#x5377;&#x79EF;&#x6838;11&#xD7;11,3&#x901A;&#x9053;,64&#x4E2A;&#x5377;&#x79EF;&#x6838;</span></span><br><span class="line">    kernel1 = tf.Variable(tf.truncated_normal([<span class="number">11</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">64</span>],mean=<span class="number">0</span>,stddev=<span class="number">0.1</span>,</span><br><span class="line">                                              dtype=tf.float32),name=<span class="string">&quot;weights&quot;</span>)</span><br><span class="line">    <span class="comment">#&#x5377;&#x79EF;,&#x5377;&#x79EF;&#x7684;&#x6A2A;&#x5411;&#x6B65;&#x957F;&#x548C;&#x7AD6;&#x5411;&#x8865;&#x507F;&#x90FD;&#x4E3A;4</span></span><br><span class="line">    conv = tf.nn.conv2d(images,kernel1,[<span class="number">1</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">    <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x504F;&#x7F6E;</span></span><br><span class="line">    biases = tf.Variable(tf.constant(<span class="number">0</span>,shape=[<span class="number">64</span>],dtype=tf.float32),trainable=<span class="literal">True</span>,name=<span class="string">&quot;biases&quot;</span>)</span><br><span class="line">    bias = tf.nn.bias_add(conv,biases)</span><br><span class="line">    <span class="comment">#RELU&#x6FC0;&#x6D3B;&#x51FD;&#x6570;</span></span><br><span class="line">    conv1 = tf.nn.relu(bias,name=scope)</span><br><span class="line">    <span class="comment">#&#x8F93;&#x51FA;&#x8BE5;&#x5C42;&#x7684;&#x4FE1;&#x606F;</span></span><br><span class="line">    print_tensor_info(conv1)</span><br><span class="line">    <span class="comment">#&#x7EDF;&#x8BA1;&#x53C2;&#x6570;</span></span><br><span class="line">    parameters += [kernel1,biases]</span><br><span class="line">    <span class="comment">#lrn&#x5904;&#x7406;</span></span><br><span class="line">    lrn1 = tf.nn.lrn(conv1,<span class="number">4</span>,bias=<span class="number">1</span>,alpha=<span class="number">1e-3</span>/<span class="number">9</span>,beta=<span class="number">0.75</span>,name=<span class="string">&quot;lrn1&quot;</span>)</span><br><span class="line">    <span class="comment">#&#x6700;&#x5927;&#x6C60;&#x5316;</span></span><br><span class="line">    pool1 = tf.nn.max_pool(lrn1,ksize=[<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">1</span>],strides=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>],padding=<span class="string">&quot;VALID&quot;</span>,name=<span class="string">&quot;pool1&quot;</span>)</span><br><span class="line">    print_tensor_info(pool1)</span><br></pre></td></tr></table></figure></li><li><p>&#x7B2C;&#x4E8C;&#x5C42;&#x5377;&#x79EF;&#x5C42;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> tf.name_scope(<span class="string">&quot;conv2&quot;</span>) <span class="keyword">as</span> scope:</span><br><span class="line">    <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x6743;&#x91CD;</span></span><br><span class="line">    kernel2 = tf.Variable(tf.truncated_normal([<span class="number">5</span>,<span class="number">5</span>,<span class="number">64</span>,<span class="number">192</span>],dtype=tf.float32,stddev=<span class="number">0.1</span>)</span><br><span class="line">                          ,name=<span class="string">&quot;weights&quot;</span>)</span><br><span class="line">    conv = tf.nn.conv2d(pool1,kernel2,[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">    <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x504F;&#x7F6E;</span></span><br><span class="line">    biases = tf.Variable(tf.constant(<span class="number">0</span>,dtype=tf.float32,shape=[<span class="number">192</span>])</span><br><span class="line">                         ,trainable=<span class="literal">True</span>,name=<span class="string">&quot;biases&quot;</span>)</span><br><span class="line">    bias = tf.nn.bias_add(conv,biases)</span><br><span class="line">    <span class="comment">#RELU&#x6FC0;&#x6D3B;</span></span><br><span class="line">    conv2 = tf.nn.relu(bias,name=scope)</span><br><span class="line">    print_tensor_info(conv2)</span><br><span class="line">    parameters += [kernel2,biases]</span><br><span class="line">    <span class="comment">#LRN</span></span><br><span class="line">    lrn2 = tf.nn.lrn(conv2,<span class="number">4</span>,<span class="number">1.0</span>,alpha=<span class="number">1e-3</span>/<span class="number">9</span>,beta=<span class="number">0.75</span>,name=<span class="string">&quot;lrn2&quot;</span>)</span><br><span class="line">    <span class="comment">#&#x6700;&#x5927;&#x6C60;&#x5316;</span></span><br><span class="line">    pool2 = tf.nn.max_pool(lrn2,[<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>],padding=<span class="string">&quot;VALID&quot;</span>,name=<span class="string">&quot;pool2&quot;</span>)</span><br><span class="line">    print_tensor_info(pool2)</span><br></pre></td></tr></table></figure></li><li><p>&#x7B2C;&#x4E09;&#x5C42;&#x5377;&#x79EF;&#x5C42;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> tf.name_scope(<span class="string">&quot;conv3&quot;</span>) <span class="keyword">as</span> scope:</span><br><span class="line">       <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x6743;&#x91CD;</span></span><br><span class="line">       kernel3 = tf.Variable(tf.truncated_normal([<span class="number">3</span>,<span class="number">3</span>,<span class="number">192</span>,<span class="number">384</span>],dtype=tf.float32,stddev=<span class="number">0.1</span>)</span><br><span class="line">                             ,name=<span class="string">&quot;weights&quot;</span>)</span><br><span class="line">       conv = tf.nn.conv2d(pool2,kernel3,strides=[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">       biases = tf.Variable(tf.constant(<span class="number">0.0</span>,shape=[<span class="number">384</span>],dtype=tf.float32),trainable=<span class="literal">True</span>,name=<span class="string">&quot;biases&quot;</span>)</span><br><span class="line">       bias = tf.nn.bias_add(conv,biases)</span><br><span class="line">       <span class="comment">#RELU&#x6FC0;&#x6D3B;&#x5C42;</span></span><br><span class="line">       conv3 = tf.nn.relu(bias,name=scope)</span><br><span class="line">       parameters += [kernel3,biases]</span><br><span class="line">       print_tensor_info(conv3)</span><br></pre></td></tr></table></figure></li><li><p>&#x7B2C;&#x56DB;&#x5C42;&#x5377;&#x79EF;&#x5C42;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> tf.name_scope(<span class="string">&quot;conv4&quot;</span>) <span class="keyword">as</span> scope:</span><br><span class="line">    <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x6743;&#x91CD;</span></span><br><span class="line">    kernel4 = tf.Variable(tf.truncated_normal([<span class="number">3</span>,<span class="number">3</span>,<span class="number">384</span>,<span class="number">256</span>],stddev=<span class="number">0.1</span>,dtype=tf.float32),</span><br><span class="line">                          name=<span class="string">&quot;weights&quot;</span>)</span><br><span class="line">    <span class="comment">#&#x5377;&#x79EF;</span></span><br><span class="line">    conv = tf.nn.conv2d(conv3,kernel4,strides=[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">    biases = tf.Variable(tf.constant(<span class="number">0.0</span>,dtype=tf.float32,shape=[<span class="number">256</span>]),trainable=<span class="literal">True</span>,name=<span class="string">&quot;biases&quot;</span>)</span><br><span class="line">    bias = tf.nn.bias_add(conv,biases)</span><br><span class="line">    <span class="comment">#RELU&#x6FC0;&#x6D3B;</span></span><br><span class="line">    conv4 = tf.nn.relu(bias,name=scope)</span><br><span class="line">    parameters += [kernel4,biases]</span><br><span class="line">    print_tensor_info(conv4)</span><br></pre></td></tr></table></figure></li><li><p>&#x7B2C;&#x4E94;&#x5C42;&#x5377;&#x79EF;&#x5C42;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> tf.name_scope(<span class="string">&quot;conv5&quot;</span>) <span class="keyword">as</span> scope:</span><br><span class="line">    <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x6743;&#x91CD;</span></span><br><span class="line">    kernel5 = tf.Variable(tf.truncated_normal([<span class="number">3</span>,<span class="number">3</span>,<span class="number">256</span>,<span class="number">256</span>],stddev=<span class="number">0.1</span>,dtype=tf.float32),</span><br><span class="line">                          name=<span class="string">&quot;weights&quot;</span>)</span><br><span class="line">    conv = tf.nn.conv2d(conv4,kernel5,strides=[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">    biases = tf.Variable(tf.constant(<span class="number">0.0</span>,dtype=tf.float32,shape=[<span class="number">256</span>]),name=<span class="string">&quot;biases&quot;</span>)</span><br><span class="line">    bias = tf.nn.bias_add(conv,biases)</span><br><span class="line">    <span class="comment">#REUL&#x6FC0;&#x6D3B;&#x5C42;</span></span><br><span class="line">    conv5 = tf.nn.relu(bias)</span><br><span class="line">    parameters += [kernel5,bias]</span><br><span class="line">    <span class="comment">#&#x6700;&#x5927;&#x6C60;&#x5316;</span></span><br><span class="line">    pool5 = tf.nn.max_pool(conv5,[<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>],padding=<span class="string">&quot;VALID&quot;</span>,name=<span class="string">&quot;pool5&quot;</span>)</span><br><span class="line">    print_tensor_info(pool5)</span><br></pre></td></tr></table></figure></li><li><p>&#x6700;&#x540E;&#x4E09;&#x5C42;&#x5168;&#x8FDE;&#x63A5;&#x5C42;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x7B2C;&#x516D;&#x5C42;&#x5168;&#x8FDE;&#x63A5;&#x5C42;</span></span><br><span class="line">pool5 = tf.reshape(pool5,(<span class="number">-1</span>,<span class="number">6</span>*<span class="number">6</span>*<span class="number">256</span>))</span><br><span class="line">weight6 = tf.Variable(tf.truncated_normal([<span class="number">6</span>*<span class="number">6</span>*<span class="number">256</span>,<span class="number">4096</span>],stddev=<span class="number">0.1</span>,dtype=tf.float32),</span><br><span class="line">                       name=<span class="string">&quot;weight6&quot;</span>)</span><br><span class="line">ful_bias1 = tf.Variable(tf.constant(<span class="number">0.0</span>,dtype=tf.float32,shape=[<span class="number">4096</span>]),name=<span class="string">&quot;ful_bias1&quot;</span>)</span><br><span class="line">ful_con1 = tf.nn.relu(tf.add(tf.matmul(pool5,weight6),ful_bias1))</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x7B2C;&#x4E03;&#x5C42;&#x7B2C;&#x4E8C;&#x5C42;&#x5168;&#x8FDE;&#x63A5;&#x5C42;</span></span><br><span class="line">weight7 = tf.Variable(tf.truncated_normal([<span class="number">4096</span>,<span class="number">4096</span>],stddev=<span class="number">0.1</span>,dtype=tf.float32),</span><br><span class="line">                      name=<span class="string">&quot;weight7&quot;</span>)</span><br><span class="line">ful_bias2 = tf.Variable(tf.constant(<span class="number">0.0</span>,dtype=tf.float32,shape=[<span class="number">4096</span>]),name=<span class="string">&quot;ful_bias2&quot;</span>)</span><br><span class="line">ful_con2 = tf.nn.relu(tf.add(tf.matmul(ful_con1,weight7),ful_bias2))</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#&#x7B2C;&#x516B;&#x5C42;&#x7B2C;&#x4E09;&#x5C42;&#x5168;&#x8FDE;&#x63A5;&#x5C42;</span></span><br><span class="line">weight8 = tf.Variable(tf.truncated_normal([<span class="number">4096</span>,<span class="number">1000</span>],stddev=<span class="number">0.1</span>,dtype=tf.float32),</span><br><span class="line">                      name=<span class="string">&quot;weight8&quot;</span>)</span><br><span class="line">ful_bias3 = tf.Variable(tf.constant(<span class="number">0.0</span>,dtype=tf.float32,shape=[<span class="number">1000</span>]),name=<span class="string">&quot;ful_bias3&quot;</span>)</span><br><span class="line">ful_con3 = tf.nn.relu(tf.add(tf.matmul(ful_con2,weight8),ful_bias3))</span><br></pre></td></tr></table></figure></li><li><p>softmax&#x5C42;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">weight9 = tf.Variable(tf.truncated_normal([<span class="number">1000</span>,<span class="number">10</span>],stddev=<span class="number">0.1</span>),dtype=tf.float32,name=<span class="string">&quot;weight9&quot;</span>)</span><br><span class="line">bias9 = tf.Variable(tf.constant(<span class="number">0.0</span>,shape=[<span class="number">10</span>]),dtype=tf.float32,name=<span class="string">&quot;bias9&quot;</span>)</span><br><span class="line">output_softmax = tf.nn.softmax(tf.matmul(ful_con3,weight9)+bias9)</span><br></pre></td></tr></table></figure></li><li><p>&#x8BC4;&#x4F30;&#x6A21;&#x578B;&#x6027;&#x80FD;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">time_tensorflow_run</span><span class="params">(session,target,info_string)</span>:</span></span><br><span class="line">    <span class="comment">#&#x524D;10&#x6B21;&#x8FED;&#x4EE3;&#x4E0D;&#x8BA1;&#x5165;&#x65F6;&#x95F4;&#x6D88;&#x8017;</span></span><br><span class="line">    num_step_burn_in = <span class="number">10</span></span><br><span class="line">    total_duration = <span class="number">0.0</span></span><br><span class="line">    total_duration_squared = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num_bathes + num_step_burn_in):</span><br><span class="line">        start_time = time.time()</span><br><span class="line">        _ = session.run(target)</span><br><span class="line">        duration = time.time() - start_time</span><br><span class="line">        <span class="keyword">if</span> i &gt;= num_step_burn_in:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> i % <span class="number">10</span> :</span><br><span class="line">                print(<span class="string">&quot;%s:step %d,duration=%.3f&quot;</span>%(datetime.now(),i-num_step_burn_in,duration))</span><br><span class="line">            total_duration += duration</span><br><span class="line">            total_duration_squared += duration * duration</span><br><span class="line">    <span class="comment">#&#x8BA1;&#x7B97;&#x6D88;&#x8017;&#x65F6;&#x95F4;&#x7684;&#x5E73;&#x5747;&#x5DEE;</span></span><br><span class="line">    mn = total_duration / num_bathes</span><br><span class="line">    <span class="comment">#&#x8BA1;&#x7B97;&#x6D88;&#x8017;&#x65F6;&#x95F4;&#x7684;&#x6807;&#x51C6;&#x5DEE;</span></span><br><span class="line">    vr = total_duration_squared / num_bathes - mn * mn</span><br><span class="line">    std = math.sqrt(vr)</span><br><span class="line">    print(<span class="string">&quot;%s:%s across %d steps,%.3f +/- %.3f sec / batch&quot;</span>%(datetime.now(),info_string,num_bathes,mn,std))</span><br></pre></td></tr></table></figure></li></ol><h1 id="&#x5177;&#x4F53;&#x4EE3;&#x7801;"><a href="#&#x5177;&#x4F53;&#x4EE3;&#x7801;" class="headerlink" title="&#x5177;&#x4F53;&#x4EE3;&#x7801;"></a>&#x5177;&#x4F53;&#x4EE3;&#x7801;</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> math,time</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"></span><br><span class="line">batch_size = <span class="number">32</span></span><br><span class="line">num_bathes = <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">&#x83B7;&#x53D6;tensor&#x4FE1;&#x606F;</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_tensor_info</span><span class="params">(tensor)</span>:</span></span><br><span class="line">    print(<span class="string">&quot;tensor name:&quot;</span>,tensor.op.name,<span class="string">&quot;-tensor shape:&quot;</span>,tensor.get_shape().as_list())</span><br><span class="line"></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">&#x8BA1;&#x7B97;&#x6BCF;&#x6B21;&#x8FED;&#x4EE3;&#x6D88;&#x8017;&#x65F6;&#x95F4;</span></span><br><span class="line"><span class="string">session:TensorFlow&#x7684;Session</span></span><br><span class="line"><span class="string">target:&#x9700;&#x8981;&#x8BC4;&#x6D4B;&#x7684;&#x8FD0;&#x7B97;&#x7B97;&#x5B50;</span></span><br><span class="line"><span class="string">info_string:&#x6D4B;&#x8BD5;&#x7684;&#x540D;&#x79F0;</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">time_tensorflow_run</span><span class="params">(session,target,info_string)</span>:</span></span><br><span class="line">    <span class="comment">#&#x524D;10&#x6B21;&#x8FED;&#x4EE3;&#x4E0D;&#x8BA1;&#x5165;&#x65F6;&#x95F4;&#x6D88;&#x8017;</span></span><br><span class="line">    num_step_burn_in = <span class="number">10</span></span><br><span class="line">    total_duration = <span class="number">0.0</span></span><br><span class="line">    total_duration_squared = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num_bathes + num_step_burn_in):</span><br><span class="line">        start_time = time.time()</span><br><span class="line">        _ = session.run(target)</span><br><span class="line">        duration = time.time() - start_time</span><br><span class="line">        <span class="keyword">if</span> i &gt;= num_step_burn_in:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> i % <span class="number">10</span> :</span><br><span class="line">                print(<span class="string">&quot;%s:step %d,duration=%.3f&quot;</span>%(datetime.now(),i-num_step_burn_in,duration))</span><br><span class="line">            total_duration += duration</span><br><span class="line">            total_duration_squared += duration * duration</span><br><span class="line">    <span class="comment">#&#x8BA1;&#x7B97;&#x6D88;&#x8017;&#x65F6;&#x95F4;&#x7684;&#x5E73;&#x5747;&#x5DEE;</span></span><br><span class="line">    mn = total_duration / num_bathes</span><br><span class="line">    <span class="comment">#&#x8BA1;&#x7B97;&#x6D88;&#x8017;&#x65F6;&#x95F4;&#x7684;&#x6807;&#x51C6;&#x5DEE;</span></span><br><span class="line">    vr = total_duration_squared / num_bathes - mn * mn</span><br><span class="line">    std = math.sqrt(vr)</span><br><span class="line">    print(<span class="string">&quot;%s:%s across %d steps,%.3f +/- %.3f sec / batch&quot;</span>%(datetime.now(),info_string,num_bathes,</span><br><span class="line">                                                             mn,std))</span><br><span class="line"><span class="comment">#&#x4E3B;&#x51FD;&#x6570;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_bechmark</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> tf.Graph().as_default():</span><br><span class="line">        image_size = <span class="number">224</span></span><br><span class="line">        <span class="comment">#&#x4EE5;&#x9AD8;&#x65AF;&#x5206;&#x5E03;&#x4EA7;&#x751F;&#x4E00;&#x4E9B;&#x56FE;&#x7247;</span></span><br><span class="line">        images = tf.Variable(tf.random_normal([batch_size,image_size,image_size,<span class="number">3</span>],</span><br><span class="line">                                              dtype=tf.float32,stddev=<span class="number">0.1</span>))</span><br><span class="line">        output,parameters = inference(images)</span><br><span class="line">        init = tf.global_variables_initializer()</span><br><span class="line">        sess = tf.Session()</span><br><span class="line">        sess.run(init)</span><br><span class="line">        time_tensorflow_run(sess,output,<span class="string">&quot;Forward&quot;</span>)</span><br><span class="line">        objective = tf.nn.l2_loss(output)</span><br><span class="line">        grad = tf.gradients(objective,parameters)</span><br><span class="line">        time_tensorflow_run(sess,grad,<span class="string">&quot;Forward-backward&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inference</span><span class="params">(images)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x5B9A;&#x4E49;&#x53C2;&#x6570;</span></span><br><span class="line">    parameters = []</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E00;&#x5C42;&#x5377;&#x79EF;&#x5C42;</span></span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">&quot;conv1&quot;</span>) <span class="keyword">as</span> scope:</span><br><span class="line">        <span class="comment">#&#x8BBE;&#x7F6E;&#x5377;&#x79EF;&#x6838;11&#xD7;11,3&#x901A;&#x9053;,64&#x4E2A;&#x5377;&#x79EF;&#x6838;</span></span><br><span class="line">        kernel1 = tf.Variable(tf.truncated_normal([<span class="number">11</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">64</span>],mean=<span class="number">0</span>,stddev=<span class="number">0.1</span>,</span><br><span class="line">                                                  dtype=tf.float32),name=<span class="string">&quot;weights&quot;</span>)</span><br><span class="line">        <span class="comment">#&#x5377;&#x79EF;,&#x5377;&#x79EF;&#x7684;&#x6A2A;&#x5411;&#x6B65;&#x957F;&#x548C;&#x7AD6;&#x5411;&#x8865;&#x507F;&#x90FD;&#x4E3A;4</span></span><br><span class="line">        conv = tf.nn.conv2d(images,kernel1,[<span class="number">1</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">        <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x504F;&#x7F6E;</span></span><br><span class="line">        biases = tf.Variable(tf.constant(<span class="number">0</span>,shape=[<span class="number">64</span>],dtype=tf.float32),trainable=<span class="literal">True</span>,name=<span class="string">&quot;biases&quot;</span>)</span><br><span class="line">        bias = tf.nn.bias_add(conv,biases)</span><br><span class="line">        <span class="comment">#RELU&#x6FC0;&#x6D3B;&#x51FD;&#x6570;</span></span><br><span class="line">        conv1 = tf.nn.relu(bias,name=scope)</span><br><span class="line">        <span class="comment">#&#x8F93;&#x51FA;&#x8BE5;&#x5C42;&#x7684;&#x4FE1;&#x606F;</span></span><br><span class="line">        print_tensor_info(conv1)</span><br><span class="line">        <span class="comment">#&#x7EDF;&#x8BA1;&#x53C2;&#x6570;</span></span><br><span class="line">        parameters += [kernel1,biases]</span><br><span class="line">        <span class="comment">#lrn&#x5904;&#x7406;</span></span><br><span class="line">        lrn1 = tf.nn.lrn(conv1,<span class="number">4</span>,bias=<span class="number">1</span>,alpha=<span class="number">1e-3</span>/<span class="number">9</span>,beta=<span class="number">0.75</span>,name=<span class="string">&quot;lrn1&quot;</span>)</span><br><span class="line">        <span class="comment">#&#x6700;&#x5927;&#x6C60;&#x5316;</span></span><br><span class="line">        pool1 = tf.nn.max_pool(lrn1,ksize=[<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">1</span>],strides=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>],padding=<span class="string">&quot;VALID&quot;</span>,name=<span class="string">&quot;pool1&quot;</span>)</span><br><span class="line">        print_tensor_info(pool1)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E8C;&#x5C42;&#x5377;&#x79EF;&#x5C42;</span></span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">&quot;conv2&quot;</span>) <span class="keyword">as</span> scope:</span><br><span class="line">        <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x6743;&#x91CD;</span></span><br><span class="line">        kernel2 = tf.Variable(tf.truncated_normal([<span class="number">5</span>,<span class="number">5</span>,<span class="number">64</span>,<span class="number">192</span>],dtype=tf.float32,stddev=<span class="number">0.1</span>)</span><br><span class="line">                              ,name=<span class="string">&quot;weights&quot;</span>)</span><br><span class="line">        conv = tf.nn.conv2d(pool1,kernel2,[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">        <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x504F;&#x7F6E;</span></span><br><span class="line">        biases = tf.Variable(tf.constant(<span class="number">0</span>,dtype=tf.float32,shape=[<span class="number">192</span>])</span><br><span class="line">                             ,trainable=<span class="literal">True</span>,name=<span class="string">&quot;biases&quot;</span>)</span><br><span class="line">        bias = tf.nn.bias_add(conv,biases)</span><br><span class="line">        <span class="comment">#RELU&#x6FC0;&#x6D3B;</span></span><br><span class="line">        conv2 = tf.nn.relu(bias,name=scope)</span><br><span class="line">        print_tensor_info(conv2)</span><br><span class="line">        parameters += [kernel2,biases]</span><br><span class="line">        <span class="comment">#LRN</span></span><br><span class="line">        lrn2 = tf.nn.lrn(conv2,<span class="number">4</span>,<span class="number">1.0</span>,alpha=<span class="number">1e-3</span>/<span class="number">9</span>,beta=<span class="number">0.75</span>,name=<span class="string">&quot;lrn2&quot;</span>)</span><br><span class="line">        <span class="comment">#&#x6700;&#x5927;&#x6C60;&#x5316;</span></span><br><span class="line">        pool2 = tf.nn.max_pool(lrn2,[<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>],padding=<span class="string">&quot;VALID&quot;</span>,name=<span class="string">&quot;pool2&quot;</span>)</span><br><span class="line">        print_tensor_info(pool2)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E09;&#x5C42;&#x5377;&#x79EF;&#x5C42;</span></span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">&quot;conv3&quot;</span>) <span class="keyword">as</span> scope:</span><br><span class="line">        <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x6743;&#x91CD;</span></span><br><span class="line">        kernel3 = tf.Variable(tf.truncated_normal([<span class="number">3</span>,<span class="number">3</span>,<span class="number">192</span>,<span class="number">384</span>],dtype=tf.float32,stddev=<span class="number">0.1</span>)</span><br><span class="line">                              ,name=<span class="string">&quot;weights&quot;</span>)</span><br><span class="line">        conv = tf.nn.conv2d(pool2,kernel3,strides=[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">        biases = tf.Variable(tf.constant(<span class="number">0.0</span>,shape=[<span class="number">384</span>],dtype=tf.float32),trainable=<span class="literal">True</span>,name=<span class="string">&quot;biases&quot;</span>)</span><br><span class="line">        bias = tf.nn.bias_add(conv,biases)</span><br><span class="line">        <span class="comment">#RELU&#x6FC0;&#x6D3B;&#x5C42;</span></span><br><span class="line">        conv3 = tf.nn.relu(bias,name=scope)</span><br><span class="line">        parameters += [kernel3,biases]</span><br><span class="line">        print_tensor_info(conv3)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x56DB;&#x5C42;&#x5377;&#x79EF;&#x5C42;</span></span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">&quot;conv4&quot;</span>) <span class="keyword">as</span> scope:</span><br><span class="line">        <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x6743;&#x91CD;</span></span><br><span class="line">        kernel4 = tf.Variable(tf.truncated_normal([<span class="number">3</span>,<span class="number">3</span>,<span class="number">384</span>,<span class="number">256</span>],stddev=<span class="number">0.1</span>,dtype=tf.float32),</span><br><span class="line">                              name=<span class="string">&quot;weights&quot;</span>)</span><br><span class="line">        <span class="comment">#&#x5377;&#x79EF;</span></span><br><span class="line">        conv = tf.nn.conv2d(conv3,kernel4,strides=[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">        biases = tf.Variable(tf.constant(<span class="number">0.0</span>,dtype=tf.float32,shape=[<span class="number">256</span>]),trainable=<span class="literal">True</span>,name=<span class="string">&quot;biases&quot;</span>)</span><br><span class="line">        bias = tf.nn.bias_add(conv,biases)</span><br><span class="line">        <span class="comment">#RELU&#x6FC0;&#x6D3B;</span></span><br><span class="line">        conv4 = tf.nn.relu(bias,name=scope)</span><br><span class="line">        parameters += [kernel4,biases]</span><br><span class="line">        print_tensor_info(conv4)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E94;&#x5C42;&#x5377;&#x79EF;&#x5C42;</span></span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">&quot;conv5&quot;</span>) <span class="keyword">as</span> scope:</span><br><span class="line">        <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x6743;&#x91CD;</span></span><br><span class="line">        kernel5 = tf.Variable(tf.truncated_normal([<span class="number">3</span>,<span class="number">3</span>,<span class="number">256</span>,<span class="number">256</span>],stddev=<span class="number">0.1</span>,dtype=tf.float32),</span><br><span class="line">                              name=<span class="string">&quot;weights&quot;</span>)</span><br><span class="line">        conv = tf.nn.conv2d(conv4,kernel5,strides=[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">        biases = tf.Variable(tf.constant(<span class="number">0.0</span>,dtype=tf.float32,shape=[<span class="number">256</span>]),name=<span class="string">&quot;biases&quot;</span>)</span><br><span class="line">        bias = tf.nn.bias_add(conv,biases)</span><br><span class="line">        <span class="comment">#REUL&#x6FC0;&#x6D3B;&#x5C42;</span></span><br><span class="line">        conv5 = tf.nn.relu(bias)</span><br><span class="line">        parameters += [kernel5,bias]</span><br><span class="line">        <span class="comment">#&#x6700;&#x5927;&#x6C60;&#x5316;</span></span><br><span class="line">        pool5 = tf.nn.max_pool(conv5,[<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>],padding=<span class="string">&quot;VALID&quot;</span>,name=<span class="string">&quot;pool5&quot;</span>)</span><br><span class="line">        print_tensor_info(pool5)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x516D;&#x5C42;&#x5168;&#x8FDE;&#x63A5;&#x5C42;</span></span><br><span class="line">    pool5 = tf.reshape(pool5,(<span class="number">-1</span>,<span class="number">6</span>*<span class="number">6</span>*<span class="number">256</span>))</span><br><span class="line">    weight6 = tf.Variable(tf.truncated_normal([<span class="number">6</span>*<span class="number">6</span>*<span class="number">256</span>,<span class="number">4096</span>],stddev=<span class="number">0.1</span>,dtype=tf.float32),</span><br><span class="line">                           name=<span class="string">&quot;weight6&quot;</span>)</span><br><span class="line">    ful_bias1 = tf.Variable(tf.constant(<span class="number">0.0</span>,dtype=tf.float32,shape=[<span class="number">4096</span>]),name=<span class="string">&quot;ful_bias1&quot;</span>)</span><br><span class="line">    ful_con1 = tf.nn.relu(tf.add(tf.matmul(pool5,weight6),ful_bias1))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E03;&#x5C42;&#x7B2C;&#x4E8C;&#x5C42;&#x5168;&#x8FDE;&#x63A5;&#x5C42;</span></span><br><span class="line">    weight7 = tf.Variable(tf.truncated_normal([<span class="number">4096</span>,<span class="number">4096</span>],stddev=<span class="number">0.1</span>,dtype=tf.float32),</span><br><span class="line">                          name=<span class="string">&quot;weight7&quot;</span>)</span><br><span class="line">    ful_bias2 = tf.Variable(tf.constant(<span class="number">0.0</span>,dtype=tf.float32,shape=[<span class="number">4096</span>]),name=<span class="string">&quot;ful_bias2&quot;</span>)</span><br><span class="line">    ful_con2 = tf.nn.relu(tf.add(tf.matmul(ful_con1,weight7),ful_bias2))</span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x516B;&#x5C42;&#x7B2C;&#x4E09;&#x5C42;&#x5168;&#x8FDE;&#x63A5;&#x5C42;</span></span><br><span class="line">    weight8 = tf.Variable(tf.truncated_normal([<span class="number">4096</span>,<span class="number">1000</span>],stddev=<span class="number">0.1</span>,dtype=tf.float32),</span><br><span class="line">                          name=<span class="string">&quot;weight8&quot;</span>)</span><br><span class="line">    ful_bias3 = tf.Variable(tf.constant(<span class="number">0.0</span>,dtype=tf.float32,shape=[<span class="number">1000</span>]),name=<span class="string">&quot;ful_bias3&quot;</span>)</span><br><span class="line">    ful_con3 = tf.nn.relu(tf.add(tf.matmul(ful_con2,weight8),ful_bias3))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#softmax&#x5C42;</span></span><br><span class="line">    weight9 = tf.Variable(tf.truncated_normal([<span class="number">1000</span>,<span class="number">10</span>],stddev=<span class="number">0.1</span>),dtype=tf.float32,name=<span class="string">&quot;weight9&quot;</span>)</span><br><span class="line">    bias9 = tf.Variable(tf.constant(<span class="number">0.0</span>,shape=[<span class="number">10</span>]),dtype=tf.float32,name=<span class="string">&quot;bias9&quot;</span>)</span><br><span class="line">    output_softmax = tf.nn.softmax(tf.matmul(ful_con3,weight9)+bias9)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> output_softmax,parameters</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    run_bechmark()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 卷积网络 </tag>
            
            <tag> TensorFlow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TensorFlow学习笔记9：VGGNet-16</title>
      <link href="/2019/08/08/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B09/"/>
      <url>/2019/08/08/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B09/</url>
      
        <content type="html"><![CDATA[<h1 id="VGGNet"><a href="#VGGNet" class="headerlink" title="VGGNet"></a>VGGNet</h1><p>VGGNet&#x662F;&#x725B;&#x6D25;&#x5927;&#x5B66;&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x7EC4;(Visual Geometry Group)&#x548C;Google DeepMind&#x516C;&#x53F8;&#x4E00;&#x8D77;&#x7814;&#x53D1;&#x7684;&#x6DF1;&#x5EA6;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x3002;VGGNet&#x63A2;&#x7D22;&#x4E86;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x6DF1;&#x5EA6;&#x548C;&#x5176;&#x6027;&#x80FD;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x901A;&#x8FC7;&#x53CD;&#x590D;&#x5806;&#x53E0;3&#xD7;3&#x7684;&#x5C0F;&#x578B;&#x5377;&#x79EF;&#x6838;&#x548C;2&#xD7;2&#x7684;&#x6700;&#x5927;&#x6C60;&#x5316;&#x5C42;&#xFF0C;VGGNet&#x6210;&#x529F;&#x5730;&#x6784;&#x7B51;&#x4E86;16~19&#x5C42;&#x6DF1;&#x7684;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x3002;&#x5230;&#x76EE;&#x524D;&#x4E3A;&#x6B62;&#xFF0C;VGGNet&#x8FD8;&#x7ECF;&#x5E38;&#x88AB;&#x7528;&#x6765;&#x63D0;&#x53D6;&#x56FE;&#x50CF;&#x7684;&#x7279;&#x5F81;&#x3002;VGGNet&#x8BAD;&#x7EC3;&#x540E;&#x7684;&#x6A21;&#x578B;&#x53C2;&#x6570;&#x5728;&#x5176;&#x5B98;&#x65B9;&#x7F51;&#x7AD9;&#x4E0A;&#x5F00;&#x6E90;&#x4E86;&#xFF0C;&#x53EF;&#x7528;&#x6765;&#x5728;domain specific&#x7684;&#x56FE;&#x50CF;&#x5206;&#x7C7B;&#x4EFB;&#x52A1;&#x4E0A;&#x8FDB;&#x884C;&#x518D;&#x8BAD;&#x7EC3;(&#x76F8;&#x5F53;&#x4E8E;&#x63D0;&#x4F9B;&#x4E86;&#x975E;&#x5E38;&#x597D;&#x7684;&#x521D;&#x59CB;&#x5316;&#x6743;&#x91CD;)&#x3002;</p><a id="more"></a><h1 id="&#x7F51;&#x7EDC;&#x7ED3;&#x6784;"><a href="#&#x7F51;&#x7EDC;&#x7ED3;&#x6784;" class="headerlink" title="&#x7F51;&#x7EDC;&#x7ED3;&#x6784;"></a>&#x7F51;&#x7EDC;&#x7ED3;&#x6784;</h1><p><img src="/2019/08/08/tf&#x5B66;&#x4E60;&#x7B14;&#x8BB0;9/1.png" alt></p><p>VGGNet&#x6709;5&#x6BB5;&#x5377;&#x79EF;&#xFF0C;&#x6BCF;&#x4E00;&#x6BB5;&#x5185;&#x6709;2~3&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#xFF0C;&#x6BCF;&#x6BB5;&#x5377;&#x79EF;&#x7684;&#x5C3E;&#x90E8;&#x4F1A;&#x8FDE;&#x63A5;&#x4E00;&#x4E2A;&#x6700;&#x5927;&#x6C60;&#x5316;&#x5C42;&#x6765;&#x7F29;&#x5C0F;&#x56FE;&#x7247;&#x7684;&#x5C3A;&#x5BF8;&#x3002;&#x6BCF;&#x6BB5;&#x5185;&#x7684;&#x5377;&#x79EF;&#x6838;&#x6570;&#x91CF;&#x4E00;&#x6837;&#xFF0C;&#x8D8A;&#x9760;&#x540E;&#x7684;&#x6BB5;&#x7684;&#x5377;&#x79EF;&#x6838;&#x6570;&#x91CF;&#x8D8A;&#x591A;&#xFF0C;&#x5377;&#x79EF;&#x6838;&#x6570;&#x91CF;&#x6838;&#x6BB5;&#x7684;&#x5173;&#x7CFB;:64-128-256-512-512&#x3002;&#x5728;&#x6BB5;&#x5185;&#x6709;&#x591A;&#x4E2A;&#x5B8C;&#x5168;&#x4E00;&#x6837;&#x7684;3&#xD7;3&#x7684;&#x5377;&#x79EF;&#x5C42;&#x5806;&#x53E0;&#x5728;&#x4E00;&#x8D77;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x5728;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#x8FD9;&#x5176;&#x5B9E;&#x662F;&#x4E00;&#x79CD;&#x975E;&#x5E38;&#x6709;&#x7528;&#x7684;&#x8BBE;&#x8BA1;&#x3002;&#x4E24;&#x4E2A;3&#xD7;3&#x7684;&#x5377;&#x79EF;&#x5C42;&#x4E32;&#x8054;&#x76F8;&#x5F53;&#x4E8E;1&#x4E2A;5&#xD7;5&#x7684;&#x5377;&#x79EF;&#x5C42;&#xFF0C;&#x5373;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x4F1A;&#x548C;&#x5468;&#x56F4;5&#xD7;5&#x7684;&#x50CF;&#x7D20;&#x4EA7;&#x751F;&#x5173;&#x8054;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x611F;&#x53D7;&#x91CE;&#x4E3A;5&#xD7;5&#x3002;&#x800C;3&#x4E2A;3&#xD7;3&#x7684;&#x5377;&#x79EF;&#x5C42;&#x4E32;&#x8054;&#x7684;&#x6548;&#x679C;&#x5219;&#x76F8;&#x5F53;&#x4E8E;1&#x4E2A;7&#xD7;7&#x7684;&#x5377;&#x79EF;&#x5C42;&#x3002;&#x540C;&#x65F6;&#xFF0C;3&#x4E2A;3&#xD7;3&#x5377;&#x79EF;&#x5C42;&#x6BD4;1&#x4E2A;7&#xD7;7&#x7684;&#x5377;&#x79EF;&#x5C42;&#x6709;&#x7740;&#x66F4;&#x5C11;&#x7684;&#x53C2;&#x6570;&#xFF0C;(3<em>3</em>3)/(7*7)=55%&#x3002;&#x6700;&#x91CD;&#x8981;&#x7684;&#x662F;&#xFF0C;3&#x4E2A;3&#xD7;3&#x7684;&#x5377;&#x79EF;&#x5C42;&#x62E5;&#x6709;&#x6BD4;1&#x4E2A;7&#xD7;7&#x7684;&#x5377;&#x79EF;&#x5C42;&#x66F4;&#x591A;&#x7684;&#x975E;&#x7EBF;&#x6027;&#x53D8;&#x6362;&#xFF0C;3&#x4E2A;3&#xD7;3&#x7684;&#x5377;&#x79EF;&#x5C42;&#x4F7F;&#x7528;&#x4E86;3&#x6B21;RELU&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#xFF0C;&#x800C;1&#x4E2A;7&#xD7;7&#x7684;&#x5377;&#x79EF;&#x5C42;&#x53EA;&#x4F7F;&#x7528;&#x4E86;1&#x6B21;&#xFF0C;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x8BA9;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x5BF9;&#x7279;&#x5F81;&#x7684;&#x5B66;&#x4E60;&#x80FD;&#x529B;&#x66F4;&#x5F3A;&#x3002;</p><h1 id="TensorFlow&#x5B9E;&#x73B0;"><a href="#TensorFlow&#x5B9E;&#x73B0;" class="headerlink" title="TensorFlow&#x5B9E;&#x73B0;"></a>TensorFlow&#x5B9E;&#x73B0;</h1><ol><li><p>&#x5377;&#x79EF;&#x5C42;&#x51FD;&#x6570;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">&#x5B9A;&#x4E49;&#x5377;&#x79EF;&#x5C42;&#x51FD;&#x6570;</span></span><br><span class="line"><span class="string">input_op:&#x8F93;&#x5165;&#x7684;tensor</span></span><br><span class="line"><span class="string">name&#xFF1A;&#x8BE5;&#x5C42;&#x7684;&#x540D;&#x79F0;</span></span><br><span class="line"><span class="string">kh:&#x5377;&#x79EF;&#x6838;&#x7684;&#x9AD8;</span></span><br><span class="line"><span class="string">kw:&#x5377;&#x79EF;&#x6838;&#x7684;&#x5BBD;</span></span><br><span class="line"><span class="string">n_out:&#x5377;&#x79EF;&#x6838;&#x7684;&#x6570;&#x91CF;(&#x8F93;&#x51FA;&#x901A;&#x9053;&#x6570;)</span></span><br><span class="line"><span class="string">dh:&#x6B65;&#x957F;&#x7684;&#x9AD8;</span></span><br><span class="line"><span class="string">dw:&#x6B65;&#x957F;&#x7684;&#x5BBD;</span></span><br><span class="line"><span class="string">p:&#x53C2;&#x6570;&#x5217;&#x8868;</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">conv_op</span><span class="params">(input_op,name,kh,kw,n_out,dh,dw,p)</span>:</span></span><br><span class="line">    n_in = input_op.get_shape()[<span class="number">-1</span>].value</span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(name) <span class="keyword">as</span> scope:</span><br><span class="line">        <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x6743;&#x91CD;</span></span><br><span class="line">        kernel = tf.get_variable(scope+<span class="string">&quot;w&quot;</span>,shape=[kh,kw,n_in,n_out],dtype=tf.float32,initializer=tf.contrib.layers.xavier_initializer_conv2d())</span><br><span class="line">                                 </span><br><span class="line">        <span class="comment">#&#x5377;&#x79EF;</span></span><br><span class="line">        conv = tf.nn.conv2d(input_op,kernel,(<span class="number">1</span>,dh,dw,<span class="number">1</span>),padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">        <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x504F;&#x7F6E;</span></span><br><span class="line">        bias_init_val = tf.constant(<span class="number">0.0</span>,shape=[n_out],dtype=tf.float32)</span><br><span class="line">        biases = tf.Variable(bias_init_val,trainable=<span class="literal">True</span>,name=<span class="string">&quot;b&quot;</span>)</span><br><span class="line">        z = tf.nn.bias_add(conv,biases)</span><br><span class="line">        activation = tf.nn.relu(z,name=scope)</span><br><span class="line">        <span class="comment">#&#x4FDD;&#x5B58;&#x53C2;&#x6570;</span></span><br><span class="line">        p += [kernel,biases]</span><br><span class="line">    <span class="keyword">return</span> activation</span><br></pre></td></tr></table></figure></li><li><p>&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x51FD;&#x6570;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">&#x5B9A;&#x4E49;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x51FD;&#x6570;</span></span><br><span class="line"><span class="string">input_op:&#x8F93;&#x5165;&#x7684;tensor</span></span><br><span class="line"><span class="string">name:&#x8BE5;&#x5C42;&#x7684;&#x540D;&#x79F0;</span></span><br><span class="line"><span class="string">n_out:&#x8F93;&#x51FA;&#x7684;&#x901A;&#x9053;&#x6570;</span></span><br><span class="line"><span class="string">p:&#x53C2;&#x6570;&#x5217;&#x8868;</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fc_op</span><span class="params">(input_op,name,n_out,p)</span>:</span></span><br><span class="line">    n_in = input_op.get_shape()[<span class="number">-1</span>].value</span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(name) <span class="keyword">as</span> scope:</span><br><span class="line">        <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x5168;&#x8FDE;&#x63A5;&#x7684;&#x6743;&#x91CD;</span></span><br><span class="line">        kernel = tf.get_variable(scope+<span class="string">&quot;w&quot;</span>,shape=[n_in,n_out],dtype=tf.float32,initializer=tf.contrib.layers.xavier_initializer())              </span><br><span class="line">        <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x7684;&#x504F;&#x7F6E;</span></span><br><span class="line">        biases = tf.Variable(tf.constant(<span class="number">0.1</span>,shape=[n_out],dtype=tf.float32),name=<span class="string">&quot;b&quot;</span>)</span><br><span class="line">        <span class="comment">#&#x5C06;&#x8F93;&#x5165;&#x4E0E;&#x6743;&#x91CD;&#x7684;&#x4E58;&#x6CD5;&#x548C;&#x504F;&#x7F6E;&#x7684;&#x52A0;&#x6CD5;&#x5408;&#x5E76;</span></span><br><span class="line">        activation = tf.nn.relu_layer(input_op,kernel,biases,name=scope)</span><br><span class="line">        <span class="comment">#&#x4FDD;&#x5B58;&#x53C2;&#x6570;</span></span><br><span class="line">        p += [kernel,biases]</span><br><span class="line">        <span class="keyword">return</span> activation</span><br></pre></td></tr></table></figure></li><li><p>&#x6700;&#x5927;&#x6C60;&#x5316;&#x5C42;&#x51FD;&#x6570;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">&#x5B9A;&#x4E49;&#x6700;&#x5927;&#x6C60;&#x5316;&#x5C42;</span></span><br><span class="line"><span class="string">input_op:&#x8F93;&#x5165;&#x7684;tensor</span></span><br><span class="line"><span class="string">name:&#x8BE5;&#x5C42;&#x7684;&#x540D;&#x79F0;</span></span><br><span class="line"><span class="string">kh:&#x6C60;&#x5316;&#x5C42;&#x7684;&#x9AD8;</span></span><br><span class="line"><span class="string">kw:&#x6C60;&#x5316;&#x5C42;&#x7684;&#x5BBD;</span></span><br><span class="line"><span class="string">dh:&#x6B65;&#x957F;&#x7684;&#x9AD8;</span></span><br><span class="line"><span class="string">dw:&#x6B65;&#x957F;&#x7684;&#x5BBD;</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">max_pool</span><span class="params">(input_op,name,kh,kw,dh,dw)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> tf.nn.max_pool(input_op,ksize=[<span class="number">1</span>,kh,kw,<span class="number">1</span>],strides=[<span class="number">1</span>,dh,dw,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>,name=name)</span><br></pre></td></tr></table></figure></li><li><p>VGG&#x5B9E;&#x73B0;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">VGG16</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inference_op</span><span class="params">(input_op,keep_prob)</span>:</span></span><br><span class="line">    p = []</span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E00;&#x5C42;&#x7684;&#x7B2C;&#x4E00;&#x5C42;&#x5377;&#x79EF;</span></span><br><span class="line">    conv1_1 = conv_op(input_op,name=<span class="string">&quot;conv1_1&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">64</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E00;&#x5C42;&#x7684;&#x7B2C;&#x4E8C;&#x5C42;&#x5377;&#x79EF;</span></span><br><span class="line">    conv1_2 = conv_op(conv1_1,name=<span class="string">&quot;conv1_2&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">64</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    <span class="comment">#&#x6700;&#x5927;&#x6C60;&#x5316;&#x5C42;</span></span><br><span class="line">    pool1 = max_pool(conv1_2,name=<span class="string">&quot;pool1&quot;</span>,kh=<span class="number">2</span>,kw=<span class="number">2</span>,dw=<span class="number">2</span>,dh=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E8C;&#x5C42;&#x7684;&#x7B2C;&#x4E00;&#x5C42;&#x5377;&#x79EF;</span></span><br><span class="line">    conv2_1 = conv_op(pool1,name=<span class="string">&quot;conv2_1&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">128</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E8C;&#x5C42;&#x7684;&#x7B2C;&#x4E8C;&#x5C42;&#x5377;&#x79EF;</span></span><br><span class="line">    conv2_2 = conv_op(conv2_1,name=<span class="string">&quot;conv2_2&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">128</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E8C;&#x5C42;&#x7684;&#x6700;&#x5927;&#x6C60;&#x5316;</span></span><br><span class="line">    pool2 = max_pool(conv2_2,name=<span class="string">&quot;pool2&quot;</span>,kh=<span class="number">2</span>,kw=<span class="number">2</span>,dh=<span class="number">2</span>,dw=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E09;&#x5C42;</span></span><br><span class="line">    conv3_1 = conv_op(pool2,name=<span class="string">&quot;conv3_1&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">256</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    conv3_2 = conv_op(conv3_1,name=<span class="string">&quot;conv3_2&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">256</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    conv3_3 = conv_op(conv3_2,name=<span class="string">&quot;conv3_3&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">256</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    pool3 = max_pool(conv3_3,name=<span class="string">&quot;pool3&quot;</span>,kh=<span class="number">2</span>,kw=<span class="number">2</span>,dh=<span class="number">2</span>,dw=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x56DB;&#x5C42;</span></span><br><span class="line">    conv4_1 = conv_op(pool3,name=<span class="string">&quot;conv4_1&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">512</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    conv4_2 = conv_op(conv4_1,name=<span class="string">&quot;conv4_2&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">512</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    conv4_3 = conv_op(conv4_2,name=<span class="string">&quot;conv4_3&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">512</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    pool4 = max_pool(conv4_3,name=<span class="string">&quot;pool4&quot;</span>,kh=<span class="number">2</span>,kw=<span class="number">2</span>,dh=<span class="number">2</span>,dw=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E94;&#x5C42;</span></span><br><span class="line">    conv5_1 = conv_op(pool4,name=<span class="string">&quot;conv5_1&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">512</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    conv5_2 = conv_op(conv5_1,name=<span class="string">&quot;conv5_2&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">512</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    conv5_3 = conv_op(conv5_2,name=<span class="string">&quot;conv5_3&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">512</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    pool5 = max_pool(conv5_3,name=<span class="string">&quot;pool5&quot;</span>,kh=<span class="number">2</span>,kw=<span class="number">2</span>,dh=<span class="number">2</span>,dw=<span class="number">2</span>)</span><br><span class="line">    <span class="comment">#&#x5C06;pool5&#x5C55;&#x5E73;</span></span><br><span class="line">    pool5_shape = pool5.get_shape()</span><br><span class="line">    flattened_shape = pool5_shape[<span class="number">1</span>].value * pool5_shape[<span class="number">2</span>].value * pool5_shape[<span class="number">3</span>].value</span><br><span class="line">    resh1 = tf.reshape(pool5,[<span class="number">-1</span>,flattened_shape],name=<span class="string">&quot;resh1&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x5168;&#x8FDE;&#x63A5;&#x5C42;</span></span><br><span class="line">    fc6 = fc_op(resh1,name=<span class="string">&quot;fc6&quot;</span>,n_out=<span class="number">4096</span>,p=p)</span><br><span class="line">    fc6_drop = tf.nn.dropout(fc6,keep_prob,name=<span class="string">&quot;fc6_drop&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x5168;&#x8FDE;&#x63A5;&#x5C42;</span></span><br><span class="line">    fc7 = fc_op(fc6_drop,name=<span class="string">&quot;fc7&quot;</span>,n_out=<span class="number">4096</span>,p=p)</span><br><span class="line">    fc7_drop = tf.nn.dropout(fc7,keep_prob,name=<span class="string">&quot;fc7_drop&quot;</span>)</span><br><span class="line"></span><br><span class="line">    fc8 = fc_op(fc7_drop,name=<span class="string">&quot;fc8&quot;</span>,n_out=<span class="number">1000</span>,p=p)</span><br><span class="line">    softmax = tf.nn.softmax(fc8)</span><br><span class="line">    predictions = tf.argmax(softmax,<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> predictions,softmax,fc8,p</span><br></pre></td></tr></table></figure></li><li><p>&#x6027;&#x80FD;&#x7EDF;&#x8BA1; &#x6027;&#x80FD;&#x7EDF;&#x8BA1;&#x6A21;&#x5757;&#x4E3B;&#x8981;&#x7EDF;&#x8BA1;&#x7F51;&#x7EDC;&#x8FED;&#x4EE3;&#x4E00;&#x6B21;&#x6240;&#x9700;&#x65F6;&#x95F4;&#xFF0C;&#x7531;&#x4E8E;&#x521A;&#x5F00;&#x59CB;&#x8FD0;&#x884C;&#x7A0B;&#x5E8F;&#x7684;&#x65F6;&#x5019;GPU&#x9700;&#x8981;&#x52A0;&#x8F7D;&#x5185;&#x5B58;&#x4F1A;&#x6BD4;&#x8F83;&#x6162;&#xFF0C;&#x6240;&#x4EE5;&#x7EDF;&#x8BA1;&#x901A;10&#x6B21;&#x8FED;&#x4EE3;&#x4EE5;&#x540E;&#x624D;&#x5F00;&#x59CB;&#x3002;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">num_batches = <span class="number">100</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">time_tensorflow_run</span><span class="params">(session,target,feed,info_string)</span>:</span></span><br><span class="line">    num_steps_burn_in = <span class="number">10</span></span><br><span class="line">    total_duration = <span class="number">0.0</span></span><br><span class="line">    total_duration_squared = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num_batches + num_steps_burn_in):</span><br><span class="line">        start_time = time.time()</span><br><span class="line">        _= session.run(target,feed_dict=feed)</span><br><span class="line">        duration = time.time() - start_time</span><br><span class="line">        <span class="keyword">if</span> i &gt; num_steps_burn_in:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> i % <span class="number">10</span>:</span><br><span class="line">                print(<span class="string">&quot;%s&#xFF1A;step:%d,duration:%.3f&quot;</span>%(datetime.now(),i-num_steps_burn_in,duration))</span><br><span class="line">                total_duration += duration</span><br><span class="line">                total_duration_squared += duration * duration</span><br><span class="line">    mn = total_duration / num_batches</span><br><span class="line">    vr = total_duration_squared / num_batches - mn * mn</span><br><span class="line">    sd = math.sqrt(vr)</span><br><span class="line">    print(<span class="string">&quot;%s&#xFF1A;%s across %d steps,%.3f +/- %.3f sec / batch&quot;</span>%(datetime.now(),info_string,num_batches,mn,sd))</span><br></pre></td></tr></table></figure></li><li><p>&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B; &#x901A;&#x8FC7;&#x4F7F;&#x7528;random_normal&#x6765;&#x968F;&#x673A;&#x4EA7;&#x751F;224&#xD7;224&#x7684;&#x56FE;&#x7247;&#xFF0C;&#x8FDB;&#x884C;&#x6D4B;&#x8BD5;&#x3002;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">batch_size = <span class="number">32</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_benchmark</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> tf.Graph().as_default():</span><br><span class="line">        image_size = <span class="number">224</span></span><br><span class="line">        images = tf.Variable(tf.random_normal([batch_size,image_size,image_size,<span class="number">3</span>],dtype=tf.float32,stddev=<span class="number">0.1</span>))</span><br><span class="line">        keep_prob = tf.placeholder(tf.float32)</span><br><span class="line">        predictions,softmax,fc8,p=inference_op(images,keep_prob)</span><br><span class="line">        init = tf.global_variables_initializer()</span><br><span class="line">        sess = tf.Session()</span><br><span class="line">        sess.run(init)</span><br><span class="line">        time_tensorflow_run(sess,predictions,{keep_prob:<span class="number">1.0</span>},<span class="string">&quot;Forward&quot;</span>)</span><br><span class="line">        objective = tf.nn.l2_loss(fc8)</span><br><span class="line">        grad = tf.gradients(objective,p)</span><br><span class="line">        time_tensorflow_run(sess,grad,{keep_prob:<span class="number">0.5</span>},<span class="string">&quot;Forward-backward&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    run_benchmark()</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 卷积网络 </tag>
            
            <tag> TensorFlow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TensorFlow学习笔记7：卷积神经网络</title>
      <link href="/2019/08/08/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B07/"/>
      <url>/2019/08/08/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B07/</url>
      
        <content type="html"><![CDATA[<h1 id="&#x76EE;&#x6807;"><a href="#&#x76EE;&#x6807;" class="headerlink" title="&#x76EE;&#x6807;"></a>&#x76EE;&#x6807;</h1><p>&#x7528;Tensorflow&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x7684;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x7528;&#x8FD9;&#x4E2A;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x6765;&#x8BC6;&#x522B;&#x624B;&#x5199;&#x6570;&#x5B57;&#x6570;&#x636E;&#x96C6;&#xFF08;MNIST&#xFF09;&#x3002;</p><a id="more"></a><h1 id="&#x7F51;&#x7EDC;&#x7ED3;&#x6784;"><a href="#&#x7F51;&#x7EDC;&#x7ED3;&#x6784;" class="headerlink" title="&#x7F51;&#x7EDC;&#x7ED3;&#x6784;"></a>&#x7F51;&#x7EDC;&#x7ED3;&#x6784;</h1><p><img src="/2019/08/08/tf&#x5B66;&#x4E60;&#x7B14;&#x8BB0;7/1.png" alt></p><h1 id="TensorFlow&#x5B9E;&#x73B0;"><a href="#TensorFlow&#x5B9E;&#x73B0;" class="headerlink" title="TensorFlow&#x5B9E;&#x73B0;"></a>TensorFlow&#x5B9E;&#x73B0;</h1><ol><li><p>&#x5BFC;&#x5165;&#x6A21;&#x5757;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br></pre></td></tr></table></figure></li><li><p>&#x5BFC;&#x5165;MINIST&#x6570;&#x636E;&#x96C6;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> tensorflow.examples.tutorials.mnist <span class="keyword">import</span> input_data</span><br><span class="line"><span class="comment"># number 1 to 10 data</span></span><br><span class="line">mnist = input_data.read_data_sets(<span class="string">&quot;MNIST_data&quot;</span>,one_hot=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure></li></ol><h2 id="&#x5B9A;&#x4E49;Weight&#x548C;Bias&#x53C2;&#x6570;"><a href="#&#x5B9A;&#x4E49;Weight&#x548C;Bias&#x53C2;&#x6570;" class="headerlink" title="&#x5B9A;&#x4E49;Weight&#x548C;Bias&#x53C2;&#x6570;"></a>&#x5B9A;&#x4E49;Weight&#x548C;Bias&#x53C2;&#x6570;</h2><ol><li><p>&#x5B9A;&#x4E49;&#x4EA7;&#x751F;Weight&#x53C2;&#x6570;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x4F20;&#x5165;shape&#xFF0C;&#x8FD4;&#x56DE;Weight&#x53C2;&#x6570;&#x3002;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">weight_variable</span><span class="params">(shape)</span>:</span></span><br><span class="line">    initial = tf.truncated_normal(shape, stddev=<span class="number">0.1</span>)</span><br><span class="line">    <span class="keyword">return</span> tf.Variable(initial)</span><br></pre></td></tr></table></figure></li><li><p>&#x5B9A;&#x4E49;&#x4EA7;&#x751F;Bias&#x53C2;&#x6570;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x4F20;&#x5165;shape&#xFF0C;&#x8FD4;&#x56DE;Bias&#x53C2;&#x6570;&#x3002;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bias_variable</span><span class="params">(shape)</span>:</span></span><br><span class="line">    initial = tf.constant(<span class="number">0.1</span>, shape=shape)</span><br><span class="line">    <span class="keyword">return</span> tf.Variable(initial)</span><br></pre></td></tr></table></figure></li></ol><h2 id="&#x5B9A;&#x4E49;&#x5377;&#x79EF;&#x548C;&#x6C60;&#x5316;&#x64CD;&#x4F5C;"><a href="#&#x5B9A;&#x4E49;&#x5377;&#x79EF;&#x548C;&#x6C60;&#x5316;&#x64CD;&#x4F5C;" class="headerlink" title="&#x5B9A;&#x4E49;&#x5377;&#x79EF;&#x548C;&#x6C60;&#x5316;&#x64CD;&#x4F5C;"></a>&#x5B9A;&#x4E49;&#x5377;&#x79EF;&#x548C;&#x6C60;&#x5316;&#x64CD;&#x4F5C;</h2><ol><li><p>&#x5B9A;&#x4E49;&#x5377;&#x79EF;&#x64CD;&#x4F5C;&#x3002;tf.nn.conv2d&#x51FD;&#x6570;&#x662F;Tensorflow&#x91CC;&#x9762;&#x7684;&#x4E8C;&#x7EF4;&#x7684;&#x5377;&#x79EF;&#x51FD;&#x6570;&#xFF0C;x&#x662F;&#x56FE;&#x7247;&#x7684;&#x6240;&#x6709;&#x53C2;&#x6570;&#xFF0C;W&#x662F;&#x5377;&#x79EF;&#x5C42;&#x7684;&#x6743;&#x91CD;&#xFF0C;&#x7136;&#x540E;&#x5B9A;&#x4E49;&#x6B65;&#x957F;strides=[1,1,1,1]&#x503C;&#x3002;strides[0]&#x548C;strides[3]&#x7684;&#x4E24;&#x4E2A;1&#x662F;&#x9ED8;&#x8BA4;&#x503C;&#xFF0C;&#x610F;&#x601D;&#x662F;&#x4E0D;&#x5BF9;&#x6837;&#x672C;&#x4E2A;&#x6570;&#x548C;channel&#x8FDB;&#x884C;&#x5377;&#x79EF;&#xFF0C;&#x4E2D;&#x95F4;&#x4E24;&#x4E2A;1&#x4EE3;&#x8868;padding&#x662F;&#x5728;x&#x65B9;&#x5411;&#x8FD0;&#x52A8;&#x4E00;&#x6B65;&#xFF0C;y&#x65B9;&#x5411;&#x8FD0;&#x52A8;&#x4E00;&#x6B65;&#xFF0C;padding&#x91C7;&#x7528;&#x7684;&#x65B9;&#x5F0F;&#x5B9E;&#x201C;SAME&#x201D;&#x5C31;&#x662F;0&#x586B;&#x5145;&#x3002;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">conv2d</span><span class="params">(x, W)</span>:</span></span><br><span class="line">    <span class="comment"># stride[1, x_movement, y_movement, 1]</span></span><br><span class="line">    <span class="comment"># Must have strides[0] = strides[3] =1</span></span><br><span class="line">    <span class="keyword">return</span> tf.nn.conv2d(x, W, strides=[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>], padding=<span class="string">&quot;SAME&quot;</span>)  <span class="comment"># padding=&quot;SAME&quot;&#x7528;&#x96F6;&#x586B;&#x5145;&#x8FB9;&#x754C;</span></span><br></pre></td></tr></table></figure></li><li><p>&#x5B9A;&#x4E49;&#x6C60;&#x5316;&#x64CD;&#x4F5C;&#x3002;&#x4E3A;&#x4E86;&#x5F97;&#x5230;&#x66F4;&#x591A;&#x7684;&#x56FE;&#x7247;&#x4FE1;&#x606F;&#xFF0C;&#x5377;&#x79EF;&#x65F6;&#x6211;&#x4EEC;&#x9009;&#x62E9;&#x7684;&#x662F;&#x4E00;&#x6B21;&#x4E00;&#x6B65;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;strides[1]=strides[2]=1,&#x8FD9;&#x6837;&#x5F97;&#x5230;&#x7684;&#x56FE;&#x7247;&#x5C3A;&#x5BF8;&#x6CA1;&#x6709;&#x53D8;&#x5316;&#xFF0C;&#x800C;&#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x538B;&#x7F29;&#x4E00;&#x4E0B;&#x56FE;&#x7247;&#x4E5F;&#x5C31;&#x662F;&#x53C2;&#x6570;&#x80FD;&#x5C11;&#x4E00;&#x4E9B;&#x4ECE;&#x800C;&#x51CF;&#x5C11;&#x7CFB;&#x7EDF;&#x7684;&#x590D;&#x6742;&#x5EA6;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x91C7;&#x7528;pooling&#x6765;&#x7A00;&#x758F;&#x5316;&#x53C2;&#x6570;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#x6240;&#x8C13;&#x7684;&#x4E0B;&#x91C7;&#x6837;&#x5C42;&#x3002;pooling&#x6709;&#x4E24;&#x79CD;&#xFF0C;&#x4E00;&#x79CD;&#x662F;&#x6700;&#x5927;&#x503C;&#x6C60;&#x5316;&#xFF0C;&#x4E00;&#x79CD;&#x662F;&#x5E73;&#x5747;&#x503C;&#x6C60;&#x5316;&#xFF0C;&#x6211;&#x91C7;&#x7528;&#x7684;&#x662F;&#x6700;&#x5927;&#x503C;&#x6C60;&#x5316;tf.max_pool()&#x3002;&#x6C60;&#x5316;&#x7684;&#x6838;&#x51FD;&#x6570;&#x5927;&#x5C0F;&#x4E3A;2*2&#xFF0C;&#x56E0;&#x6B64;ksize=[1,2,2,1]&#xFF0C;&#x6B65;&#x957F;&#x4E3A;2&#xFF0C;&#x56E0;&#x6B64;strides=[1,2,2,1]&#x3002;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">max_pool_2x2</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> tf.nn.max_pool(x, ksize=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>], strides=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>], padding=<span class="string">&quot;SAME&quot;</span>)</span><br></pre></td></tr></table></figure></li></ol><h2 id="&#x8F93;&#x5165;&#x5904;&#x7406;"><a href="#&#x8F93;&#x5165;&#x5904;&#x7406;" class="headerlink" title="&#x8F93;&#x5165;&#x5904;&#x7406;"></a>&#x8F93;&#x5165;&#x5904;&#x7406;</h2><ol><li><p>&#x5B9A;&#x4E49;&#x8F93;&#x5165;&#x7684;placeholder</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># define placeholder for inputs to network</span></span><br><span class="line">xs = tf.placeholder(tf.float32, [<span class="literal">None</span>,<span class="number">784</span>]) <span class="comment"># 28*28</span></span><br><span class="line">ys = tf.placeholder(tf.float32, [<span class="literal">None</span>,<span class="number">10</span>])</span><br></pre></td></tr></table></figure></li><li><p>&#x5B9A;&#x4E49;dropout&#x7684;placeholder&#xFF0C;&#x5B83;&#x662F;&#x89E3;&#x51B3;&#x8FC7;&#x62DF;&#x5408;&#x7684;&#x6709;&#x6548;&#x624B;&#x6BB5;&#x3002;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x5B9A;&#x4E49;dropout&#x7684;&#x8F93;&#x5165;&#xFF0C;&#x89E3;&#x51B3;&#x8FC7;&#x62DF;&#x5408;&#x95EE;&#x9898;</span></span><br><span class="line">keep_prob = tf.placeholder(tf.float32)</span><br></pre></td></tr></table></figure></li><li><p>&#x5904;&#x7406;xs&#x8F93;&#x5165;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x5904;&#x7406;xs&#xFF0C;&#x628A;xs&#x7684;&#x5F62;&#x72B6;&#x53D8;&#x6210;[-1,28,28,1]</span></span><br><span class="line"><span class="comment"># -1&#x4EE3;&#x8868;&#x5148;&#x4E0D;&#x8003;&#x8651;&#x8F93;&#x5165;&#x7684;&#x56FE;&#x7247;&#x4F8B;&#x5B50;&#x591A;&#x5C11;&#x8FD9;&#x4E2A;&#x7EF4;&#x5EA6;&#x3002;</span></span><br><span class="line"><span class="comment"># &#x540E;&#x9762;&#x7684;1&#x662F;channel&#x7684;&#x6570;&#x91CF;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x8F93;&#x5165;&#x7684;&#x56FE;&#x7247;&#x662F;&#x9ED1;&#x767D;&#x7684;&#xFF0C;&#x56E0;&#x6B64;channel&#x662F;1&#x3002;&#x5982;&#x679C;&#x662F;RGB&#x56FE;&#x50CF;&#xFF0C;&#x90A3;&#x4E48;channel&#x5C31;&#x662F;3.</span></span><br><span class="line">x_image = tf.reshape(xs, [<span class="number">-1</span>, <span class="number">28</span>, <span class="number">28</span>, <span class="number">1</span>])</span><br></pre></td></tr></table></figure></li></ol><h2 id="&#x5EFA;&#x7ACB;&#x5377;&#x79EF;&#x5C42;"><a href="#&#x5EFA;&#x7ACB;&#x5377;&#x79EF;&#x5C42;" class="headerlink" title="&#x5EFA;&#x7ACB;&#x5377;&#x79EF;&#x5C42;"></a>&#x5EFA;&#x7ACB;&#x5377;&#x79EF;&#x5C42;</h2><ol><li><p>&#x7B2C;&#x4E00;&#x5C42;&#x5377;&#x79EF;&#x5C42;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">W_conv1 = weight_variable([<span class="number">5</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">32</span>]) <span class="comment"># kernel 5*5, channel is 1, out size 32</span></span><br><span class="line">b_conv1 = bias_variable([<span class="number">32</span>])</span><br><span class="line">h_conv1 = tf.nn.relu(conv2d(x_image,W_conv1) + b_conv1)  <span class="comment"># output size 28*28*32</span></span><br><span class="line">h_pool1 = max_pool_2x2(h_conv1)                          <span class="comment"># output size 14*14*32</span></span><br></pre></td></tr></table></figure></li><li><p>&#x7B2C;&#x4E8C;&#x5C42;&#x5377;&#x79EF;&#x5C42;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">W_conv2 = weight_variable([<span class="number">5</span>,<span class="number">5</span>,<span class="number">32</span>,<span class="number">64</span>]) <span class="comment"># kernel 5*5, in size 32, out size 64</span></span><br><span class="line">b_conv2 = bias_variable([<span class="number">64</span>])</span><br><span class="line">h_conv2 = tf.nn.relu(conv2d(h_pool1,W_conv2) + b_conv2)  <span class="comment"># output size 14*14*64</span></span><br><span class="line">h_pool2 = max_pool_2x2(h_conv2)                          <span class="comment"># output size 7*7*64</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="&#x5EFA;&#x7ACB;&#x5168;&#x8FDE;&#x63A5;&#x5C42;"><a href="#&#x5EFA;&#x7ACB;&#x5168;&#x8FDE;&#x63A5;&#x5C42;" class="headerlink" title="&#x5EFA;&#x7ACB;&#x5168;&#x8FDE;&#x63A5;&#x5C42;"></a>&#x5EFA;&#x7ACB;&#x5168;&#x8FDE;&#x63A5;&#x5C42;</h2><ol><li><p>&#x5C55;&#x5E73;&#x8F93;&#x51FA;&#x3002;&#x6211;&#x4EEC;&#x901A;&#x8FC7;tf.reshape()&#x5C06;h_pool2&#x7684;&#x8F93;&#x51FA;&#x503C;&#x4ECE;&#x4E00;&#x4E2A;&#x4E09;&#x7EF4;&#x7684;&#x53D8;&#x4E3A;&#x4E00;&#x4E2A;&#x4E00;&#x7EF4;&#x7684;&#x6570;&#x636E;&#xFF0C;-1&#x8868;&#x793A;&#x5148;&#x4E0D;&#x8003;&#x8651;&#x8F93;&#x5165;&#x56FE;&#x7247;&#x4F8B;&#x5B50;&#x7EF4;&#x5EA6;&#xFF0C;&#x5C06;&#x4E0A;&#x4E00;&#x4E2A;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x5C55;&#x5E73;&#x3002;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># [n_samples,7,7,64]-&gt;&gt;[n_samples, 7*7*64]</span></span><br><span class="line">h_pool2_flat = tf.reshape(h_pool2, [<span class="number">-1</span>, <span class="number">7</span>*<span class="number">7</span>*<span class="number">64</span>])</span><br></pre></td></tr></table></figure></li><li><p>&#x5168;&#x8FDE;&#x63A5;&#x5C42;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">W_fc1 = weight_variable([<span class="number">7</span>*<span class="number">7</span>*<span class="number">64</span>, <span class="number">1024</span>])</span><br><span class="line">b_fc1 = bias_variable([<span class="number">1024</span>])</span><br><span class="line">h_fc1 = tf.nn.relu(tf.matmul(h_pool2_flat, W_fc1) + b_fc1)</span><br></pre></td></tr></table></figure></li><li><p>&#x540C;&#x65F6;&#x8003;&#x8651;&#x4E86;&#x8FC7;&#x62DF;&#x5408;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x53EF;&#x4EE5;&#x52A0;&#x4E00;&#x4E2A;dropout&#x7684;&#x5904;&#x7406;&#x3002;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">h_fc1_drop = tf.nn.dropout(h_fc1, keep_prob)</span><br></pre></td></tr></table></figure></li></ol><h2 id="&#x8F93;&#x51FA;&#x5C42;"><a href="#&#x8F93;&#x51FA;&#x5C42;" class="headerlink" title="&#x8F93;&#x51FA;&#x5C42;"></a>&#x8F93;&#x51FA;&#x5C42;</h2><ol><li><p>&#x8F93;&#x51FA;&#x5C42;&#x53C2;&#x6570;&#xFF0C;&#x8F93;&#x5165;&#x4E3A;1024&#xFF0C;&#x8F93;&#x51FA;&#x4E3A;10&#x3002;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">W_fc2 = weight_variable([<span class="number">1024</span>, <span class="number">10</span>])</span><br><span class="line">b_fc2 = bias_variable([<span class="number">10</span>])</span><br></pre></td></tr></table></figure></li><li><p>softmax&#x5206;&#x7C7B;&#x5668;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">prediction = tf.nn.softmax(tf.matmul(h_fc1_drop,W_fc2)+b_fc2)</span><br></pre></td></tr></table></figure></li></ol><h2 id="&#x4F18;&#x5316;&#x65B9;&#x6CD5;"><a href="#&#x4F18;&#x5316;&#x65B9;&#x6CD5;" class="headerlink" title="&#x4F18;&#x5316;&#x65B9;&#x6CD5;"></a>&#x4F18;&#x5316;&#x65B9;&#x6CD5;</h2><ol><li><p>&#x4EA4;&#x53C9;&#x71B5;&#x635F;&#x5931;&#x51FD;&#x6570;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># the error between prediction and real data</span></span><br><span class="line">cross_entropy = tf.reduce_mean(-tf.reduce_sum(ys*tf.log(prediction),reduction_indices=[<span class="number">1</span>]))</span><br></pre></td></tr></table></figure></li><li><p>&#x4F18;&#x5316;&#x5668;</p></li></ol><ul><li><p>tf.train.AdamOptimizer()&#x4F18;&#x5316;&#x5668;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train_step = tf.train.AdamOptimizer(<span class="number">1e-4</span>).minimize(cross_entropy)</span><br></pre></td></tr></table></figure></li><li><p>tf.train.GradientDescentOptimizer()&#x4F18;&#x5316;&#x5668;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">train_step = tf.train.GradientDescentOptimizer(<span class="number">1e-4</span>).minimize(cross_entropy)</span><br></pre></td></tr></table></figure></li></ul><h2 id="&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;"><a href="#&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;" class="headerlink" title="&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;"></a>&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;</h2><ol><li><p>&#x5B9A;&#x4E49;session&#xFF0C;&#x521D;&#x59CB;&#x5316;&#x53D8;&#x91CF;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sess =tf.Session()</span><br><span class="line"><span class="comment"># important step</span></span><br><span class="line">sess.run(tf.initialize_all_variables())</span><br></pre></td></tr></table></figure></li><li><p>&#x8BAD;&#x7EC3;1000&#x6B21;&#xFF0C;&#x6BCF;50&#x6B21;&#x68C0;&#x67E5;&#x6A21;&#x578B;&#x7CBE;&#x5EA6;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000</span>):</span><br><span class="line">    batch_xs,batch_ys = mnist.train.next_batch(<span class="number">100</span>)</span><br><span class="line">    sess.run(train_step, feed_dict={xs:batch_xs,ys:batch_ys, keep_prob:<span class="number">0.5</span>})</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">50</span> ==<span class="number">0</span>:</span><br><span class="line">        <span class="comment"># print(sess.run(prediction,feed_dict={xs:batch_xs}))</span></span><br><span class="line">        print(compute_accuracy(mnist.test.images,mnist.test.labels))</span><br></pre></td></tr></table></figure></li></ol><h1 id="&#x5B8C;&#x6574;&#x4EE3;&#x7801;"><a href="#&#x5B8C;&#x6574;&#x4EE3;&#x7801;" class="headerlink" title="&#x5B8C;&#x6574;&#x4EE3;&#x7801;"></a>&#x5B8C;&#x6574;&#x4EE3;&#x7801;</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="comment"># &#x5BFC;&#x5165;&#x672C;&#x6B21;&#x9700;&#x8981;&#x7684;&#x6A21;&#x5757;</span></span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">from</span> tensorflow.examples.tutorials.mnist <span class="keyword">import</span> input_data</span><br><span class="line"><span class="comment"># number 1 to 10 data</span></span><br><span class="line">mnist = input_data.read_data_sets(<span class="string">&quot;MNIST_data&quot;</span>,one_hot=<span class="literal">True</span>)</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">compute_accuracy</span><span class="params">(v_xs,v_ys)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> prediction</span><br><span class="line">    y_pre = sess.run(prediction, feed_dict={xs:v_xs, keep_prob:<span class="number">1</span>})</span><br><span class="line">    correct_prediction = tf.equal(tf.argmax(y_pre, <span class="number">1</span>),tf.argmax(v_ys,<span class="number">1</span>))</span><br><span class="line">    accuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))</span><br><span class="line">    result = sess.run(accuracy, feed_dict={xs:v_xs,ys:v_ys,keep_prob:<span class="number">1</span>})</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">weight_variable</span><span class="params">(shape)</span>:</span></span><br><span class="line">    initial = tf.truncated_normal(shape, stddev=<span class="number">0.1</span>)</span><br><span class="line">    <span class="keyword">return</span> tf.Variable(initial)</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bias_variable</span><span class="params">(shape)</span>:</span></span><br><span class="line">    initial = tf.constant(<span class="number">0.1</span>, shape=shape)</span><br><span class="line">    <span class="keyword">return</span> tf.Variable(initial)</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">conv2d</span><span class="params">(x, W)</span>:</span></span><br><span class="line">    <span class="comment"># stride[1, x_movement, y_movement, 1]</span></span><br><span class="line">    <span class="comment"># Must have strides[0] = strides[3] =1</span></span><br><span class="line">    <span class="keyword">return</span> tf.nn.conv2d(x, W, strides=[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>], padding=<span class="string">&quot;SAME&quot;</span>)  <span class="comment"># padding=&quot;SAME&quot;&#x7528;&#x96F6;&#x586B;&#x5145;&#x8FB9;&#x754C;</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">max_pool_2x2</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> tf.nn.max_pool(x, ksize=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>], strides=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>], padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># define placeholder for inputs to network</span></span><br><span class="line">xs = tf.placeholder(tf.float32, [<span class="literal">None</span>,<span class="number">784</span>]) <span class="comment"># 28*28</span></span><br><span class="line">ys = tf.placeholder(tf.float32, [<span class="literal">None</span>,<span class="number">10</span>])</span><br><span class="line"><span class="comment"># &#x5B9A;&#x4E49;dropout&#x7684;&#x8F93;&#x5165;&#xFF0C;&#x89E3;&#x51B3;&#x8FC7;&#x62DF;&#x5408;&#x95EE;&#x9898;</span></span><br><span class="line">keep_prob = tf.placeholder(tf.float32)</span><br><span class="line"><span class="comment"># &#x5904;&#x7406;xs&#xFF0C;&#x628A;xs&#x7684;&#x5F62;&#x72B6;&#x53D8;&#x6210;[-1,28,28,1]</span></span><br><span class="line"><span class="comment"># -1&#x4EE3;&#x8868;&#x5148;&#x4E0D;&#x8003;&#x8651;&#x8F93;&#x5165;&#x7684;&#x56FE;&#x7247;&#x4F8B;&#x5B50;&#x591A;&#x5C11;&#x8FD9;&#x4E2A;&#x7EF4;&#x5EA6;&#x3002;</span></span><br><span class="line"><span class="comment"># &#x540E;&#x9762;&#x7684;1&#x662F;channel&#x7684;&#x6570;&#x91CF;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x8F93;&#x5165;&#x7684;&#x56FE;&#x7247;&#x662F;&#x9ED1;&#x767D;&#x7684;&#xFF0C;&#x56E0;&#x6B64;channel&#x662F;1&#x3002;&#x5982;&#x679C;&#x662F;RGB&#x56FE;&#x50CF;&#xFF0C;&#x90A3;&#x4E48;channel&#x5C31;&#x662F;3.</span></span><br><span class="line">x_image = tf.reshape(xs, [<span class="number">-1</span>, <span class="number">28</span>, <span class="number">28</span>, <span class="number">1</span>])</span><br><span class="line"><span class="comment"># print(x_image.shape) #[n_samples, 28,28,1]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## convl layer ##</span></span><br><span class="line">W_conv1 = weight_variable([<span class="number">5</span>,<span class="number">5</span>,<span class="number">1</span>,<span class="number">32</span>]) <span class="comment"># kernel 5*5, channel is 1, out size 32</span></span><br><span class="line">b_conv1 = bias_variable([<span class="number">32</span>])</span><br><span class="line">h_conv1 = tf.nn.relu(conv2d(x_image,W_conv1) + b_conv1)  <span class="comment"># output size 28*28*32</span></span><br><span class="line">h_pool1 = max_pool_2x2(h_conv1)                          <span class="comment"># output size 14*14*32</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">## conv2 layer ##</span></span><br><span class="line">W_conv2 = weight_variable([<span class="number">5</span>,<span class="number">5</span>,<span class="number">32</span>,<span class="number">64</span>]) <span class="comment"># kernel 5*5, in size 32, out size 64</span></span><br><span class="line">b_conv2 = bias_variable([<span class="number">64</span>])</span><br><span class="line">h_conv2 = tf.nn.relu(conv2d(h_pool1,W_conv2) + b_conv2)  <span class="comment"># output size 14*14*64</span></span><br><span class="line">h_pool2 = max_pool_2x2(h_conv2)                          <span class="comment"># output size 7*7*64</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">## funcl layer ##</span></span><br><span class="line">W_fc1 = weight_variable([<span class="number">7</span>*<span class="number">7</span>*<span class="number">64</span>, <span class="number">1024</span>])</span><br><span class="line">b_fc1 = bias_variable([<span class="number">1024</span>])</span><br><span class="line"> </span><br><span class="line"><span class="comment"># [n_samples,7,7,64]-&gt;&gt;[n_samples, 7*7*64]</span></span><br><span class="line">h_pool2_flat = tf.reshape(h_pool2, [<span class="number">-1</span>, <span class="number">7</span>*<span class="number">7</span>*<span class="number">64</span>])</span><br><span class="line">h_fc1 = tf.nn.relu(tf.matmul(h_pool2_flat, W_fc1) + b_fc1)</span><br><span class="line">h_fc1_drop = tf.nn.dropout(h_fc1, keep_prob)</span><br><span class="line"> </span><br><span class="line"><span class="comment">## func2 layer ##</span></span><br><span class="line">W_fc2 = weight_variable([<span class="number">1024</span>, <span class="number">10</span>])</span><br><span class="line">b_fc2 = bias_variable([<span class="number">10</span>])</span><br><span class="line">prediction = tf.nn.softmax(tf.matmul(h_fc1_drop,W_fc2)+b_fc2)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># the error between prediction and real data</span></span><br><span class="line">cross_entropy = tf.reduce_mean(-tf.reduce_sum(ys*tf.log(prediction),reduction_indices=[<span class="number">1</span>])) <span class="comment">#loss</span></span><br><span class="line">train_step = tf.train.GradientDescentOptimizer(<span class="number">1e-4</span>).minimize(cross_entropy)</span><br><span class="line"><span class="comment"># train_step = tf.train.AdamOptimizer(1e-4).minimize(cross_entropy)</span></span><br><span class="line"> </span><br><span class="line">sess =tf.Session()</span><br><span class="line">sess.run(tf.initialize_all_variables())</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000</span>):</span><br><span class="line">    batch_xs,batch_ys = mnist.train.next_batch(<span class="number">100</span>)</span><br><span class="line">    sess.run(train_step, feed_dict={xs:batch_xs,ys:batch_ys, keep_prob:<span class="number">0.5</span>})</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">50</span> ==<span class="number">0</span>:</span><br><span class="line">        <span class="comment"># print(sess.run(prediction,feed_dict={xs:batch_xs}))</span></span><br><span class="line">        print(compute_accuracy(mnist.test.images,mnist.test.labels))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 卷积网络 </tag>
            
            <tag> TensorFlow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TensorFlow学习笔记6：逻辑回归</title>
      <link href="/2019/08/08/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B06/"/>
      <url>/2019/08/08/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B06/</url>
      
        <content type="html"><![CDATA[<h1 id="&#x903B;&#x8F91;&#x56DE;&#x5F52;"><a href="#&#x903B;&#x8F91;&#x56DE;&#x5F52;" class="headerlink" title="&#x903B;&#x8F91;&#x56DE;&#x5F52;"></a>&#x903B;&#x8F91;&#x56DE;&#x5F52;</h1><p>&#x903B;&#x8F91;&#x56DE;&#x5F52;&#x662F;&#x5E94;&#x7528;&#x975E;&#x5E38;&#x5E7F;&#x6CDB;&#x7684;&#x4E00;&#x4E2A;&#x5206;&#x7C7B;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7B97;&#x6CD5;&#xFF0C;&#x5B83;&#x5C06;&#x6570;&#x636E;&#x62DF;&#x5408;&#x5230;&#x4E00;&#x4E2A;logit&#x51FD;&#x6570;(&#x6216;&#x8005;&#x53EB;&#x505A;logistic&#x51FD;&#x6570;)&#x4E2D;&#xFF0C;&#x4ECE;&#x800C;&#x80FD;&#x591F;&#x5B8C;&#x6210;&#x5BF9;&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#x7684;&#x6982;&#x7387;&#x8FDB;&#x884C;&#x9884;&#x6D4B;&#x3002;</p><a id="more"></a><h1 id="MINIST&#x6570;&#x636E;&#x96C6;"><a href="#MINIST&#x6570;&#x636E;&#x96C6;" class="headerlink" title="MINIST&#x6570;&#x636E;&#x96C6;"></a>MINIST&#x6570;&#x636E;&#x96C6;</h1><p>MNIST &#x6570;&#x636E;&#x96C6;&#x6765;&#x81EA;&#x7F8E;&#x56FD;&#x56FD;&#x5BB6;&#x6807;&#x51C6;&#x4E0E;&#x6280;&#x672F;&#x7814;&#x7A76;&#x6240;, National Institute of Standards and Technology (NIST). &#x8BAD;&#x7EC3;&#x96C6; (training set) &#x7531;&#x6765;&#x81EA; 250 &#x4E2A;&#x4E0D;&#x540C;&#x4EBA;&#x624B;&#x5199;&#x7684;&#x6570;&#x5B57;&#x6784;&#x6210;&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x6709;&#x540D;&#x7684;&#x624B;&#x5199;&#x4F53;&#x6570;&#x5B57;&#x8BC6;&#x522B;&#x6570;&#x636E;&#x96C6;&#xFF0C;&#x5728;&#x5F88;&#x591A;&#x8D44;&#x6599;&#x4E2D;&#xFF0C;&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x96C6;&#x90FD;&#x4F1A;&#x88AB;&#x7528;&#x4F5C;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x7684;&#x5165;&#x95E8;&#x6837;&#x4F8B;&#x3002; </p><ul><li><p>&#x5B58;&#x50A8;&#x5F62;&#x5F0F;<br>&#x5171;&#x6709;&#x56DB;&#x4E2A;&#x538B;&#x7F29;&#x6587;&#x4EF6;<br>train-images-idx3-ubyte.gz: training set images (9912422 bytes)<br>train-labels-idx1-ubyte.gz: training set labels (28881 bytes)<br>t10k-images-idx3-ubyte.gz: test set images (1648877 bytes)<br>t10k-labels-idx1-ubyte.gz: test set labels (4542 bytes) </p></li><li><p>&#x6837;&#x672C;&#x4E2A;&#x6570;<br>&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#xFF1A;&#x5171;55000&#x4E2A;<br>&#x9A8C;&#x8BC1;&#x6837;&#x672C;&#xFF1A;&#x5171;5000&#x4E2A;<br>&#x6D4B;&#x8BD5;&#x6837;&#x672C;&#xFF1A;&#x5171;10000&#x4E2A; </p></li></ul><h1 id="TensorFlow&#x5B9E;&#x73B0;"><a href="#TensorFlow&#x5B9E;&#x73B0;" class="headerlink" title="TensorFlow&#x5B9E;&#x73B0;"></a>TensorFlow&#x5B9E;&#x73B0;</h1><p>&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x4E0B;&#x8F7D;MINIST&#x6570;&#x636E;&#x96C6;</span></span><br><span class="line"><span class="keyword">from</span> tensorflow.examples.tutorials.mnist <span class="keyword">import</span> input_data</span><br><span class="line">mnist = input_data.read_data_sets(<span class="string">&quot;MNIST_data&quot;</span>, one_hot=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x8BBE;&#x5B9A;&#x53C2;&#x6570;</span></span><br><span class="line">learning_rate = <span class="number">0.01</span></span><br><span class="line">training_epochs = <span class="number">25</span></span><br><span class="line">batch_size = <span class="number">100</span></span><br><span class="line">display_step = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x6A21;&#x578B;&#x8F93;&#x5165;,784&#x4E3A;MINIST&#x6570;&#x636E;&#x96C6;&#x7684;&#x56FE;&#x7247;&#x5927;&#x5C0F;28*28</span></span><br><span class="line">x = tf.placeholder(tf.float32, [<span class="literal">None</span>, <span class="number">784</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x6A21;&#x578B;&#x8F93;&#x51FA;,10&#x4E3A;&#x9884;&#x6D4B;&#x7684;&#x7C7B;&#x522B;&#x6570;</span></span><br><span class="line">y = tf.placeholder(tf.float32, [<span class="literal">None</span>, <span class="number">10</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x8BBE;&#x5B9A;&#x6A21;&#x578B;&#x7684;&#x6743;&#x91CD;&#x548C;&#x504F;&#x79FB;&#x91CF;</span></span><br><span class="line">W = tf.Variable(tf.zeros([<span class="number">784</span>, <span class="number">10</span>]))</span><br><span class="line">b = tf.Variable(tf.zeros([<span class="number">10</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x6A21;&#x578B;&#x7684;&#x7ED3;&#x6784;</span></span><br><span class="line">pred = tf.nn.softmax(tf.matmul(x, W) + b) <span class="comment"># Softmax</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x4F7F;&#x7528;cross entropy&#x6765;&#x4F5C;&#x4E3A;&#x635F;&#x5931;&#x51FD;&#x6570;</span></span><br><span class="line">cost = tf.reduce_mean(-tf.reduce_sum(y*tf.log(pred), reduction_indices=<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x4F7F;&#x7528;Gradient Descent</span></span><br><span class="line">optimizer = tf.train.GradientDescentOptimizer(learning_rate).minimize(cost)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x521D;&#x59CB;&#x5316;&#x6240;&#x6709;&#x53D8;&#x91CF;</span></span><br><span class="line">init = tf.global_variables_initializer()</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x5F00;&#x59CB;&#x8BAD;&#x7EC3;</span></span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x6267;&#x884C;&#x521D;&#x59CB;&#x5316;</span></span><br><span class="line">    sess.run(init)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x8BAD;&#x7EC3;&#x5FAA;&#x73AF;</span></span><br><span class="line">    <span class="keyword">for</span> epoch <span class="keyword">in</span> range(training_epochs):</span><br><span class="line">        avg_cost = <span class="number">0.</span></span><br><span class="line">        total_batch = int(mnist.train.num_examples/batch_size)</span><br><span class="line">        <span class="comment"># &#x5FAA;&#x73AF;&#x6BCF;&#x4E00;&#x4E2A;batches</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(total_batch):</span><br><span class="line">            batch_xs, batch_ys = mnist.train.next_batch(batch_size)</span><br><span class="line">            <span class="comment"># &#x6267;&#x884C;optimizer,&#x83B7;&#x5F97;cost</span></span><br><span class="line">            _, c = sess.run([optimizer, cost], feed_dict={x: batch_xs,</span><br><span class="line">                                                          y: batch_ys})</span><br><span class="line">            <span class="comment"># &#x8BA1;&#x7B97;&#x5E73;&#x5747;&#x635F;&#x5931;</span></span><br><span class="line">            avg_cost += c / total_batch</span><br><span class="line">        <span class="comment"># &#x663E;&#x793A;&#x6BCF;&#x4E00;&#x8F6E;&#x7684;&#x7ED3;&#x679C;</span></span><br><span class="line">        <span class="keyword">if</span> (epoch+<span class="number">1</span>) % display_step == <span class="number">0</span>:</span><br><span class="line">            print(<span class="string">&quot;Epoch:&quot;</span>, <span class="string">&apos;%04d&apos;</span> % (epoch+<span class="number">1</span>), <span class="string">&quot;cost=&quot;</span>, <span class="string">&quot;{:.9f}&quot;</span>.format(avg_cost))</span><br><span class="line"></span><br><span class="line">    print(<span class="string">&quot;Optimization Finished!&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x6D4B;&#x8BD5;&#x6A21;&#x578B;</span></span><br><span class="line">    correct_prediction = tf.equal(tf.argmax(pred, <span class="number">1</span>), tf.argmax(y, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x8BA1;&#x7B97;&#x7CBE;&#x786E;&#x7387;</span></span><br><span class="line">    accuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))</span><br><span class="line">    print(<span class="string">&quot;Accuracy:&quot;</span>, accuracy.eval({x: mnist.test.images, y: mnist.test.labels}))</span><br></pre></td></tr></table></figure></p><p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Epoch: 0001 cost= 1.183872078</span><br><span class="line">Epoch: 0002 cost= 0.665350118</span><br><span class="line">Epoch: 0003 cost= 0.552830602</span><br><span class="line">Epoch: 0004 cost= 0.498699041</span><br><span class="line">Epoch: 0005 cost= 0.465488806</span><br><span class="line">Epoch: 0006 cost= 0.442619649</span><br><span class="line">Epoch: 0007 cost= 0.425471577</span><br><span class="line">Epoch: 0008 cost= 0.412201005</span><br><span class="line">Epoch: 0009 cost= 0.401415385</span><br><span class="line">Epoch: 0010 cost= 0.392391824</span><br><span class="line">Epoch: 0011 cost= 0.384738960</span><br><span class="line">Epoch: 0012 cost= 0.378136856</span><br><span class="line">Epoch: 0013 cost= 0.372445326</span><br><span class="line">Epoch: 0014 cost= 0.367273882</span><br><span class="line">Epoch: 0015 cost= 0.362716155</span><br><span class="line">Epoch: 0016 cost= 0.358604888</span><br><span class="line">Epoch: 0017 cost= 0.354853253</span><br><span class="line">Epoch: 0018 cost= 0.351472244</span><br><span class="line">Epoch: 0019 cost= 0.348347617</span><br><span class="line">Epoch: 0020 cost= 0.345449658</span><br><span class="line">Epoch: 0021 cost= 0.342724947</span><br><span class="line">Epoch: 0022 cost= 0.340273546</span><br><span class="line">Epoch: 0023 cost= 0.337938625</span><br><span class="line">Epoch: 0024 cost= 0.335751063</span><br><span class="line">Epoch: 0025 cost= 0.333709621</span><br><span class="line">Optimization Finished!</span><br><span class="line">Accuracy: 0.9138</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TensorFlow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TensoeFlow学习笔记5：线性回归</title>
      <link href="/2019/08/08/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B05/"/>
      <url>/2019/08/08/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B05/</url>
      
        <content type="html"><![CDATA[<h1 id="&#x7EBF;&#x6027;&#x56DE;&#x5F52;"><a href="#&#x7EBF;&#x6027;&#x56DE;&#x5F52;" class="headerlink" title="&#x7EBF;&#x6027;&#x56DE;&#x5F52;"></a>&#x7EBF;&#x6027;&#x56DE;&#x5F52;</h1><p>&#x7EBF;&#x6027;&#x56DE;&#x5F52;&#xFF08;Linear Regression&#xFF09;&#x662F;&#x4E00;&#x79CD;&#x901A;&#x8FC7;&#x5C5E;&#x6027;&#x7684;&#x7EBF;&#x6027;&#x7EC4;&#x5408;&#x6765;&#x8FDB;&#x884C;&#x9884;&#x6D4B;&#x7684;&#x7EBF;&#x6027;&#x6A21;&#x578B;&#xFF0C;&#x5176;&#x76EE;&#x7684;&#x662F;&#x627E;&#x5230;&#x4E00;&#x6761;&#x76F4;&#x7EBF;&#x6216;&#x8005;&#x4E00;&#x4E2A;&#x5E73;&#x9762;&#x6216;&#x8005;&#x66F4;&#x9AD8;&#x7EF4;&#x7684;&#x8D85;&#x5E73;&#x9762;&#xFF0C;&#x4F7F;&#x5F97;&#x9884;&#x6D4B;&#x503C;&#x4E0E;&#x771F;&#x5B9E;&#x503C;&#x4E4B;&#x95F4;&#x7684;&#x8BEF;&#x5DEE;&#x6700;&#x5C0F;&#x5316;&#x3002;</p><a id="more"></a><h1 id="&#x7B80;&#x5355;&#x5B9E;&#x73B0;"><a href="#&#x7B80;&#x5355;&#x5B9E;&#x73B0;" class="headerlink" title="&#x7B80;&#x5355;&#x5B9E;&#x73B0;"></a>&#x7B80;&#x5355;&#x5B9E;&#x73B0;</h1><p>&#x5177;&#x4F53;&#x4EE3;&#x7801;&#xFF1A;<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">num_points=<span class="number">1000</span>    </span><br><span class="line">vectors_set=[]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(num_points):</span><br><span class="line">    <span class="comment"># &#x6A2A;&#x5750;&#x6807;&#xFF0C;&#x8FDB;&#x884C;&#x968F;&#x673A;&#x9AD8;&#x65AF;&#x5904;&#x7406;&#x5316;&#xFF0C;&#x4EE5;0&#x4E3A;&#x5747;&#x503C;&#xFF0C;&#x4EE5;0.55&#x4E3A;&#x6807;&#x51C6;&#x5DEE;</span></span><br><span class="line">    x1=np.random.normal(<span class="number">0.0</span>,<span class="number">0.55</span>)</span><br><span class="line">    <span class="comment"># &#x7EB5;&#x5750;&#x6807;&#xFF0C;&#x6570;&#x636E;&#x70B9;&#x5728;y1=x1*0.1+0.3&#x4E0A;&#x5C0F;&#x8303;&#x56F4;&#x6D6E;&#x52A8;</span></span><br><span class="line">    y1=x1*<span class="number">0.1</span>+<span class="number">0.3</span>+np.random.normal(<span class="number">0.0</span>,<span class="number">0.03</span>)</span><br><span class="line">    vectors_set.append([x1,y1])</span><br><span class="line">    x_data=[v[<span class="number">0</span>] <span class="keyword">for</span> v <span class="keyword">in</span> vectors_set]</span><br><span class="line">    y_data=[v[<span class="number">1</span>] <span class="keyword">for</span> v <span class="keyword">in</span> vectors_set]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x751F;&#x6210;1&#x7EF4;&#x7684;W&#x77E9;&#x9635;&#xFF0C;&#x53D6;&#x503C;&#x662F;[-1,1]&#x4E4B;&#x95F4;&#x7684;&#x968F;&#x673A;&#x6570;</span></span><br><span class="line">W = tf.Variable(tf.random_uniform([<span class="number">1</span>], <span class="number">-1.0</span>, <span class="number">1.0</span>), name=<span class="string">&apos;W&apos;</span>)</span><br><span class="line"><span class="comment"># &#x751F;&#x6210;1&#x7EF4;&#x7684;b&#x77E9;&#x9635;&#xFF0C;&#x521D;&#x59CB;&#x503C;&#x662F;0</span></span><br><span class="line">b = tf.Variable(tf.zeros([<span class="number">1</span>]), name=<span class="string">&apos;b&apos;</span>)</span><br><span class="line"><span class="comment"># &#x7ECF;&#x8FC7;&#x8BA1;&#x7B97;&#x5F97;&#x51FA;&#x9884;&#x4F30;&#x503C;y</span></span><br><span class="line">y = W * x_data + b</span><br><span class="line"><span class="comment"># &#x4EE5;&#x9884;&#x4F30;&#x503C;y&#x548C;&#x5B9E;&#x9645;&#x503C;y_data&#x4E4B;&#x95F4;&#x7684;&#x5747;&#x65B9;&#x8BEF;&#x5DEE;&#x4F5C;&#x4E3A;&#x635F;&#x5931;</span></span><br><span class="line">loss = tf.reduce_mean(tf.square(y - y_data), name=<span class="string">&apos;loss&apos;</span>)</span><br><span class="line"><span class="comment"># &#x91C7;&#x7528;&#x68AF;&#x5EA6;&#x4E0B;&#x964D;&#x6CD5;&#x6765;&#x4F18;&#x5316;&#x53C2;&#x6570;  &#x5B66;&#x4E60;&#x7387;&#x4E3A;0.5</span></span><br><span class="line">optimizer = tf.train.GradientDescentOptimizer(<span class="number">0.5</span>)</span><br><span class="line"><span class="comment"># &#x8BAD;&#x7EC3;&#x7684;&#x8FC7;&#x7A0B;&#x5C31;&#x662F;&#x6700;&#x5C0F;&#x5316;&#x8FD9;&#x4E2A;&#x8BEF;&#x5DEE;&#x503C;</span></span><br><span class="line">train = optimizer.minimize(loss, name=<span class="string">&apos;train&apos;</span>)</span><br><span class="line"><span class="comment"># sess = tf.Session()</span></span><br><span class="line">init = tf.global_variables_initializer()</span><br><span class="line"><span class="comment"># &#x521B;&#x5EFA;&#x4F1A;&#x8BDD;</span></span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    sess.run(init)</span><br><span class="line">    <span class="comment"># &#x6267;&#x884C;20&#x6B21;&#x8BAD;&#x7EC3;</span></span><br><span class="line">    <span class="keyword">for</span> step <span class="keyword">in</span> range(<span class="number">20</span>):</span><br><span class="line">        sess.run(train) <span class="comment"># &#x8F93;&#x51FA;&#x8BAD;&#x7EC3;&#x597D;&#x7684;W&#x548C;b</span></span><br><span class="line"></span><br><span class="line">        print(<span class="string">&quot;W =&quot;</span>, sess.run(W), <span class="string">&quot;b =&quot;</span>, sess.run(b), <span class="string">&quot;loss =&quot;</span>, sess.run(loss))</span><br><span class="line"></span><br><span class="line">    plt.scatter(x_data,y_data,c=<span class="string">&apos;r&apos;</span>)</span><br><span class="line">    plt.plot(x_data,sess.run(y))</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure></p><p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">W = [0.41536754] b = [0.29331774] loss = 0.028788242</span><br><span class="line">W = [0.32664812] b = [0.29488927] loss = 0.015261736</span><br><span class="line">W = [0.26295245] b = [0.29606903] loss = 0.008289363</span><br><span class="line">W = [0.2172218] b = [0.29691604] loss = 0.004695383</span><br><span class="line">W = [0.18438922] b = [0.29752415] loss = 0.002842829</span><br><span class="line">W = [0.1608169] b = [0.29796076] loss = 0.0018879117</span><br><span class="line">W = [0.143893] b = [0.29827422] loss = 0.0013956894</span><br><span class="line">W = [0.1317424] b = [0.2984993] loss = 0.0011419685</span><br><span class="line">W = [0.12301882] b = [0.29866084] loss = 0.0010111856</span><br><span class="line">W = [0.11675566] b = [0.29877687] loss = 0.00094377215</span><br><span class="line">W = [0.112259] b = [0.29886016] loss = 0.0009090233</span><br><span class="line">W = [0.1090306] b = [0.29891995] loss = 0.0008911116</span><br><span class="line">W = [0.10671275] b = [0.29896286] loss = 0.00088187883</span><br><span class="line">W = [0.10504864] b = [0.2989937] loss = 0.0008771197</span><br><span class="line">W = [0.10385388] b = [0.29901582] loss = 0.00087466656</span><br><span class="line">W = [0.1029961] b = [0.2990317] loss = 0.00087340205</span><br><span class="line">W = [0.10238025] b = [0.29904312] loss = 0.0008727502</span><br><span class="line">W = [0.10193809] b = [0.2990513] loss = 0.0008724143</span><br><span class="line">W = [0.10162064] b = [0.2990572] loss = 0.0008722411</span><br><span class="line">W = [0.10139273] b = [0.29906142] loss = 0.00087215187</span><br></pre></td></tr></table></figure></p><p><img src="/2019/08/08/tf&#x5B66;&#x4E60;&#x7B14;&#x8BB0;5/1.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TensorFlow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TensorFlow学习笔记4：损失函数</title>
      <link href="/2019/08/06/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B04/"/>
      <url>/2019/08/06/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B04/</url>
      
        <content type="html"><![CDATA[<h1 id="&#x635F;&#x5931;&#x51FD;&#x6570;"><a href="#&#x635F;&#x5931;&#x51FD;&#x6570;" class="headerlink" title="&#x635F;&#x5931;&#x51FD;&#x6570;"></a>&#x635F;&#x5931;&#x51FD;&#x6570;</h1><p>&#x635F;&#x5931;&#x51FD;&#x6570;&#xFF08;loss function&#xFF09;&#x662F;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x4E2D;&#x975E;&#x5E38;&#x91CD;&#x8981;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x5B83;&#x662F;&#x5EA6;&#x91CF;&#x6A21;&#x578B;&#x8F93;&#x51FA;&#x503C;&#x4E0E;&#x76EE;&#x6807;&#x503C;&#x7684;&#x5DEE;&#x5F02;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x4F5C;&#x4E3A;&#x8BC4;&#x4F30;&#x6A21;&#x578B;&#x6548;&#x679C;&#x7684;&#x4E00;&#x79CD;&#x91CD;&#x8981;&#x6307;&#x6807;&#xFF0C;&#x635F;&#x5931;&#x51FD;&#x6570;&#x8D8A;&#x5C0F;&#xFF0C;&#x8868;&#x660E;&#x6A21;&#x578B;&#x7684;&#x9C81;&#x68D2;&#x6027;&#x5C31;&#x8D8A;&#x597D;&#x3002;</p><a id="more"></a><h1 id="&#x4F7F;&#x7528;&#x635F;&#x5931;&#x51FD;&#x6570;"><a href="#&#x4F7F;&#x7528;&#x635F;&#x5931;&#x51FD;&#x6570;" class="headerlink" title="&#x4F7F;&#x7528;&#x635F;&#x5931;&#x51FD;&#x6570;"></a>&#x4F7F;&#x7528;&#x635F;&#x5931;&#x51FD;&#x6570;</h1><p>&#x5728;TensorFlow&#x4E2D;&#x8BAD;&#x7EC3;&#x6A21;&#x578B;&#x65F6;&#xFF0C;&#x901A;&#x8FC7;&#x635F;&#x5931;&#x51FD;&#x6570;&#x544A;&#x8BC9;TensorFlow&#x9884;&#x6D4B;&#x7ED3;&#x679C;&#x76F8;&#x6BD4;&#x76EE;&#x6807;&#x7ED3;&#x679C;&#x662F;&#x597D;&#x8FD8;&#x662F;&#x574F;&#x3002;&#x5728;&#x591A;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x4F1A;&#x7ED9;&#x51FA;&#x6A21;&#x578B;&#x8BAD;&#x7EC3;&#x7684;&#x6837;&#x672C;&#x6570;&#x636E;&#x548C;&#x76EE;&#x6807;&#x6570;&#x636E;&#xFF0C;&#x635F;&#x5931;&#x51FD;&#x6570;&#x5373;&#x662F;&#x6BD4;&#x8F83;&#x9884;&#x6D4B;&#x503C;&#x4E0E;&#x7ED9;&#x5B9A;&#x7684;&#x76EE;&#x6807;&#x503C;&#x4E4B;&#x95F4;&#x7684;&#x5DEE;&#x5F02;&#x3002;</p><p>&#x4E0B;&#x9762;&#x5C06;&#x4ECB;&#x7ECD;&#x5728;TensorFlow&#x4E2D;&#x5E38;&#x7528;&#x7684;&#x635F;&#x5931;&#x51FD;&#x6570;&#x3002;</p><ul><li><p>L1&#x6B63;&#x5219;&#x635F;&#x5931;&#x51FD;&#x6570;(&#x5373;&#x7EDD;&#x5BF9;&#x503C;&#x635F;&#x5931;&#x51FD;&#x6570;)</p><script type="math/tex; mode=display">L(Y,f(X))=|Y-f(X)|</script><p>TensorFlow&#x5B9E;&#x73B0;&#xFF1A;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">loss_L1_vals = tf.abs(y_pred-y_target)</span><br></pre></td></tr></table></figure></li><li><p>L2&#x6B63;&#x5219;&#x635F;&#x5931;&#x51FD;&#x6570;(&#x5373;&#x6B27;&#x62C9;&#x635F;&#x5931;&#x51FD;&#x6570;)<br>L2&#x6B63;&#x5219;&#x635F;&#x5931;&#x51FD;&#x6570;&#x662F;&#x9884;&#x6D4B;&#x503C;&#x4E0E;&#x76EE;&#x6807;&#x503C;&#x5DEE;&#x503C;&#x7684;&#x5E73;&#x65B9;&#x548C;&#xFF0C;&#x516C;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A;</p><script type="math/tex; mode=display">L(Y,f(X))=\sum_{i=1}^{n}(Y-f(X))^2</script><p>TensorFlow&#x5B9E;&#x73B0;&#xFF1A;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">loss_L2_vals = tf.square(y_pred-y_target)</span><br></pre></td></tr></table></figure></li><li><p>&#x5747;&#x65B9;&#x8BEF;&#x5DEE;&#xFF08;MSE&#xFF0C;mean squared error)<br>&#x5BF9;L2&#x53D6;&#x5E73;&#x5747;&#x503C;&#x5C31;&#x53D8;&#x6210;&#x4E86;&#x5747;&#x65B9;&#x8BEF;&#x5DEE;&#xFF0C;&#x516C;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A;</p><script type="math/tex; mode=display">MSE(y,y')=\frac{\sum_{i=1}^{n}(y_i-y_i')^2}{n}</script><p>TensorFlow&#x5B9E;&#x73B0;&#xFF1A;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">loss_mse_vals = tf.reduce.mean(tf.square(y_pred-y_target))</span><br></pre></td></tr></table></figure></li><li><p>&#x4EA4;&#x53C9;&#x71B5;(Cross Entropy)&#x635F;&#x5931;&#x51FD;&#x6570;<br>&#x4EA4;&#x53C9;&#x71B5;&#x523B;&#x753B;&#x4E86;&#x4E24;&#x4E2A;&#x6982;&#x7387;&#x5206;&#x5E03;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#xFF0C;&#x662F;&#x5206;&#x7C7B;&#x95EE;&#x9898;&#x4E2D;&#x4F7F;&#x7528;&#x5E7F;&#x6CDB;&#x7684;&#x635F;&#x5931;&#x51FD;&#x6570;&#x3002;&#x7ED9;&#x5B9A;&#x4E24;&#x4E2A;&#x6982;&#x7387;&#x5206;&#x5E03;p&#x548C;q&#xFF0C;&#x4EA4;&#x53C9;&#x71B5;&#x523B;&#x753B;&#x7684;&#x662F;&#x4E24;&#x4E2A;&#x6982;&#x7387;&#x5206;&#x5E03;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#xFF0C;&#x516C;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A;</p><script type="math/tex; mode=display">H(X=x)=-\sum_x p(x)logq(x)</script><p>TensorFlow&#x5B9E;&#x73B0;&#xFF1A;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># &#x6CE8;&#x610F;y_pred&#x9700;&#x8981;&#x5148;&#x7ECF;&#x8FC7;softmax&#x5904;&#x7406;</span><br><span class="line">cross_entropy = -tf.reduce_mean(y_target*tf.log(tf.clip_by_value(y_pred,1e-10,1.0)))</span><br></pre></td></tr></table></figure><p>tf.clip_by_value()&#x51FD;&#x6570;&#x53EF;&#x5C06;&#x4E00;&#x4E2A;tensor&#x7684;&#x5143;&#x7D20;&#x6570;&#x503C;&#x9650;&#x5236;&#x5728;&#x6307;&#x5B9A;&#x8303;&#x56F4;&#x5185;&#xFF0C;&#x8FD9;&#x6837;&#x53EF;&#x9632;&#x6B62;&#x4E00;&#x4E9B;&#x9519;&#x8BEF;&#x8FD0;&#x7B97;&#xFF0C;&#x8D77;&#x5230;&#x6570;&#x503C;&#x68C0;&#x67E5;&#x4F5C;&#x7528;&#x3002;</p></li></ul><h1 id="TensorFlow&#x7684;Cross-Entropy&#x5B9E;&#x73B0;"><a href="#TensorFlow&#x7684;Cross-Entropy&#x5B9E;&#x73B0;" class="headerlink" title="TensorFlow&#x7684;Cross_Entropy&#x5B9E;&#x73B0;"></a>TensorFlow&#x7684;Cross_Entropy&#x5B9E;&#x73B0;</h1><ul><li><p><strong>tf.nn.softmax_cross_entropy_with_logits(_sentinel=None,labels=None, logits=None, dim=-1, name=None)</strong><br>&#x8BE5;&#x51FD;&#x6570;&#x7684;&#x529F;&#x80FD;&#x662F;&#x81EA;&#x52A8;&#x8BA1;&#x7B97;logits&#xFF08;&#x672A;&#x7ECF;&#x8FC7;Softmax&#xFF09;&#x4E0E;labels&#x4E4B;&#x95F4;&#x7684;cross_entropy&#x4EA4;&#x53C9;&#x71B5;&#x3002;</p><p>&#x8BE5;&#x64CD;&#x4F5C;&#x5E94;&#x8BE5;&#x65BD;&#x52A0;&#x5728;&#x672A;&#x7ECF;&#x8FC7;Softmax&#x5904;&#x7406;&#x7684;logits&#x4E0A;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x4EA7;&#x751F;&#x9519;&#x8BEF;&#x7ED3;&#x679C;&#xFF1B;labels&#x4E3A;&#x671F;&#x671B;&#x8F93;&#x51FA;&#xFF0C;&#x4E14;&#x5FC5;&#x987B;&#x91C7;&#x7528;labels=y_,logits=y3&#x7684;&#x5F62;&#x5F0F;&#x5C06;&#x53C2;&#x6570;&#x4F20;&#x5165;&#x3002;</p><p>&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;logits&#xFF1A;&#x5C31;&#x662F;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x6700;&#x540E;&#x4E00;&#x5C42;&#x7684;&#x8F93;&#x51FA;&#xFF0C;&#x5982;&#x679C;&#x6709;batch&#x7684;&#x8BDD;&#xFF0C;&#x5B83;&#x7684;&#x5927;&#x5C0F;&#x5C31;&#x662F;[batchsize&#xFF0C;num_classes]&#xFF0C;&#x5355;&#x6837;&#x672C;&#x7684;&#x8BDD;&#xFF0C;&#x5927;&#x5C0F;&#x5C31;&#x662F;num_classes</p><p>&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;labels&#xFF1A;&#x5B9E;&#x9645;&#x7684;&#x6807;&#x7B7E;&#xFF0C;&#x5927;&#x5C0F;&#x540C;&#x4E0A;&#x3002;<br><strong>&#x6CE8;&#x610F;&#xFF1A;</strong> &#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x5E76;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x6570;&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x4E2A;&#x5411;&#x91CF;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x6C42;&#x4EA4;&#x53C9;&#x71B5;&#xFF0C;&#x6211;&#x4EEC;&#x8981;&#x518D;&#x505A;&#x4E00;&#x6B65;tf.reduce_sum&#x64CD;&#x4F5C;,&#x5C31;&#x662F;&#x5BF9;&#x5411;&#x91CF;&#x91CC;&#x9762;&#x6240;&#x6709;&#x5143;&#x7D20;&#x6C42;&#x548C;&#xFF0C;&#x6700;&#x540E;&#x624D;&#x5F97;&#x5230;&#x4EA4;&#x53C9;&#x71B5;&#xFF0C;&#x5982;&#x679C;&#x6C42;loss&#xFF0C;&#x5219;&#x8981;&#x505A;&#x4E00;&#x6B65;tf.reduce_mean&#x64CD;&#x4F5C;&#xFF0C;&#x5BF9;&#x5411;&#x91CF;&#x6C42;&#x5747;&#x503C;&#xFF01;</p></li><li><p><strong>tf.nn.sparse_softmax_cross_entropy_with_logits(_sentinel=None,labels=None, logits=None, name=None)</strong><br>&#x8BE5;&#x51FD;&#x6570;&#x4E0E;tf.nn.softmax_cross_entropy_with_logits()&#x5341;&#x5206;&#x76F8;&#x4F3C;&#xFF0C;&#x552F;&#x4E00;&#x7684;&#x533A;&#x522B;&#x5728;&#x4E8E;labels&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x7684;&#x6807;&#x7B7E;labels&#x8981;&#x6C42;&#x662F;&#x6392;&#x4ED6;&#x6027;&#x7684;&#x5373;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x6B63;&#x786E;&#x7C7B;&#x522B;&#xFF0C;labels&#x7684;&#x5F62;&#x72B6;&#x8981;&#x6C42;&#x662F;[batch_size] &#x800C;&#x503C;&#x5FC5;&#x987B;&#x662F;&#x4ECE;0&#x5F00;&#x59CB;&#x7F16;&#x7801;&#x7684;int32&#x6216;int64&#xFF0C;&#x800C;&#x4E14;&#x503C;&#x8303;&#x56F4;&#x662F;[0, num_class)&#xFF0C;&#x5BF9;&#x6BD4;&#x4E8E;tf.nn.softmax_cross_entropy_with_logits&#x7684;[batchsize&#xFF0C;num_classes]&#x683C;&#x5F0F;&#x7684;&#x5F97;&#x5206;&#x7F16;&#x7801;&#x3002;</p></li><li><p><strong>tf.nn.sigmoid_cross_entropy_with_logits(_sentinel=None,labels=None, logits=None, name=None)</strong><br>sigmoid_cross_entropy_with_logits&#x662F;TensorFlow&#x6700;&#x65E9;&#x5B9E;&#x73B0;&#x7684;&#x4EA4;&#x53C9;&#x71B5;&#x7B97;&#x6CD5;&#x3002;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x8F93;&#x5165;&#x662F;logits&#x548C;labels&#xFF0C;logits&#x5C31;&#x662F;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x6A21;&#x578B;&#x4E2D;&#x7684; W * X&#x77E9;&#x9635;&#xFF0C;&#x6CE8;&#x610F;&#x4E0D;&#x9700;&#x8981;&#x7ECF;&#x8FC7;sigmoid&#xFF0C;&#x800C;labels&#x7684;shape&#x548C;logits&#x76F8;&#x540C;&#xFF0C;&#x5C31;&#x662F;&#x6B63;&#x786E;&#x7684;&#x6807;&#x7B7E;&#x503C;&#xFF0C;&#x4F8B;&#x5982;&#x8FD9;&#x4E2A;&#x6A21;&#x578B;&#x4E00;&#x6B21;&#x8981;&#x5224;&#x65AD;100&#x5F20;&#x56FE;&#x662F;&#x5426;&#x5305;&#x542B;10&#x79CD;&#x52A8;&#x7269;&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x8F93;&#x5165;&#x7684;shape&#x90FD;&#x662F;[100, 10]&#x3002;&#x6CE8;&#x91CA;&#x4E2D;&#x8FD8;&#x63D0;&#x5230;&#x8FD9;10&#x4E2A;&#x5206;&#x7C7B;&#x4E4B;&#x95F4;&#x662F;&#x72EC;&#x7ACB;&#x7684;&#x3001;&#x4E0D;&#x8981;&#x6C42;&#x662F;&#x4E92;&#x65A5;&#xFF0C;&#x8FD9;&#x79CD;&#x95EE;&#x9898;&#x6211;&#x4EEC;&#x79F0;&#x4E3A;&#x591A;&#x76EE;&#x6807;&#xFF08;&#x591A;&#x6807;&#x7B7E;&#xFF09;&#x5206;&#x7C7B;&#xFF0C;&#x4F8B;&#x5982;&#x5224;&#x65AD;&#x56FE;&#x7247;&#x4E2D;&#x662F;&#x5426;&#x5305;&#x542B;10&#x79CD;&#x52A8;&#x7269;&#x4E2D;&#x7684;&#x4E00;&#x79CD;&#x6216;&#x51E0;&#x79CD;&#xFF0C;&#x6807;&#x7B7E;&#x503C;&#x53EF;&#x4EE5;&#x5305;&#x542B;&#x591A;&#x4E2A;1&#x6216;0&#x4E2A;1&#x3002;</p></li><li><p><strong>tf.nn.weighted_cross_entropy_with_logits(targets, logits, pos_weight, name=None)</strong><br>weighted_sigmoid_cross_entropy_with_logits&#x662F;sigmoid_cross_entropy_with_logits&#x7684;&#x62D3;&#x5C55;&#x7248;&#xFF0C;&#x591A;&#x652F;&#x6301;&#x4E00;&#x4E2A;pos_weight&#x53C2;&#x6570;&#xFF0C;&#x5728;&#x4F20;&#x7EDF;&#x57FA;&#x4E8E;sigmoid&#x7684;&#x4EA4;&#x53C9;&#x71B5;&#x7B97;&#x6CD5;&#x4E0A;&#xFF0C;&#x6B63;&#x6837;&#x672C;&#x7B97;&#x51FA;&#x7684;&#x503C;&#x4E58;&#x4EE5;&#x67D0;&#x4E2A;&#x7CFB;&#x6570;&#x3002;</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TensorFlow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TensorFlow学习笔记3：激励函数</title>
      <link href="/2019/08/06/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03/"/>
      <url>/2019/08/06/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03/</url>
      
        <content type="html"><![CDATA[<h1 id="&#x6FC0;&#x52B1;&#x51FD;&#x6570;&#x7684;&#x4F5C;&#x7528;"><a href="#&#x6FC0;&#x52B1;&#x51FD;&#x6570;&#x7684;&#x4F5C;&#x7528;" class="headerlink" title="&#x6FC0;&#x52B1;&#x51FD;&#x6570;&#x7684;&#x4F5C;&#x7528;"></a>&#x6FC0;&#x52B1;&#x51FD;&#x6570;&#x7684;&#x4F5C;&#x7528;</h1><p>&#x6FC0;&#x52B1;&#x51FD;&#x6570;&#x7684;&#x4F5C;&#x7528;&#x5C31;&#x662F;&#x5C06;&#x591A;&#x4E2A;&#x7EBF;&#x6027;&#x8F93;&#x5165;&#x8F6C;&#x6362;&#x4E3A;&#x975E;&#x7EBF;&#x6027;&#x7684;&#x5173;&#x7CFB;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x4F7F;&#x7528;&#x6FC0;&#x52B1;&#x51FD;&#x6570;&#xFF0C;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x6BCF;&#x5C42;&#x90FD;&#x53EA;&#x662F;&#x505A;&#x7EBF;&#x6027;&#x53D8;&#x6362;&#xFF0C;&#x5373;&#x4F7F;&#x662F;&#x591A;&#x5C42;&#x8F93;&#x5165;&#x53E0;&#x52A0;&#x540E;&#x4E5F;&#x8FD8;&#x662F;&#x7EBF;&#x6027;&#x53D8;&#x6362;&#x3002;&#x901A;&#x8FC7;&#x4F7F;&#x7528;&#x6FC0;&#x52B1;&#x51FD;&#x6570;&#x5F15;&#x5165;&#x975E;&#x7EBF;&#x6027;&#x56E0;&#x7D20;&#x540E;&#xFF0C;&#x4F7F;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x8868;&#x793A;&#x80FD;&#x529B;&#x66F4;&#x5F3A;&#x4E86;&#x3002;</p><a id="more"></a><h1 id="&#x4F7F;&#x7528;&#x6FC0;&#x52B1;&#x51FD;&#x6570;"><a href="#&#x4F7F;&#x7528;&#x6FC0;&#x52B1;&#x51FD;&#x6570;" class="headerlink" title="&#x4F7F;&#x7528;&#x6FC0;&#x52B1;&#x51FD;&#x6570;"></a>&#x4F7F;&#x7528;&#x6FC0;&#x52B1;&#x51FD;&#x6570;</h1><p>&#x5728;TensorFlow&#x4E2D;&#x4F7F;&#x7528;&#x6FC0;&#x52B1;&#x51FD;&#x6570;&#x975E;&#x5E38;&#x65B9;&#x4FBF;&#xFF0C;&#x6FC0;&#x52B1;&#x51FD;&#x6570;&#x4F4D;&#x4E8E;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x5E93;&#x4E2D;&#xFF08;tensorflow.nn&#xFF09;&#xFF0C;&#x4E0B;&#x9762;&#x4ECB;&#x7ECD;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#x3002;<br>&#x9996;&#x5148;&#x5148;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x4F1A;&#x8BDD;&#xFF0C;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x8BA1;&#x7B97;&#x56FE;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import tensorflow as tf</span><br><span class="line">sess = tf.Session()</span><br></pre></td></tr></table></figure></p><ul><li><p><strong>ReLU&#x51FD;&#x6570;</strong><br>ReLU&#xFF08;Rectifier linear unit&#xFF0C;&#x6574;&#x6D41;&#x7EBF;&#x6027;&#x5355;&#x5143;&#xFF09;&#x662F;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#x6700;&#x5E38;&#x7528;&#x7684;&#x6FC0;&#x52B1;&#x51FD;&#x6570;&#xFF0C;&#x51FD;&#x6570;&#x5982;&#x4E0B;&#xFF1A;</p><script type="math/tex; mode=display">max(0,x)</script><p>&#x8C03;&#x7528;&#x51FD;&#x6570;<code>tf.nn.relu()</code></p></li><li><p><strong>ReLU6&#x51FD;&#x6570;</strong><br>&#x5F15;&#x5165;ReLU6&#x4E3B;&#x8981;&#x662F;&#x4E3A;&#x4E86;&#x62B5;&#x6D88;ReLU&#x51FD;&#x6570;&#x7684;&#x7EBF;&#x6027;&#x589E;&#x957F;&#x90E8;&#x5206;&#xFF0C;&#x5728;ReLU&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x518D;&#x52A0;&#x4E0A;min&#xFF0C;&#x51FD;&#x6570;&#x5982;&#x4E0B;&#xFF1A;</p><script type="math/tex; mode=display">min(max(0,x),6)</script><p>&#x8C03;&#x7528;&#x51FD;&#x6570;<code>tf.nn.relu6()</code></p></li><li><p><strong>Leaky ReLU&#x51FD;&#x6570;</strong><br>&#x5F15;&#x5165;Leaky ReLU&#x4E3B;&#x8981;&#x662F;&#x4E3A;&#x4E86;&#x907F;&#x514D;&#x68AF;&#x5EA6;&#x6D88;&#x5931;&#xFF0C;&#x5F53;&#x795E;&#x7ECF;&#x5143;&#x5904;&#x4E8E;&#x975E;&#x6FC0;&#x6D3B;&#x72B6;&#x6001;&#x65F6;&#xFF0C;&#x5141;&#x8BB8;&#x4E00;&#x4E2A;&#x975E;0&#x7684;&#x68AF;&#x5EA6;&#x5B58;&#x5728;&#xFF0C;&#x8FD9;&#x6837;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x68AF;&#x5EA6;&#x6D88;&#x5931;&#xFF0C;&#x6536;&#x655B;&#x901F;&#x5EA6;&#x5FEB;&#x3002;&#x51FD;&#x6570;&#x5982;&#x4E0B;&#xFF1A;</p><script type="math/tex; mode=display">max(0.1x,x)</script><p>&#x8C03;&#x7528;&#x51FD;&#x6570;<code>tf.nn.leaky_relu()</code></p></li><li><p><strong>sigmoid&#x51FD;&#x6570;</strong><br>sigmoid&#x51FD;&#x6570;&#x662F;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#x6700;&#x5E38;&#x7528;&#x7684;&#x6FC0;&#x52B1;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x4E5F;&#x88AB;&#x79F0;&#x4E3A;&#x903B;&#x8F91;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x5728;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x7684;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;&#x4E2D;&#x4F1A;&#x5BFC;&#x81F4;&#x68AF;&#x5EA6;&#x6D88;&#x5931;&#xFF0C;&#x56E0;&#x6B64;&#x5728;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x4E2D;&#x4E0D;&#x600E;&#x4E48;&#x4F7F;&#x7528;&#x3002;&#x51FD;&#x6570;&#x5982;&#x4E0B;&#xFF1A;</p><script type="math/tex; mode=display">\sigma(x)=\frac{1}{1+e^{-x}}</script><p>&#x8C03;&#x7528;&#x51FD;&#x6570;<code>tf.nn.sigmoid()</code></p></li><li><p><strong>tanh&#x51FD;&#x6570;</strong><br>tanh&#x51FD;&#x6570;&#x5373;&#x662F;&#x53CC;&#x66F2;&#x6B63;&#x5207;&#x51FD;&#x6570;&#xFF0C;tanh&#x4E0E;sigmoid&#x51FD;&#x6570;&#x76F8;&#x4F3C;&#xFF0C;&#x4F46;tanh&#x7684;&#x53D6;&#x503C;&#x8303;&#x56F4;&#x662F;0&#x5230;1&#xFF0C;sigmoid&#x51FD;&#x6570;&#x53D6;&#x503C;&#x8303;&#x56F4;&#x662F;-1&#x5230;1&#x3002;&#x51FD;&#x6570;&#x5982;&#x4E0B;&#xFF1A;</p><script type="math/tex; mode=display">tanh(x)</script><p>&#x8C03;&#x7528;&#x51FD;&#x6570;<code>tf.nn.tanh()</code></p></li><li><p><strong>ELU&#x51FD;&#x6570;</strong><br>ELU&#x5728;&#x6B63;&#x503C;&#x533A;&#x95F4;&#x7684;&#x503C;&#x4E3A;x&#x672C;&#x8EAB;&#xFF0C;&#x800C;&#x5728;&#x8D1F;&#x503C;&#x533A;&#x95F4;&#xFF0C;ELU&#x5728;&#x8F93;&#x5165;&#x53D6;&#x8F83;&#x5C0F;&#x503C;&#x65F6;&#x5177;&#x6709;&#x8F6F;&#x9971;&#x548C;&#x7684;&#x7279;&#x6027;&#xFF0C;&#x63D0;&#x5347;&#x4E86;&#x5BF9;&#x566A;&#x58F0;&#x7684;&#x9C81;&#x68D2;&#x6027;&#xFF0C;&#x51FD;&#x6570;&#x5982;&#x4E0B;&#xFF1A;</p><script type="math/tex; mode=display">\left\{\begin{array}{lr}  x & x\geq 0 \\  \alpha(e^x-1) & x < 0\end{array}\right.</script><p>&#x8C03;&#x7528;&#x51FD;&#x6570;<code>tf.nn.elu()</code></p></li><li><p><strong>softsign&#x51FD;&#x6570;</strong><br>softsign&#x51FD;&#x6570;&#x662F;&#x7B26;&#x53F7;&#x51FD;&#x6570;&#x7684;&#x8FDE;&#x7EED;&#x4F30;&#x8BA1;&#xFF0C;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A;</p><script type="math/tex; mode=display">f(x)=\frac{x}{|x|+1}</script><p>&#x8C03;&#x7528;&#x51FD;&#x6570;<code>tf.nn.softsign()</code></p></li><li><p><strong>softplus&#x51FD;&#x6570;</strong><br>softplus&#x662F;ReLU&#x6FC0;&#x52B1;&#x51FD;&#x6570;&#x7684;&#x5E73;&#x6ED1;&#x7248;&#xFF0C;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A;</p><script type="math/tex; mode=display">f(x)=log(e^x+1)</script><p>&#x8C03;&#x7528;&#x51FD;&#x6570;<code>tf.nn.softplus()</code></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TensorFlow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TensorFlow学习笔记2：图(Graph)与会话(Session)机制</title>
      <link href="/2019/08/06/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02/"/>
      <url>/2019/08/06/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02/</url>
      
        <content type="html"><![CDATA[<p><img src="/2019/08/06/tf&#x5B66;&#x4E60;&#x7B14;&#x8BB0;2/1.png" alt><br>&#x8BA1;&#x7B97;&#x56FE;&#x662F;TensorFlow&#x7684;&#x6838;&#x5FC3;&#x6982;&#x5FF5;&#xFF0C;&#x4F7F;&#x7528;&#x56FE;&#xFF08;Graph&#xFF09;&#x6765;&#x8868;&#x793A;&#x8BA1;&#x7B97;&#x4EFB;&#x52A1;&#xFF0C;&#x7531;&#x8282;&#x70B9;&#x548C;&#x8FB9;&#x7EC4;&#x6210;&#x3002;TensorFlow&#x7531;&#x524D;&#x7AEF;&#x8D1F;&#x8D23;&#x6784;&#x5EFA;&#x8BA1;&#x7B97;&#x56FE;&#xFF0C;&#x540E;&#x7AEF;&#x8D1F;&#x8D23;&#x6267;&#x884C;&#x8BA1;&#x7B97;&#x56FE;&#x3002;<br>&#x4E3A;&#x4E86;&#x6267;&#x884C;&#x56FE;&#x7684;&#x8BA1;&#x7B97;&#xFF0C;&#x56FE;&#x5FC5;&#x987B;&#x5728;&#x4F1A;&#x8BDD;&#xFF08;Session&#xFF09;&#x91CC;&#x9762;&#x542F;&#x52A8;&#xFF0C;&#x4F1A;&#x8BDD;&#x5C06;&#x56FE;&#x7684;&#x64CD;&#x4F5C;&#x5206;&#x53D1;&#x5230;CPU&#x3001;GPU&#x7B49;&#x8BBE;&#x5907;&#x4E0A;&#x6267;&#x884C;&#x3002;<br>&#x4E0B;&#x9762;&#x5C06;&#x4ECB;&#x7ECD;&#x5982;&#x4F55;&#x5728;TensorFlow&#x91CC;&#x9762;&#x521B;&#x5EFA;&#x4F1A;&#x8BDD;&#x3001;&#x56FE;&#x4EE5;&#x53CA;&#x57FA;&#x672C;&#x64CD;&#x4F5C;&#x3002;</p><a id="more"></a><h1 id="&#x56FE;-Graph"><a href="#&#x56FE;-Graph" class="headerlink" title="&#x56FE;(Graph)"></a>&#x56FE;(Graph)</h1><p>TensorFlow Python&#x5E93;&#x5DF2;&#x7ECF;&#x6709;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x56FE; (default graph)&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x521B;&#x5EFA;&#x65B0;&#x7684;&#x8BA1;&#x7B97;&#x56FE;&#xFF0C;&#x5219;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#x662F;&#x5728;&#x8FD9;&#x4E2A;default graph&#x91CC;&#x9762;&#x521B;&#x5EFA;&#x8282;&#x70B9;&#x548C;&#x8FB9;&#x3002;<br>&#x5728;&#x56FE;&#x91CC;&#x9762;&#x6DFB;&#x52A0;&#x8282;&#x70B9;&#x975E;&#x5E38;&#x65B9;&#x4FBF;&#x3002;&#x4F8B;&#x5982;&#x73B0;&#x5728;&#x8981;&#x521B;&#x5EFA;&#x8FD9;&#x6837;&#x7684;&#x8BA1;&#x7B97;&#x56FE;&#xFF0C;&#x4E24;&#x4E2A;&#x5F20;&#x91CF;&#x76F8;&#x52A0;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#xFF1A;<br><img src="/2019/08/06/tf&#x5B66;&#x4E60;&#x7B14;&#x8BB0;2/2.png" alt><br>&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import tensorflow as tf </span><br><span class="line">a=tf.constant([1.0,2.0], name=&apos;a&apos;) </span><br><span class="line">b=tf.constant([3.0,4.0], name=&apos;b&apos;) </span><br><span class="line">result = tf.add(a,b)</span><br></pre></td></tr></table></figure></p><p>&#x73B0;&#x5728;&#x9ED8;&#x8BA4;&#x56FE;&#x5C31;&#x6709;&#x4E86;&#x4E09;&#x4E2A;&#x8282;&#x70B9;&#xFF0C;&#x4E24;&#x4E2A;constant()&#xFF0C;&#x548C;&#x4E00;&#x4E2A;add()&#x3002;<br>&#x4E3A;&#x4E86;&#x771F;&#x6B63;&#x4F7F;&#x4E24;&#x4E2A;&#x5F20;&#x91CF;&#x76F8;&#x52A0;&#x5E76;&#x5F97;&#x5230;&#x7ED3;&#x679C;&#xFF0C;&#x5C31;&#x5FC5;&#x987B;&#x5728;&#x4F1A;&#x8BDD;&#x91CC;&#x9762;&#x542F;&#x52A8;&#x8FD9;&#x4E2A;&#x56FE;&#x3002;</p><h1 id="&#x4F1A;&#x8BDD;-Session"><a href="#&#x4F1A;&#x8BDD;-Session" class="headerlink" title="&#x4F1A;&#x8BDD;(Session)"></a>&#x4F1A;&#x8BDD;(Session)</h1><h2 id="&#x4F1A;&#x8BDD;&#x7684;&#x521B;&#x5EFA;"><a href="#&#x4F1A;&#x8BDD;&#x7684;&#x521B;&#x5EFA;" class="headerlink" title="&#x4F1A;&#x8BDD;&#x7684;&#x521B;&#x5EFA;"></a>&#x4F1A;&#x8BDD;&#x7684;&#x521B;&#x5EFA;</h2><p>&#x8981;&#x542F;&#x52A8;&#x8BA1;&#x7B97;&#x56FE;&#xFF0C;&#x9996;&#x5148;&#x8981;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;Session&#x5BF9;&#x8C61;&#x3002;<br>&#x4F7F;&#x7528;tf.Session()&#x521B;&#x5EFA;&#x4F1A;&#x8BDD;&#xFF0C;&#x8C03;&#x7528;run()&#x51FD;&#x6570;&#x6267;&#x884C;&#x8BA1;&#x7B97;&#x56FE;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x4F20;&#x5165;&#x4EFB;&#x4F55;&#x521B;&#x5EFA;&#x53C2;&#x6570;&#xFF0C;&#x4F1A;&#x8BDD;&#x6784;&#x9020;&#x5668;&#x5C06;&#x542F;&#x52A8;&#x9ED8;&#x8BA4;&#x56FE;&#x3002;&#x5982;&#x679C;&#x8981;&#x6307;&#x5B9A;&#x67D0;&#x4E2A;&#x8BA1;&#x7B97;&#x56FE;&#xFF0C;&#x5219;&#x4F20;&#x5165;&#x8BA1;&#x7B97;&#x56FE;&#x53C2;&#x6570;&#xFF08;&#x5982;g1&#xFF09;&#xFF0C;&#x5219;&#x521B;&#x5EFA;&#x4F1A;&#x8BDD;&#x65B9;&#x5F0F;&#x4E3A;tf.Session(graph=g1)&#x521B;&#x5EFA;&#x4F1A;&#x8BDD;&#xFF08;Session&#xFF09;&#x4E3B;&#x8981;&#x6709;&#x4EE5;&#x4E0B;&#x4E09;&#x79CD;&#x65B9;&#x5F0F;&#xFF1A;</p><ol><li><p>&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x4F1A;&#x8BDD;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#&#x542F;&#x52A8;&#x9ED8;&#x8BA4;&#x56FE;</span><br><span class="line">sess=tf.Session()</span><br><span class="line">result_value = sess.run(result)</span><br><span class="line">print(result_value)</span><br><span class="line"># ==&gt; [4.0 6.0]</span><br><span class="line"></span><br><span class="line"># &#x4EFB;&#x52A1;&#x5B8C;&#x6210;, &#x5173;&#x95ED;&#x4F1A;&#x8BDD;.</span><br><span class="line">sess.close()</span><br></pre></td></tr></table></figure></li><li><p>&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x4F1A;&#x8BDD;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">with tf.Session() as sess:</span><br><span class="line">    result_value = sess.run(result)</span><br><span class="line">    print(result_value)</span><br><span class="line">    # ==&gt; [4.0 6.0]</span><br></pre></td></tr></table></figure></li><li><p>&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x4F1A;&#x8BDD;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sess=tf.Session()</span><br><span class="line">with sess.as_default():</span><br><span class="line">    result_value = result.eval()</span><br><span class="line">    print(result_value)</span><br></pre></td></tr></table></figure></li></ol><p>&#x5F53;&#x6307;&#x5B9A;&#x9ED8;&#x8BA4;&#x4F1A;&#x8BDD;&#x540E;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;tf.Tensor.eval&#x51FD;&#x6570;&#x6765;&#x8BA1;&#x7B97;&#x4E00;&#x4E2A;&#x5F20;&#x91CF;&#x7684;&#x53D6;&#x503C;&#x3002;</p><ol><li>&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x4EA4;&#x4E92;&#x5F0F;&#x4F1A;&#x8BDD;<br>&#x5728;&#x4EA4;&#x4E92;&#x5F0F;&#x73AF;&#x5883;&#x4E0B;&#xFF08;&#x4F8B;&#x5982;IPython&#xFF09;&#xFF0C;&#x4F7F;&#x7528;&#x8BBE;&#x7F6E;&#x9ED8;&#x8BA4;&#x4F1A;&#x8BDD;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x83B7;&#x53D6;&#x5F20;&#x91CF;&#x7684;&#x53D6;&#x503C;&#x66F4;&#x52A0;&#x65B9;&#x4FBF;&#xFF0C;TensorFlow&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x79CD;&#x5728;&#x4EA4;&#x4E92;&#x5F0F;&#x73AF;&#x5883;&#x4E0B;&#x76F4;&#x63A5;&#x6784;&#x5EFA;&#x9ED8;&#x8BA4;&#x4F1A;&#x8BDD;&#x7684;&#x51FD;&#x6570;&#xFF1A;tf.InteractiveSession&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x4F1A;&#x81EA;&#x52A8;&#x5C06;&#x751F;&#x6210;&#x7684;&#x4F1A;&#x8BDD;&#x6CE8;&#x518C;&#x4E3A;&#x9ED8;&#x8BA4;&#x4F1A;&#x8BDD;&#xFF0C;&#x4F7F;&#x7528; tf.Tensor.eval()&#x4EE3;&#x66FF; Session.run()&#xFF0C;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sess= tf.InteractiveSession()</span><br><span class="line">result_value = result.eval()</span><br><span class="line">print(result_value)</span><br><span class="line">sess.close()</span><br></pre></td></tr></table></figure></li></ol><h2 id="Fetch-&#x53D6;&#x56DE;"><a href="#Fetch-&#x53D6;&#x56DE;" class="headerlink" title="Fetch(&#x53D6;&#x56DE;)"></a>Fetch(&#x53D6;&#x56DE;)</h2><p>&#x5728;&#x4F7F;&#x7528;sess.run( )&#x8FD0;&#x884C;&#x56FE;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F20;&#x5165;fetches&#xFF0C;&#x7528;&#x4E8E;&#x53D6;&#x56DE;&#x67D0;&#x4E9B;&#x64CD;&#x4F5C;&#x6216;tensor&#x7684;&#x8F93;&#x51FA;&#x5185;&#x5BB9;&#x3002;fetches&#x53EF;&#x4EE5;&#x662F;list&#xFF0C;tuple&#xFF0C;namedtuple&#xFF0C;dict&#x4E2D;&#x7684;&#x4EFB;&#x610F;&#x4E00;&#x4E2A;&#x3002;fetches&#x53EF;&#x4EE5;&#x662F;&#x4E00;&#x4E2A;&#x5217;&#x8868;&#xFF0C;&#x5728;op&#x7684;&#x4E00;&#x6B21;&#x8FD0;&#x884C;&#x4E2D;&#x4E00;&#x8D77;&#x83B7;&#x5F97;&#xFF08;&#x800C;&#x4E0D;&#x662F;&#x9010;&#x4E2A;&#x53BB;&#x83B7;&#x53D6; tensor&#xFF09;&#x591A;&#x4E2A;tensor&#x503C;&#x3002;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">c = sess.run(a)            # fetches&#x53EF;&#x4EE5;&#x4E3A;&#x5355;&#x4E2A;&#x6570;a</span><br><span class="line">d = sess.run([a, b])       # fetches&#x53EF;&#x4EE5;&#x4E3A;&#x4E00;&#x4E2A;&#x5217;&#x8868;[a, b]</span><br></pre></td></tr></table></figure></p><h2 id="Feed-&#x6CE8;&#x5165;"><a href="#Feed-&#x6CE8;&#x5165;" class="headerlink" title="Feed(&#x6CE8;&#x5165;)"></a>Feed(&#x6CE8;&#x5165;)</h2><p>TensorFlow&#x63D0;&#x4F9B;&#x4E86;feed&#x6CE8;&#x5165;&#x673A;&#x5236;, &#x5B83;&#x53EF;&#x4EE5;&#x4E34;&#x65F6;&#x66FF;&#x4EE3;graph&#x4E2D;&#x4EFB;&#x610F;op&#x64CD;&#x4F5C;&#x7684;&#x8F93;&#x5165;tensor&#xFF0C;&#x53EF;&#x4EE5;&#x5BF9;graph&#x4E2D;&#x4EFB;&#x4F55;&#x64CD;&#x4F5C;&#x63D0;&#x4EA4;&#x8865;&#x4E01;&#xFF08;&#x76F4;&#x63A5;&#x63D2;&#x5165;&#x4E00;&#x4E2A;tensor&#xFF09;&#x3002;<br>feed&#x673A;&#x5236;&#x53EA;&#x5728;&#x8C03;&#x7528;&#x5B83;&#x7684;&#x65B9;&#x6CD5;&#x5185;&#x6709;&#x6548;&#xFF0C;&#x65B9;&#x6CD5;&#x7ED3;&#x675F;&#xFF0C;feed&#x5C31;&#x4F1A;&#x6D88;&#x5931;&#x3002;&#x6700;&#x5E38;&#x89C1;&#x7684;&#x7528;&#x4F8B;&#x662F;&#x628A;&#x67D0;&#x4E9B;&#x7279;&#x6B8A;&#x64CD;&#x4F5C;&#x4E3A;feed&#x6CE8;&#x5165;&#x7684;&#x5BF9;&#x8C61;&#x3002;&#x4F60;&#x53EF;&#x4EE5;&#x63D0;&#x4F9B;&#x6570;&#x636E;feed_dict&#xFF0C;&#x4F5C;&#x4E3A;sess.run( )&#x8C03;&#x7528;&#x7684;&#x53C2;&#x6570;&#x3002;&#x4F7F;&#x7528;tf.placeholder( )&#xFF0C;&#x4E3A;&#x67D0;&#x4E9B;&#x64CD;&#x4F5C;&#x7684;&#x8F93;&#x5165;&#x521B;&#x5EFA;&#x5360;&#x4F4D;&#x7B26;&#x3002;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">import tensorflow as tf</span><br><span class="line">import numpy as np</span><br><span class="line"></span><br><span class="line">x = np.ones((2, 3))</span><br><span class="line">y = np.ones((3, 2)) </span><br><span class="line"></span><br><span class="line">input1 = tf.placeholder(tf.int32)</span><br><span class="line">input2 = tf.placeholder(tf.int32)</span><br><span class="line"></span><br><span class="line">output = tf.matmul(input1, input2)</span><br><span class="line"></span><br><span class="line">with tf.Session() as sess:</span><br><span class="line">    print(sess.run(output, feed_dict = {input1:x, input2:y}))</span><br></pre></td></tr></table></figure></p><p>&#x5982;&#x679C;&#x6CA1;&#x6709;&#x6B63;&#x786E;&#x63D0;&#x4F9B;tf.placeholder( )&#xFF0C;feed&#x64CD;&#x4F5C;&#x5C06;&#x4EA7;&#x751F;&#x9519;&#x8BEF;&#x3002;&#x6CE8;&#x610F;&#xFF0C;feed&#x6CE8;&#x5165;&#x7684;&#x503C;&#x4E0D;&#x80FD;&#x662F;tf&#x7684;tensor&#x5BF9;&#x8C61;&#xFF0C;&#x5E94;&#x8BE5;&#x662F;Python&#x5E38;&#x91CF;&#x3001;&#x5B57;&#x7B26;&#x4E32;&#x3001;&#x5217;&#x8868;&#x3001;numpy ndarrays&#xFF0C;&#x6216;&#x8005;TensorHandles&#x3002;</p><h1 id="&#x6784;&#x5EFA;&#x591A;&#x4E2A;&#x8BA1;&#x7B97;&#x56FE;"><a href="#&#x6784;&#x5EFA;&#x591A;&#x4E2A;&#x8BA1;&#x7B97;&#x56FE;" class="headerlink" title="&#x6784;&#x5EFA;&#x591A;&#x4E2A;&#x8BA1;&#x7B97;&#x56FE;"></a>&#x6784;&#x5EFA;&#x591A;&#x4E2A;&#x8BA1;&#x7B97;&#x56FE;</h1><p>&#x5728;TensorFlow&#x4E2D;&#x53EF;&#x4EE5;&#x6784;&#x5EFA;&#x591A;&#x4E2A;&#x8BA1;&#x7B97;&#x56FE;&#xFF0C;&#x8BA1;&#x7B97;&#x56FE;&#x4E4B;&#x95F4;&#x7684;&#x5F20;&#x91CF;&#x548C;&#x8FD0;&#x7B97;&#x662F;&#x4E0D;&#x4F1A;&#x5171;&#x4EAB;&#x7684;&#xFF0C;&#x901A;&#x8FC7;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x540C;&#x4E2A;&#x9879;&#x76EE;&#x4E2D;&#x6784;&#x5EFA;&#x591A;&#x4E2A;&#x7F51;&#x7EDC;&#x6A21;&#x578B;&#xFF0C;&#x800C;&#x76F8;&#x4E92;&#x4E4B;&#x95F4;&#x4E0D;&#x4F1A;&#x53D7;&#x5F71;&#x54CD;&#x3002;<br>&#x4F7F;&#x7528;tf.Graph()&#x51FD;&#x6570;&#x6784;&#x5EFA;&#x56FE;&#xFF0C;&#x6784;&#x5EFA;&#x591A;&#x4E2A;&#x8BA1;&#x7B97;&#x56FE;&#x7684;&#x65B9;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># &#x6784;&#x5EFA;&#x8BA1;&#x7B97;&#x56FE;g1</span><br><span class="line">g1=tf.Graph()</span><br><span class="line">with g1.as_default():</span><br><span class="line">    # &#x5728;&#x8BA1;&#x7B97;&#x56FE;g1&#x4E2D;&#x5B9A;&#x4E49;&#x53D8;&#x91CF;&apos;v&apos;,&#x5E76;&#x8BBE;&#x7F6E;&#x521D;&#x59CB;&#x503C;&#x4E3A;0&#x3002;</span><br><span class="line">    v=tf.get_variable(&apos;v&apos;,initializer=tf.zeros_initializer()(shape = [1]))</span><br><span class="line">    </span><br><span class="line"># &#x6784;&#x5EFA;&#x8BA1;&#x7B97;&#x56FE;g2</span><br><span class="line">g2=tf.Graph()</span><br><span class="line">with g2.as_default():</span><br><span class="line">    # &#x5728;&#x8BA1;&#x7B97;&#x56FE;g2&#x4E2D;&#x5B9A;&#x4E49;&#x53D8;&#x91CF;&apos;v&apos;,&#x5E76;&#x8BBE;&#x7F6E;&#x521D;&#x59CB;&#x503C;&#x5FAE;1&#x3002;</span><br><span class="line">    v=tf.get_variable(&apos;v&apos;,initializer=tf.ones_initializer()(shape = [1]))</span><br><span class="line"></span><br><span class="line"># &#x5728;&#x8BA1;&#x7B97;&#x56FE;g1&#x4E2D;&#x8BFB;&#x53D6;&#x53D8;&#x91CF;&apos;v&apos;&#x7684;&#x53D6;&#x503C;</span><br><span class="line">with tf.Session(graph=g1) as sess:</span><br><span class="line">    tf.global_variables_initializer().run()</span><br><span class="line">    with tf.variable_scope(&apos;&apos;,reuse=True):</span><br><span class="line">        print(sess.run(tf.get_variable(&apos;v&apos;)))</span><br><span class="line">        # &#x8F93;&#x51FA;&#x7ED3;&#x679C;[0.]</span><br><span class="line"></span><br><span class="line"># &#x5728;&#x8BA1;&#x7B97;&#x56FE;g2&#x4E2D;&#x8BFB;&#x53D6;&#x53D8;&#x91CF;&apos;v&apos;&#x7684;&#x53D6;&#x503C;</span><br><span class="line">with tf.Session(graph=g2) as sess:</span><br><span class="line">    tf.global_variables_initializer().run()</span><br><span class="line">    with tf.variable_scope(&apos;&apos;,reuse=True):</span><br><span class="line">        print(sess.run(tf.get_variable(&apos;v&apos;)))</span><br><span class="line">        # &#x8F93;&#x51FA;&#x7ED3;&#x679C;[1.]&#x3002;</span><br></pre></td></tr></table></figure></p><h1 id="&#x6307;&#x5B9A;&#x8FD0;&#x884C;&#x8BBE;&#x5907;"><a href="#&#x6307;&#x5B9A;&#x8FD0;&#x884C;&#x8BBE;&#x5907;" class="headerlink" title="&#x6307;&#x5B9A;&#x8FD0;&#x884C;&#x8BBE;&#x5907;"></a>&#x6307;&#x5B9A;&#x8FD0;&#x884C;&#x8BBE;&#x5907;</h1><p>&#x5982;&#x679C;&#x7535;&#x8111;&#x6709;&#x591A;&#x4E2A;GPU&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x56FE;&#x3001;&#x4F1A;&#x8BDD;&#x4E2D;&#x6307;&#x5B9A;&#x8981;&#x8FD0;&#x884C;&#x7684;&#x8BBE;&#x5907;</p><ul><li><p><strong>&#x5728;&#x56FE;&#x4E2D;&#x6307;&#x5B9A;&#x8FD0;&#x884C;&#x8BBE;&#x5907;</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">g=tf.Graph()</span><br><span class="line"># &#x6307;&#x5B9A;&#x8BA1;&#x7B97;&#x8FD0;&#x884C;&#x7684;&#x8BBE;&#x5907;&#x3002;</span><br><span class="line">with g.device(&apos;/gpu:0&apos;):</span><br><span class="line">    result=tf.add(a,b)</span><br></pre></td></tr></table></figure></li><li><p><strong>&#x5728;&#x4F1A;&#x8BDD;&#x4E2D;&#x6307;&#x5B9A;&#x8FD0;&#x884C;&#x8BBE;&#x5907;</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">with tf.Session() as sess:</span><br><span class="line">  with tf.device(&quot;/gpu:0&quot;):</span><br><span class="line">    result=tf.add(a,b)</span><br></pre></td></tr></table></figure></li></ul><p>&#x8FD0;&#x884C;&#x7684;&#x8BBE;&#x5907;&#x7528;&#x5B57;&#x7B26;&#x4E32;&#x8FDB;&#x884C;&#x6807;&#x8BC6;&#xFF0C;&#x76EE;&#x524D;&#x652F;&#x6301;&#x7684;&#x8BBE;&#x5907;&#x5305;&#x62EC;&#xFF1A;<br>&#x201C;/cpu:0&#x201D;: &#x673A;&#x5668;&#x7684; CPU<br>&#x201C;/gpu:0&#x201D;: &#x673A;&#x5668;&#x7684;&#x7B2C;&#x4E00;&#x4E2A; GPU&#xFF0C;&#x5982;&#x679C;&#x6709;&#x7684;&#x8BDD;<br>&#x201C;/gpu:1&#x201D;: &#x673A;&#x5668;&#x7684;&#x7B2C;&#x4E8C;&#x4E2A; GPU&#xFF0C;&#x4EE5;&#x6B64;&#x7C7B;&#x63A8;</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TensorFlow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TensorFlow学习笔记1：张量与变量</title>
      <link href="/2019/08/06/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/"/>
      <url>/2019/08/06/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/</url>
      
        <content type="html"><![CDATA[<h1 id="&#x5F20;&#x91CF;&#x7684;&#x6982;&#x5FF5;"><a href="#&#x5F20;&#x91CF;&#x7684;&#x6982;&#x5FF5;" class="headerlink" title="&#x5F20;&#x91CF;&#x7684;&#x6982;&#x5FF5;"></a>&#x5F20;&#x91CF;&#x7684;&#x6982;&#x5FF5;</h1><p>TensorFlow&#x7528;&#x5F20;&#x91CF;&#x8FD9;&#x79CD;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x6765;&#x8868;&#x793A;&#x6240;&#x6709;&#x7684;&#x6570;&#x636E;.&#x4F60;&#x53EF;&#x4EE5;&#x628A;&#x4E00;&#x4E2A;&#x5F20;&#x91CF;&#x60F3;&#x8C61;&#x6210;&#x4E00;&#x4E2A;n&#x7EF4;&#x7684;&#x6570;&#x7EC4;&#x6216;&#x5217;&#x8868;.&#x4E00;&#x4E2A;&#x5F20;&#x91CF;&#x6709;&#x4E00;&#x4E2A;&#x9759;&#x6001;&#x7C7B;&#x578B;&#x548C;&#x52A8;&#x6001;&#x7C7B;&#x578B;&#x7684;&#x7EF4;&#x6570;.&#x5F20;&#x91CF;&#x53EF;&#x4EE5;&#x5728;&#x56FE;&#x4E2D;&#x7684;&#x8282;&#x70B9;&#x4E4B;&#x95F4;&#x6D41;&#x901A;.&#x96F6;&#x9636;&#x5F20;&#x91CF;&#x8868;&#x793A;&#x6807;&#x91CF;&#xFF0C;&#x4E00;&#x9636;&#x5F20;&#x91CF;&#x8868;&#x793A;&#x5411;&#x91CF;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x4EE5;&#x4E3A;&#x6570;&#x7EC4;&#xFF0C;&#x7B2C;n&#x9636;&#x5F20;&#x91CF;&#x4E3A;&#x77E9;&#x9635;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x4E00;&#x4E2A;n&#x7EF4;&#x6570;&#x7EC4;&#x3002;<br>&#x4F46;&#x5F20;&#x91CF;&#x5728;tf&#x4E2D;&#x5E76;&#x4E0D;&#x662F;&#x91C7;&#x7528;&#x6570;&#x7EC4;&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x53EA;&#x662F;&#x5BF9;TF&#x7684;&#x8FD0;&#x7B97;&#x7ED3;&#x679C;&#x7684;&#x5F15;&#x7528;&#x3002;</p><p>&#x4E00;&#x4E2A;&#x5F20;&#x91CF;&#x5305;&#x542B;&#x4E09;&#x4E2A;&#x5C5E;&#x6027;&#xFF1A;&#x540D;&#x5B57;name &#xFF0C;&#x7EF4;&#x5EA6;shape&#xFF0C;&#x7C7B;&#x578B; dtype&#xFF1A;</p><ul><li>name&#xFF1A;&#x5F20;&#x91CF;&#x7684;&#x552F;&#x4E00;&#x6807;&#x8BC6;&#x3002;&#x547D;&#x540D;&#x89C4;&#x8303;&#xFF1A;&#x201C;node:src_input&#x201D; &#x3002;node &#x8868;&#x793A;&#x56FE;&#x7684;&#x8282;&#x70B9;&#x7684;&#x540D;&#x79F0;&#xFF0C;src_input &#x8868;&#x793A;&#x5F20;&#x91CF;&#x6765;&#x81EA;&#x8282;&#x70B9;&#x7684;&#x7B2C;&#x51E0;&#x4E2A;&#x8F93;&#x5165;&#xFF08;&#x4ECE;0&#x5F00;&#x59CB;&#xFF09;</li><li>shape&#xFF1A;&#x63CF;&#x8FF0;&#x5F20;&#x91CF;&#x7684;&#x7EF4;&#x5EA6;&#x4FE1;&#x606F;&#x3002;</li><li>dtype&#xFF1A;&#x6BCF;&#x4E00;&#x4E2A;&#x5F20;&#x91CF;&#x6709;&#x4E00;&#x4E2A;&#x552F;&#x4E00;&#x7684;&#x7C7B;&#x578B;&#x3002;&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x8BA1;&#x7B97;&#x4F1A;&#x62A5;&#x9519;&#x3002;</li></ul><a id="more"></a><h2 id="&#x751F;&#x6210;&#x5F20;&#x91CF;"><a href="#&#x751F;&#x6210;&#x5F20;&#x91CF;" class="headerlink" title="&#x751F;&#x6210;&#x5F20;&#x91CF;"></a>&#x751F;&#x6210;&#x5F20;&#x91CF;</h2><ul><li><strong>&#x521B;&#x5EFA;&#x56FA;&#x5B9A;&#x503C;&#x5F20;&#x91CF;</strong><br><strong>tf.constant(value, dtype=None, shape=None, name=&#x2019;Const&#x2019;)</strong> &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5E38;&#x6570;&#x5F20;&#x91CF;<br><strong>tf.zeros(shape, dtype=tf.float32, name=None)</strong> &#x521B;&#x5EFA;&#x6240;&#x6709;&#x5143;&#x7D20;&#x8BBE;&#x7F6E;&#x4E3A;&#x96F6;&#x7684;&#x5F20;&#x91CF;&#x3002;&#x6B64;&#x64CD;&#x4F5C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;dtype&#x5177;&#x6709;&#x5F62;&#x72B6;shape&#x548C;&#x6240;&#x6709;&#x5143;&#x7D20;&#x8BBE;&#x7F6E;&#x4E3A;&#x96F6;&#x7684;&#x7C7B;&#x578B;&#x7684;&#x5F20;&#x91CF;&#x3002;<br><strong>tf.ones(shape, dtype=tf.float32, name=None)</strong> &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6240;&#x6709;&#x5143;&#x7D20;&#x8BBE;&#x7F6E;&#x4E3A;1&#x7684;&#x5F20;&#x91CF;&#x3002;&#x6B64;&#x64CD;&#x4F5C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x7684;&#x5F20;&#x91CF;&#xFF0C;dtype&#x5F62;&#x72B6;shape&#x548C;&#x6240;&#x6709;&#x5143;&#x7D20;&#x8BBE;&#x7F6E;&#x4E3A;1&#x3002;<br><strong>tf.fill(dims, value, name=None)</strong> &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x586B;&#x5145;&#x4E86;&#x6807;&#x91CF;&#x503C;&#x7684;&#x5F20;&#x91CF;&#x3002;&#x6B64;&#x64CD;&#x4F5C;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5F20;&#x91CF;&#x7684;&#x5F62;&#x72B6;dims&#x5E76;&#x586B;&#x5145;&#x5B83;value&#x3002;</li><li><p><strong>&#x521B;&#x5EFA;&#x76F8;&#x4F3C;&#x5F62;&#x72B6;&#x7684;&#x5F20;&#x91CF;</strong><br><strong>tf.zeros_like(tensor, dtype=None, name=None)</strong> &#x7ED9;tensor&#x5B9A;&#x5355;&#x5F20;&#x91CF;&#xFF08;&#xFF09;&#xFF0C;&#x6B64;&#x64CD;&#x4F5C;&#x8FD4;&#x56DE;tensor&#x4E0E;&#x6240;&#x6709;&#x5143;&#x7D20;&#x8BBE;&#x7F6E;&#x4E3A;&#x96F6;&#x76F8;&#x540C;&#x7684;&#x7C7B;&#x578B;&#x548C;&#x5F62;&#x72B6;&#x7684;&#x5F20;&#x91CF;&#x3002;<br><strong>tf.ones_like(tensor, dtype=None, name=None)</strong> &#x7ED9;tensor&#x5B9A;&#x5355;&#x5F20;&#x91CF;&#xFF08;&#xFF09;&#xFF0C;&#x6B64;&#x64CD;&#x4F5C;&#x8FD4;&#x56DE;tensor&#x4E0E;&#x6240;&#x6709;&#x5143;&#x7D20;&#x8BBE;&#x7F6E;&#x4E3A;1 &#x76F8;&#x540C;&#x7684;&#x7C7B;&#x578B;&#x548C;&#x5F62;&#x72B6;&#x7684;&#x5F20;&#x91CF;&#x3002;</p></li><li><p><strong>&#x521B;&#x5EFA;&#x968F;&#x673A;&#x5F20;&#x91CF;</strong><br><strong>tf.truncated_normal(shape, mean=0.0, stddev=1.0, dtype=tf.float32, seed=None, name=None)</strong> &#x4ECE;&#x622A;&#x65AD;&#x7684;&#x6B63;&#x6001;&#x5206;&#x5E03;&#x4E2D;&#x8F93;&#x51FA;&#x968F;&#x673A;&#x503C;&#xFF0C;&#x548C; tf.random_normal() &#x4E00;&#x6837;&#xFF0C;&#x4F46;&#x662F;&#x6240;&#x6709;&#x6570;&#x5B57;&#x90FD;&#x4E0D;&#x8D85;&#x8FC7;&#x4E24;&#x4E2A;&#x6807;&#x51C6;&#x5DEE;<br><strong>tf.random_normal(shape, mean=0.0, stddev=1.0, dtype=tf.float32, seed=None, name=None)</strong> &#x4ECE;&#x6B63;&#x6001;&#x5206;&#x5E03;&#x4E2D;&#x8F93;&#x51FA;&#x968F;&#x673A;&#x503C;&#xFF0C;&#x7531;&#x968F;&#x673A;&#x6B63;&#x6001;&#x5206;&#x5E03;&#x7684;&#x6570;&#x5B57;&#x7EC4;&#x6210;&#x7684;&#x77E9;&#x9635;<br><strong>randunif_ts=tf.random_uniform(shape,minval=0,maxval=1)</strong> &#x751F;&#x6210;&#x5747;&#x5300;&#x5206;&#x5E03;&#x7684;&#x968F;&#x673A;&#x6570;,&#x7ED3;&#x679C;&#x8FD4;&#x56DE;&#x4ECE;minval&#xFF08;&#x5305;&#x542B;&#xFF09;&#x5230;maxval&#xFF08;&#x4E0D;&#x5305;&#x542B;&#xFF09;&#x7684;&#x5747;&#x5300;&#x5206;&#x5E03;&#x7684;&#x968F;&#x673A;&#x6570;</p></li></ul><h1 id="&#x53D8;&#x91CF;"><a href="#&#x53D8;&#x91CF;" class="headerlink" title="&#x53D8;&#x91CF;"></a>&#x53D8;&#x91CF;</h1><p>tf.Variable.init(initial_value, trainable=True, collections=None, validate_shape=True, name=None)</p><ul><li>initial_value:A Tensor&#x6216;Python&#x5BF9;&#x8C61;&#x53EF;&#x8F6C;&#x6362;&#x4E3A;a Tensor.&#x53D8;&#x91CF;&#x7684;&#x521D;&#x59CB;&#x503C;.&#x5FC5;&#x987B;&#x5177;&#x6709;&#x6307;&#x5B9A;&#x7684;&#x5F62;&#x72B6;,&#x9664;&#x975E; validate_shape&#x8BBE;&#x7F6E;&#x4E3A;False.</li><li>trainable:&#x5982;&#x679C;True&#xFF0C;&#x9ED8;&#x8BA4;&#x503C;&#x4E5F;&#x5C06;&#x8BE5;&#x53D8;&#x91CF;&#x6DFB;&#x52A0;&#x5230;&#x56FE;&#x5F62;&#x96C6;&#x5408;GraphKeys.TRAINABLE_VARIABLES,&#x8BE5;&#x96C6;&#x5408;&#x7528;&#x4F5C;Optimizer&#x7C7B;&#x8981;&#x4F7F;&#x7528;&#x7684;&#x53D8;&#x91CF;&#x7684;&#x9ED8;&#x8BA4;&#x5217;&#x8868;</li><li>collections:&#x56FE;&#x8868;&#x96C6;&#x5408;&#x952E;&#x5217;&#x8868;,&#x65B0;&#x53D8;&#x91CF;&#x6DFB;&#x52A0;&#x5230;&#x8FD9;&#x4E9B;&#x96C6;&#x5408;&#x4E2D;.&#x9ED8;&#x8BA4;&#x4E3A;[GraphKeys.VARIABLES]</li><li>validate_shape:&#x5982;&#x679C;False&#x5141;&#x8BB8;&#x4F7F;&#x7528;&#x672A;&#x77E5;&#x5F62;&#x72B6;&#x7684;&#x503C;&#x521D;&#x59CB;&#x5316;&#x53D8;&#x91CF;,&#x5982;&#x679C;True&#xFF0C;&#x9ED8;&#x8BA4;&#x5F62;&#x72B6;initial_value&#x5FC5;&#x987B;&#x63D0;&#x4F9B;.</li><li>name:&#x53D8;&#x91CF;&#x7684;&#x53EF;&#x9009;&#x540D;&#x79F0;,&#x9ED8;&#x8BA4;&#x2019;Variable&#x2019;&#x5E76;&#x81EA;&#x52A8;&#x83B7;&#x53D6;</li></ul><h2 id="&#x53D8;&#x91CF;&#x7684;&#x521B;&#x5EFA;"><a href="#&#x53D8;&#x91CF;&#x7684;&#x521B;&#x5EFA;" class="headerlink" title="&#x53D8;&#x91CF;&#x7684;&#x521B;&#x5EFA;"></a>&#x53D8;&#x91CF;&#x7684;&#x521B;&#x5EFA;</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x = tf.Variable(5.0,name=&quot;x&quot;)</span><br><span class="line">weights = tf.Variable(tf.random_normal([784, 200], stddev=0.35),name=&quot;weights&quot;)</span><br><span class="line">biases = tf.Variable(tf.zeros([200]), name=&quot;biases&quot;)</span><br></pre></td></tr></table></figure><p>&#x8C03;&#x7528;tf.Variable()&#x5411;&#x56FE;&#x4E2D;&#x6DFB;&#x52A0;&#x4E86;&#x51E0;&#x4E2A;&#x64CD;&#x4F5C;&#xFF1A;</p><ul><li>&#x4E00;&#x4E2A;variable op&#x4FDD;&#x5B58;&#x53D8;&#x91CF;&#x503C;&#x3002;</li><li>&#x521D;&#x59CB;&#x5316;&#x5668;op&#x5C06;&#x53D8;&#x91CF;&#x8BBE;&#x7F6E;&#x4E3A;&#x5176;&#x521D;&#x59CB;&#x503C;&#x3002;&#x8FD9;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x4E00;&#x4E2A;tf.assign&#x64CD;&#x4F5C;&#x3002;</li><li>&#x521D;&#x59CB;&#x503C;&#x7684;ops&#xFF0C;&#x4F8B;&#x5982; &#x793A;&#x4F8B;&#x4E2D;biases&#x53D8;&#x91CF;&#x7684;zeros op &#x4E5F;&#x88AB;&#x6DFB;&#x52A0;&#x5230;&#x56FE;&#x4E2D;&#x3002;</li></ul><h2 id="&#x53D8;&#x91CF;&#x7684;&#x521D;&#x59CB;&#x5316;"><a href="#&#x53D8;&#x91CF;&#x7684;&#x521D;&#x59CB;&#x5316;" class="headerlink" title="&#x53D8;&#x91CF;&#x7684;&#x521D;&#x59CB;&#x5316;"></a>&#x53D8;&#x91CF;&#x7684;&#x521D;&#x59CB;&#x5316;</h2><p>&#x53D8;&#x91CF;&#x7684;&#x521D;&#x59CB;&#x5316;&#x5FC5;&#x987B;&#x5728;&#x6A21;&#x578B;&#x7684;&#x5176;&#x5B83;&#x64CD;&#x4F5C;&#x8FD0;&#x884C;&#x4E4B;&#x524D;&#x5148;&#x660E;&#x786E;&#x5730;&#x5B8C;&#x6210;&#x3002;&#x6700;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x6CD5;&#x5C31;&#x662F;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x7ED9;&#x6240;&#x6709;&#x53D8;&#x91CF;&#x521D;&#x59CB;&#x5316;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x5E76;&#x5728;&#x4F7F;&#x7528;&#x6A21;&#x578B;&#x4E4B;&#x524D;&#x9996;&#x5148;&#x8FD0;&#x884C;&#x90A3;&#x4E2A;&#x64CD;&#x4F5C;&#x3002;&#x6700;&#x5E38;&#x89C1;&#x7684;&#x521D;&#x59CB;&#x5316;&#x6A21;&#x5F0F;&#x662F;&#x4F7F;&#x7528;&#x4FBF;&#x5229;&#x51FD;&#x6570; initialize_all_variables()&#x5C06;Op&#x6DFB;&#x52A0;&#x5230;&#x521D;&#x59CB;&#x5316;&#x6240;&#x6709;&#x53D8;&#x91CF;&#x7684;&#x56FE;&#x5F62;&#x4E2D;&#x3002;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">init_op = tf.global_variables_initializer()</span><br><span class="line"> </span><br><span class="line">with tf.Session() as sess:</span><br><span class="line">  sess.run(init_op)</span><br></pre></td></tr></table></figure></p><h2 id="&#x901A;&#x8FC7;&#x53E6;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#x8D4B;&#x503C;"><a href="#&#x901A;&#x8FC7;&#x53E6;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#x8D4B;&#x503C;" class="headerlink" title="&#x901A;&#x8FC7;&#x53E6;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#x8D4B;&#x503C;"></a>&#x901A;&#x8FC7;&#x53E6;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#x8D4B;&#x503C;</h2><p>&#x4F60;&#x6709;&#x65F6;&#x5019;&#x4F1A;&#x9700;&#x8981;&#x7528;&#x53E6;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#x7684;&#x521D;&#x59CB;&#x5316;&#x503C;&#x7ED9;&#x5F53;&#x524D;&#x53D8;&#x91CF;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x7531;&#x4E8E;tf.global_variables_initializer()&#x521D;&#x59CB;&#x5316;&#x6240;&#x6709;&#x53D8;&#x91CF;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x7684;&#x4F7F;&#x7528;&#x3002;<br>&#x5C31;&#x662F;&#x5C06;&#x5DF2;&#x521D;&#x59CB;&#x5316;&#x7684;&#x53D8;&#x91CF;&#x7684;&#x503C;&#x8D4B;&#x503C;&#x7ED9;&#x53E6;&#x4E00;&#x4E2A;&#x65B0;&#x53D8;&#x91CF;&#xFF01;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">weights = tf.Variable(tf.random_normal([784, 200], stddev=0.35),name=&quot;weights&quot;)</span><br><span class="line"> </span><br><span class="line">w2 = tf.Variable(weights.initialized_value(), name=&quot;w2&quot;)</span><br><span class="line"> </span><br><span class="line">w_twice = tf.Variable(weights.initialized_value() * 0.2, name=&quot;w_twice&quot;)</span><br></pre></td></tr></table></figure></p><h2 id="&#x53D8;&#x91CF;&#x7684;&#x5C5E;&#x6027;"><a href="#&#x53D8;&#x91CF;&#x7684;&#x5C5E;&#x6027;" class="headerlink" title="&#x53D8;&#x91CF;&#x7684;&#x5C5E;&#x6027;"></a>&#x53D8;&#x91CF;&#x7684;&#x5C5E;&#x6027;</h2><ul><li><p><strong>name</strong><br>&#x8FD4;&#x56DE;&#x53D8;&#x91CF;&#x7684;&#x540D;&#x5B57;</p></li><li><p><strong>op</strong><br>&#x8FD4;&#x56DE;&#x53D8;&#x91CF;&#x6240;&#x6709;&#x7684;&#x7684;op&#x64CD;&#x4F5C;</p></li></ul><h2 id="&#x53D8;&#x91CF;&#x7684;&#x65B9;&#x6CD5;"><a href="#&#x53D8;&#x91CF;&#x7684;&#x65B9;&#x6CD5;" class="headerlink" title="&#x53D8;&#x91CF;&#x7684;&#x65B9;&#x6CD5;"></a>&#x53D8;&#x91CF;&#x7684;&#x65B9;&#x6CD5;</h2><ul><li><p><strong>assign</strong><br>&#x4E3A;&#x53D8;&#x91CF;&#x5206;&#x914D;&#x4E00;&#x4E2A;&#x65B0;&#x503C;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x = tf.Variable(5.0,name=&quot;x&quot;)</span><br><span class="line">w.assign(w + 1.0)</span><br></pre></td></tr></table></figure></li><li><p><strong>eval</strong><br>&#x5728;&#x4F1A;&#x8BDD;&#x4E2D;&#xFF0C;&#x8BA1;&#x7B97;&#x5E76;&#x8FD4;&#x56DE;&#x6B64;&#x53D8;&#x91CF;&#x7684;&#x503C;(&#x5FC5;&#x987B;&#x8981;&#x5728;&#x521D;&#x59CB;&#x5316;&#x540E;)&#x3002;&#x8FD9;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x56FE;&#x5F62;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#xFF0C;&#x5B83;&#x4E0D;&#x4F1A;&#x5411;&#x56FE;&#x5F62;&#x6DFB;&#x52A0;&#x64CD;&#x4F5C;&#x3002;&#x65B9;&#x4FBF;&#x6253;&#x5370;&#x7ED3;&#x679C;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">v = tf.Variable([1, 2])</span><br><span class="line">init = tf.global_variables_initializer()</span><br><span class="line"> </span><br><span class="line">with tf.Session() as sess:</span><br><span class="line">    sess.run(init)</span><br><span class="line"> </span><br><span class="line">    # &#x6307;&#x5B9A;&#x4F1A;&#x8BDD;</span><br><span class="line">    print(v.eval(sess))</span><br><span class="line">    # &#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x4F1A;&#x8BDD;</span><br><span class="line">    print(v.eval())</span><br></pre></td></tr></table></figure></li></ul><h2 id="&#x7BA1;&#x7406;&#x56FE;&#x4E2D;&#x7684;&#x53D8;&#x91CF;"><a href="#&#x7BA1;&#x7406;&#x56FE;&#x4E2D;&#x7684;&#x53D8;&#x91CF;" class="headerlink" title="&#x7BA1;&#x7406;&#x56FE;&#x4E2D;&#x7684;&#x53D8;&#x91CF;"></a>&#x7BA1;&#x7406;&#x56FE;&#x4E2D;&#x7684;&#x53D8;&#x91CF;</h2><ul><li><strong>tf.global_variables()</strong><br>&#x8FD4;&#x56DE;&#x56FE;&#x4E2D;&#x6536;&#x96C6;&#x7684;&#x6240;&#x6709;&#x53D8;&#x91CF;</li></ul><h1 id="&#x5360;&#x4F4D;&#x7B26;"><a href="#&#x5360;&#x4F4D;&#x7B26;" class="headerlink" title="&#x5360;&#x4F4D;&#x7B26;"></a>&#x5360;&#x4F4D;&#x7B26;</h1><p>&#x5360;&#x4F4D;&#x7B26;&#x548C;&#x53D8;&#x91CF;&#x662F;&#x4F7F;&#x7528;TensorFlow&#x8BA1;&#x7B97;&#x56FE;&#x7684;&#x5173;&#x952E;&#x5DE5;&#x5177;&#xFF0C;&#x4E24;&#x8005;&#x662F;&#x6709;&#x533A;&#x522B;&#x7684;</p><ul><li><strong>&#x53D8;&#x91CF;</strong> &#x662F;TensorFlow&#x7B97;&#x6CD5;&#x4E2D;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x901A;&#x8FC7;&#x8C03;&#x6574;&#x8FD9;&#x4E9B;&#x53D8;&#x91CF;&#x7684;&#x72B6;&#x6001;&#x6765;&#x4F18;&#x5316;&#x6A21;&#x578B;&#x7B97;&#x6CD5;&#xFF1B;</li><li><strong>&#x5360;&#x4F4D;&#x7B26;</strong> &#x662F;TensorFlow&#x5BF9;&#x8C61;&#xFF0C;&#x7528;&#x4E8E;&#x8868;&#x793A;&#x8F93;&#x5165;&#x8F93;&#x51FA;&#x6570;&#x636E;&#x7684;&#x683C;&#x5F0F;&#xFF0C;&#x5141;&#x8BB8;&#x4F20;&#x5165;&#x6307;&#x5B9A;&#x7C7B;&#x578B;&#x548C;&#x5F62;&#x72B6;&#x7684;&#x6570;&#x636E;&#x3002;</li></ul><h2 id="&#x521B;&#x5EFA;&#x5360;&#x4F4D;&#x7B26;"><a href="#&#x521B;&#x5EFA;&#x5360;&#x4F4D;&#x7B26;" class="headerlink" title="&#x521B;&#x5EFA;&#x5360;&#x4F4D;&#x7B26;"></a>&#x521B;&#x5EFA;&#x5360;&#x4F4D;&#x7B26;</h2><p>&#x5360;&#x4F4D;&#x7B26;&#x4EC5;&#x4EC5;&#x662F;&#x58F0;&#x660E;&#x6570;&#x636E;&#x4F4D;&#x7F6E;&#xFF0C;&#x4E5F;&#x5373;&#x5148;&#x5360;&#x4E2A;&#x4F4D;&#xFF0C;&#x540E;&#x9762;&#x5728;&#x4F1A;&#x8BDD;&#x4E2D;&#x901A;&#x8FC7;feed_dict&#x4F20;&#x5165;&#x5177;&#x4F53;&#x7684;&#x6570;&#x636E;&#x3002;&#x793A;&#x4F8B;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a=tf.placeholder(tf.float32,shape=[1,2])</span><br><span class="line">b=tf.placeholder(tf.float32,shape=[1,2])</span><br><span class="line">adder_node=a+b   #&#x8FD9;&#x91CC;&#x7684;&#x201C;+&#x201D;&#x662F;tf.add(a,b)&#x7684;&#x7B80;&#x6D01;&#x8868;&#x8FBE;</span><br><span class="line">print(sess.run(adder_node,feed_dict={a:[2,4],b:[5.2,8]}))</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TensorFlow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文阅读笔记9：Scale-Aware Trident Networks for Object Detection</title>
      <link href="/2019/08/05/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B09/"/>
      <url>/2019/08/05/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B09/</url>
      
        <content type="html"><![CDATA[<blockquote><p>&#x8BBA;&#x6587;&#x5730;&#x5740;&#xFF1A;<a href="https://arxiv.org/pdf/1901.01892" target="_blank" rel="noopener">https://arxiv.org/pdf/1901.01892</a><br>&#x4EE3;&#x7801;&#x5730;&#x5740;&#xFF1A;<a href="https://github.com/TuSimple/simpledet/tree/master/models/tridentnet" target="_blank" rel="noopener">https://github.com/TuSimple/simpledet/tree/master/models/tridentnet</a></p></blockquote><h1 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h1><p>&#x5C3A;&#x5EA6;&#x53D8;&#x6362;&#x662F;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x4E2D;&#x7684;&#x5173;&#x952E;&#x6311;&#x6218;&#x3002;&#x5728;&#x6211;&#x4EEC;&#x7684;&#x5DE5;&#x4F5C;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x9996;&#x5148;&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x63A7;&#x5236;&#x7684;&#x5B9E;&#x9A8C;&#x6765;&#x7814;&#x7A76;&#x611F;&#x53D7;&#x91CE;&#x5728;&#x68C0;&#x6D4B;&#x4E0D;&#x540C;&#x5C3A;&#x5BF8;&#x7269;&#x4F53;&#x4E0A;&#x7684;&#x5F71;&#x54CD;&#x3002;&#x57FA;&#x4E8E;&#x63A2;&#x7D22;&#x5B9E;&#x9A8C;&#x7684;&#x53D1;&#x73B0;&#xFF0C;&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x5168;&#x65B0;&#x7684;Trident Net-work (TridentNet)&#xFF0C;&#x53EF;&#x4EE5;&#x751F;&#x6210;&#x5177;&#x6709;&#x7EDF;&#x4E00;&#x8868;&#x5F81;&#x80FD;&#x529B;&#x7684;&#x7279;&#x5B9A;&#x5C3A;&#x5EA6;&#x7684;feature map&#xFF0C;&#x6211;&#x4EEC;&#x6784;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#x5E73;&#x884C;&#x7684;&#x591A;&#x5206;&#x652F;&#x7ED3;&#x6784;&#xFF0C;&#x5728;&#x6BCF;&#x4E00;&#x4E2A;&#x5206;&#x652F;&#x4E2D;&#x5206;&#x4EAB;&#x76F8;&#x540C;&#x7684;&#x8F6C;&#x6362;&#x53C2;&#x6570;&#xFF0C;&#x4F46;&#x662F;&#x5177;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x611F;&#x53D7;&#x91CE;&#x3002;&#x7136;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x79CD;&#x89C4;&#x6A21;&#x611F;&#x77E5;&#x7684;&#x8BAD;&#x7EC3;&#x6A21;&#x5F0F;&#x6765;&#xFF0C;&#x901A;&#x8FC7;&#x91C7;&#x6837;&#x9002;&#x5F53;&#x6BD4;&#x4F8B;&#x7684;&#x5BF9;&#x8C61;&#x5B9E;&#x4F8B;&#x6765;&#x8BAD;&#x7EC3;&#x6BCF;&#x4E00;&#x4E2A;&#x5206;&#x652F;&#x3002;&#x5728;COCO&#x6570;&#x636E;&#x96C6;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x4EE5;ResNet-101&#x4F5C;&#x4E3A;&#x7279;&#x5F81;&#x63D0;&#x53D6;&#x7F51;&#x7EDC;&#x7684;TridentNet&#x83B7;&#x5F97;&#x4E86;&#x5F53;&#x524D;&#x6700;&#x5148;&#x8FDB;&#x7684;&#x5355;&#x4E00;&#x6A21;&#x578B;&#x7684;&#x7ED3;&#x679C;&#xFF0C;48.4&#x7684;mAP&#x3002;</p><a id="more"></a><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>CNN-based&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x7C97;&#x7565;&#x7684;&#x5206;&#x4E3A;&#x4E24;&#x7C7B;&#xFF1A;</p><ul><li>one stage method &#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x524D;&#x9988;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x6765;&#x9884;&#x6D4B;&#x8FB9;&#x754C;&#x6846;</li><li>two stage method &#x5148;&#x751F;&#x6210;proposals&#xFF0C;&#x7136;&#x540E;&#x5229;&#x7528;&#x7ECF;&#x8FC7;CNN&#x63D0;&#x53D6;&#x7684;&#x533A;&#x57DF;&#x7279;&#x5F81;&#x8FDB;&#x884C;&#x66F4;&#x597D;&#x7684;refinement</li></ul><p>&#x7136;&#x800C;&#xFF0C;&#x4E24;&#x79CD;&#x65B9;&#x6CD5;&#x7684;&#x4E00;&#x4E2A;&#x4E2D;&#x5FC3;&#x95EE;&#x9898;&#x5C31;&#x662F;&#x600E;&#x4E48;&#x5904;&#x7406;&#x5C3A;&#x5EA6;&#x53D8;&#x6362;&#x3002;&#x6211;&#x4EEC;&#x90FD;&#x77E5;&#x9053;&#x7269;&#x4F53;&#x7684;&#x5C3A;&#x5BF8;&#x5728;&#x5F88;&#x5927;&#x7684;&#x8303;&#x56F4;&#x5185;&#x53D8;&#x5316;&#xFF0C;&#x8FD9;&#x4F1A;&#x963B;&#x788D;&#x68C0;&#x6D4B;&#x5668;&#x7684;&#x6027;&#x80FD;&#xFF0C;&#x5C24;&#x5176;&#x662F;&#x90A3;&#x4E9B;&#x5F88;&#x5C0F;&#x6216;&#x8005;&#x5F88;&#x5927;&#x7684;&#x7269;&#x4F53;&#x3002;</p><p>&#x4E3A;&#x4E86;&#x8865;&#x6551;&#x5C3A;&#x5EA6;&#x53D8;&#x5316;&#x7684;&#x95EE;&#x9898;&#xFF1A;</p><ul><li>image pyramids<br>&#x4ECE;&#x975E;Deep&#x65F6;&#x4EE3;&#xFF0C;&#x4E43;&#x81F3;CV&#x521D;&#x671F;&#x5C31;&#x88AB;&#x5C31;&#x88AB;&#x5E7F;&#x6CDB;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x53EB;&#x505A;image pyramid&#x3002;&#x5728;image pyramid&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x76F4;&#x63A5;&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x4E0D;&#x540C;&#x5C3A;&#x5EA6;&#x7684;&#x7F29;&#x653E;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x8FD9;&#x4E9B;&#x56FE;&#x50CF;&#x76F4;&#x63A5;&#x8F93;&#x5165;&#x5230;detector&#x4E2D;&#x53BB;&#x8FDB;&#x884C;&#x68C0;&#x6D4B;&#x3002;&#x867D;&#x7136;&#x8FD9;&#x6837;&#x7684;&#x65B9;&#x6CD5;&#x5341;&#x5206;&#x7B80;&#x5355;&#xFF0C;&#x4F46;&#x5176;&#x6548;&#x679C;&#x4ECD;&#x7136;&#x662F;&#x6700;&#x4F73;&#xFF0C;&#x4E5F;&#x540E;&#x7EED;&#x542F;&#x53D1;&#x4E86;SNIP&#x8FD9;&#x4E00;&#x7CFB;&#x5217;&#x7684;&#x5DE5;&#x4F5C;&#x3002;&#x5355;&#x8BBA;&#x6027;&#x80FD;&#x800C;&#x8A00;&#xFF0C;multi-scale training/testing&#x4ECD;&#x7136;&#x662F;&#x4E00;&#x4E2A;&#x4E0D;&#x53EF;&#x7F3A;&#x5C11;&#x7684;&#x7EC4;&#x4EF6;&#x3002;&#x7136;&#x800C;&#x5176;&#x7F3A;&#x70B9;&#x4E5F;&#x662F;&#x5F88;&#x660E;&#x663E;&#x7684;&#xFF0C;&#x6D4B;&#x8BD5;&#x65F6;&#x95F4;&#x5927;&#x5E45;&#x5EA6;&#x63D0;&#x9AD8;&#xFF0C;&#x5BF9;&#x4E8E;&#x5B9E;&#x9645;&#x4F7F;&#x7528;&#x5E76;&#x4E0D;&#x53CB;&#x597D;&#x3002;</li><li>feature pyramids<br>&#x53E6;&#x5916;&#x4E00;&#x5927;&#x7C7B;&#x65B9;&#x6CD5;&#xFF0C;&#x4E5F;&#x662F;Deep&#x65B9;&#x6CD5;&#x6240;&#x72EC;&#x6709;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;feature pyramid&#x3002;&#x6700;&#x5177;&#x4EE3;&#x8868;&#x6027;&#x7684;&#x5DE5;&#x4F5C;&#x4FBF;&#x662F;&#x7ECF;&#x5178;&#x7684;FPN&#x4E86;&#x3002;&#x8FD9;&#x4E00;&#x7C7B;&#x65B9;&#x6CD5;&#x7684;&#x601D;&#x60F3;&#x662F;&#x76F4;&#x63A5;&#x5728;feature&#x5C42;&#x9762;&#x4E0A;&#x6765;&#x8FD1;&#x4F3C;image pyramid&#x3002;&#x975E;Deep&#x65F6;&#x4EE3;&#x5728;&#x68C0;&#x6D4B;&#x4E2D;&#x4FBF;&#x6709;&#x7ECF;&#x5178;&#x7684;channel feature&#x8FD9;&#x6837;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x8FD9;&#x4E2A;&#x60F3;&#x6CD5;&#x5728;CNN&#x4E2D;&#x5176;&#x5B9E;&#x66F4;&#x52A0;&#x76F4;&#x63A5;&#xFF0C;&#x56E0;&#x4E3A;&#x672C;&#x8EAB;CNN&#x7684;feature&#x4FBF;&#x662F;&#x5206;&#x5C42;&#x6B21;&#x7684;&#x3002;&#x4ECE;&#x5F00;&#x59CB;&#x7684;MS-CNN&#x76F4;&#x63A5;&#x5728;&#x4E0D;&#x540C;downsample&#x5C42;&#x4E0A;&#x68C0;&#x6D4B;&#x5927;&#x5C0F;&#x4E0D;&#x540C;&#x7684;&#x7269;&#x4F53;&#xFF0C;&#x518D;&#x5230;&#x540E;&#x7EED;TDM&#x548C;FPN&#x52A0;&#x5165;&#x4E86;&#x65B0;&#x7684;top down&#x5206;&#x652F;&#x8865;&#x5145;&#x5E95;&#x5C42;&#x7684;&#x8BED;&#x4E49;&#x4FE1;&#x606F;&#x4E0D;&#x8DB3;&#xFF0C;&#x90FD;&#x662F;&#x5EF6;&#x7EED;&#x7C7B;&#x4F3C;&#x7684;&#x60F3;&#x6CD5;&#x3002;&#x7136;&#x800C;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x8FD1;&#x4F3C;&#x867D;&#x7136;&#x6709;&#x6548;&#xFF0C;&#x4F46;&#x662F;&#x4ECD;&#x7136;&#x6027;&#x80FD;&#x548C;image pyramid&#x6709;&#x8F83;&#x5927;&#x5DEE;&#x8DDD;&#x3002;</li></ul><p>image pyramids&#x4EE5;&#x53CA;feature pyramids&#x7684;motivation&#x90FD;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x5373;&#x6A21;&#x578B;&#x5BF9;&#x4E0D;&#x540C;&#x7684;&#x5C3A;&#x5EA6;&#x7684;object&#x9700;&#x8981;&#x5177;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x611F;&#x53D7;&#x91CE;&#x3002;&#x5C3D;&#x7BA1;&#x5E76;&#x4E0D;&#x9AD8;&#x6548;&#xFF0C;&#x4F46;image pyramids&#x5145;&#x5206;&#x7684;&#x5229;&#x7528;&#x6A21;&#x578B;&#x7684;&#x8868;&#x5F81;&#x80FD;&#x529B;&#x6765;&#x5E73;&#x7B49;&#x7684;&#x8F6C;&#x6362;&#x6240;&#x6709;&#x5C3A;&#x5BF8;&#x7684;objects&#x3002;&#x800C;feature pyramids&#x751F;&#x6210;&#x591A;&#x5C3A;&#x5EA6;&#x7684;features&#x56E0;&#x6B64;&#x727A;&#x7272;&#x4E86;features&#x5728;&#x4E0D;&#x540C;&#x5C3A;&#x5EA6;&#x7684;&#x4E00;&#x81F4;&#x6027;&#x3002;&#x6211;&#x4EEC;&#x7684;&#x5DE5;&#x4F5C;&#x7684;&#x76EE;&#x6807;&#x5C31;&#x662F;&#x4E3A;&#x6240;&#x6709;&#x5C3A;&#x5EA6;&#x6709;&#x6548;&#x7684;&#x521B;&#x5EFA;&#x5177;&#x6709;&#x7EDF;&#x4E00;&#x8868;&#x5F81;&#x80FD;&#x529B;&#x7684;features&#x6765;&#x83B7;&#x5F97;&#x6700;&#x597D;&#x7684;&#x6548;&#x679C;&#x3002;</p><p><img src="/2019/08/05/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;9/1.png" alt></p><p>&#x5728;&#x672C;&#x6587;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x5168;&#x65B0;&#x7684;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x6765;&#x9002;&#x5E94;&#x4E0D;&#x540C;&#x5C3A;&#x5BF8;&#x7684;&#x7F51;&#x7EDC;&#x3002;&#x7279;&#x522B;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x901A;&#x8FC7;&#x4E0A;&#x56FE;&#x6240;&#x793A;&#x7684;trident blocks&#xFF0C;&#x521B;&#x9020;&#x4E86;&#x591A;&#x4E2A;&#x5C3A;&#x5EA6;&#x7279;&#x5B9A;&#x7684;feature maps&#x3002;&#x5F97;&#x76CA;&#x4E8E;&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#xFF0C;trident blocks&#x7684;&#x4E0D;&#x540C;&#x5206;&#x652F;&#x6709;&#x7740;&#x540C;&#x6837;&#x7684;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#xFF0C;&#x5E76;&#x4E14;&#x5171;&#x4EAB;&#x540C;&#x6837;&#x7684;&#x6743;&#x91CD;&#x53C2;&#x6570;&#xFF0C;&#x4F46;&#x662F;&#x53C8;&#x4E0D;&#x540C;&#x7684;&#x611F;&#x53D7;&#x91CE;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x4E3A;&#x4E86;&#x907F;&#x514D;&#x8BAD;&#x7EC3;&#x5177;&#x6709;&#x6781;&#x7AEF;&#x5C3A;&#x5BF8;&#x7684;objects&#xFF0C;&#x6211;&#x4EEC;&#x91C7;&#x7528;&#x5C3A;&#x5EA6;&#x611F;&#x77E5;&#x7684;&#x8BAD;&#x7EC3;&#x6A21;&#x5F0F;&#xFF0C;&#x4F7F;&#x6BCF;&#x4E2A;&#x5206;&#x652F;&#x7ED9;&#x5B9A;&#x7684;&#x5C3A;&#x5EA6;&#x8303;&#x56F4;&#x4E0E;&#x5176;&#x611F;&#x53D7;&#x91CE;&#x76F8;&#x5339;&#x914D;&#x3002;&#x6700;&#x7EC8;&#xFF0C;&#x5F97;&#x76CA;&#x4E8E;&#x6574;&#x4E2A;&#x591A;&#x5206;&#x652F;&#x7F51;&#x7EDC;&#x4E4B;&#x95F4;&#x7684;&#x6743;&#x503C;&#x5171;&#x4EAB;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;inference&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x4E3B;&#x8981;&#x7684;&#x5206;&#x652F;&#x6765;&#x4F30;&#x8BA1;&#x6574;&#x4E2A;TridentNet&#x3002;&#x8FD9;&#x79CD;&#x4F30;&#x8BA1;&#x53EA;&#x4F1A;&#x5E26;&#x6765;&#x8FB9;&#x9645;&#x6027;&#x80FD;&#x7684;&#x4E0B;&#x964D;(&#x4E0D;&#x592A;&#x61C2;)&#x3002;&#x6700;&#x7EC8;&#xFF0C;&#x5B83;&#x80FD;&#x591F;&#x5728;&#x5355;&#x5C3A;&#x5EA6;&#x7684;baseline&#x4E0A;&#x8FBE;&#x5230;&#x663E;&#x8457;&#x5730;&#x63D0;&#x5347;&#xFF0C;&#x800C;&#x4E0D;&#x9700;&#x8981;&#x5BF9;inference&#x7684;&#x901F;&#x5EA6;&#x505A;&#x51FA;&#x4EFB;&#x4F55;&#x59A5;&#x534F;&#x3002;</p><p>&#x603B;&#x7ED3;&#x6211;&#x4EEC;&#x7684;&#x8D21;&#x732E;&#x5982;&#x4E0B;&#xFF1A;</p><ul><li>&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;&#x6211;&#x4EEC;&#x5173;&#x4E8E;&#x5728;&#x4E0D;&#x540C;&#x5C3A;&#x5EA6;&#x7684;objects&#x4E0A;&#x7684;&#x611F;&#x53D7;&#x91CE;&#x7684;&#x5F71;&#x54CD;&#x3002;&#x6211;&#x4EEC;&#x662F;&#x662F;&#x7B2C;&#x4E00;&#x4E2A;&#x901A;&#x8FC7;&#x8BBE;&#x8BA1;&#x63A7;&#x5236;&#x5B9E;&#x9A8C;&#x6765;&#x63A2;&#x7D22;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x4EFB;&#x52A1;&#x7684;&#x611F;&#x53D7;&#x91CE;&#x3002;</li><li>&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x5168;&#x65B0;&#x7684;Trident Network&#x6765;&#x5904;&#x7406;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x4E0A;&#x7684;&#x5C3A;&#x5EA6;&#x53D8;&#x6362;&#x95EE;&#x9898;&#x3002;&#x901A;&#x8FC7;&#x591A;&#x5206;&#x652F;&#x7684;&#x7ED3;&#x6784;&#x4EE5;&#x53CA;&#x5C3A;&#x5EA6;&#x611F;&#x77E5;&#x7684;&#x8BAD;&#x7EC3;&#xFF0C;TridentNet&#x80FD;&#x591F;&#x901A;&#x8FC7;&#x7EDF;&#x4E00;&#x7684;&#x8868;&#x5F81;&#x80FD;&#x529B;&#x751F;&#x6210;&#x5C3A;&#x5EA6;&#x7279;&#x5B9A;&#x7684;feature maps&#x3002;</li><li>&#x5F97;&#x76CA;&#x4E8E;&#x6211;&#x4EEC;&#x7684;&#x6743;&#x91CD;&#x5171;&#x4EAB;&#x7684;trident-bloc&#x7684;&#x8BBE;&#x8BA1;&#xFF0C;&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x79CD;&#x901A;&#x8FC7;&#x4E3B;&#x8981;&#x5206;&#x652F;&#x6765;&#x8FDB;&#x884C;&#x5FEB;&#x901F;&#x7684;&#x4F30;&#x8BA1;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x5728;inference&#x671F;&#x95F4;&#x4E0D;&#x5F15;&#x5165;&#x989D;&#x5916;&#x7684;&#x53C2;&#x6570;&#x4EE5;&#x53CA;&#x8BA1;&#x7B97;&#x6210;&#x672C;&#x3002;</li><li>&#x6211;&#x4EEC;&#x901A;&#x8FC7;ablation studies&#x5728;&#x6807;&#x51C6;&#x7684;COCO benchmark&#x4E0A;&#x9A8C;&#x8BC1;&#x4E86;&#x6211;&#x4EEC;&#x7684;&#x65B9;&#x6CD5;&#x7684;&#x9AD8;&#x6548;&#x6027;&#x3002;&#x4E0E;&#x6700;&#x5148;&#x8FDB;&#x7684;&#x65B9;&#x6CD5;&#x76F8;&#x6BD4;&#xFF0C;&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x7684;&#x65B9;&#x6CD5;&#x83B7;&#x5F97;&#x4E86;&#x663E;&#x8457;&#x5730;&#x6027;&#x80FD;&#x3002;</li></ul><h1 id="Related-Work"><a href="#Related-Work" class="headerlink" title="Related Work"></a>Related Work</h1><ul><li><p><strong>Deep Object Detectors</strong></p></li><li><p><strong>Methods for handling scale variation</strong></p></li><li><p><strong>Dilated convolution</strong></p></li></ul><h1 id="Investigation-of-Receptive-Filed"><a href="#Investigation-of-Receptive-Filed" class="headerlink" title="Investigation of Receptive Filed"></a>Investigation of Receptive Filed</h1><p>&#x53EF;&#x80FD;&#x5F71;&#x54CD;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x5668;&#x7684;&#x6027;&#x80FD;&#x7684;&#x4E00;&#x4E9B;&#x5173;&#x4E8E;backbone&#x7F51;&#x7EDC;&#x7684;&#x56E0;&#x7D20;&#x6709;&#xFF1A;&#x4E0B;&#x91C7;&#x6837;&#x7387;&#xFF0C;&#x7F51;&#x7EDC;&#x6DF1;&#x5EA6;&#x4EE5;&#x53CA;&#x611F;&#x53D7;&#x91CE;&#x3002;&#x4E00;&#x4E9B;&#x5DE5;&#x4F5C;&#x5DF2;&#x7ECF;&#x8BA8;&#x8BBA;&#x4E86;&#x5B83;&#x4EEC;&#x7684;&#x5F71;&#x54CD;&#x3002;&#x524D;&#x4E24;&#x4E2A;&#x56E0;&#x7D20;&#x7684;&#x5F71;&#x54CD;&#x662F;&#x5F88;&#x76F4;&#x89C2;&#x7684;&#xFF1A;&#x7F51;&#x7EDC;&#x8D8A;&#x6DF1;&#xFF08;&#x6216;&#x53EB;&#x8868;&#x793A;&#x80FD;&#x529B;&#x66F4;&#x5F3A;&#xFF09;&#x7ED3;&#x679C;&#x4F1A;&#x8D8A;&#x597D;&#xFF0C;&#x4E0B;&#x91C7;&#x6837;&#x6B21;&#x6570;&#x8FC7;&#x591A;&#x5BF9;&#x4E8E;&#x5C0F;&#x7269;&#x4F53;&#x6709;&#x8D1F;&#x9762;&#x5F71;&#x54CD;&#x3002;&#x636E;&#x6211;&#x4EEC;&#x6240;&#x77E5;&#xFF0C;&#x5148;&#x524D;&#x6CA1;&#x6709;&#x5DE5;&#x4F5C;&#x5355;&#x72EC;&#x7814;&#x7A76;&#x611F;&#x53D7;&#x91CE;&#x5BF9;&#x68C0;&#x6D4B;&#x5668;&#x6027;&#x80FD;&#x7684;&#x5F71;&#x54CD;&#x3002;</p><p>&#x4E3A;&#x4E86;&#x7814;&#x7A76;&#x611F;&#x53D7;&#x91CE;&#x5BF9;&#x68C0;&#x6D4B;&#x4E0D;&#x540C;&#x5C3A;&#x5EA6;&#x7684;&#x7269;&#x4F53;&#x7684;&#x5F71;&#x54CD;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;backbone&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x4E00;&#x4E9B;&#x5377;&#x79EF;&#x64CD;&#x4F5C;&#x66FF;&#x6362;&#x4E3A;dilated variant&#x3002;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x4E0D;&#x540C;&#x7684;dilation rates&#x6765;&#x63A7;&#x5236;&#x7F51;&#x7EDC;&#x7684;&#x611F;&#x53D7;&#x91CE;&#x3002;</p><p>&#x6211;&#x4EEC;&#x5728;COCO benchmark&#x4E0A;&#x4F7F;&#x7528;Faster R-CNN&#x68C0;&#x6D4B;&#x5668;&#x6765;&#x8FDB;&#x884C;&#x8FD9;&#x4E2A;&#x8BD5;&#x9A8C;&#x6027;&#x5B9E;&#x9A8C;&#x3002;&#x6211;&#x4EEC;&#x4F7F;&#x7528;ResNet-50&#x4EE5;&#x53CA;ResNet-101&#x4F5C;&#x4E3A;backbone&#x7F51;&#x7EDC;&#xFF0C;&#x5E76;&#x4E14;&#x5C06;conv4&#x5C42;&#x7684;&#x6B8B;&#x5DEE;&#x6A21;&#x5757;&#x7684;3*3&#x5377;&#x79EF;&#x64CD;&#x4F5C;&#x7684;dilation rate$d_s$&#x5728;1&#x548C;3&#x4E4B;&#x95F4;&#x53D8;&#x5316;&#x3002;</p><p>&#x4E0B;&#x8868;&#x603B;&#x7ED3;&#x4E86;&#x5728;&#x4E0D;&#x540C;dilation rates&#x4E0B;&#x7684;&#x68C0;&#x6D4B;&#x7ED3;&#x679C;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x968F;&#x7740;&#x611F;&#x53D7;&#x91CE;&#x7684;&#x6269;&#x5927;&#xFF0C;&#x68C0;&#x6D4B;&#x5668;&#x5BF9;&#x68C0;&#x6D4B;&#x5C0F;&#x7269;&#x4F53;&#x7684;&#x6027;&#x80FD;&#x6301;&#x7EED;&#x4E0B;&#x964D;&#x3002;&#x4F46;&#x662F;&#x5BF9;&#x4E8E;&#x5927;&#x7269;&#x4F53;&#xFF0C;&#x5219;&#x53EF;&#x4EE5;&#x4ECE;&#x4E0D;&#x65AD;&#x589E;&#x52A0;&#x7684;&#x611F;&#x53D7;&#x4E2D;&#x53D7;&#x76CA;&#x3002;&#x4EE5;&#x4E0A;&#x7684;&#x53D1;&#x73B0;&#x53EF;&#x4EE5;&#x603B;&#x7ED3;&#x5982;&#x4E0B;&#xFF1A;</p><ul><li>&#x5BF9;&#x4E0D;&#x540C;&#x5C3A;&#x5BF8;&#x7269;&#x4F53;&#x7684;&#x68C0;&#x6D4B;&#x7684;&#x6027;&#x80FD;&#x53D7;&#x7F51;&#x7EDC;&#x611F;&#x53D7;&#x91CE;&#x7684;&#x5F71;&#x54CD;&#x3002;&#x6700;&#x5408;&#x9002;&#x7684;&#x611F;&#x53D7;&#x91CE;&#x4E0E;objects&#x7684;&#x5C3A;&#x5BF8;&#x7D27;&#x5BC6;&#x76F8;&#x5173;&#x3002;</li><li>&#x5C3D;&#x7BA1;ResNet-101&#x6709;&#x7406;&#x8BBA;&#x4E0A;&#x8DB3;&#x591F;&#x5927;&#x7684;&#x611F;&#x53D7;&#x91CE;&#x6765;&#x8986;&#x76D6;COCO&#x4E0A;&#x6709;&#x7740;&#x5927;&#x5C3A;&#x5BF8;&#x7684;objects&#xFF0C;&#x4F46;&#x68C0;&#x6D4B;&#x5927;&#x7269;&#x4F53;&#x7684;&#x6027;&#x80FD;&#x4ECD;&#x7136;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x589E;&#x52A0;dilation rate&#x6765;&#x63D0;&#x5347;&#x3002;&#x5728;&#x5C0F;&#x7269;&#x4F53;&#x4E0A;&#x4E5F;&#x540C;&#x6837;&#x5982;&#x6B64;&#x3002;&#x6211;&#x4EEC;&#x731C;&#x6D4B;&#x68C0;&#x6D4B;&#x7F51;&#x7EDC;&#x9AD8;&#x6548;&#x7684;&#x611F;&#x53D7;&#x91CE;&#x9700;&#x8981;&#x5E73;&#x8861;&#x7269;&#x4F53;&#x7684;&#x5927;&#x5C0F;&#x5C3A;&#x5BF8;&#x3002;</li></ul><p><img src="/2019/08/05/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;9/2.png" alt></p><h1 id="Trudent-Network"><a href="#Trudent-Network" class="headerlink" title="Trudent Network"></a>Trudent Network</h1><p>&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x7684;TridentNet&#x4E3B;&#x8981;&#x5305;&#x62EC;&#x6743;&#x91CD;&#x5171;&#x4EAB;&#x7684;trident blocks&#x4EE5;&#x53CA;&#x5C3A;&#x5EA6;&#x611F;&#x77E5;&#x8BAD;&#x7EC3;&#x6A21;&#x5F0F;&#x3002;</p><h2 id="Network-Structure"><a href="#Network-Structure" class="headerlink" title="Network Structure"></a>Network Structure</h2><p><img src="/2019/08/05/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;9/3.png" alt></p><p>&#x6211;&#x4EEC;&#x7684;&#x65B9;&#x6CD5;&#x4EE5;&#x5355;&#x4E00;&#x5C3A;&#x5EA6;&#x7684;&#x56FE;&#x7247;&#x4F5C;&#x4E3A;&#x8F93;&#x5165;&#xFF0C;&#x7136;&#x540E;&#x4EA7;&#x751F;&#x5C3A;&#x5EA6;&#x7279;&#x5B9A;&#x7684;feature maps&#x901A;&#x8FC7;&#x5E73;&#x884C;&#x7684;&#x5206;&#x652F;&#xFF0C;&#x5373;&#x6709;&#x7740;&#x76F8;&#x540C;&#x7684;&#x53C2;&#x6570;&#x4F46;&#x662F;dilation rates&#x4E0D;&#x540C;&#x7684;&#x5377;&#x79EF;&#x3002;</p><ul><li><strong>Multi-branch Block</strong><br>&#x6211;&#x4EEC;&#x901A;&#x8FC7;&#x5C06;&#x539F;backbone&#x4E2D;&#x7684;&#x4E00;&#x4E9B;&#x5377;&#x79EF;&#x5757;&#x66FF;&#x6362;&#x4E3A;trident blocks&#x6765;&#x6784;&#x5EFA;TridenNets&#x3002;&#x6BCF;&#x4E00;&#x4E2A;trident blocks&#x90FD;&#x7531;&#x591A;&#x4E2A;&#x5E73;&#x884C;&#x7684;&#x5206;&#x652F;&#x7EC4;&#x6210;&#x3002;<br>&#x4EE5;ResNet&#x4E3A;&#x4F8B;&#x3002;&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;bottleneck&#x6837;&#x5F0F;&#x7684;&#x6B8B;&#x5DEE;&#x6A21;&#x5757;&#xFF0C;&#x7531;&#x4E09;&#x4E2A;&#x5377;&#x79EF;&#x6838;&#x5927;&#x5C0F;&#x5206;&#x522B;&#x4E3A;1*1,3*3,1*1&#x7684;&#x5377;&#x79EF;&#x7EC4;&#x6210;&#x3002;&#x5176;&#x5BF9;&#x5E94;&#x7684;trident block&#x7531;&#x591A;&#x4E2A;&#x5E73;&#x884C;&#x7684;&#x6709;&#x7740;&#x4E0D;&#x540C;dilation rates&#x7684;3*3&#x5377;&#x79EF;&#x7684;&#x6B8B;&#x5DEE;&#x6A21;&#x5757;&#x6784;&#x6210;&#x3002;&#x5806;&#x53E0;&#x7684;trident blocks&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x4EE5;&#x4E00;&#x79CD;&#x9AD8;&#x6548;&#x7684;&#x65B9;&#x5F0F;&#x8C03;&#x8282;&#x4E0D;&#x540C;&#x5206;&#x652F;&#x7684;&#x611F;&#x53D7;&#x91CE;&#x3002;&#x901A;&#x5E38;&#x6211;&#x4EEC;&#x5C06;trident block&#x5E94;&#x7528;&#x5728;&#x6700;&#x540E;&#x4E00;&#x5C42;&#x7684;blocks&#xFF0C;&#x56E0;&#x4E3A;&#x8F83;&#x5927;&#x7684;stride&#x4F1A;&#x5BFC;&#x81F4;&#x9700;&#x8981;&#x7684;&#x611F;&#x53D7;&#x91CE;&#x6709;&#x8F83;&#x5927;&#x7684;&#x5DEE;&#x5F02;&#x3002;<br><img src="/2019/08/05/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;9/11.png" alt></li></ul><ul><li><strong>Wight sharing among branches</strong><br>TridentNet&#x4E0D;&#x540C;&#x5206;&#x652F;&#x4E4B;&#x95F4;&#x7684;&#x6743;&#x91CD;&#x53C2;&#x6570;&#x90FD;&#x662F;&#x5171;&#x4EAB;&#x7684;&#xFF0C;&#x53EA;&#x662F;dilation rates&#x6709;&#x6240;&#x4E0D;&#x540C;&#x3002;&#x8FD9;&#x79CD;&#x8BBE;&#x7F6E;&#x4F7F;&#x5F97;&#x6743;&#x91CD;&#x7684;&#x5171;&#x4EAB;&#x66F4;&#x52A0;&#x7B80;&#x5355;&#x76F4;&#x63A5;&#x3002;<br>&#x6743;&#x91CD;&#x5171;&#x4EAB;&#x6709;&#x4E09;&#x5927;&#x4F18;&#x52BF;&#xFF1A;<ol><li>&#x51CF;&#x5C11;&#x4E86;&#x53C2;&#x6570;&#x7684;&#x6570;&#x91CF;,&#x4E0E;&#x539F;&#x59CB;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x5668;&#x76F8;&#x6BD4;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x989D;&#x5916;&#x589E;&#x52A0;&#x53C2;&#x6570;&#x6570;&#x91CF;&#x3002;</li><li>&#x4E0E;&#x6211;&#x4EEC;&#x7684;motivation&#x76F8;&#x547C;&#x5E94;&#xFF0C;&#x5373;&#x4E0D;&#x540C;&#x5C3A;&#x5EA6;&#x7684;&#x7269;&#x4F53;&#x5E94;&#x8BE5;&#x5728;&#x76F8;&#x540C;&#x8868;&#x5F81;&#x529B;&#x4E0B;&#x8FDB;&#x884C;&#x7EDF;&#x4E00;&#x7684;&#x8F6C;&#x5316;&#x3002;</li><li>&#x8F6C;&#x6362;&#x53C2;&#x6570;&#x53EF;&#x4EE5;&#x9488;&#x5BF9;&#x6765;&#x81EA;&#x6240;&#x6709;&#x5206;&#x652F;&#x7684;&#x66F4;&#x591A;&#x5BF9;&#x8C61;&#x6837;&#x672C;&#x8FDB;&#x884C;&#x8BAD;&#x7EC3;&#xFF0C;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#x5C31;&#x662F;&#x5728;&#x4E0D;&#x540C;&#x611F;&#x53D7;&#x91CE;&#x4E0B;&#x5BF9;&#x4E0D;&#x540C;&#x5C3A;&#x5BF8;&#x8303;&#x56F4;&#x8BAD;&#x7EC3;&#x76F8;&#x540C;&#x7684;&#x53C2;&#x6570;&#x3002;</li></ol></li></ul><h2 id="Scale-aware-Training-Scheme"><a href="#Scale-aware-Training-Scheme" class="headerlink" title="Scale-aware Training Scheme"></a>Scale-aware Training Scheme</h2><p>&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x7684;trident&#x7ED3;&#x6784;&#x6839;&#x636E;&#x9884;&#x5B9A;&#x4E49;&#x7684;ddilation rates&#x751F;&#x6210;&#x5C3A;&#x5EA6;&#x7279;&#x5B9A;&#x7684;feature maps&#x3002;&#x7136;&#x800C;&#x5728;&#x4E48;&#x4E00;&#x4E2A;&#x5355;&#x4E00;&#x5206;&#x652F;&#x4E2D;&#x4ECD;&#x7136;&#x5B58;&#x5728;&#x5C3A;&#x5BF8;&#x7684;&#x9519;&#x8BEF;&#x5339;&#x914D;&#x3002;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x79CD;&#x5C3A;&#x5EA6;&#x611F;&#x77E5;&#x8BAD;&#x7EC3;&#x6A21;&#x5F0F;&#x6765;&#x63D0;&#x5347;&#x6BCF;&#x4E00;&#x4E2A;&#x5206;&#x652F;&#x7684;&#x5C3A;&#x5EA6;&#x611F;&#x77E5;&#x80FD;&#x529B;&#xFF0C;&#x907F;&#x514D;&#x5728;&#x4E0D;&#x5339;&#x914D;&#x7684;&#x5206;&#x652F;&#x4E0A;&#x51FA;&#x73B0;&#x6781;&#x7AEF;&#x5C3A;&#x5EA6;&#x7684;&#x8BAD;&#x7EC3;&#x5BF9;&#x8C61;&#x3002;</p><p>&#x7C7B;&#x4F3C;&#x4E8E;SNIP&#xFF0C;&#x6211;&#x4EEC;&#x4E3A;&#x6BCF;&#x4E00;&#x4E2A;&#x5206;&#x652F;$i$&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x6709;&#x6548;&#x533A;&#x57DF;$[l_i,u_i]$&#x3002;&#x5728;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9009;&#x62E9;&#x90A3;&#x4E9B;&#x5C3A;&#x5BF8;&#x843D;&#x5728;&#x6BCF;&#x4E2A;&#x5206;&#x652F;&#x5BF9;&#x5E94;&#x7684;&#x6709;&#x6548;&#x5206;&#x533A;&#x7684;proposals&#x4EE5;&#x53CA;&#x771F;&#x5B9E;&#x6846;&#x3002;&#x7279;&#x522B;&#x7684;&#xFF0C;&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x957F;&#x4E3A;$h$&#x5BBD;&#x4E3A;$w$&#x7684;Region-of-Interest (ROI)&#xFF0C;&#x82E5;&#x5B83;&#x5728;&#x5206;&#x652F;$i$&#x6709;&#x6548;&#xFF0C;&#x5219;&#xFF1A;</p><script type="math/tex; mode=display">l_i<=\sqrt{wh}<=u_i</script><p>&#x8FD9;&#x4E2A;&#x5C3A;&#x5EA6;&#x611F;&#x77E5;&#x7684;&#x8BAD;&#x7EC3;&#x6A21;&#x5F0F;&#x4F1A;&#x88AB;&#x5E94;&#x7528;&#x5230;RPN&#x4EE5;&#x53CA;R-CNN&#x3002;&#x5728;&#x6211;&#x4EEC;&#x7684;&#x5C3A;&#x5EA6;&#x611F;&#x77E5;&#x8BAD;&#x7EC3;&#x4E2D;&#xFF0C;&#x5728;RPN&#x5206;&#x914D;anchor&#x6807;&#x7B7E;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x9009;&#x62E9;&#x6839;&#x636E;&#x4E0A;&#x8FF0;&#x516C;&#x5F0F;&#x5728;&#x8BE5;&#x5206;&#x652F;&#x6709;&#x6548;&#x7684;ground truth boxes&#x3002;&#x76F8;&#x4F3C;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x5728;R-CNN&#x7684;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x5728;&#x6BCF;&#x4E2A;&#x5206;&#x652F;&#x4E0A;&#x91C7;&#x6837;&#x6709;&#x6548;&#x7684;proposals&#x3002;</p><h2 id="Inference-and-Approximation"><a href="#Inference-and-Approximation" class="headerlink" title="Inference and Approximation"></a>Inference and Approximation</h2><p>&#x5728;inference&#x671F;&#x95F4;&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x6240;&#x6709;&#x5206;&#x652F;&#x4E0A;&#x751F;&#x6210;&#x751F;&#x6210;&#x68C0;&#x6D4B;&#x7ED3;&#x679C;&#xFF0C;&#x7136;&#x540E;&#x6EE4;&#x9664;&#x843D;&#x5728;&#x6BCF;&#x4E2A;&#x5206;&#x652F;&#x6709;&#x6548;&#x8303;&#x56F4;&#x5916;&#x7684;boxes&#x3002;&#x6211;&#x4EEC;&#x7136;&#x540E;&#x91C7;&#x7528;NMS&#x6216;&#x8005;soft-NMS&#x7ED3;&#x5408;&#x591A;&#x4E2A;&#x5206;&#x652F;&#x7684;&#x7684;&#x8F93;&#x51FA;&#x6765;&#x5F97;&#x5230;&#x6700;&#x7EC8;&#x7684;&#x7ED3;&#x679C;&#x3002;</p><h2 id="Fast-Inference-Approximation"><a href="#Fast-Inference-Approximation" class="headerlink" title="Fast Inference Approximation"></a>Fast Inference Approximation</h2><p>&#x4E3A;&#x4E86;&#x52A0;&#x901F;&#x6211;&#x4EEC;&#x7684;&#x7F51;&#x7EDC;&#x7684;inference&#x901F;&#x5EA6;&#xFF0C;&#x5728;inference&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x53EA;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x4E3B;&#x8981;&#x7684;&#x5206;&#x652F;&#x6765;&#x4F5C;&#x4E3A;&#x5BF9;TridentNet&#x4F30;&#x8BA1;&#x3002;&#x7279;&#x522B;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x5176;&#x6709;&#x6548;&#x8303;&#x56F4;&#x8BBE;&#x7F6E;&#x4E3A;$[0,\infty]$&#x6765;&#x9884;&#x6D4B;&#x6240;&#x6709;&#x5C3A;&#x5EA6;&#x7684;objects&#x3002;&#x5BF9;&#x4E8E;&#x5982;&#x4E0A;&#x56FE;&#x6240;&#x793A;&#x7684;&#x4E09;&#x5206;&#x652F;&#x7F51;&#x7EDC;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x4E2D;&#x95F4;&#x5206;&#x652F;&#x4F5C;&#x4E3A;&#x6211;&#x4EEC;&#x7684;&#x4E3B;&#x8981;&#x5206;&#x652F;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x7684;&#x6709;&#x6548;&#x8303;&#x56F4;&#x6DB5;&#x76D6;&#x4E86;&#x5927;&#x7269;&#x4F53;&#x4EE5;&#x53CA;&#x5C0F;&#x7269;&#x4F53;&#x3002;&#x5728;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x7684;fast TridentNet&#x76F8;&#x6BD4;&#x4E8E;&#x4F20;&#x7EDF;&#x7684;Faster R-CNN&#x68C0;&#x6D4B;&#x5668;&#x6CA1;&#x6709;&#x989D;&#x5916;&#x7684;&#x65F6;&#x95F4;&#x635F;&#x8017;&#x3002;&#x4EE4;&#x4EBA;&#x5403;&#x60CA;&#x7684;&#x662F;&#xFF0C;&#x6211;&#x4EEC;&#x53D1;&#x73B0;&#x8FD9;&#x79CD;&#x4F30;&#x8BA1;&#x76F8;&#x6BD4;&#x4E8E;&#x539F;&#x6765;&#x7684;TridentNet&#x53EA;&#x6709;&#x8F7B;&#x5FAE;&#x7684;&#x6027;&#x80FD;&#x4E0B;&#x964D;&#x3002;</p><h1 id="Experiments"><a href="#Experiments" class="headerlink" title="Experiments"></a>Experiments</h1><h2 id="Implementation-Details"><a href="#Implementation-Details" class="headerlink" title="Implementation Details"></a>Implementation Details</h2><p>&#x6211;&#x4EEC;&#x5728;MXNet&#x4E0A;&#x91CD;&#x65B0;&#x5B9E;&#x73B0;Faster R-CNN&#xFF0C;&#x6765;&#x4F5C;&#x4E3A;&#x6211;&#x4EEC;&#x7684;baseline method&#x3002;&#x6211;&#x4EEC;&#x5C06;ResNet&#x4E2D;&#x7684;conv4&#x5C42;&#x7684;&#x8F93;&#x51FA;&#x4F5C;&#x4E3A;backbone feature map&#xFF0C;&#x5E76;&#x4E14;con5&#x9636;&#x6BB5;&#x4F5C;&#x4E3A;rcnn head&#x3002;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E00;&#x5F20;&#x56FE;&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x6BCF;&#x4E2A;&#x5206;&#x652F;&#x4E0A;&#x91C7;&#x6837;128&#x4E2A;ROIs&#x3002;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x4E09;&#x4E2A;&#x5206;&#x652F;&#x4F5C;&#x4E3A;&#x6211;&#x4EEC;&#x7684;&#x9ED8;&#x8BA4;&#x7ED3;&#x6784;&#x3002;&#x5728;&#x4E09;&#x4E2A;&#x5206;&#x652F;&#x4E0A;&#x7684;dilated rates&#x5206;&#x522B;&#x8BBE;&#x7F6E;&#x4E3A;1,2,3&#x3002;&#x4E09;&#x4E2A;&#x5206;&#x652F;&#x4E0A;&#x7684;&#x6709;&#x6548;&#x8303;&#x56F4;&#x5206;&#x522B;&#x8BBE;&#x7F6E;&#x4E3A;$[0,90]$&#xFF0C;$[30,160]$&#xFF0C;$[90,\infty]$&#x3002;</p><h2 id="Ablation-Studies"><a href="#Ablation-Studies" class="headerlink" title="Ablation Studies"></a>Ablation Studies</h2><p><strong>Components of TridentNet</strong></p><ol><li>Multi-branch</li><li>Scale-aware</li><li>Weight-sharing</li></ol><p><img src="/2019/08/05/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;9/4.png" alt></p><p><strong>Number of branches</strong></p><p><img src="/2019/08/05/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;9/5.png" alt></p><p><strong>Stage of Trident blocks</strong></p><p><img src="/2019/08/05/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;9/6.png" alt></p><p><strong>Number of trident blocks</strong></p><p><img src="/2019/08/05/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;9/7.png" alt></p><p><strong>Perfomance of each branch</strong></p><p><img src="/2019/08/05/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;9/8.png" alt></p><h2 id="Comparision-with-State-of-the-Arts"><a href="#Comparision-with-State-of-the-Arts" class="headerlink" title="Comparision with State-of-the-Arts"></a>Comparision with State-of-the-Arts</h2><p><img src="/2019/08/05/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;9/9.png" alt></p><p><strong>Fast approximation</strong></p><ul><li>the three-branch methods 42.7/48.4 AP</li><li>the major branch 42.2/47.6 AP</li></ul><p><strong>Compare with FPN</strong></p><p><img src="/2019/08/05/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;9/10.png" alt></p><h1 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h1><p>&#x5728;&#x672C;&#x6587;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x65B9;&#x6CD5;TridentNet&#x6765;&#x901A;&#x8FC7;&#x76F8;&#x540C;&#x7684;&#x8868;&#x5F81;&#x80FD;&#x529B;&#x5728;&#x7F51;&#x7EDC;&#x4E2D;&#x6784;&#x5EFA;&#x5C3A;&#x5BF8;&#x7279;&#x5B9A;&#x7684;&#x7684;feature maps&#x3002;&#x5BF9;&#x4E8E;&#x6211;&#x4EEC;&#x7684;&#x591A;&#x5206;&#x652F;&#x7ED3;&#x6784;&#xFF0C;&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;&#x5C3A;&#x5EA6;&#x611F;&#x77E5;&#x7684;&#x8BAD;&#x7EC3;&#x6A21;&#x5F0F;&#x4E3A;&#x6BCF;&#x4E2A;&#x5206;&#x652F;&#x5206;&#x914D;&#x5BF9;&#x5E94;&#x7684;&#x5C3A;&#x5EA6;&#x3002;&#x4F7F;&#x7528;&#x4E3B;&#x8981;&#x5206;&#x652F;&#x7684;fast inference&#x65B9;&#x6CD5;&#x4F7F;&#x5F97;TridentNet&#x5728;baseline&#x4E0A;&#x5F97;&#x5230;&#x663E;&#x8457;&#x7684;&#x63D0;&#x5347;&#xFF0C;&#x800C;&#x4E0D;&#x9700;&#x8981;&#x989D;&#x5916;&#x7684;&#x53C2;&#x6570;&#x548C;&#x8BA1;&#x7B97;&#x3002;&#x6211;&#x4EEC;&#x76F8;&#x4FE1;TridentNet&#x6709;&#x76CA;&#x4E8E;&#x5F53;&#x524D;&#x7684;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x4EE5;&#x53CA;&#x5176;&#x4ED6;&#x89C6;&#x89C9;&#x4EFB;&#x52A1;&#x3002;&#x6211;&#x4EEC;&#x4F1A;&#x5728;&#x672A;&#x6765;&#x7684;&#x5DE5;&#x4F5C;&#x4E2D;&#x63A2;&#x7D22;&#x8FD9;&#x4E2A;&#x65B9;&#x5411;&#x3002;</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 目标检测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文阅读笔记8：Non-local Neural Networks</title>
      <link href="/2019/08/03/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B08/"/>
      <url>/2019/08/03/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B08/</url>
      
        <content type="html"><![CDATA[<blockquote><p>&#x8BBA;&#x6587;&#x5730;&#x5740;&#xFF1A;<a href="https://arxiv.org/abs/1711.07971v3" target="_blank" rel="noopener">https://arxiv.org/abs/1711.07971v3</a><br>&#x4EE3;&#x7801;&#x5730;&#x5740;&#xFF1A;<a href="https://github.com/facebookresearch/video-nonlocal-net" target="_blank" rel="noopener">https://github.com/facebookresearch/video-nonlocal-net</a></p></blockquote><h1 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h1><p>&#x4E0D;&#x8BBA;&#x662F;&#x5377;&#x79EF;&#x7F51;&#x7EDC;&#x8FD8;&#x662F;&#x9012;&#x5F52;&#x7F51;&#x7EDC;&#xFF0C;&#x5B83;&#x4EEC;&#x90FD;&#x662F;&#x4F5C;&#x7528;&#x5728;&#x67D0;&#x4E00;&#x5757;&#x5C40;&#x90E8;&#x533A;&#x57DF;(local neighborhood)&#x7684;operations&#x3002;&#x5728;&#x672C;&#x6587;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;non-local operations&#x4F5C;&#x4E3A;&#x4E00;&#x79CD;&#x901A;&#x7528;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;building blocks&#x6765;&#x6355;&#x6349;&#x57FA;&#x4E8E;long-range&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x3002;&#x53D7;&#x5230;&#x7ECF;&#x5178;&#x7684;non-local means&#x65B9;&#x6CD5;&#x7684;&#x542F;&#x53D1;&#xFF0C;&#x672C;&#x6587;&#x7684;non-local operation&#x4F1A;&#x5C06;&#x67D0;&#x4E00;&#x4F4D;&#x7F6E;&#x7684;&#x54CD;&#x5E94;&#x5F53;&#x505A;&#x662F;&#x4E00;&#x79CD;&#x4ECE;&#x7279;&#x5F81;&#x56FE;&#x8C31;&#x6240;&#x6709;&#x4F4D;&#x7F6E;&#x7684;&#x52A0;&#x6743;&#x548C;&#x6765;&#x8BA1;&#x7B97;&#x3002;&#x8BE5;building block&#x53EF;&#x4EE5;&#x63D2;&#x5165;&#x5230;&#x73B0;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x7684;&#x8BB8;&#x591A;&#x6A21;&#x578B;&#x5F53;&#x4E2D;&#xFF0C;&#x8FDB;&#x800C;&#x53EF;&#x4EE5;&#x63D0;&#x5347;&#x5206;&#x7C7B;&#xFF0C;&#x68C0;&#x6D4B;&#xFF0C;&#x5206;&#x5272;&#x7B49;&#x89C6;&#x89C9;&#x4EFB;&#x52A1;&#x7684;&#x6027;&#x80FD;&#x8868;&#x73B0;&#x3002;</p><a id="more"></a><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>&#x6355;&#x83B7;long-range dependencies&#x5728;&#x6DF1;&#x5EA6;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#x5177;&#x6709;&#x91CD;&#x8981;&#x610F;&#x4E49;&#x3002;&#x5BF9;&#x4E8E;&#x56FE;&#x7247;&#x6570;&#x636E;&#xFF0C;long-distance dependencies&#x4EE5;&#x6DF1;&#x5EA6;&#x5806;&#x53E0;&#x7684;&#x5377;&#x79EF;&#x7F51;&#x7EDC;&#x5F62;&#x6210;&#x7684;&#x66F4;&#x5927;&#x7684;&#x611F;&#x53D7;&#x91CE;&#x4E3A;&#x6A21;&#x578B;&#x3002;</p><p>&#x4E0D;&#x7BA1;&#x662F;&#x5377;&#x79EF;&#x64CD;&#x4F5C;&#x8FD8;&#x662F;recurrent&#x64CD;&#x4F5C;&#x90FD;&#x662F;&#x5728;&#x7A7A;&#x95F4;&#x6216;&#x8005;&#x65F6;&#x95F4;&#x7684;local neighborhood&#x4E0A;&#x8FDB;&#x884C;&#x7684;&#xFF1B;&#x56E0;&#x6B64;long-rangedependencies&#x53EA;&#x80FD;&#x901A;&#x8FC7;&#x91CD;&#x590D;&#x6267;&#x884C;&#x8FD9;&#x4E9B;&#x64CD;&#x4F5C;&#xFF0C;&#x901A;&#x8FC7;&#x6570;&#x636E;&#x9010;&#x6B65;&#x4F20;&#x9012;&#x4FE1;&#x53F7;&#x6765;&#x5F97;&#x5230;&#x3002;&#x91CD;&#x590D;&#x7684;local&#x64CD;&#x4F5C;&#x6709;&#x4E00;&#x4E9B;&#x9650;&#x5236;&#xFF1A;</p><ul><li>&#x5B83;&#x7684;&#x8BA1;&#x7B97;&#x5F88;&#x4F4E;&#x6548;</li><li>&#x5B83;&#x5BFC;&#x81F4;&#x4E86;&#x9700;&#x8981;&#x8BA4;&#x771F;&#x5BF9;&#x5F85;&#x7684;&#x4F18;&#x5316;&#x56F0;&#x96BE;</li><li>&#x8FD9;&#x4E9B;challenges make multi-hop dependency modeling&#xFF0C;&#x6BD4;&#x5982;&#x8F83;&#x8FDC;&#x7684;&#x4E24;&#x4E2A;&#x4F4D;&#x7F6E;&#x4E4B;&#x95F4;&#x7684;&#x4FE1;&#x606F;&#x524D;&#x5411;&#x548C;&#x53CD;&#x5411;&#x4F20;&#x64AD;&#x4F1A;&#x6BD4;&#x8F83;&#x56F0;&#x96BE;(&#x8FD9;&#x6BB5;&#x6CA1;&#x770B;&#x61C2;)</li></ul><p>&#x672C;&#x6587;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;non-local&#x64CD;&#x4F5C;&#xFF0C;&#x6765;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x5728;&#x6DF1;&#x5EA6;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x9AD8;&#x6548;&#xFF0C;&#x7B80;&#x5355;&#x4EE5;&#x53CA;&#x901A;&#x7528;&#x7684;&#x7EC4;&#x4EF6;&#x8001;&#x6355;&#x6349;long-range dependencies&#x3002;&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x7684;non-local&#x64CD;&#x4F5C;&#x6E90;&#x81EA;&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x4E2D;&#x7ECF;&#x5178;&#x7684;non-local mean&#x64CD;&#x4F5C;&#x3002;&#x6211;&#x4EEC;&#x7684;non-local&#x64CD;&#x4F5C;&#x8BA1;&#x7B97;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#x7684;&#x54CD;&#x5E94;&#x4F5C;&#x4E3A;&#x8F93;&#x5165;&#x7684;feature map&#x4E0A;&#x7684;&#x6240;&#x6709;&#x4F4D;&#x7F6E;&#x7684;&#x52A0;&#x6743;&#x548C;&#x6765;&#x8BA1;&#x7B97;&#x3002;&#x8FD9;&#x4E9B;&#x4F4D;&#x7F6E;&#x53EF;&#x4EE5;&#x5728;&#x7A7A;&#x95F4;&#xFF0C;&#x65F6;&#x95F4;&#x6216;&#x8005;&#x65F6;&#x7A7A;&#x4E2D;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x7684;&#x64CD;&#x4F5C;&#x9002;&#x7528;&#x4E8E;&#x56FE;&#x7247;&#xFF0C;&#x5E8F;&#x5217;&#x4EE5;&#x53CA;&#x89C6;&#x9891;&#x95EE;&#x9898;&#x3002;</p><p>&#x4F7F;&#x7528;non-local&#x7684;&#x4E00;&#x4E9B;&#x4F18;&#x70B9;&#xFF1A;</p><ul><li>&#x76F8;&#x6BD4;&#x4E8E; CNN &#x548C; RNN &#x7684;&#x9010;&#x6B65;&#x8BA1;&#x7B97;&#x7684;&#x52A3;&#x52BF;, non-local &#x64CD;&#x4F5C; &#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4ECE;&#x4EFB;&#x610F;&#x4E24;&#x70B9;&#x4E2D;&#x83B7;&#x53D6;&#x5230; long-range dependencies.</li><li>&#x6839;&#x636E;&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;&#x53EF;&#x77E5;, non-local operations &#x662F;&#x5341;&#x5206;&#x9AD8;&#x6548;&#x7684;, &#x5E76;&#x4E14;&#x5373;&#x4F7F;&#x5728;&#x53EA;&#x6709;&#x51E0;&#x5C42;&#x7F51;&#x7EDC;&#x5C42;&#x65F6;, &#x4E5F;&#x80FD;&#x53D6;&#x5F97;&#x5F88;&#x597D;&#x7684;&#x6548;&#x679C;.</li><li>&#x6700;&#x540E;, &#x672C;&#x6587;&#x7684; nocal operaions &#x4F1A;&#x7EF4;&#x6301;&#x8F93;&#x5165;&#x53D8;&#x91CF;&#x7684;&#x5C3A;&#x5BF8;&#x5927;&#x5C0F;, &#x5E76;&#x4E14;&#x53EF;&#x4EE5;&#x5F88;&#x5BB9;&#x6613;&#x7684;&#x4E0E;&#x73B0;&#x6709;&#x7684;&#x5176;&#x4ED6; operations &#x7ED3;&#x5408;&#x4F7F;&#x7528;.</li></ul><p>&#x6211;&#x4EEC;&#x7528; video classification &#x4EFB;&#x52A1;&#x6765;&#x5C55;&#x793A; non-local &#x7684;&#x6709;&#x6548;&#x6027;. &#x5728;&#x89C6;&#x9891;&#x6570;&#x636E;&#x4E2D;, long-range interactions &#x4E0D;&#x4EC5;&#x51FA;&#x73B0;&#x5728; &#x7A7A;&#x95F4;&#x4F4D;&#x7F6E;&#x4E0A;&#x7684; distant pixels, &#x8FD8;&#x4F1A;&#x51FA;&#x73B0;&#x5728;&#x65F6;&#x95F4;&#x7EF4;&#x5EA6;&#x4E0A;&#x7684; distant pixels. &#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x5355;&#x4E00;&#x7684; non-local block (basic unit), &#x4EE5;&#x524D;&#x9988;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x4FBF;&#x53EF;&#x4EE5;&#x6355;&#x83B7;&#x5230;&#x8FD9;&#x4E9B; spacetime dependencies, &#x5982;&#x679C;&#x5C06;&#x591A;&#x4E2A; non-local block &#x7EC4;&#x5408;&#x8D77;&#x6765;&#x5F62;&#x6210; non-local neural networks, &#x4FBF;&#x53EF;&#x4EE5;&#x63D0;&#x9AD8; video classification &#x4EFB;&#x52A1;&#x7684;&#x51C6;&#x786E;&#x5EA6;(&#x4E0D;&#x52A0;&#x4EFB;&#x4F55;tricks). &#x53E6;&#x5916;, non-local &#x7F51;&#x7EDC;&#x8981;&#x6BD4; 3D &#x5377;&#x79EF;&#x7F51;&#x7EDC;&#x7684;&#x8BA1;&#x7B97;&#x6027;&#x4EF7;&#x6BD4;&#x66F4;&#x9AD8;. &#x4E3A;&#x4E86;&#x8BF4;&#x660E; non-local &#x7684;&#x4E00;&#x822C;&#x6027;, &#x6211;&#x4EEC;&#x8FD8;&#x5728; COCO &#x6570;&#x636E;&#x96C6;&#x4E0A;&#x8FDB;&#x884C;&#x4E86;&#x76EE;&#x6807;&#x68C0;&#x6D4B;/&#x5206;&#x5272;, &#x59FF;&#x6001;&#x8BC6;&#x522B;&#x7B49;&#x4EFB;&#x52A1;&#x7684;&#x5B9E;&#x9A8C;, &#x5728;&#x57FA;&#x4E8E; MaskRCNN &#x7684;&#x7F51;&#x7EDC;&#x57FA;&#x7840;&#x4E0A;, &#x6211;&#x4EEC;&#x7684; non-local blocks &#x53EF;&#x4EE5;&#x7528;&#x8F83;&#x5C11;&#x7684;&#x8BA1;&#x7B97;&#x5F00;&#x9500;&#x8FDB;&#x4E00;&#x6B65;&#x63D0;&#x5347;&#x6A21;&#x578B;&#x7684;&#x7CBE;&#x5EA6;.</p><h1 id="Related-Work"><a href="#Related-Work" class="headerlink" title="Related Work"></a>Related Work</h1><ul><li><p><strong>Non-local image processing</strong></p></li><li><p><strong>Graphical models</strong></p></li><li><p><strong>Feedforward  modeling  for  sequences</strong></p></li><li><p><strong>Self-attention</strong></p></li><li><p><strong>Interaction networks</strong></p></li><li><p><strong>Video classification architectures</strong></p></li></ul><h1 id="Non-local-Neural-Network"><a href="#Non-local-Neural-Network" class="headerlink" title="Non-local Neural Network"></a>Non-local Neural Network</h1><p>&#x4E0B;&#x9762;&#x9996;&#x5148;&#x7ED9;&#x51FA; non-local operations &#x7684;&#x4E00;&#x822C;&#x6027;&#x5B9A;&#x4E49;, &#x7136;&#x540E;&#x4F1A;&#x7ED9;&#x51FA;&#x51E0;&#x79CD;&#x7279;&#x5B9A;&#x7684;&#x53D8;&#x4F53;</p><h2 id="Formulation"><a href="#Formulation" class="headerlink" title="Formulation"></a>Formulation</h2><p>&#x9075;&#x5FAA;non-local mean&#x64CD;&#x4F5C;&#xFF0C;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x4E2A;&#x5728;&#x6DF1;&#x5EA6;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#x901A;&#x7528;&#x7684;non-local&#x64CD;&#x4F5C;&#xFF1A;</p><script type="math/tex; mode=display">y_i=\frac{1}{C(x)}\sum_{\forall j}f(x_i,x_j)g(x_j)</script><p>&#x4E0A;&#x5F0F;&#x4E2D;,$i$&#x4EE3;&#x8868;&#x4E86;output&#x4E2D;&#x8BA1;&#x7B97;&#x54CD;&#x5E94;&#x7684;&#x4F4D;&#x7F6E;&#x7684;index&#xFF0C;&#x800C;$j$&#x679A;&#x4E3E;&#x4E86;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x7684;position&#x3002;x&#x662F;input signal(&#x4E00;&#x822C;&#x4E3A;&#x7279;&#x5F81;&#x56FE;&#x8C31;)&#xFF0C;y&#x662F;output signal(&#x4E0E;x&#x7684;size&#x76F8;&#x540C;)&#x3002;f&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x6807;&#x91CF;(&#x8868;&#x793A;i&#x4E0E;j&#x4E4B;&#x95F4;&#x7684;relationship)&#xFF0C;g&#x4E5F;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x6807;&#x91CF;&#xFF0C;&#x4EE3;&#x8868;&#x5728;j&#x4F4D;&#x7F6E;&#x4E0A;&#x7684;input signal&#x3002;&#x901A;&#x8FC7;&#x7CFB;&#x6570;$C(x)$&#x5BF9;&#x54CD;&#x5E94;&#x8FDB;&#x884C;&#x5F52;&#x4E00;&#x5316;&#x3002;</p><p>&#x8BE5;&#x516C;&#x5F0F;&#x7684; non-local &#x7279;&#x6027;&#x4E3B;&#x8981;&#x4F53;&#x73B0;&#x5728;&#x8003;&#x8651;&#x4E86;&#x6240;&#x6709;&#x53EF;&#x80FD;&#x7684; position (&#x2200;j), &#x800C;&#x5377;&#x79EF;&#x7F51;&#x7EDC;&#x53EA;&#x4F1A;&#x8003;&#x8651; output position &#x5468;&#x56F4;&#x4F4D;&#x7F6E;&#x7684;&#x50CF;&#x7D20;&#x70B9;&#x3002;</p><p>non-local&#x64CD;&#x4F5C;&#x4E0D;&#x540C;&#x4E8E;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x3002;non-local&#x8BA1;&#x7B97;&#x7684;&#x54CD;&#x5E94;&#x662F;&#x57FA;&#x4E8E;&#x4E0D;&#x540C;&#x4F4D;&#x7F6E;&#x4E4B;&#x95F4;&#x7684;relationship&#xFF0C;&#x800C;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x4F7F;&#x7528;&#x7684;&#x662F;&#x5B66;&#x4E60;&#x7684;&#x6743;&#x91CD;&#x3002;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x5728;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x4E2D;&#xFF0C;$x_i$&#x548C;$x_j$&#x4E4B;&#x95F4;&#x7684;relationship&#x5E76;&#x4E0D;&#x662F;input data&#x7684;&#x51FD;&#x6570;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x516C;&#x5F0F;&#x652F;&#x6301;&#x4E0D;&#x540C;&#x7684;&#x8F93;&#x5165;&#x5C3A;&#x5BF8;&#xFF0C;&#x540C;&#x65F6;&#x5728;&#x8F93;&#x51FA;&#x4E2D;&#x4FDD;&#x7559;&#x5BF9;&#x5E94;&#x7684;&#x5C3A;&#x5BF8;&#x3002;</p><p>non-local&#x662F;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x7075;&#x6D3B;&#x7684;&#x6A21;&#x5757;, &#x5B83;&#x53EF;&#x4EE5;&#x88AB;&#x6DFB;&#x52A0;&#x5230;&#x6DF1;&#x5EA6;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x6D45;&#x5C42;&#x7F51;&#x7EDC;&#x5F53;&#x4E2D;&#x53BB;(&#x4E0D;&#x50CF;fc&#x90A3;&#x6837;&#x5904;&#x4E8E;&#x6DF1;&#x5C42;&#x7F51;&#x7EDC;), &#x8FD9;&#x4F7F;&#x5F97;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x6784;&#x5EFA;&#x66F4;&#x52A0;&#x4E30;&#x5BCC;&#x7684;&#x6A21;&#x578B;&#x7ED3;&#x6784;&#x6765;&#x7ED3;&#x5408;non-local&#x548C;local&#x4FE1;&#x606F;&#x3002;</p><h2 id="Instantiations"><a href="#Instantiations" class="headerlink" title="Instantiations"></a>Instantiations</h2><p>&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x4ECB;&#x7ECD;&#x4ECB;&#x4E2A;&#x4E0D;&#x540C;&#x7248;&#x672C;&#x7684;$f$&#x51FD;&#x6570;&#x4EE5;&#x53CA;$g$&#x51FD;&#x6570;&#x3002;&#x6211;&#x4EEC;&#x4F1A;&#x5728;&#x5B9E;&#x9A8C;&#x4E2D;&#x8BC1;&#x660E;&#x6211;&#x4EEC;&#x7684;non-local&#x6A21;&#x578B;&#x5BF9;&#x8FD9;&#x4E9B;&#x51FD;&#x6570;&#x7684;&#x9009;&#x62E9;&#x5E76;&#x4E0D;&#x654F;&#x611F;&#x3002; &#x8FD9;&#x610F;&#x5473;&#x7740;non-local&#x7684;&#x901A;&#x7528;&#x6027;&#x6B63;&#x662F;&#x63D0;&#x5347;&#x5404;&#x4E2A;&#x6A21;&#x578B;&#x5728;&#x4E0D;&#x540C;&#x4EFB;&#x52A1;&#x4E0A;&#x6027;&#x80FD;&#x8868;&#x73B0;&#x7684;&#x4E3B;&#x8981;&#x539F;&#x56E0;&#x3002;</p><p>&#x51FA;&#x4E8E;&#x7B80;&#x6D01;&#xFF0C;&#x6211;&#x4EEC;&#x628A;$g$&#x51FD;&#x6570;&#x8003;&#x8651;&#x6210;&#x7EBF;&#x6027;&#x5F62;&#x5F0F;&#xFF1A;$g(x_i)=W_g*x_j$&#xFF0C;$W_j$&#x662F;&#x4E2A;&#x9700;&#x8981;&#x88AB;&#x5B66;&#x4E60;&#x7684;&#x6743;&#x91CD;&#x77E9;&#x9635;&#xFF0C;&#x5728;&#x5B9E;&#x73B0;&#x65F6;&#xFF0C;&#x901A;&#x5E38;&#x4F1A;&#x901A;&#x8FC7;1&#xD7;1(&#x6216; 1&#xD7;1&#xD7;1)&#x7684;&#x5377;&#x79EF;&#x6765;&#x5B9E;&#x73B0;&#x3002;</p><p>&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x8BA8;&#x8BBA;$f$&#x51FD;&#x6570;&#x7684;&#x9009;&#x62E9;&#xFF1A;</p><ul><li><p><strong>Gaussian</strong><br>&#x4E00;&#x4E2A;&#x6700;&#x81EA;&#x7136;&#x7684;&#x9009;&#x62E9;&#x5C31;&#x662F;&#x9AD8;&#x65AF;&#x51FD;&#x6570;&#xFF1A;</p><script type="math/tex; mode=display">f(x_i,x_j)=e^{x_i^Tx_j}</script><p>&#x8FD9;&#x91CC;$x_i^Tx_j$&#x4E3A;&#x4E24;&#x4E2A;&#x5411;&#x91CF;&#x7684;&#x70B9;&#x79EF;&#xFF0C;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x6807;&#x91CF;&#xFF0C;&#x6709;&#x65F6;&#x5019;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x6B27;&#x51E0;&#x91CC;&#x5F97;&#x8DDD;&#x79BB;&#xFF0C;&#x4E0D;&#x8FC7;&#x70B9;&#x79EF;&#x7684;&#x5B9E;&#x73B0;&#x66F4;&#x52A0;&#x5BB9;&#x6613;&#x3002;&#x5F52;&#x4E00;&#x5316;&#x53C2;&#x6570;&#x4E3A;$C(x)=\sum_{\forall j}f(x_i,x_j)$&#x3002;</p></li><li><p><strong>Embedded Gaussian</strong><br>&#x9AD8;&#x6570;&#x51FD;&#x6570;&#x7684;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x62D3;&#x5C55;&#x5C31;&#x662F;&#x5728;embedding space&#x4E2D;&#x8BA1;&#x7B97;&#x76F8;&#x4F3C;&#x5EA6;&#xFF1A;</p><script type="math/tex; mode=display">f(x_i,x_j)=e^{\theta(x_i)^T\phi(x_j)}</script><p>&#x5176;&#x4E2D;$\theta(x_i)=W_\theta x_i$&#xFF0C;$\phi(x_j)=W_\phi x_j$&#x4E3A;&#x4E24;&#x4E2A;embeddings&#x3002;&#x548C;&#x4E0A;&#x8FF0;&#x4E00;&#x6837;&#xFF0C;&#x6211;&#x4EEC;&#x8BBE;&#x5B9A;$C(x)=\sum_{\forall j}f(x_i,x_j)$&#x3002;<br>&#x6211;&#x4EEC;&#x53D1;&#x73B0;self-attention&#x6A21;&#x5757;&#x5176;&#x5B9E;&#x5C31;&#x662F;non-local&#x7684;embedded Gaussian&#x7248;&#x672C;&#x7684;&#x4E00;&#x79CD;&#x7279;&#x6B8A;&#x60C5;&#x51B5;&#x3002;&#x5BF9;&#x4E8E;&#x7ED9;&#x5B9A;&#x7684;$i$&#xFF0C;$\frac{f(x_i,x_j)}{C(x)}$&#x5C31;&#x53D8;&#x6210;&#x4E86;&#x8BA1;&#x7B97;&#x6240;&#x6709;&#x7684;$j$&#x7684;softmax&#xFF0C;&#x5373;$y=softmax(x^T W_\theta^T W_\phi x)g(x)$&#xFF0C;&#x8FD9;&#x5C31;&#x662F;self-attention&#x7684;&#x8868;&#x8FBE;&#x5F62;&#x5F0F;&#x3002;&#x8FD9;&#x6837;&#x6211;&#x4EEC;&#x5C31;&#x5C06;self-attention&#x6A21;&#x578B;&#x548C;&#x4F20;&#x7EDF;&#x7684;&#x975E;&#x5C40;&#x90E8;&#x5747;&#x503C;&#x8054;&#x7CFB;&#x5728;&#x4E86;&#x4E00;&#x8D77;&#xFF0C;&#x5E76;&#x4E14;&#x5C06;sequential self-attention network&#x63A8;&#x5E7F;&#x5230;&#x4E86;&#x66F4;&#x5177;&#x4E00;&#x822C;&#x6027;&#x7684;space/spacetime non-local network&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x56FE;&#x50CF;&#x3001;&#x89C6;&#x9891;&#x8BC6;&#x522B;&#x4EFB;&#x52A1;&#x4E2D;&#x4F7F;&#x7528;&#x3002;</p></li><li><p><strong>Dot produt</strong><br>$f$&#x4E5F;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x4E3A;&#x70B9;&#x4E58;&#x76F8;&#x4F3C;&#x5EA6;&#xFF1A;</p><script type="math/tex; mode=display">f(x_i,x_j)=\theta(x_i)^T \phi(x_j)</script><p>&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x91C7;&#x7528;embedded&#x7248;&#x672C;&#x3002;&#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x8BBE;&#x7F6E;&#x5F52;&#x4E00;&#x5316;&#x53C2;&#x6570;$C(x)=N$&#xFF0C;$N$&#x4E3A;&#x5728;$x$&#x4E2D;&#x7684;&#x6240;&#x6709;&#x4F4D;&#x7F6E;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x800C;&#x4E0D;&#x662F;$f$&#x4E4B;&#x548C;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x6837;&#x80FD;&#x591F;&#x7B80;&#x5316;&#x68AF;&#x5EA6;&#x8BA1;&#x7B97;&#x3002;&#x8FD9;&#x79CD;&#x5F62;&#x5F0F;&#x7684;&#x5F52;&#x4E00;&#x5316;&#x662F;&#x6709;&#x5FC5;&#x8981;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x8F93;&#x5165;&#x7684;size&#x662F;&#x53D8;&#x5316;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x7528;x&#x7684;size&#x4F5C;&#x4E3A;&#x5F52;&#x4E00;&#x5316;&#x53C2;&#x6570;&#x6709;&#x4E00;&#x5B9A;&#x9053;&#x7406;&#x3002;<br>dot product&#x548C;embeded gaussian&#x7684;&#x7248;&#x672C;&#x7684;&#x4E3B;&#x8981;&#x533A;&#x522B;&#x5728;&#x4E8E;&#x662F;&#x5426;&#x505A;softmax&#xFF0C;softmax&#x5728;&#x8FD9;&#x91CC;&#x7684;&#x4F5C;&#x7528;&#x76F8;&#x5F53;&#x4E8E;&#x662F;&#x4E00;&#x4E2A;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x3002;</p></li><li><p><strong>Concatenation</strong><br>Concatenation&#x662F;&#x5728;Relation Network&#x4E2D;&#x4F7F;&#x7528;&#x7684;pairwise function&#x3002;&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x4E5F;&#x8BBE;&#x8BA1;&#x4E86;&#x4E00;&#x4E2A;concatenation&#x7248;&#x672C;&#x7684;$f$&#xFF1A;</p><script type="math/tex; mode=display">f(x_i,x_j)=ReLU(w_f^T[\theta(x_i),\phi(x_j)])</script><p>&#x8FD9;&#x91CC;&#x4E2D;&#x62EC;&#x53F7;&#x4E2D;&#x7684;&#x4EE3;&#x8868;concatenation&#xFF0C;$w_f$&#x662F;&#x80FD;&#x591F;&#x5C06;concatenation&#x5411;&#x91CF;&#x8F6C;&#x5316;&#x4E3A;&#x4E00;&#x4E2A;&#x6807;&#x91CF;&#x7684;&#x6743;&#x91CD;&#x5411;&#x91CF;&#x3002;&#x8FD9;&#x91CC;&#x8BBE;&#x7F6E;$C(x)=N$&#x3002;</p></li></ul><p>&#x4EE5;&#x4E0A;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x4E86;&#x591A;&#x79CD;&#x53D8;&#x79CD;&#xFF0C;&#x8FD9;&#x8BF4;&#x660E;&#x4E86;&#x6211;&#x4EEC;&#x7684;non-local&#x64CD;&#x4F5C;&#x7684;&#x7075;&#x6D3B;&#x6027;&#xFF0C;&#x6211;&#x4EEC;&#x76F8;&#x4FE1;&#x4E5F;&#x4F1A;&#x6709;&#x522B;&#x7684;&#x53D8;&#x79CD;&#x80FD;&#x591F;&#x63D0;&#x5347;&#x6027;&#x80FD;&#x3002;</p><h2 id="Non-local-Block"><a href="#Non-local-Block" class="headerlink" title="Non-local Block"></a>Non-local Block</h2><p>&#x6211;&#x4EEC;&#x5C06;&#x4E0A;&#x9762;&#x4ECB;&#x7ECD;&#x7684;&#x516C;&#x5F0F;(non-local operation)&#x5305;&#x88C5;&#x8FDB;&#x4E00;&#x4E2A; non-local block &#x4E2D;, &#x4F7F;&#x5176;&#x53EF;&#x4EE5;&#x6574;&#x5408;&#x5230;&#x8BB8;&#x591A;&#x73B0;&#x6709;&#x7684;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x5F53;&#x4E2D;, &#x6211;&#x4EEC;&#x5C06; non-local &#x5B9A;&#x4E49;&#x6210;&#x5982;&#x4E0B;&#x683C;&#x5F0F;:</p><script type="math/tex; mode=display">z_i=W_z y_i+x_i</script><p>$y_i$&#x7531;&#x4E0A;&#x8FF0;&#x516C;&#x5F0F;&#x5F97;&#x5230;&#xFF0C;&#x201C;$+x_i$&#x201D;&#x4EE3;&#x8868;&#x4E00;&#x4E2A;&#x6B8B;&#x5DEE;&#x8FDE;&#x63A5;&#x3002;&#x6B8B;&#x5DEE;&#x8FDE;&#x63A5;&#x4F7F;&#x5F97;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5C06;&#x4E00;&#x4E2A;&#x65B0;&#x7684;non-local block&#x63D2;&#x5165;&#x4E00;&#x4E2A;&#x9884;&#x5148;&#x8BAD;&#x7EC3;&#x597D;&#x7684;&#x6A21;&#x578B;&#xFF0C;&#x800C;&#x4E0D;&#x4F1A;&#x7834;&#x574F;&#x5176;&#x539F;&#x6709;&#x7684;&#x7ED3;&#x6784;&#xFF08;&#x5982;$W_z=0$&#x4F5C;&#x4E3A;&#x521D;&#x59CB;&#x5316;&#x5219;&#x5B8C;&#x5168;&#x548C;&#x539F;&#x59CB;&#x7ED3;&#x6784;&#x4E00;&#x81F4;&#xFF09;&#x3002;&#x4E0B;&#x56FE;&#x6F14;&#x793A;&#x4E86;&#x4E00;&#x4E2A;non-local block&#x3002;<br><img src="/2019/08/03/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;8/1.png" alt><br>non-local block&#x7684;pairwise&#x7684;&#x8BA1;&#x7B97;&#x53EF;&#x4EE5;&#x662F;&#x975E;&#x5E38;&#x8F7B;&#x91CF;&#x7EA7;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x5B83;&#x7528;&#x5728;&#x9AD8;&#x5C42;&#x7EA7;&#xFF0C;&#x8F83;&#x5C0F;&#x7684;feature map&#x4E0A;&#x7684;&#x8BDD;&#x3002;&#x6BD4;&#x5982;&#xFF0C;&#x56FE;2&#x4E0A;&#x7684;&#x5178;&#x578B;&#x503C;&#x662F;T=4&#xFF0C;H=W=14 or 7&#x3002;&#x901A;&#x8FC7;&#x77E9;&#x9635;&#x8FD0;&#x7B97;&#x6765;&#x8BA1;&#x7B97;parwise function&#x7684;&#x503C;&#x5C31;&#x548C;&#x8BA1;&#x7B97;&#x4E00;&#x4E2A;conv layer&#x7684;&#x8BA1;&#x7B97;&#x91CF;&#x7C7B;&#x4F3C;&#x3002;&#x53E6;&#x5916;&#x6211;&#x4EEC;&#x8FD8;&#x901A;&#x8FC7;&#x4EE5;&#x4E0B;&#x65B9;&#x5F0F;&#x4F7F;&#x5176;&#x66F4;&#x9AD8;&#x6548;&#x3002;</p><ul><li><strong>Implementation of Non-local Blocks</strong><br>&#x6211;&#x4EEC;&#x8BBE;&#x7F6E; $W_g$&#xFF0C;$W_\theta$&#xFF0C;$W_\phi$&#x7684;&#x901A;&#x9053;&#x6570;&#x4E3A;$x$&#x901A;&#x9053;&#x6570;&#x76EE;&#x7684;&#x4E00;&#x534A;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x5F62;&#x6210;&#x4E86;&#x4E00;&#x4E2A;bottleneck&#xFF0C;&#x5C31;&#x80FD;&#x591F;&#x51CF;&#x5C11;&#x4E00;&#x534A;&#x7684;&#x8BA1;&#x7B97;&#x91CF;&#x3002;$W_z$&#x518D;&#x91CD;&#x65B0;&#x653E;&#x5927;&#x5230;$x$&#x7684;&#x901A;&#x9053;&#x6570;&#x76EE;&#xFF0C;&#x4EE5;&#x4FDD;&#x8BC1;&#x8F93;&#x5165;&#x8F93;&#x51FA;&#x7EF4;&#x5EA6;&#x4E00;&#x81F4;&#x3002;<br>&#x8FD8;&#x6709;&#x4E2A;&#x4E0B;&#x91C7;&#x6837;&#x7684;trick&#x53EF;&#x4EE5;&#x8FDB;&#x4E00;&#x6B65;&#x91C7;&#x7528;&#xFF0C;&#x5C31;&#x662F;&#x5C06;non-local&#x7684;&#x516C;&#x5F0F;&#x6539;&#x4E3A;$y_i=\frac{1}{C(\hat{x})}\sum_{\forall j}f(x_i,\hat{x}_j)g(\hat{x}_j)$&#xFF0C;&#x5176;&#x4E2D;$\hat{x}_j$&#x662F;$x_j$&#x4E0B;&#x91C7;&#x6837;&#x5F97;&#x5230;&#x7684;&#xFF0C;&#x6BD4;&#x5982;&#x901A;&#x8FC7;pooling&#x3002;&#x6211;&#x4EEC;&#x5C06;&#x8FD9;&#x4E2A;&#x65B9;&#x5F0F;&#x5728;&#x7A7A;&#x95F4;&#x57DF;&#x4E0A;&#x4F7F;&#x7528;&#xFF0C;&#x53EF;&#x4EE5;&#x51CF;&#x5C11;1/4&#x7684;pairwise function&#x7684;&#x8BA1;&#x7B97;&#x91CF;&#x3002;&#x8FD9;&#x4E2A;trick&#x9ACC;&#x9AA8;&#x4F1A;&#x6539;&#x53D8;non-local&#x7684;&#x884C;&#x4E3A;&#xFF0C;&#x800C;&#x662F;&#x4F7F;&#x8BA1;&#x7B97;&#x53D8;&#x5F97;&#x7A00;&#x758F;&#x4E86;&#x3002;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5728;&#x4E0A;&#x56FE;&#x4E2D;&#x7684;$\phi$&#x4EE5;&#x53CA;$g$&#x540E;&#x9762;&#x589E;&#x52A0;&#x4E00;&#x4E2A;max pooling&#x5C42;&#x6765;&#x5B9E;&#x73B0;&#x3002;</li></ul><h1 id="Video-Classification-Models"><a href="#Video-Classification-Models" class="headerlink" title="Video Classification Models"></a>Video Classification Models</h1><p>&#x6CA1;&#x770B;</p><h1 id="Experiments-on-Video-Classification"><a href="#Experiments-on-Video-Classification" class="headerlink" title="Experiments on Video Classification"></a>Experiments on Video Classification</h1><p>&#x6CA1;&#x770B;</p><h1 id="Extension-Experiments-on-COCO"><a href="#Extension-Experiments-on-COCO" class="headerlink" title="Extension:Experiments on COCO"></a>Extension:Experiments on COCO</h1><p><img src="/2019/08/03/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;8/2.png" alt></p><h1 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h1><p>&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x79CD;&#x65B0;&#x7684;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x80FD;&#x591F;&#x901A;&#x8FC7;non-local&#x64CD;&#x4F5C;&#x6355;&#x6349; long-range dependencies&#x3002;&#x6211;&#x4EEC;&#x7684;non-local blocks&#x80FD;&#x591F;&#x4E0E;&#x4EFB;&#x4F55;&#x5DF2;&#x5B58;&#x5728;&#x7684;&#x7ED3;&#x6784;&#x7ED3;&#x5408;&#x3002;&#x6211;&#x4EEC;&#x5C55;&#x793A;&#x4E86;non-local modeling&#x5728;&#x89C6;&#x9891;&#x5206;&#x7C7B;&#xFF0C;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#xFF0C;&#x8BED;&#x4E49;&#x5206;&#x5272;&#x4EE5;&#x53CA;&#x59FF;&#x6001;&#x4F30;&#x8BA1;&#x4E2D;&#x7684;&#x91CD;&#x8981;&#x6027;&#x3002;&#x5728;&#x6240;&#x6709;&#x7684;&#x4EFB;&#x52A1;&#x4E2D;&#xFF0C;&#x7B80;&#x5355;&#x7684;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;non-local blocks&#x5C31;&#x53EF;&#x4EE5;&#x5728;baseline&#x4E0A;&#x83B7;&#x5F97;&#x7A33;&#x5B9A;&#x7684;&#x63D0;&#x5347;&#x3002;&#x6211;&#x4EEC;&#x5E0C;&#x671B;non-local layers&#x4F1A;&#x6210;&#x4E3A;&#x672A;&#x6765;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x7EC4;&#x6210;&#x90E8;&#x5206;&#x3002;</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 卷积网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文阅读笔记7：Libra R-CNN:Towards Balanced Learning for Object Detection</title>
      <link href="/2019/08/02/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B07/"/>
      <url>/2019/08/02/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B07/</url>
      
        <content type="html"><![CDATA[<h1 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h1><p>&#x76F8;&#x6BD4;&#x6A21;&#x578B;&#x7684;&#x7ED3;&#x6784;&#xFF0C;&#x5173;&#x6CE8;&#x5EA6;&#x8F83;&#x5C11;&#x7684;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;&#x5BF9;&#x4E8E;&#x68C0;&#x6D4B;&#x5668;&#x7684;&#x6210;&#x529F;&#x68C0;&#x6D4B;&#x4E5F;&#x662F;&#x5341;&#x5206;&#x91CD;&#x8981;&#x7684;&#x3002;&#x672C;&#x6587;&#x53D1;&#x73B0;&#xFF0C;&#x68C0;&#x6D4B;&#x6027;&#x80FD;&#x4E3B;&#x8981;&#x53D7;&#x9650;&#x4E8E;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;&#x4E2D;&#x7684;&#x4E09;&#x4E2A;levels&#x4E0A;&#x7684;&#x4E0D;&#x5E73;&#x8861;&#x2014;&#x2014;sample level,feature level,objective level&#x7684;&#x4E0D;&#x5E73;&#x8861;&#x95EE;&#x9898;&#x3002;&#x4E3A;&#x6B64;&#xFF0C;&#x63D0;&#x51FA;&#x4E86;Libra R-CNN&#xFF0C;&#x7528;&#x4E8E;&#x5BF9;&#x5E73;&#x8861;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x7684;&#x5B66;&#x4E60;&#x7684;&#x7B80;&#x5355;&#x6709;&#x6548;&#x7684;&#x6846;&#x67B6;&#x3002;&#x4E3B;&#x8981;&#x5305;&#x542B;&#x4E09;&#x4E2A;&#x521B;&#x65B0;&#x70B9;&#xFF1A;</p><ul><li>IoU-balanced sampling &#x7528;&#x4E8E;&#x51CF;&#x5C11;&#x91C7;&#x6837;&#x8FC7;&#x7A0B;&#x4E2D;&#x7684;&#x4E0D;&#x5E73;&#x8861;</li><li>balanced feature pyramid &#x7528;&#x4E8E;&#x51CF;&#x5C11;feature &#x7684;&#x4E0D;&#x5E73;&#x8861;</li><li>balanced L1 loss &#x7528;&#x4E8E;&#x51CF;&#x5C11;objective level&#x7684;&#x4E0D;&#x5E73;&#x8861;&#x3002;</li></ul><p>&#x5B83;&#x5728;MSCOCO&#x4E0A;&#x7684;Average Precision(AP)&#x76F8;&#x6BD4;FPN Faster R-CNN&#x4EE5;&#x53CA;RetinaNet&#x5206;&#x522B;&#x9AD8;&#x51FA;&#x4E86;2.5&#x548C;2&#x4E2A;&#x70B9;&#x3002;</p><a id="more"></a><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x7684;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;&#x6210;&#x529F;&#x4E0E;&#x5426;&#x4E3B;&#x8981;&#x4F9D;&#x9760;&#x4EE5;&#x4E0B;&#x4E09;&#x4E2A;&#x5173;&#x952E;&#x65B9;&#x9762;&#xFF1A;</p><ul><li>&#x9009;&#x62E9;&#x7684;&#x533A;&#x57DF;&#x6837;&#x672C;&#x662F;&#x5426;&#x5177;&#x6709;&#x4EE3;&#x8868;&#x6027;</li><li>&#x662F;&#x5426;&#x5145;&#x5206;&#x5229;&#x7528;&#x4E86;&#x63D0;&#x53D6;&#x7684;&#x89C6;&#x89C9;&#x7279;&#x5F81;</li><li><p>&#x8BBE;&#x8BA1;&#x7684;&#x76EE;&#x6807;&#x51FD;&#x6570;&#x662F;&#x5426;&#x662F;&#x6700;&#x4F18;&#x7684;<br>&#x7136;&#x800C;&#xFF0C;&#x672C;&#x6587;&#x53D1;&#x73B0;&#x5728;&#x5178;&#x578B;&#x7684;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;&#x4E2D;&#x4E0A;&#x8FF0;&#x4E09;&#x4E2A;&#x65B9;&#x9762;&#x4E2D;&#x5B58;&#x5728;&#x8FD9;&#x4E25;&#x91CD;&#x7684;&#x4E0D;&#x5E73;&#x8861;&#x95EE;&#x9898;&#x3002;&#x8FD9;&#x4E9B;&#x4E0D;&#x5E73;&#x8861;&#x95EE;&#x9898;&#x4F1A;&#x4F7F;&#x5F97;&#x7F51;&#x7EDC;&#x7684;&#x7ED3;&#x6784;&#x65E0;&#x6CD5;&#x5F97;&#x5230;&#x5B8C;&#x5168;&#x5F00;&#x53D1;&#x8FDB;&#x800C;&#x5F71;&#x54CD;&#x6574;&#x4F53;&#x7684;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x6027;&#x80FD;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF1A;<br><img src="/2019/08/02/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;7/1.png" alt></p></li><li><p><strong>Sample level imbalance</strong><br>&#x5F53;&#x5728;&#x8BAD;&#x7EC3;&#x4E00;&#x4E2A;&#x68C0;&#x6D4B;&#x5668;&#x65F6;&#xFF0C;&#x56F0;&#x96BE;&#x6837;&#x672C;&#x662F;&#x6700;&#x5177;&#x6709;&#x4EF7;&#x503C;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4EEC;&#x66F4;&#x6709;&#x5229;&#x4E8E;&#x63D0;&#x5347;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x7684;&#x6027;&#x80FD;&#x3002;&#x7136;&#x800C;&#xFF0C;&#x57FA;&#x4E8E;&#x968F;&#x673A;&#x91C7;&#x6837;&#x673A;&#x5236;&#x9020;&#x6210;&#x7684;&#x7ED3;&#x679C;&#x4E00;&#x822C;&#x662F;&#x4F7F;&#x6311;&#x9009;&#x7684;&#x6837;&#x672C;&#x8D8B;&#x5411;&#x4E8E;easy&#x7C7B;&#x578B;,harde mining&#x7B97;&#x6CD5;&#x5982;OHEM&#x53EF;&#x4EE5;&#x66F4;&#x591A;&#x7684;&#x5173;&#x6CE8;hard samples&#x3002;&#x7136;&#x800C;&#xFF0C;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x5BF9;&#x566A;&#x58F0;&#x6807;&#x7B7E;&#x6BD4;&#x8F83;&#x654F;&#x611F;&#xFF0C;&#x5BB9;&#x6613;&#x9020;&#x6210;&#x5927;&#x91CF;&#x7684;&#x5185;&#x5B58;&#x53CA;&#x8BA1;&#x7B97;&#x91CF;&#x7684;&#x6D88;&#x8017;&#x3002;Focal Loss&#x5E94;&#x7528;&#x4E8E;&#x5355;&#x9636;&#x6BB5;&#x7684;&#x6548;&#x679C;&#x8F83;&#x597D;&#xFF0C;&#x4F46;&#x662F;&#xFF0C;&#x6269;&#x5C55;&#x5230;&#x5927;&#x90E8;&#x5206;&#x6837;&#x672C;&#x4E3A;&#x7B80;&#x5355;&#x8D1F;&#x6837;&#x672C;&#x7684;&#x53CC;&#x9636;&#x6BB5;&#x68C0;&#x6D4B;&#x6A21;&#x578B;&#x4E2D;&#xFF0C;&#x6548;&#x679C;&#x4E00;&#x822C;&#x3002;</p></li><li><p><strong>Feature level imbalance</strong><br>&#x5728;backbone&#x4E2D;&#x6DF1;&#x5C42;&#x5177;&#x6709;&#x66F4;&#x591A;&#x7684;&#x8BED;&#x4E49;&#x4FE1;&#x606F;&#xFF0C;&#x800C;&#x8F83;&#x4F4E;&#x5C42;&#x4E3A;&#x66F4;&#x591A;&#x7684;&#x5185;&#x5BB9;&#x63CF;&#x8FF0;&#x7B49;&#x7EC6;&#x8282;&#x4FE1;&#x606F;&#x3002;FPN&#x53CA;PANet&#x7B49;&#x901A;&#x8FC7;&#x4FA7;&#x8FDE;&#x63A5;&#x6765;&#x8FDB;&#x884C;&#x7279;&#x5F81;&#x878D;&#x5408;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x4F4E;&#x5C42;&#x7279;&#x5F81;&#x4E0E;&#x9AD8;&#x5C42;&#x7279;&#x5F81;&#x53EF;&#x4EE5;&#x5BF9;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x8FDB;&#x884C;&#x8865;&#x5145;&#x3002;&#x7528;&#x6765;&#x6765;&#x6574;&#x5408;&#x91D1;&#x5B57;&#x5854;&#x7684;&#x7279;&#x5F81;&#x8868;&#x793A;&#x7684;&#x65B9;&#x6CD5;&#x51B3;&#x5B9A;&#x7740;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x7684;&#x6027;&#x80FD;&#x3002;&#x672C;&#x6587;&#x8BA4;&#x4E3A;&#xFF0C;&#x878D;&#x5408;&#x7684;&#x4FE1;&#x606F;&#x5E94;&#x8BE5;&#x5E73;&#x8861;&#x5730;&#x5305;&#x542B;&#x6BCF;&#x4E2A;&#x5206;&#x8FA8;&#x7387;&#x7684;&#x4FE1;&#x606F;&#x3002;&#x4F46;&#x4E0A;&#x8FF0;&#x65B9;&#x6CD5;&#x4F7F;&#x5F97;&#x878D;&#x5408;&#x7684;&#x7279;&#x5F81;&#x66F4;&#x591A;&#x5173;&#x6CE8;&#x4E8E;&#x76F8;&#x90BB;&#x7684;&#x5206;&#x8FA8;&#x7387;&#x800C;&#x4E0D;&#x662F;&#x5176;&#x4ED6;&#x5206;&#x8FA8;&#x7387;&#x3002;&#x5728;&#x4FE1;&#x606F;&#x4F20;&#x9012;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x6BCF;&#x6B21;&#x878D;&#x5408;&#x64CD;&#x4F5C;&#xFF0C;&#x4F1A;&#x4F7F;&#x5F97;&#x975E;&#x76F8;&#x90BB;&#x5C42;&#x7EA7;&#x7684;&#x8BED;&#x4E49;&#x4FE1;&#x606F;&#x53D8;&#x5F97;&#x7A00;&#x91CA;&#x3002;</p></li><li><p><strong>Objective level imbalance</strong><br>&#x68C0;&#x6D4B;&#x5668;&#x5305;&#x542B;&#x5206;&#x7C7B;&#x53CA;&#x5B9A;&#x4F4D;&#x4E24;&#x4E2A;&#x4EFB;&#x52A1;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5728;&#x8BAD;&#x7EC3;&#x76EE;&#x6807;&#x51FD;&#x6570;&#x4E2D;&#x7ED3;&#x5408;&#x4E24;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x76EE;&#x6807;&#x3002;&#x5982;&#x679C;&#x4E8C;&#x8005;&#x4E0D;&#x662F;&#x5E73;&#x8861;&#x7684;&#xFF0C;&#x4E00;&#x4E2A;&#x76EE;&#x6807;&#x53EF;&#x80FD;&#x4F1A;&#x88AB;&#x9650;&#x5236;&#xFF0C;&#x8FDB;&#x800C;&#x5BFC;&#x81F4;&#x6574;&#x4F53;&#x4E0D;&#x597D;&#x7684;&#x6548;&#x679C;&#x3002;&#x6B64;&#x60C5;&#x5F62;&#x540C;&#x6837;&#x9002;&#x7528;&#x4E8E;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;&#x4E2D;&#x7684;&#x6837;&#x672C;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x5E73;&#x8861;&#xFF0C;&#x7531;&#x7B80;&#x5355;&#x6837;&#x672C;&#x4EA7;&#x751F;&#x7684;&#x5C0F;&#x68AF;&#x5EA6;&#x503C;&#x4F1A;&#x6DF9;&#x6CA1;hard&#x6837;&#x672C;&#x4EA7;&#x751F;&#x7684;&#x8F83;&#x5927;&#x7684;&#x68AF;&#x5EA6;&#x503C;&#xFF0C;&#x8FDB;&#x800C;&#x9650;&#x5236;&#x4E86;&#x540E;&#x7EED;&#x7684;&#x4E00;&#x4E9B;&#x5F3A;&#x5316;&#x64CD;&#x4F5C;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x9488;&#x5BF9;&#x6700;&#x4F18;&#x6536;&#x655B;&#xFF0C;&#x672C;&#x6587;&#x5E73;&#x8861;&#x4E86;&#x76F8;&#x5173;&#x7684;&#x4EFB;&#x52A1;&#x53CA;&#x6837;&#x672C;&#x3002;</p></li></ul><p>&#x4E3A;&#x89E3;&#x51B3;&#x4E0A;&#x8FF0;&#x95EE;&#x9898;&#xFF0C;&#x63D0;&#x51FA;&#x4E86;&#x7B80;&#x5355;&#x6709;&#x6548;&#x7684;Libra R-CNN&#x6846;&#x67B6;&#x3002;&#x4E09;&#x70B9;&#x521B;&#x65B0;&#x5982;&#x4E0B;&#xFF1A;</p><ol><li>IoU-balanced sampling:&#x6839;&#x636E;assigned ground-truth&#x8FDB;&#x884C;mine hard samples</li><li>balanced feature pyramid:&#x5229;&#x7528;&#x76F8;&#x540C;&#x6DF1;&#x5EA6;&#x878D;&#x5408;&#x7684;&#x5E73;&#x8861;&#x540E;&#x7684;&#x8BED;&#x4E49;&#x7279;&#x5F81;&#x589E;&#x5F3A;&#x591A;&#x5C42;&#x6B21;&#x7684;&#x7279;&#x5F81;&#x3002;</li><li>balanced L1 loss&#xFF1A;&#x589E;&#x5F3A;&#x91CD;&#x8981;&#x7684;&#x68AF;&#x5EA6;&#xFF0C;&#x8FDB;&#x800C;&#x5BF9;&#x5206;&#x7C7B;&#xFF0C;&#x7C97;&#x5B9A;&#x4F4D;&#xFF0C;&#x7EC6;&#x5B9A;&#x4F4D;&#x8FDB;&#x884C;&#x518D;&#x5E73;&#x8861;&#x3002;</li></ol><p>&#x6211;&#x4EEC;&#x603B;&#x7ED3;&#x4E86;&#x6211;&#x4EEC;&#x7684;&#x4E3B;&#x8981;&#x8D21;&#x732E;&#xFF1A;</p><ol><li>&#x6211;&#x4EEC;&#x7CFB;&#x7EDF;&#x7684;&#x91CD;&#x65B0;&#x5BA1;&#x89C6;&#x4E86;&#x68C0;&#x6D4B;&#x5668;&#x7684;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;&#x3002;&#x6211;&#x4EEC;&#x7684;&#x7814;&#x7A76;&#x63ED;&#x9732;&#x4E86;&#x9650;&#x5236;&#x68C0;&#x6D4B;&#x5668;&#x6027;&#x80FD;&#x7684;&#x4E09;&#x4E2A;levels&#x4E0A;&#x7684;&#x4E0D;&#x5E73;&#x8861;&#x95EE;&#x9898;&#x3002;</li><li>&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;Libra R-CNN&#xFF0C;&#x4E00;&#x4E2A;&#x901A;&#x8FC7;&#x7ED3;&#x5408;&#x4E09;&#x4E2A;&#x7EC4;&#x4EF6;&#x6765;&#x91CD;&#x65B0;&#x5E73;&#x8861;&#x68C0;&#x6D4B;&#x5668;&#x7684;&#x6846;&#x67B6;&#x3002;</li><li>&#x6211;&#x4EEC;&#x5728;MS COCO&#x4E0A;&#x6D4B;&#x8BD5;&#x4E86;&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x7684;&#x6846;&#x67B6;&#xFF0C;&#x83B7;&#x5F97;&#x4E86;&#x5728;&#x5F53;&#x524D;&#x6700;&#x5148;&#x8FDB;&#x7684;&#x68C0;&#x6D4B;&#x5668;(&#x5305;&#x5E93;&#x5355;&#x9636;&#x6BB5;&#x4EE5;&#x53CA;&#x4E8C;&#x9636;&#x6BB5;)&#x4E0A;&#x7684;&#x663E;&#x8457;&#x63D0;&#x5347;&#x3002;</li></ol><h1 id="Related-Work"><a href="#Related-Work" class="headerlink" title="Related Work"></a>Related Work</h1><ul><li><strong>Model architectures for object detection</strong></li><li><strong>Balanced learning for object detection</strong><ul><li>Sample level imbalance</li><li>Feature level imbalance</li><li>Objective level imbalance</li></ul></li></ul><h1 id="Methodology"><a href="#Methodology" class="headerlink" title="Methodology"></a>Methodology</h1><p>Libra R-CNN&#x7684;&#x5168;&#x8C8C;&#x5982;&#x4E0B;&#xFF1A;<br><img src="/2019/08/02/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;7/2.png" alt><br>&#x6211;&#x4EEC;&#x7684;&#x76EE;&#x6807;&#x662F;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x6574;&#x4F53;&#x5E73;&#x8861;&#x7684;&#x8BBE;&#x8BA1;&#x6765;&#x51CF;&#x8F7B;&#x5728;&#x68C0;&#x6D4B;&#x5668;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;&#x4E2D;&#x5B58;&#x5728;&#x7684;&#x4E0D;&#x5E73;&#x8861;&#x95EE;&#x9898;&#xFF0C;&#x4ECE;&#x800C;&#x5C3D;&#x53EF;&#x80FD;&#x5229;&#x7528;&#x6A21;&#x578B;&#x7ED3;&#x6784;&#x7684;&#x6F5C;&#x5728;&#x80FD;&#x529B;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x4F1A;&#x8BE6;&#x7EC6;&#x4ECB;&#x7ECD;&#x6240;&#x6709;&#x7EC4;&#x4EF6;&#xFF1A;</p><h2 id="IoU-balanced-Sampling"><a href="#IoU-balanced-Sampling" class="headerlink" title="IoU-balanced Sampling"></a>IoU-balanced Sampling</h2><p>&#x9996;&#x5148;&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF1A;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x53CA;&#x5BF9;&#x5E94;ground truth&#x7684;&#x91CD;&#x53E0;&#x5EA6;IoU&#x662F;&#x5426;&#x4E0E;&#x6837;&#x672C;&#x7684;difficulty(&#x8FD9;&#x91CC;&#x7C7B;&#x6BD4;&#x4E8E;easy sample,hard sample)&#x76F8;&#x5173;&#x3002;&#x6211;&#x4EEC;&#x8FDB;&#x884C;&#x4E86;&#x5B9E;&#x9A8C;&#xFF0C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A;<br><img src="/2019/08/02/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;7/3.png" alt><br>&#x4ECE;&#x56FE;&#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x968F;&#x673A;&#x91C7;&#x6837;&#x8D85;&#x8FC7;70%&#x7684;&#x90E8;&#x5206;&#x90FD;&#x5728; IoU 0&#x5230;0.05&#x4E4B;&#x95F4;&#x3002;&#x800C;60%&#x7684;hard negative&#x6837;&#x672C;&#x90FD;&#x5728;IoU&#x5927;&#x4E8E;0.05&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x4F46;&#x968F;&#x673A;&#x91C7;&#x6837;&#x53EA;&#x63D0;&#x4F9B;&#x4E86;30%&#x7684;IoU&#x5927;&#x4E8E;0.05&#x7684;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x3002;&#x7531;&#x4E8E;&#x8FD9;&#x79CD;&#x6781;&#x5EA6;&#x7684;&#x4E0D;&#x5E73;&#x8861;&#xFF0C;&#x8BB8;&#x591A;&#x7684;hard&#x6837;&#x672C;&#x4F1A;&#x88AB;&#x6570;&#x4EE5;&#x5343;&#x8BA1;&#x7684;easy&#x6837;&#x672C;&#x57CB;&#x6CA1;&#x6389;&#x3002;<br>&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;IoU-balanced sampling&#xFF1A;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x4F46;&#x9AD8;&#x6548;&#x4E0D;&#x9700;&#x8981;&#x989D;&#x5916;&#x6D88;&#x8017;&#x7684;hard mining&#x65B9;&#x6CD5;&#x3002;&#x5047;&#x8BBE;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4ECE;M&#x4E2A;&#x5BF9;&#x5E94;&#x7684;&#x5019;&#x9009;&#x6837;&#x672C;&#x4E2D;&#x91C7;&#x6837;N&#x4E2A;negative&#x6837;&#x672C;&#x3002;&#x5728;&#x968F;&#x673A;&#x91C7;&#x6837;&#x4E0B;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x6837;&#x672C;&#x88AB;&#x91C7;&#x6837;&#x7684;&#x6982;&#x7387;&#x4E3A;&#xFF1A;</p><script type="math/tex; mode=display">p=\frac{N}{M}</script><p>&#x4E3A;&#x4E86;&#x63D0;&#x5347;&#x9009;&#x62E9;&#x5230;hard&#x6837;&#x672C;&#x7684;&#x53EF;&#x80FD;&#x6027;&#xFF0C;&#x6211;&#x4EEC;&#x6839;&#x636E;IoU&#x7684;&#x503C;&#x5C06;&#x91C7;&#x6837;&#x533A;&#x95F4;&#x5212;&#x5206;&#x4E3A;K&#x4E2A;&#x683C;&#x5B50;&#x3002;&#x8981;&#x6C42;negative&#x6837;&#x672C;&#x5747;&#x5300;&#x5206;&#x914D;&#x5230;&#x6BCF;&#x4E2A;&#x683C;&#x5B50;&#xFF0C;&#x7136;&#x540E;&#x5BF9;&#x5176;&#x8FDB;&#x884C;&#x5747;&#x5300;&#x91C7;&#x6837;&#x3002;&#x5F97;&#x5230;&#x7684;&#x91C7;&#x6837;&#x6982;&#x7387;&#x4E3A;&#xFF1A;</p><script type="math/tex; mode=display">p_k=\frac{N}{K}*\frac{1}{M_k},k\in[0,K)</script><p>$M_k$&#x4E3A;&#x5BF9;&#x5E94;&#x533A;&#x95F4;&#x4E0A;&#x7684;&#x5019;&#x9009;&#x91C7;&#x6837;&#x6570;&#x3002;&#x5728;&#x6211;&#x4EEC;&#x7684;&#x5B9E;&#x9A8C;&#x4E2D;K&#x9ED8;&#x8BA4;&#x53D6;&#x503C;&#x4E3A;3&#x3002;<br>&#x901A;&#x8FC7;&#x4E0A;&#x56FE;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x6211;&#x4EEC;&#x7684;IoU-balanced sampling&#x80FD;&#x591F;&#x4F7F;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x7684;&#x5206;&#x5E03;&#x8FD1;&#x4F3C;&#x4E8E;hard negative&#x6837;&#x672C;&#x7684;&#x5206;&#x5E03;&#x3002;<br>&#x53E6;&#x5916;&#xFF0C;&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x4E5F;&#x9002;&#x7528;&#x4E8E;hard positive&#x6837;&#x672C;&#x3002;&#x7136;&#x800C;&#x5728;&#x5927;&#x591A;&#x6570;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6CA1;&#x6709;&#x8DB3;&#x591F;&#x7684;&#x5019;&#x9009;&#x6837;&#x672C;&#xFF0C;&#x5BF9;&#x6B63;&#x6837;&#x672C;&#x8FDB;&#x884C;&#x6269;&#x5145;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x672C;&#x6587;&#x9009;&#x62E9;&#x4E86;&#x4E00;&#x4E2A;&#x66FF;&#x4EE3;&#x7684;&#x65B9;&#x6CD5;&#x6765;&#x8FBE;&#x5230;&#x5E73;&#x8861;&#x91C7;&#x6837;&#x7684;&#x76EE;&#x7684;&#xFF0C;&#x5373;&#x5BF9;&#x6BCF;&#x4E2A;ground truth&#x91C7;&#x6837;&#x76F8;&#x540C;&#x6570;&#x91CF;&#x7684;&#x6B63;&#x6837;&#x672C;&#x3002;</p><h2 id="Balanced-Feature-Pyramid"><a href="#Balanced-Feature-Pyramid" class="headerlink" title="Balanced Feature Pyramid"></a>Balanced Feature Pyramid</h2><p>&#x672C;&#x6587;&#x4E0D;&#x540C;&#x4E8E;&#x4EE5;&#x524D;&#x901A;&#x8FC7;&#x4FA7;&#x8FDE;&#x63A5;&#x7684;&#x65B9;&#x6CD5;&#x6765;&#x7ED3;&#x5408;&#x591A;&#x4E2A;&#x5C42;&#x7EA7;&#x7279;&#x5F81;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x672C;&#x6587;&#x901A;&#x8FC7;&#x4F7F;&#x7528;&#x76F8;&#x540C;&#x6DF1;&#x5EA6;&#x7684;&#x878D;&#x5408;&#x5E73;&#x8861;&#x540E;&#x7684;&#x8BED;&#x4E49;&#x4FE1;&#x606F;&#x6765;&#x589E;&#x5F3A;&#x4E0D;&#x540C;&#x5C42;&#x7EA7;&#x7684;&#x7279;&#x5F81;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF0C;&#x4E3B;&#x8981;&#x5305;&#x542B;&#x56DB;&#x6B65;&#xFF1A;rescaling,integrating,refining,strengthening<br><img src="/2019/08/02/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;7/4.png" alt></p><ul><li><p><strong>Obtaining balanced semantic features</strong><br>&#x4E3A;&#x4E86;&#x878D;&#x5408;&#x591A;&#x5C42;&#x6B21;&#x7684;&#x7279;&#x5F81;&#xFF0C;&#x540C;&#x65F6;&#x4FDD;&#x7559;&#x5B83;&#x4EEC;&#x7684;&#x8BED;&#x4E49;&#x5C42;&#x6B21;&#x3002;&#x6211;&#x4EEC;&#x9996;&#x5148;&#x7684;&#x591A;&#x5C42;&#x6B21;&#x7684;&#x7279;&#x5F81;$\lbrace C_2,C_3,C_4,C_5\rbrace$&#x7684;&#x5C3A;&#x5BF8;&#x901A;&#x8FC7;&#x63D2;&#x503C;&#x6216;&#x8005;&#x6700;&#x5927;&#x6C60;&#x5316;&#x6539;&#x53D8;&#x4E3A;&#x4E2D;&#x7B49;&#x5927;&#x5C0F;&#x3002;&#x7136;&#x540E;&#xFF0C;&#x53D6;&#x5176;&#x5747;&#x503C;&#x5F97;&#x5230;&#x5E73;&#x8861;&#x540E;&#x7684;&#x8BED;&#x4E49;&#x7279;&#x5F81;&#x3002;</p><script type="math/tex; mode=display">C=\frac{1}{L}\sum_{l=l_{min}}^{l_{max}}C_l</script><p>&#x5F97;&#x5230;&#x7684;&#x7279;&#x5F81;&#xFF0C;&#x8FDB;&#x884C;rescale&#x7136;&#x540E;&#x901A;&#x8FC7;&#x53CD;&#x5411;&#x64CD;&#x4F5C;&#x589E;&#x5F3A;&#x539F;&#x59CB;&#x6BCF;&#x5C42;&#x7684;&#x7279;&#x5F81;&#x3002;&#x5728;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x4E2D;&#x6BCF;&#x4E2A;&#x5206;&#x8FA8;&#x7387;&#x4ECE;&#x5176;&#x4ED6;&#x5206;&#x8FA8;&#x7387;&#x90A3;&#x91CC;&#x83B7;&#x5F97;&#x7B49;&#x540C;&#x7684;&#x4FE1;&#x606F;&#x3002;&#x6B64;&#x8FC7;&#x7A0B;&#x4E0D;&#x5305;&#x542B;&#x4EFB;&#x4F55;&#x53C2;&#x6570;&#xFF0C;&#x8BC1;&#x660E;&#x4E86;&#x4FE1;&#x606F;&#x4F20;&#x9012;&#x7684;&#x9AD8;&#x6548;&#x6027;&#x3002;</p></li><li><p><strong>Refining balanced semantic features</strong><br>&#x5E73;&#x8861;&#x540E;&#x7684;&#x8BED;&#x4E49;&#x7279;&#x5F81;&#x53EF;&#x4EE5;&#x8FDB;&#x4E00;&#x6B65;&#x589E;&#x5F3A;&#x589E;&#x52A0;&#x5176;&#x5206;&#x8FA8;&#x6027;&#x3002;&#x672C;&#x6587;&#x53D1;&#x73B0;&#x5377;&#x79EF;&#x548C;non-local &#x6A21;&#x578B;&#x7684;&#x589E;&#x5F3A;&#x6548;&#x679C;&#x90FD;&#x5F88;&#x597D;&#xFF0C;&#x4F46;&#x662F;non-local&#x6A21;&#x578B;&#x66F4;&#x52A0;&#x7A33;&#x5065;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x6211;&#x4EEC;&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;embeded Gaussian non-local attention&#x3002;refining&#x8FD9;&#x4E00;&#x6B65;&#x53EF;&#x4EE5;&#x8FDB;&#x4E00;&#x6B65;&#x7684;&#x4E30;&#x5BCC;&#x7279;&#x5F81;&#x4FE1;&#x606F;&#xFF0C;&#x8FDB;&#x800C;&#x63D0;&#x5347;&#x7ED3;&#x679C;&#x3002;&#x4F7F;&#x7528;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x6765;&#x81EA;low-level&#x4EE5;&#x53CA;high-level&#x7684;&#x7279;&#x5F81;&#x80FD;&#x591F;&#x540C;&#x65F6;&#x88AB;&#x878D;&#x5408;&#x3002;&#x878D;&#x5408;&#x540E;&#x5F97;&#x5230;&#x7684;&#x7279;&#x5F81;{P2,P3,P4,P5}&#x7528;&#x4E8E;&#x540E;&#x7EED;&#x7684;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x4E2D;&#xFF0C;&#x6D41;&#x7A0B;&#x548C;FPN&#x76F8;&#x540C;&#x3002;</p></li></ul><h2 id="Balanced-L1-Losss"><a href="#Balanced-L1-Losss" class="headerlink" title="Balanced L1 Losss"></a>Balanced L1 Losss</h2><p><img src="/2019/08/02/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;7/5.png" alt></p><p>&#x4ECE;Fast R-CNN&#x5F00;&#x59CB;&#xFF0C;&#x5206;&#x7C7B;&#x4EE5;&#x53CA;&#x5B9A;&#x4F4D;&#x7684;&#x95EE;&#x9898;&#x5728;multi-task&#x635F;&#x5931;&#x7684;&#x6307;&#x5BFC;&#x4E0B;&#x540C;&#x65F6;&#x89E3;&#x51B3;&#x3002;</p><script type="math/tex; mode=display">L_{p,u,t^u,v}=L_{cls}(p,u)+\lambda[u\geq 1]L_{loc}(t^u,v)</script><p>$L_{cls}$&#x548C;$L_{loc}$&#x5206;&#x522B;&#x5BF9;&#x5E94;&#x7740;&#x5206;&#x7C7B;&#x548C;&#x5B9A;&#x4F4D;&#x7684;&#x635F;&#x5931;&#x51FD;&#x6570;&#xFF0C;$p,u$&#x5206;&#x522B;&#x662F;$L_{cls}$&#x7684;&#x9884;&#x6D4B;&#x548C;&#x76EE;&#x6807;&#xFF0C;$t^u$&#x662F;&#x5BF9;&#x5E94;$u$&#x7C7B;&#x7684;&#x56DE;&#x5F52;&#x7ED3;&#x679C;&#x3002;$v$&#x662F;&#x56DE;&#x5F52;&#x76EE;&#x6807;&#x3002;$\lambda$&#x7528;&#x4E8E;&#x5728;&#x591A;&#x4EFB;&#x52A1;&#x5B66;&#x4E60;&#x4E0B;&#x8C03;&#x6574;&#x635F;&#x5931;&#x6743;&#x91CD;&#x3002;&#x6211;&#x4EEC;&#x628A;loss&#x5927;&#x4E8E;&#x7B49;&#x4E8E;1.0&#x7684;&#x6837;&#x672C;&#x79F0;&#x4E3A;outliers&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x6837;&#x672C;&#x79F0;&#x4E3A;inliers&#x3002;</p><p>&#x7531;&#x4E8E;&#x8FD9;&#x4E2A;&#x635F;&#x5931;&#x51FD;&#x6570;&#x662F;&#x4E24;&#x4E2A;loss&#x7684;&#x76F8;&#x52A0;&#xFF0C;&#x5982;&#x679C;&#x5206;&#x7C7B;&#x505A;&#x5F97;&#x5F88;&#x597D;&#x5730;&#x8BDD;&#x4E00;&#x6837;&#x4F1A;&#x5F97;&#x5230;&#x5F88;&#x9AD8;&#x7684;&#x5206;&#x6570;&#xFF0C;&#x800C;&#x5BFC;&#x81F4;&#x5FFD;&#x7565;&#x4E86;&#x56DE;&#x5F52;&#x7684;&#x91CD;&#x8981;&#x6027;&#x3002;&#x5E73;&#x8861;&#x4E0A;&#x8FF0;&#x635F;&#x5931;&#x7684;&#x4E00;&#x4E2A;&#x5E38;&#x89C4;&#x65B9;&#x6CD5;&#x662F;&#xFF0C;&#x8C03;&#x6574;&#x4E24;&#x4E2A;&#x4EFB;&#x52A1;&#x635F;&#x5931;&#x7684;&#x6743;&#x91CD;&#xFF0C;&#x7136;&#x800C;&#xFF0C;&#x5BF9;&#x4E8E;&#x6CA1;&#x6709;&#x8FB9;&#x754C;&#x7684;&#x56DE;&#x5F52;&#x76EE;&#x6807;&#xFF0C;&#x76F4;&#x63A5;&#x589E;&#x52A0;&#x5B9A;&#x4F4D;&#x635F;&#x5931;&#x7684;&#x6743;&#x91CD;&#x5C06;&#x4F1A;&#x662F;&#x6A21;&#x578B;&#x5BF9;outliers&#x7684;&#x70B9;&#x66F4;&#x52A0;&#x654F;&#x611F;&#xFF0C;outliers&#x53EF;&#x4EE5;&#x88AB;&#x770B;&#x4F5C;&#x662F;hard samples&#xFF0C;&#x8FD9;&#x4E9B;hard samples&#x53EF;&#x80FD;&#x4F1A;&#x4EA7;&#x751F;&#x8FC7;&#x5927;&#x7684;&#x635F;&#x5931;&#xFF0C;&#x4E0D;&#x5229;&#x4E8E;&#x8BAD;&#x7EC3;&#x3002;inliers&#x53EF;&#x4EE5;&#x770B;&#x4F5C;&#x662F;easy samples&#xFF0C;&#x76F8;&#x6BD4;outliners&#x5BF9;&#x6574;&#x4F53;&#x7684;&#x68AF;&#x5EA6;&#x8D21;&#x732E;&#x5EA6;&#x8F83;&#x4F4E;&#xFF0C;&#x76F8;&#x6BD4;hard sample&#xFF0C;&#x5E73;&#x5747;&#x6BCF;&#x4E2A;&#xFF0C;easy sample&#x5BF9;&#x68AF;&#x5EA6;&#x7684;&#x8D21;&#x732E;&#x4E3A;hard sample&#x7684;30%&#xFF0C;&#x5373;&#x8F83;&#x5C11;&#x7684;outliers&#x8D21;&#x732E;&#x4E86;&#x8F83;&#x591A;&#x7684;&#x68AF;&#x5EA6;&#x3002;&#x57FA;&#x4E8E;&#x4E0A;&#x8FF0;&#x5206;&#x6790;&#xFF0C;&#x63D0;&#x51FA;&#x4E86;balanced L1 Loss&#x8BB0;&#x4F5C;$L_b$&#x3002;</p><p>Balanced L1 loss&#x6E90;&#x81EA;conventional smooth L1 loss&#x3002;&#x5728;conventional smooth L1 loss&#x4E2D;&#x6709;&#x4E00;&#x4E2A;&#x62D0;&#x70B9;&#x6765;&#x5206;&#x79BB;inliners&#x548C;outliners,&#x5E76;&#x4E14;&#x901A;&#x8FC7;&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x4E3A;1.0&#x7684;&#x6700;&#x5927;&#x503C;&#x6765;&#x622A;&#x65AD;outliners&#x4EA7;&#x751F;&#x7684;&#x5927;&#x7684;&#x68AF;&#x5EA6;&#x3002;Balanced L1 loss&#x7684;&#x5173;&#x952E;&#x601D;&#x60F3;&#x662F;&#xFF0C;&#x4FC3;&#x8FDB;&#x5F71;&#x54CD;&#x8F83;&#x5927;&#x7684;&#x56DE;&#x5F52;&#x68AF;&#x5EA6;&#xFF0C;&#xFF08;&#x50CF;&#x6765;&#x81EA;inliers&#x5373;&#x51C6;&#x786E;&#x6837;&#x672C;&#x7684;&#x68AF;&#x5EA6;&#xFF09;&#x3002;&#x8FDB;&#x800C;&#x5E73;&#x8861;&#x5305;&#x542B;&#x7684;&#x6837;&#x672C;&#x53CA;&#x4EFB;&#x52A1;&#x3002;&#x4ECE;&#x800C;&#x53EF;&#x4EE5;&#x5728;&#x5206;&#x7C7B;&#xFF0C;&#x7C97;&#x5B9A;&#x4F4D;&#xFF0C;&#x53CA;&#x7EC6;&#x5B9A;&#x4F4D;&#x4E2D;&#x8FDB;&#x884C;&#x5E73;&#x8861;&#x7684;&#x8BAD;&#x7EC3;&#x3002;&#xFF0C;&#x57FA;&#x4E8E;balanced L1 loss&#x7684;&#x5B9A;&#x4F4D;&#x635F;&#x5931;&#x5982;&#x4E0B;&#xFF1A;</p><script type="math/tex; mode=display">L_{loc}=\sum_{i\in\lbrace x,y,w,h\rbrace}L_b(t_i^u-v_i)</script><p>&#x5176;&#x5BF9;&#x5E94;&#x7684;&#x68AF;&#x5EA6;&#x516C;&#x5F0F;&#x9075;&#x5FAA;&#xFF1A;</p><script type="math/tex; mode=display">\frac{\partial L_{loc}}{\partial w}\varpropto\frac{\partial L_b}{\partial t_i^u}\varpropto\frac{\partial L_b}{\partial x}</script><p>&#x57FA;&#x4E8E;&#x4E0A;&#x5F0F;&#xFF0C;&#x6211;&#x4EEC;&#x8BBE;&#x8BA1;&#x4E86;&#x4E00;&#x4E2A;&#x68AF;&#x5EA6;&#x516C;&#x5F0F;&#xFF1A;</p><script type="math/tex; mode=display">\frac{L_b}{x} = \left \{  \begin{array}{lr}    \alpha ln(b|x|+1) & if|x|<1 \\    \gamma            & otherwise  \end{array}\right.</script><p>&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x4F5C;&#x7528;&#xFF1A;</p><ul><li>$\alpha$ &#x4F7F;&#x5F97;inliers&#x83B7;&#x5F97;&#x66F4;&#x591A;&#x7684;&#x68AF;&#x5EA6;(&#x56E0;&#x4E3A;&#x539F;&#x5148;&#x7684;easy&#x6837;&#x672C;&#x8D21;&#x732E;&#x7684;&#x68AF;&#x5EA6;&#x5C11;)</li><li>$\gamma$ &#x901A;&#x8FC7;&#x6574;&#x4F53;&#x653E;&#x5927;&#x6765;&#x9676;&#x6B63;&#x56DE;&#x5F52;&#x8BEF;&#x5DEE;&#x7684;&#x4E0A;&#x9650;&#xFF0C;&#x8BA9;&#x66F4;&#x591A;&#x7684;outliers&#x53C2;&#x4E0E;&#x56DE;&#x5F52;&#xFF0C;&#x4F7F;&#x5F97;&#x76EE;&#x6807;&#x51FD;&#x6570;&#x66F4;&#x597D;&#x5730;&#x5E73;&#x8861;&#x53C2;&#x4E0E;&#x7684;&#x4EFB;&#x52A1;</li><li>$b$ &#x7528;&#x6765;&#x5E73;&#x5F88;&#x53C2;&#x6570;$\alpha$&#x548C;$\gamma$&#xFF0C;&#x4F7F;&#x4E4B;&#x6EE1;&#x8DB3;&#x5173;&#x7CFB;&#xFF1A;$\alpha ln(b+1)=\gamma$&#xFF0C;&#x4F7F;&#x5F97;&#x68AF;&#x5EA6;&#x5728;&#x8BEF;&#x5DEE;&#x7B49;&#x4E8E;1&#x5904;&#x8FDE;&#x7EED;</li></ul><p>&#x6700;&#x540E;&#x5F97;&#x5230;balanced L1 loss&#x5982;&#x4E0B;:</p><script type="math/tex; mode=display">L_b(x) = \left\{  \begin{array}{lr}    \frac{\alpha}{b}(b|x|+1)ln(b|x|+1)-\alpha|x| & if |x|<1 \\    \gamma|x|+C & otherwise  \end{array}\right.</script><h1 id="Experiments"><a href="#Experiments" class="headerlink" title="Experiments"></a>Experiments</h1><p><img src="/2019/08/02/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;7/6.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 目标检测 </tag>
            
            <tag> R-CNN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>滑动平均(exponential moving average)</title>
      <link href="/2019/08/02/exponential-moving-average/"/>
      <url>/2019/08/02/exponential-moving-average/</url>
      
        <content type="html"><![CDATA[<h1 id="&#x6ED1;&#x52A8;&#x5E73;&#x5747;"><a href="#&#x6ED1;&#x52A8;&#x5E73;&#x5747;" class="headerlink" title="&#x6ED1;&#x52A8;&#x5E73;&#x5747;"></a>&#x6ED1;&#x52A8;&#x5E73;&#x5747;</h1><h2 id="&#x4EC0;&#x4E48;&#x662F;&#x6ED1;&#x52A8;&#x5E73;&#x5747;"><a href="#&#x4EC0;&#x4E48;&#x662F;&#x6ED1;&#x52A8;&#x5E73;&#x5747;" class="headerlink" title="&#x4EC0;&#x4E48;&#x662F;&#x6ED1;&#x52A8;&#x5E73;&#x5747;"></a>&#x4EC0;&#x4E48;&#x662F;&#x6ED1;&#x52A8;&#x5E73;&#x5747;</h2><p>&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x6CD5;&#x662F;&#x7528;&#x4E00;&#x7EC4;&#x6700;&#x8FD1;&#x7684;&#x5B9E;&#x9645;&#x6570;&#x636E;&#x503C;&#x6765;&#x9884;&#x6D4B;&#x672A;&#x6765;&#x4E00;&#x671F;&#x6216;&#x51E0;&#x671F;&#x5185;&#x516C;&#x53F8;&#x4EA7;&#x54C1;&#x7684;&#x9700;&#x6C42;&#x91CF;&#x3001;&#x516C;&#x53F8;&#x4EA7;&#x80FD;&#x7B49;&#x7684;&#x4E00;&#x79CD;&#x5E38;&#x7528;&#x65B9;&#x6CD5;&#x3002;&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x6CD5;&#x9002;&#x7528;&#x4E8E;&#x5373;&#x671F;&#x9884;&#x6D4B;&#x3002;&#x5F53;&#x4EA7;&#x54C1;&#x9700;&#x6C42;&#x65E2;&#x4E0D;&#x5FEB;&#x901F;&#x589E;&#x957F;&#x4E5F;&#x4E0D;&#x5FEB;&#x901F;&#x4E0B;&#x964D;&#xFF0C;&#x4E14;&#x4E0D;&#x5B58;&#x5728;&#x5B63;&#x8282;&#x6027;&#x56E0;&#x7D20;&#x65F6;&#xFF0C;&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x6CD5;&#x80FD;&#x6709;&#x6548;&#x5730;&#x6D88;&#x9664;&#x9884;&#x6D4B;&#x4E2D;&#x7684;&#x968F;&#x673A;&#x6CE2;&#x52A8;&#xFF0C;&#x662F;&#x975E;&#x5E38;&#x6709;&#x7528;&#x7684;&#x3002;&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x6CD5;&#x6839;&#x636E;&#x9884;&#x6D4B;&#x65F6;&#x4F7F;&#x7528;&#x7684;&#x5404;&#x5143;&#x7D20;&#x7684;&#x6743;&#x91CD;&#x4E0D;&#x540C;</p><p>&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x6CD5;&#x662F;&#x4E00;&#x79CD;&#x7B80;&#x5355;&#x5E73;&#x6ED1;&#x9884;&#x6D4B;&#x6280;&#x672F;&#xFF0C;&#x5B83;&#x7684;&#x57FA;&#x672C;&#x601D;&#x60F3;&#x662F;&#xFF1A;&#x6839;&#x636E;&#x65F6;&#x95F4;&#x5E8F;&#x5217;&#x8D44;&#x6599;&#x3001;&#x9010;&#x9879;&#x63A8;&#x79FB;&#xFF0C;&#x4F9D;&#x6B21;&#x8BA1;&#x7B97;&#x5305;&#x542B;&#x4E00;&#x5B9A;&#x9879;&#x6570;&#x7684;&#x5E8F;&#x65F6;&#x5E73;&#x5747;&#x503C;&#xFF0C;&#x4EE5;&#x53CD;&#x6620;&#x957F;&#x671F;&#x8D8B;&#x52BF;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5F53;&#x65F6;&#x95F4;&#x5E8F;&#x5217;&#x7684;&#x6570;&#x503C;&#x7531;&#x4E8E;&#x53D7;&#x5468;&#x671F;&#x53D8;&#x52A8;&#x548C;&#x968F;&#x673A;&#x6CE2;&#x52A8;&#x7684;&#x5F71;&#x54CD;&#xFF0C;&#x8D77;&#x4F0F;&#x8F83;&#x5927;&#xFF0C;&#x4E0D;&#x6613;&#x663E;&#x793A;&#x51FA;&#x4E8B;&#x4EF6;&#x7684;&#x53D1;&#x5C55;&#x8D8B;&#x52BF;&#x65F6;&#xFF0C;&#x4F7F;&#x7528;&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x6CD5;&#x53EF;&#x4EE5;&#x6D88;&#x9664;&#x8FD9;&#x4E9B;&#x56E0;&#x7D20;&#x7684;&#x5F71;&#x54CD;&#xFF0C;&#x663E;&#x793A;&#x51FA;&#x4E8B;&#x4EF6;&#x7684;&#x53D1;&#x5C55;&#x65B9;&#x5411;&#x4E0E;&#x8D8B;&#x52BF;&#xFF08;&#x5373;&#x8D8B;&#x52BF;&#x7EBF;&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x4F9D;&#x8D8B;&#x52BF;&#x7EBF;&#x5206;&#x6790;&#x9884;&#x6D4B;&#x5E8F;&#x5217;&#x7684;&#x957F;&#x671F;&#x8D8B;&#x52BF;&#x3002;</p><a id="more"></a><h2 id="&#x7528;&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x4F30;&#x8BA1;&#x5C40;&#x90E8;&#x5747;&#x503C;"><a href="#&#x7528;&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x4F30;&#x8BA1;&#x5C40;&#x90E8;&#x5747;&#x503C;" class="headerlink" title="&#x7528;&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x4F30;&#x8BA1;&#x5C40;&#x90E8;&#x5747;&#x503C;"></a>&#x7528;&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x4F30;&#x8BA1;&#x5C40;&#x90E8;&#x5747;&#x503C;</h2><p>&#x53D8;&#x91CF;$v$&#x5728;$t$&#x65F6;&#x523B;&#x8BB0;&#x4E3A;$v_t$&#xFF0C;$\theta_t$&#x4E3A;&#x53D8;&#x91CF;$v$&#x5728;$t$&#x65F6;&#x523B;&#x7684;&#x53D6;&#x503C;&#xFF0C;&#x5373;&#x5728;&#x4E0D;&#x4F7F;&#x7528;&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x6A21;&#x578B;&#x65F6;$v_t=\theta_t$&#xFF0C;&#x5728;&#x4F7F;&#x7528;&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x6A21;&#x578B;&#x540E;&#xFF0C;$v_t$&#x7684;&#x66F4;&#x65B0;&#x516C;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A;</p><script type="math/tex; mode=display">v_t=\beta\cdot v_{t-1}+(1-\beta)\cdot\theta_t</script><p>&#x4E0A;&#x5F0F;&#x4E2D;&#xFF0C;$\beta\in[0,1)$&#x3002;$\beta=0$&#x76F8;&#x5F53;&#x4E8E;&#x6CA1;&#x6709;&#x4F7F;&#x7528;&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x3002;<br>Andrew Ng&#x5728;Course 2 Improving Deep Neural Networks&#x4E2D;&#x8BB2;&#x5230;$t$&#x65F6;&#x523B;&#x53D8;&#x91CF;$v$&#x7684;&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x503C;&#x5927;&#x81F4;&#x7B49;&#x4E8E;&#x8FC7;&#x53BB;$\frac{1}{1-\beta}$&#x4E2A;&#x65F6;&#x523B;$&#x3B8;$&#x503C;&#x7684;&#x5E73;&#x5747;&#x3002;&#x8FD9;&#x4E2A;&#x7ED3;&#x8BBA;&#x5728;&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x8D77;&#x59CB;&#x65F6;&#x76F8;&#x5DEE;&#x6BD4;&#x8F83;&#x5927;&#xFF0C;&#x6240;&#x4EE5;&#x6709;&#x4E86;Bias correction&#xFF0C;&#x5C06;$vt$&#x9664;&#x4EE5;$(1&#x2212;&#x3B2;^t)$&#x4FEE;&#x6B63;&#x5BF9;&#x5747;&#x503C;&#x7684;&#x4F30;&#x8BA1;&#x3002;<br>&#x52A0;&#x5165;&#x4E86;Bias correction&#x540E;&#xFF0C;&#x66F4;&#x65B0;&#x516C;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A;</p><script type="math/tex; mode=display">v_t=\beta\cdot v_{t-1}+(1-\beta)\cdot\theta_t</script><script type="math/tex; mode=display">v\_{biased}_t=\frac{v_t}{1-\beta^t}</script><p>$t$&#x8D8A;&#x5927;&#xFF0C;$1-\beta^t$&#x8D8A;&#x63A5;&#x8FD1;1&#xFF0C;&#x5219;&#x4E24;&#x8005;&#x5C06;&#x4F1A;&#x8D8A;&#x6765;&#x8D8A;&#x63A5;&#x8FD1;&#x3002;<br>&#x5F53;$\beta$&#x8D8A;&#x5927;&#x65F6;&#xFF0C;&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x5F97;&#x5230;&#x7684;&#x503C;&#x8D8A;&#x548C;$\theta$&#x7684;&#x5386;&#x53F2;&#x503C;&#x76F8;&#x5173;&#x3002;&#x82E5;$\beta=0.9$&#xFF0C;&#x5219;&#x5927;&#x81F4;&#x7B49;&#x4E8E;&#x8FC7;&#x53BB;10&#x4E2A;$\theta$&#x503C;&#x7684;&#x5E73;&#x5747;&#xFF1B;&#x82E5;$\beta=0.99$&#xFF0C;&#x5219;&#x5927;&#x81F4;&#x7B49;&#x4E8E;&#x8FC7;&#x53BB;100&#x4E2A;$\theta$&#x503C;&#x7684;&#x5E73;&#x5747;&#x3002;</p><h2 id="&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x7684;&#x597D;&#x5904;&#xFF1A;"><a href="#&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x7684;&#x597D;&#x5904;&#xFF1A;" class="headerlink" title="&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x7684;&#x597D;&#x5904;&#xFF1A;"></a>&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x7684;&#x597D;&#x5904;&#xFF1A;</h2><p>&#x5360;&#x5185;&#x5B58;&#x5C11;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x4FDD;&#x5B58;&#x8FC7;&#x53BB;10&#x4E2A;&#x6216;&#x8005;100&#x4E2A;&#x5386;&#x53F2; &#x3B8; &#x503C;&#xFF0C;&#x5C31;&#x80FD;&#x591F;&#x4F30;&#x8BA1;&#x5176;&#x5747;&#x503C;&#x3002;&#xFF08;&#x5F53;&#x7136;&#xFF0C;&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x4E0D;&#x5982;&#x5C06;&#x5386;&#x53F2;&#x503C;&#x5168;&#x4FDD;&#x5B58;&#x4E0B;&#x6765;&#x8BA1;&#x7B97;&#x5747;&#x503C;&#x51C6;&#x786E;&#xFF0C;&#x4F46;&#x540E;&#x8005;&#x5360;&#x7528;&#x66F4;&#x591A;&#x5185;&#x5B58;&#x548C;&#x8BA1;&#x7B97;&#x6210;&#x672C;&#x66F4;&#x9AD8;&#xFF09;&#xFF0C;&#x540C;&#x65F6;&#x4F7F;&#x7528;&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x6CD5;&#x8FDB;&#x884C;&#x9884;&#x6D4B;&#x80FD;&#x5E73;&#x6ED1;&#x6389;&#x9700;&#x6C42;&#x7684;&#x7A81;&#x7136;&#x6CE2;&#x52A8;&#x5BF9;&#x9884;&#x6D4B;&#x7ED3;&#x679C;&#x7684;&#x5F71;&#x54CD;&#x3002;</p><h1 id="tf-train-ExponentialMovingAverage"><a href="#tf-train-ExponentialMovingAverage" class="headerlink" title="tf.train.ExponentialMovingAverage"></a>tf.train.ExponentialMovingAverage</h1><h2 id="&#x51FD;&#x6570;&#x5B9A;&#x4E49;"><a href="#&#x51FD;&#x6570;&#x5B9A;&#x4E49;" class="headerlink" title="&#x51FD;&#x6570;&#x5B9A;&#x4E49;"></a>&#x51FD;&#x6570;&#x5B9A;&#x4E49;</h2><p>tensorflow&#x4E2D;&#x63D0;&#x4F9B;&#x4E86;tf.train.ExponentialMovingAverage&#x6765;&#x5B9E;&#x73B0;&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x6A21;&#x578B;&#xFF0C;&#x4ED6;&#x4F7F;&#x7528;&#x6307;&#x6570;&#x8870;&#x51CF;&#x6765;&#x8BA1;&#x7B97;&#x53D8;&#x91CF;&#x7684;&#x79FB;&#x52A8;&#x5E73;&#x5747;&#x503C;&#x3002;</p><pre><code>tf.train.ExponentialMovingAverage.__init__(self, decay, num_updates=None, zero_debias=False, name=&quot;ExponentialMovingAverage&quot;)</code></pre><p>&#x51FD;&#x6570;&#x4ECB;&#x7ECD;&#xFF1A;</p><ul><li>decay &#x662F;&#x8870;&#x51CF;&#x7387;&#x5728;&#x521B;&#x5EFA;ExponentialMovingAverage&#x5BF9;&#x8C61;&#x65F6;&#xFF0C;&#x9700;&#x6307;&#x5B9A;&#x8870;&#x51CF;&#x7387;&#xFF08;decay&#xFF09;&#xFF0C;&#x7528;&#x4E8E;&#x63A7;&#x5236;&#x6A21;&#x578B;&#x7684;&#x66F4;&#x65B0;&#x901F;&#x5EA6;&#x3002;&#x5F71;&#x5B50;&#x53D8;&#x91CF;&#x7684;&#x521D;&#x59CB;&#x503C;&#x4E0E;&#x8BAD;&#x7EC3;&#x53D8;&#x91CF;&#x7684;&#x521D;&#x59CB;&#x503C;&#x76F8;&#x540C;&#x3002;&#x5F53;&#x8FD0;&#x884C;&#x53D8;&#x91CF;&#x66F4;&#x65B0;&#x65F6;&#xFF0C;&#x6BCF;&#x4E2A;&#x5F71;&#x5B50;&#x53D8;&#x91CF;&#x90FD;&#x4F1A;&#x66F4;&#x65B0;&#x4E3A;&#xFF1A;<script type="math/tex; mode=display">shadow\_variable=decay*shadow\_variable+(1-decay)*variable</script>$shadow_variable$&#x5C31;&#x662F;&#x4E0A;&#x5F0F;&#x4E2D;&#x7684;$v_t$&#xFF0C;$variable$&#x5C31;&#x662F;&#x4E0A;&#x5F0F;&#x4E2D;&#x7684;$\theta_t$&#xFF0C;$decay$&#x5C31;&#x662F;&#x4E0A;&#x5F0F;&#x4E2D;&#x7684;$\beta$&#x3002;decay &#x51B3;&#x5B9A;&#x4E86;&#x5F71;&#x5B50;&#x53D8;&#x91CF;&#x7684;&#x66F4;&#x65B0;&#x901F;&#x5EA6;&#xFF0C;decay &#x8D8A;&#x5927;&#x5F71;&#x5B50;&#x53D8;&#x91CF;&#x8D8A;&#x8D8B;&#x4E8E;&#x7A33;&#x5B9A;&#x3002;&#x5728;&#x5B9E;&#x9645;&#x8FD0;&#x7528;&#x4E2D;&#xFF0C;decay&#x4E00;&#x822C;&#x4F1A;&#x8BBE;&#x6210;&#x975E;&#x5E38;&#x63A5;&#x8FD1; 1 &#x7684;&#x6570;&#xFF08;&#x6BD4;&#x5982;0.999&#x6216;0.9999&#xFF09;&#x3002;</li><li>num_updates &#x662F;ExponentialMovingAverage&#x63D0;&#x4F9B;&#x7528;&#x6765;&#x52A8;&#x6001;&#x8BBE;&#x7F6E;decay&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x5F53;&#x521D;&#x59CB;&#x5316;&#x65F6;&#x63D0;&#x4F9B;&#x4E86;&#x53C2;&#x6570;&#xFF0C;&#x5373;&#x4E0D;&#x4E3A;none&#x65F6;&#xFF0C;&#x6BCF;&#x6B21;&#x7684;&#x8870;&#x51CF;&#x7387;&#x662F;&#xFF1A;<script type="math/tex; mode=display">min\lbrace decay,\frac{1+num\_updates}{10+num\_updates}\rbrace</script>&#x8FD9;&#x4E00;&#x70B9;&#x5176;&#x5B9E;&#x548C;Bias correction&#x5F88;&#x50CF;</li><li>apply() &#x65B9;&#x6CD5;&#x6DFB;&#x52A0;&#x4E86;&#x8BAD;&#x7EC3;&#x53D8;&#x91CF;&#x7684;&#x5F71;&#x5B50;&#x526F;&#x672C;&#xFF0C;&#x5E76;&#x4FDD;&#x6301;&#x4E86;&#x5176;&#x5F71;&#x5B50;&#x526F;&#x672C;&#x4E2D;&#x8BAD;&#x7EC3;&#x53D8;&#x91CF;&#x7684;&#x79FB;&#x52A8;&#x5E73;&#x5747;&#x503C;&#x64CD;&#x4F5C;&#x3002;&#x5728;&#x6BCF;&#x6B21;&#x8BAD;&#x7EC3;&#x4E4B;&#x540E;&#x8C03;&#x7528;&#x6B64;&#x64CD;&#x4F5C;&#xFF0C;&#x66F4;&#x65B0;&#x79FB;&#x52A8;&#x5E73;&#x5747;&#x503C;&#x3002;</li><li>average()&#x548C;average_name() &#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x5F71;&#x5B50;&#x53D8;&#x91CF;&#x53CA;&#x5176;&#x540D;&#x79F0;&#x3002;</li></ul><h2 id="&#x4F8B;&#x5B50;"><a href="#&#x4F8B;&#x5B50;" class="headerlink" title="&#x4F8B;&#x5B50;"></a>&#x4F8B;&#x5B50;</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">import tensorflow as tf</span><br><span class="line"></span><br><span class="line"># &#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#xFF0C;&#x521D;&#x59CB;&#x503C;&#x4E3A;0</span><br><span class="line">v1 = tf.Variable(0, dtype=tf.float32)</span><br><span class="line"># step&#x4E3A;&#x8FED;&#x4EE3;&#x8F6E;&#x6570;&#x53D8;&#x91CF;&#xFF0C;&#x63A7;&#x5236;&#x8870;&#x51CF;&#x7387;</span><br><span class="line">step = tf.Variable(0, trainable=False)</span><br><span class="line"># &#x521D;&#x59CB;&#x8BBE;&#x5B9A;&#x8870;&#x51CF;&#x7387;&#x4E3A;0.99</span><br><span class="line">ema = tf.train.ExponentialMovingAverage(0.99, step)</span><br><span class="line"># &#x66F4;&#x65B0;&#x5217;&#x8868;&#x4E2D;&#x7684;&#x53D8;&#x91CF;</span><br><span class="line">maintain_averages_op = ema.apply([v1])</span><br><span class="line">with tf.Session() as sess:</span><br><span class="line">    # &#x521D;&#x59CB;&#x5316;&#x6240;&#x6709;&#x53D8;&#x91CF;</span><br><span class="line">    init_op = tf.initialize_all_variables()</span><br><span class="line">    sess.run(init_op)</span><br><span class="line">    # &#x8F93;&#x51FA;&#x521D;&#x59CB;&#x5316;&#x540E;&#x53D8;&#x91CF;v1&#x7684;&#x503C;&#x548C;v1&#x7684;&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x503C;</span><br><span class="line">    print(sess.run([v1, ema.average(v1)]))</span><br><span class="line">    # &#x66F4;&#x65B0;v1&#x7684;&#x503C;</span><br><span class="line">    sess.run(tf.assign(v1, 5))</span><br><span class="line">    # &#x66F4;&#x65B0;v1&#x7684;&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x503C;</span><br><span class="line">    sess.run(maintain_averages_op)</span><br><span class="line">    print(sess.run([v1, ema.average(v1)]))</span><br><span class="line">    # &#x66F4;&#x65B0;&#x8FED;&#x4EE3;&#x8F6E;&#x8F6C;&#x6570;step</span><br><span class="line">    sess.run(tf.assign(step, 10000))</span><br><span class="line">    sess.run(tf.assign(v1, 10))</span><br><span class="line">    sess.run(maintain_averages_op)</span><br><span class="line">    print(sess.run([v1, ema.average(v1)]))</span><br><span class="line">    # &#x518D;&#x6B21;&#x66F4;&#x65B0;&#x6ED1;&#x52A8;&#x5E73;&#x5747;&#x503C;&#xFF0C;</span><br><span class="line">    sess.run(maintain_averages_op)</span><br><span class="line">    print(sess.run([v1, ema.average(v1)]))</span><br><span class="line">    # &#x66F4;&#x65B0;v1&#x7684;&#x503C;&#x4E3A;15</span><br><span class="line">    sess.run(tf.assign(v1, 15))</span><br><span class="line">    sess.run(maintain_averages_op)</span><br><span class="line">    print(sess.run([v1, ema.average(v1)]))</span><br></pre></td></tr></table></figure><p>&#x8F93;&#x51FA;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[0.0, 0.0]</span><br><span class="line">[5.0, 4.5]</span><br><span class="line">[10.0, 4.555]</span><br><span class="line">[10.0, 4.60945]</span><br><span class="line">[15.0, 4.713355]</span><br></pre></td></tr></table></figure></p><p>&#x5206;&#x6790;&#xFF1A;</p><script type="math/tex; mode=display">decay=min(0.99,\frac{1+0.0}{10+0.0})=0.1,shadow\_variable=0.1*0.0+(1-0.1)*0.0=0.0</script><script type="math/tex; mode=display">decay=min(0.99,\frac{1+0.0}{10+0.0})=0.1,shadow\_variable=0.1*0.0+(1-0.1)*5.0=4.5</script><script type="math/tex; mode=display">decay=min(0.99,\frac{1+1000}{10+1000})=0.99,shadow\_variable=0.99*4.5+(1-0.99)*10=4.555</script><script type="math/tex; mode=display">decay=min(0.99,\frac{1+1000}{10+1000})=0.99,shadow\_variable=0.99*4.555+(1-0.99)*10=4.60945</script><script type="math/tex; mode=display">decay=min(0.99,\frac{1+1000}{10+1000})=0.99,shadow\_variable=0.99*4.60945+(1-0.99)*15=4.713355</script><blockquote><p>&#x53C2;&#x8003;&#xFF1A;<br><a href="https://www.cnblogs.com/wuliytTaotao/p/9479958.html" target="_blank" rel="noopener">https://www.cnblogs.com/wuliytTaotao/p/9479958.html</a><br><a href="https://www.cnblogs.com/cloud-ken/p/7521609.html" target="_blank" rel="noopener">https://www.cnblogs.com/cloud-ken/p/7521609.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TensorFlow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文阅读笔记6：Gradient Harmonized Single-stage Detector</title>
      <link href="/2019/08/01/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B06/"/>
      <url>/2019/08/01/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B06/</url>
      
        <content type="html"><![CDATA[<blockquote><p>&#x8BBA;&#x6587;&#x5730;&#x5740;&#xFF1A;<a href="https://arxiv.org/pdf/1811.05181.pdf" target="_blank" rel="noopener">https://arxiv.org/pdf/1811.05181.pdf</a><br>&#x4EE3;&#x7801;&#x5730;&#x5740;&#xFF1A;<a href="https://github.com/libuyu/GHM_Detection" target="_blank" rel="noopener">https://github.com/libuyu/GHM_Detection</a></p></blockquote><h1 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h1><p>&#x5C3D;&#x7BA1;&#x5355;&#x9636;&#x6BB5;&#x7684;&#x68C0;&#x6D4B;&#x5668;&#x901F;&#x5EA6;&#x8F83;&#x5FEB;&#xFF0C;&#x4F46;&#x5728;&#x8BAD;&#x7EC3;&#x65F6;&#x5B58;&#x5728;&#x4EE5;&#x4E0B;&#x51E0;&#x70B9;&#x4E0D;&#x8DB3;&#xFF0C;&#x6B63;&#x8D1F;&#x6837;&#x672C;&#x4E4B;&#x95F4;&#x7684;&#x5DE8;&#x5927;&#x5DEE;&#x8DDD;&#xFF0C;&#x540C;&#x6837;&#xFF0C;easy,hard&#x6837;&#x672C;&#x7684;&#x5DE8;&#x5927;&#x5DEE;&#x8DDD;&#x3002;&#x672C;&#x6587;&#x4ECE;&#x68AF;&#x5EA6;&#x89D2;&#x5EA6;&#x51FA;&#x53D1;&#xFF0C;&#x6307;&#x51FA;&#x4E86;&#x4E0A;&#x9762;&#x4E24;&#x4E2A;&#x4E0D;&#x8DB3;&#x5E26;&#x6765;&#x7684;&#x5F71;&#x54CD;&#x3002;&#x7136;&#x540E;&#xFF0C;&#x4F5C;&#x8005;&#x8FDB;&#x4E00;&#x6B65;&#x63D0;&#x51FA;&#x4E86;&#x68AF;&#x5EA6;&#x534F;&#x8C03;&#x673A;&#x5236;(GHM)&#x7528;&#x4E8E;&#x907F;&#x5F00;&#x4E0A;&#x9762;&#x7684;&#x4E0D;&#x8DB3;&#x3002;GHM&#x7684;&#x601D;&#x60F3;&#x53EF;&#x4EE5;&#x5D4C;&#x5165;&#x5230;&#x7528;&#x4E8E;&#x5206;&#x7C7B;&#x7684;&#x4EA4;&#x53C9;&#x71B5;&#x635F;&#x5931;&#x6216;&#x8005;&#x7528;&#x4E8E;&#x56DE;&#x5F52;&#x7684;Smooth-L1&#x635F;&#x5931;&#x4E2D;&#xFF0C;&#x6700;&#x540E;&#xFF0C;&#x672C;&#x6587;&#x4FEE;&#x6539;&#x8FC7;&#x7684;&#x635F;&#x5931;&#x51FD;&#x6570;GHM-C&#x4E0E;GHM-R&#x7528;&#x4E8E;&#x5E73;&#x8861;anchor&#x5206;&#x7C7B;&#x53CA;&#x56DE;&#x5F52;&#x4E8C;&#x8005;&#x7684;&#x68AF;&#x5EA6;&#x3002;&#x63D0;&#x51FA;&#x7684;`&#x6A21;&#x578B;&#x5728;COCO&#x6D4B;&#x8BD5;&#x96C6;&#x4E0A;&#x7684;mAP&#x8FBE;&#x5230;&#x4E86;41.6&#xFF0C;&#x4E0E;$Focal Loss(FL)+SL_{1}$&#x76F8;&#x6BD4;&#xFF0C;&#x8D85;&#x8FC7;&#x4E86;0.8&#x3002;</p><a id="more"></a><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>&#x4F46;&#x9636;&#x6BB5;&#x68C0;&#x6D4B;&#x5668;&#x5728;&#x8BAD;&#x7EC3;&#x65F6;&#x9762;&#x4E34;&#x7684;&#x6700;&#x5177;&#x6311;&#x6218;&#x6027;&#x7684;&#x95EE;&#x9898;&#x5C31;&#x662F;easy&#x548C;hard&#x6837;&#x672C;&#x4EE5;&#x53CA;positive&#x548C;negative&#x6837;&#x672C;&#x4E4B;&#x95F4;&#x7684;&#x4E25;&#x91CD;&#x4E0D;&#x5E73;&#x8861;&#x3002;&#x5DE8;&#x5927;&#x6570;&#x91CF;&#x7684;easy&#x4EE5;&#x53CA;&#x80CC;&#x666F;&#x6837;&#x672C;&#x5F71;&#x54CD;&#x4E86;&#x68C0;&#x6D4B;&#x5668;&#x7684;&#x8BAD;&#x7EC3;&#x3002;&#x5F52;&#x529F;&#x4E8E;proposal-driven&#x673A;&#x5236;&#xFF0C;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x5728;&#x4E8C;&#x9636;&#x6BB5;&#x68C0;&#x6D4B;&#x5668;&#x4E2D;&#x5E76;&#x4E0D;&#x5B58;&#x5728;&#x3002;&#x540E;&#x6765;&#xFF0C;&#x51FA;&#x73B0;&#x4E86;&#x57FA;&#x4E8E;OHEM&#x7684;&#x6837;&#x672C;&#x6316;&#x6398;&#x6280;&#x672F;&#xFF0C;&#x4F46;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x820D;&#x5F03;&#x4E86;&#x5927;&#x90E8;&#x5206;&#x6837;&#x672C;&#xFF0C;&#x8BAD;&#x7EC3;&#x4E5F;&#x4E0D;&#x662F;&#x5F88;&#x9AD8;&#x6548;&#xFF0C;&#x540E;&#x6765;Focal Loss&#x901A;&#x8FC7;&#x4FEE;&#x6539;&#x635F;&#x5931;&#x51FD;&#x6570;&#x6765;&#x8C03;&#x6574;&#x4E0D;&#x5E73;&#x8861;&#x95EE;&#x9898;&#x3002;&#x4F46;&#x662F;Focal loss&#x5F15;&#x5165;&#x4E86;&#x4E24;&#x4E2A;&#x8D85;&#x53C2;&#x6570;&#xFF0C;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x5927;&#x91CF;&#x7684;&#x5B9E;&#x9A8C;&#x8FDB;&#x884C;&#x8C03;&#x8BD5;&#xFF0C;&#x540C;&#x65F6;&#xFF0C;Focal loss&#x662F;&#x4E00;&#x79CD;&#x9759;&#x6001;&#x635F;&#x5931;&#xFF0C;&#x5BF9;&#x6570;&#x636E;&#x96C6;&#x7684;&#x5206;&#x5E03;&#x4E0D;&#x654F;&#x611F;&#xFF0C;&#x800C;&#x5728;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x6570;&#x636E;&#x96C6;&#x7684;&#x5206;&#x5E03;&#x662F;&#x4F1A;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x7684;&#x3002;<br>&#x672C;&#x6587;&#x6307;&#x51FA;&#x7C7B;&#x522B;&#x4E0D;&#x5E73;&#x8861;&#x4E3B;&#x8981;&#x5F52;&#x7ED3;&#x4E8E;&#x96BE;&#x5EA6;&#x7684;&#x4E0D;&#x5E73;&#x8861;&#xFF0C;&#x800C;&#x96BE;&#x5EA6;&#x7684;&#x4E0D;&#x5E73;&#x8861;&#x53EF;&#x4EE5;&#x5F52;&#x7ED3;&#x4E3A;&#xFF0C;gradient norm&#x5206;&#x5E03;&#x7684;&#x4E0D;&#x5E73;&#x8861;&#x3002;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x6B63;&#x6837;&#x672C;&#x5F88;&#x5BB9;&#x6613;&#x88AB;&#x5206;&#x7C7B;&#xFF0C;&#x5219;&#x8BE5;&#x6837;&#x672C;&#x4E3A;easy example&#x540C;&#x65F6;&#x6A21;&#x578B;&#x4ECE;&#x4E2D;&#x5F97;&#x5230;&#x7684;&#x4FE1;&#x606F;&#x91CF;&#x8F83;&#x5C11;&#xFF0C;&#x6BD4;&#x5982;&#xFF0C;&#x901A;&#x8FC7;&#x8FD9;&#x4E2A;&#x6837;&#x672C;&#xFF0C;&#x53EA;&#x4EA7;&#x751F;&#x4E86;&#x4E00;&#x70B9;&#x68AF;&#x5EA6;&#x4FE1;&#x606F;&#x3002;&#x6A21;&#x578B;&#x5E94;&#x8BE5;&#x5173;&#x6CE8;&#x8FD9;&#x4E2A;&#x88AB;&#x5206;&#x9519;&#x7684;&#x6837;&#x672C;&#x65E0;&#x8BBA;&#x5B83;&#x5C5E;&#x4E8E;&#x54EA;&#x4E2A;&#x7C7B;&#x522B;&#x3002;&#x4ECE;&#x6574;&#x4F53;&#x4E0A;&#x6765;&#x770B;&#xFF0C;&#x8D1F;&#x6837;&#x672C;&#x6613;&#x4E8E;&#x591A;&#x4E3A;easy examples&#xFF0C;&#x800C;hard examples&#x901A;&#x5E38;&#x4E3A;&#x4E3A;&#x6B63;&#x6837;&#x672C;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x4E24;&#x79CD;&#x4E0D;&#x5E73;&#x8861;&#x53EF;&#x4EE5;&#x5F52;&#x7ED3;&#x4E3A;&#x5C5E;&#x6027;&#x4E0A;&#x7684;&#x4E0D;&#x5E73;&#x8861;&#x3002;<br>&#x6B64;&#x5916;&#xFF0C;&#x4E0A;&#x9762;&#x4E24;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x4E0D;&#x5E73;&#x8861;(hard/easy , positive/negative)&#x53EF;&#x4EE5;&#x7531;gradient norm&#x7684;&#x5206;&#x5E03;&#x8868;&#x793A;&#x3002;&#x5E26;&#x6709;gradient norm&#x7684;&#x6837;&#x672C;&#x5BC6;&#x5EA6;&#xFF0C;&#x88AB;&#x79F0;&#x4E3A;&#x68AF;&#x5EA6;&#x5BC6;&#x5EA6;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#x5DE6;&#x4FA7;&#x6240;&#x793A;&#xFF0C;&#x7531;&#x4E8E;&#x5B58;&#x5728;&#x5927;&#x91CF;&#x7684;&#x7B80;&#x5355;&#x8D1F;&#x6837;&#x672C;&#xFF0C;gradient norm&#x8F83;&#x5C0F;&#x7684;&#x6837;&#x672C;&#x7684;&#x5BC6;&#x5EA6;&#x5F88;&#x5927;&#x3002;&#x867D;&#x7136;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x6837;&#x672C;&#x5BF9;&#x6574;&#x4F53;&#x7684;&#x68AF;&#x5EA6;&#x8D21;&#x732E;&#x5F88;&#x5C0F;&#xFF0C;&#x4F46;&#x5927;&#x91CF;&#x7684;&#x7B80;&#x5355;&#x6837;&#x672C;&#x4F5C;&#x7528;&#x540E;&#x4F1A;&#x5360;&#x636E;&#x8BAD;&#x7EC3;&#x7684;&#x4E3B;&#x5BFC;&#xFF0C;&#x4F7F;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;&#x5E76;&#x4E0D;&#x662F;&#x5F88;&#x9AD8;&#x6548;&#x3002;&#x53E6;&#x5916;&#x6211;&#x4EEC;&#x53D1;&#x73B0;gradient norm&#x8F83;&#x5927;&#x7684;&#x6837;&#x672C;(hard examples)&#x7684;&#x5BC6;&#x5EA6;&#x4E5F;&#x5927;&#x4E8E;&#x4E2D;&#x95F4;&#x6837;&#x672C;&#x7684;&#x5BC6;&#x5EA6;&#x3002;<br><img src="/2019/08/01/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;6/1.png" alt><br>&#x5F97;&#x76CA;&#x4E8E;&#x5BF9;gradient norm&#x7684;&#x5206;&#x5E03;&#x7684;&#x5206;&#x6790;&#xFF0C;&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x4E2A; gradient harmonizing mechanism (GHM)&#x6765;&#x9AD8;&#x6548;&#x7684;&#x8BAD;&#x7EC3;&#x5355;&#x9636;&#x6BB5;&#x7684;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x6A21;&#x578B;&#xFF0C;&#x8FD9;&#x4E2A;&#x673A;&#x5236;&#x7740;&#x91CD;&#x4E8E;&#x4E0D;&#x540C;&#x6837;&#x672C;&#x7684;&#x68AF;&#x5EA6;&#x5206;&#x5E03;&#x7684;harmony&#x3002;GHM&#x5148;&#x7EDF;&#x8BA1;&#x5177;&#x6709;&#x76F8;&#x4F3C;&#x68AF;&#x5EA6;&#x5BC6;&#x5EA6;&#x7684;&#x6837;&#x672C;&#x7684;&#x6570;&#x91CF;&#xFF0C;&#x5BF9;&#x6BCF;&#x4E00;&#x4E2A;&#x6837;&#x672C;&#x6839;&#x636E;&#x5176;&#x5BC6;&#x5EA6;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;harmonizing&#x53C2;&#x6570;&#x3002;&#x4F7F;&#x7528;GHM&#x6765;&#x8BAD;&#x7EC3;&#xFF0C;&#x6BCF;&#x79CD;&#x6837;&#x672C;&#x7684;&#x5206;&#x5E03;&#x4F1A;&#x8D8B;&#x4E8E;&#x5E73;&#x8861;&#xFF0C;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;&#x4F1A;&#x53D8;&#x5F97;&#x66F4;&#x9AD8;&#x6548;&#x548C;&#x7A33;&#x5B9A;&#x3002;<br>&#x5728;&#x5B9E;&#x9A8C;&#x4E2D;&#xFF0C;&#x5BF9;&#x68AF;&#x5EA6;&#x7684;&#x6539;&#x53D8;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5BF9;&#x635F;&#x5931;&#x51FD;&#x6570;&#x7684;&#x91CD;&#x65B0;&#x8BBE;&#x8BA1;&#x6765;&#x7B49;&#x6548;&#x7684;&#x5B9E;&#x73B0;&#x3002;&#x6211;&#x4EEC;&#x628A;GHM&#x5D4C;&#x5165;&#x5206;&#x7C7B;&#x635F;&#x5931;&#xFF0C;&#x547D;&#x540D;&#x4E3A;GHM-C&#x635F;&#x5931;&#xFF0C;&#x540C;&#x6837;&#x6211;&#x4EEC;&#x4E5F;&#x5728;&#x56DE;&#x5F52;&#x5206;&#x652F;&#x4E2D;&#x4F7F;&#x7528;&#x4E86;GHM&#xFF0C;&#x547D;&#x540D;&#x4E3A;GHM-R&#x635F;&#x5931;&#x3002;<br>&#x6211;&#x4EEC;&#x7684;&#x6700;&#x4E3B;&#x8981;&#x8D21;&#x732E;&#xFF1A;</p><ol><li>&#x6211;&#x4EEC;&#x63ED;&#x793A;&#x4E86;&#x5355;&#x9636;&#x6BB5;&#x68C0;&#x6D4B;&#x5668;&#x5728;gradient norm&#x5206;&#x5E03;&#x65B9;&#x9762;&#x5B58;&#x5728;&#x663E;&#x8457;&#x4E0D;&#x8DB3;&#x7684;&#x57FA;&#x672C;&#x539F;&#x7406;&#xFF0C;&#x5E76;&#x4E14;&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x79CD;&#x65B0;&#x7684;&#x68AF;&#x5EA6;&#x5E73;&#x8861;&#x673A;&#x5236;(GHM)&#x6765;&#x5904;&#x7406;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002;</li><li>&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;GHM-C&#x4EE5;&#x53CA;GHM-R&#xFF0C;&#x5B83;&#x4EEC;&#x7EA0;&#x6B63;&#x4E86;&#x4E0D;&#x540C;&#x6837;&#x672C;&#x7684;&#x68AF;&#x5EA6;&#x5206;&#x5E03;&#xFF0C;&#x5E76;&#x4E14;&#x5BF9;&#x8D85;&#x53C2;&#x6570;&#x5177;&#x6709;&#x9C81;&#x68D2;&#x6027;&#x3002;</li><li>&#x901A;&#x8FC7;&#x4F7F;&#x7528;GHM&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8F7B;&#x677E;&#x5730;&#x8BAD;&#x7EC3;&#x5355;&#x9636;&#x6BB5;&#x68C0;&#x6D4B;&#x5668;&#xFF0C;&#x65E0;&#x9700;&#x4EFB;&#x4F55;&#x6570;&#x636E;&#x91C7;&#x6837;&#x7B56;&#x7565;&#xFF0C;&#x5E76;&#x4E14;&#x5728;COCO&#x57FA;&#x51C6;&#x6D4B;&#x8BD5;&#x4E2D;&#x53D6;&#x5F97;&#x4E86;state-of-the-art&#x7684;&#x7ED3;&#x679C;&#x3002;</li></ol><h1 id="Related-Work"><a href="#Related-Work" class="headerlink" title="Related Work"></a>Related Work</h1><ul><li><strong>Object Detection</strong></li><li><strong>Object Function for Object Detector</strong></li></ul><h1 id="Gradient-Harmonizing-Mechanism"><a href="#Gradient-Harmonizing-Mechanism" class="headerlink" title="Gradient Harmonizing Mechanism"></a>Gradient Harmonizing Mechanism</h1><h2 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h2><p>&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x5019;&#x9009;&#x6846;&#xFF0C;&#x5B83;&#x7684;&#x771F;&#x5B9E;&#x6807;&#x7B7E;&#x4E3A;$p^{*}\in\lbrace0,1\rbrace$&#xFF0C;&#x9884;&#x6D4B;&#x7684;&#x503C;&#x4E3A;$p\in[0,1]$&#xFF0C;&#x91C7;&#x7528;&#x4E8C;&#x5143;&#x4EA4;&#x53C9;&#x71B5;&#x635F;&#x5931;&#xFF1A;</p><script type="math/tex; mode=display">L_{CE}(p,p^{*}) = \left\{  \begin{array}{lr}    -log(p) & if x < 0\\    -log(1-p) & if x \ge 0  \end{array}\right.</script><p>&#x5047;&#x8BBE;$x$&#x4E3A;&#x6A21;&#x578B;&#x8F93;&#x51FA;&#xFF0C;&#x4F7F;&#x5F97;$p=sigmoid(x)$&#xFF0C;&#x90A3;&#x4E48;&#x4E0A;&#x8FF0;&#x7684;&#x4EA4;&#x53C9;&#x71B5;&#x635F;&#x5931;&#x5BF9;$x$&#x7684;&#x5BFC;&#x6570;&#x4E3A;&#xFF1A;</p><script type="math/tex; mode=display">\begin{aligned}\frac{\partial L_{CE}}{\partial x}& = \left\{  \begin{array}{lr}    p-1 & if x < 0\\    p & if x \ge 0  \end{array}\right. \\& = p-p^{*}\end{aligned}</script><p>&#x90A3;&#x4E48;&#x68AF;&#x5EA6;&#x7684;&#x6A21;&#x5B9A;&#x4E49;&#x4E3A;&#xFF1A;</p><script type="math/tex; mode=display">g = |p-p^{*}| = \left\{  \begin{array}{lr}    1-p & if p^{*}=1 \\    p   & if p^{*}=0  \end{array}\right.</script><p>$g$&#x4EE3;&#x8868;&#x4E86;&#x8FD9;&#x4E2A;&#x6837;&#x672C;&#x7684;&#x96BE;&#x6613;&#x7A0B;&#x5EA6;&#x4EE5;&#x53CA;&#x5B83;&#x5BF9;&#x6574;&#x4E2A;&#x68AF;&#x5EA6;&#x7684;&#x8D21;&#x732E;&#x3002;<br>&#x4E0B;&#x56FE;&#x662F;&#x4E00;&#x4E2A;&#x6536;&#x655B;&#x6A21;&#x578B;&#x7684;&#x68AF;&#x5EA6;&#x6A21;&#x957F;&#x7684;&#x5206;&#x5E03;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x7B80;&#x5355;&#x6837;&#x672C;&#x7684;&#x6570;&#x91CF;&#x5F88;&#x5927;&#xFF0C;&#x4F7F;&#x5F97;&#x5B83;&#x5BF9;&#x68AF;&#x5EA6;&#x7684;&#x6574;&#x4E2A;&#x8D21;&#x732E;&#x5F88;&#x5927;&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x9700;&#x8981;&#x7684;&#x5730;&#x65B9;&#x662F;&#xFF0C;&#x5728;&#x68AF;&#x5EA6;&#x6A21;&#x8F83;&#x5927;&#x7684;&#x5730;&#x65B9;&#x4ECD;&#x7136;&#x5B58;&#x5728;&#x7740;&#x4E00;&#x5B9A;&#x6570;&#x91CF;&#x7684;&#x5206;&#x5E03;&#xFF0C;&#x8BF4;&#x660E;&#x6A21;&#x578B;&#x5F88;&#x96BE;&#x6B63;&#x786E;&#x5904;&#x7406;&#x8FD9;&#x4E9B;&#x6837;&#x672C;&#xFF0C;&#x4F5C;&#x8005;&#x628A;&#x8FD9;&#x7C7B;&#x6837;&#x672C;&#x5F52;&#x4E3A;&#x79BB;&#x7FA4;&#x6837;&#x672C;&#xFF0C;&#x56E0;&#x4E3A;&#x4ED6;&#x4EEC;&#x7684;&#x68AF;&#x5EA6;&#x6A21;&#x4E0E;&#x6574;&#x4F53;&#x7684;&#x68AF;&#x5EA6;&#x6A21;&#x7684;&#x5206;&#x5E03;&#x5DEE;&#x5F02;&#x592A;&#x5927;&#xFF0C;&#x5E76;&#x4E14;&#x6A21;&#x578B;&#x5F88;&#x96BE;&#x5904;&#x7406;&#xFF0C;&#x5982;&#x679C;&#x8BA9;&#x6A21;&#x578B;&#x5F3A;&#x884C;&#x53BB;&#x5B66;&#x4E60;&#x8FD9;&#x4E9B;&#x79BB;&#x7FA4;&#x6837;&#x672C;&#xFF0C;&#x53CD;&#x800C;&#x4F1A;&#x5BFC;&#x81F4;&#x6574;&#x4F53;&#x6027;&#x80FD;&#x4E0B;&#x964D;&#x3002;<br><img src="/2019/08/01/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;6/2.png" alt></p><h2 id="Gradient-Density"><a href="#Gradient-Density" class="headerlink" title="Gradient Density"></a>Gradient Density</h2><p>&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x7684;&#x68AF;&#x5EA6;&#x5BC6;&#x5EA6;&#x51FD;&#x6570;&#x4E3A;&#xFF1A;</p><script type="math/tex; mode=display">GD(g)=\frac{1}{l_{\epsilon}(g)}\sum_{k=1}^N\delta_{\epsilon}(g_k,g)</script><p>&#x5176;&#x4E2D;$g_k$&#x4E3A;&#x7B2C;$k$&#x4E2A;&#x6837;&#x672C;&#x7684;gradient norm&#x3002;</p><script type="math/tex; mode=display">\delta_{\epsilon}(x,y)= \left\{  \begin{array}{lr}    1 & if y-\frac{\epsilon}{2} <= x < y+\frac{\epsilon}{2} \\    0 & otherwise  \end{array}\right.</script><script type="math/tex; mode=display">l_{\epsilon}(g)=min(g+\frac{\epsilon}{2},1)-max(g-\frac{\epsilon}{2},0)</script><p>g&#x7684;gradient norm&#x5373;&#x4E3A;&#x5728;&#x4EE5;g&#x4E3A;&#x4E2D;&#x5FC3;&#xFF0C;&#x957F;&#x5EA6;&#x4E3A;$\epsilon$&#x7684;&#x533A;&#x57DF;&#x5185;&#x7684;&#x6837;&#x672C;&#x6570;&#xFF0C;&#x5E76;&#x4E14;&#x7531;&#x8BE5;&#x533A;&#x57DF;&#x7684;&#x6709;&#x6548;&#x957F;&#x5EA6;&#x8FDB;&#x884C;&#x5F52;&#x4E00;&#x5316;&#x3002;<br>&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x68AF;&#x5EA6;&#x5BC6;&#x5EA6;harmonizing&#x53C2;&#x6570;&#xFF1A;</p><script type="math/tex; mode=display">\beta_i=\frac{N}{GD(g_i)}</script><p>$N$&#x4E3A;&#x6837;&#x672C;&#x603B;&#x6570;</p><h2 id="GHM-C-Loss"><a href="#GHM-C-Loss" class="headerlink" title="GHM-C Loss"></a>GHM-C Loss</h2><p>&#x6839;&#x636E;&#x68AF;&#x5EA6;&#x5BC6;&#x5EA6;harmonizing&#x53C2;&#x6570;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x635F;&#x5931;&#x51FD;&#x6570;&#x7684;&#x68AF;&#x5EA6;&#x5BC6;&#x5EA6;harmonized&#x7684;&#x5F62;&#x5F0F;&#xFF1A;</p><script type="math/tex; mode=display">\begin{aligned}L_{GHM-C} & =\frac{1}{N}\sum_{i=1}^N\beta_iL_{CE}(p_i,{p_i}^{*}) \\& = \sum_{i=1}^N\frac{L_{CE}(p_i,p_i^*)}{GD(g_i)}\end{aligned}</script><p><img src="/2019/08/01/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;6/3.png" alt><br>&#x4E0A;&#x56FE;&#x5BF9;&#x6BD4;&#x4E86;&#x4E0D;&#x540C;&#x635F;&#x5931;&#x51FD;&#x6570;&#x4E0B;&#x7684;gradient norm&#x7684;&#x5206;&#x5E03;&#x3002;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x4E4B;&#x524D;&#x63D0;&#x5230;&#x7684;&#x7B80;&#x5355;&#x6837;&#x672C;&#x7684;&#x6743;&#x91CD;&#x5F97;&#x5230;&#x4E86;&#x8F83;&#x5927;&#x5E45;&#x5EA6;&#x5730;&#x964D;&#x4F4E;&#xFF0C;&#x79BB;&#x7FA4;&#x6837;&#x672C;&#x4E5F;&#x5F97;&#x5230;&#x4E86;&#x4E00;&#x5B9A;&#x7A0B;&#x5EA6;&#x7684;&#x964D;&#x6743;&#x3002;&#x4F7F;&#x7528;&#x7ECF;&#x8FC7;&#x6539;&#x5584;&#x4E4B;&#x540E;&#x7684;&#x635F;&#x5931;&#x51FD;&#x6570;&#x4F7F;&#x5F97;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;&#x66F4;&#x52A0;&#x9AD8;&#x6548;&#x548C;&#x9C81;&#x68D2;&#x3002;</p><h2 id="Unit-Region-Approximation"><a href="#Unit-Region-Approximation" class="headerlink" title="Unit Region Approximation"></a>Unit Region Approximation</h2><h3 id="Complexity-Analysis"><a href="#Complexity-Analysis" class="headerlink" title="Complexity Analysis"></a>Complexity Analysis</h3><p>&#x5E38;&#x89C4;&#x8BA1;&#x7B97;&#x6240;&#x6709;&#x6837;&#x672C;&#x68AF;&#x5EA6;&#x503C;&#x7684;&#x7B97;&#x6CD5;&#x590D;&#x6742;&#x5EA6;&#x4E3A;$O(N^2)$&#xFF0C;&#x5373;&#x4F7F;&#x4F7F;&#x7528;&#x5E76;&#x884C;&#x8BA1;&#x7B97;&#xFF0C;&#x6BCF;&#x4E2A;&#x8BA1;&#x7B97;&#x8282;&#x70B9;&#x4ECD;&#x6709;N&#x7684;&#x8BA1;&#x7B97;&#x91CF;&#x3002;&#x6BD4;&#x8F83;&#x597D;&#x7684;&#x7B97;&#x6CD5;&#x9996;&#x5148;&#x4F1A;&#x4EE5;$O(NlogN)$&#x7684;&#x590D;&#x6742;&#x5EA6;&#x901A;&#x8FC7;&#x68AF;&#x5EA6;&#x6B63;&#x5219;&#x5BF9;&#x6837;&#x672C;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x961F;&#x5217;&#x6765;&#x626B;&#x63CF;&#x6837;&#x672C;&#xFF0C;&#x4EE5;$O(N)$&#x7684;&#x65B9;&#x5F0F;&#x5F97;&#x5230;&#x5BC6;&#x5EA6;&#x3002;&#x7531;&#x4E8E;&#x5355;&#x9636;&#x6BB5;&#x68C0;&#x6D4B;&#x4E2D;&#x7684;N&#x4E3A;$10^5$&#x6216;&#x8005;$10^6$&#xFF0C;&#x5176;&#x68AF;&#x5EA6;&#x8BA1;&#x7B97;&#x91CF;&#x4ECD;&#x5F88;&#x5927;&#xFF0C;&#x57FA;&#x4E8E;&#x6392;&#x5E8F;&#x7684;&#x7B97;&#x6CD5;&#x6BD4;&#x5E76;&#x884C;&#x8BA1;&#x7B97;&#x63D0;&#x5347;&#x7684;&#x5E45;&#x5EA6;&#x6709;&#x9650;&#x3002;&#x672C;&#x6587;&#x63D0;&#x51FA;&#x4E86;&#x8FD1;&#x4F3C;&#x7684;&#x83B7;&#x5F97;&#x6837;&#x672C;&#x68AF;&#x5EA6;&#x5BC6;&#x5EA6;&#x7684;&#x65B9;&#x6CD5;&#x3002;</p><h3 id="Unit-Region"><a href="#Unit-Region" class="headerlink" title="Unit Region"></a>Unit Region</h3><p>&#x6211;&#x4EEC;&#x628A;$g$&#x7684;&#x5206;&#x5E03;&#x7A7A;&#x95F4;&#x5206;&#x4E3A;&#x957F;&#x5EA6;&#x4E3A;$\epsilon$&#x7684;&#x72EC;&#x7ACB;unit&#x533A;&#x57DF;&#xFF0C;&#x6240;&#x4EE5;&#x5171;&#x6709;$M=\frac{1}{\epsilon}$&#x4E2A;&#x533A;&#x57DF;&#x3002;&#x8BA9;$r_j$&#x8868;&#x793A;&#x7B2C;$j$&#x4E2A;&#x533A;&#x57DF;&#xFF0C;&#x90A3;&#x4E48;$r_j=[(j-1)\epsilon,j\epsilon)$&#x3002;&#x8BA9;$R_j$&#x8868;&#x793A;&#x5728;$r_j$&#x533A;&#x57DF;&#x91CC;&#x7684;&#x6837;&#x672C;&#x4E2A;&#x6570;&#x3002;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;$ind(g)=t$&#xFF0C;&#x8868;&#x793A;$g$&#x6240;&#x5728;&#x7684;&#x533A;&#x57DF;&#x7684;&#x5E8F;&#x53F7;&#xFF0C;&#x6EE1;&#x8DB3;$(t-1)\epsilon&lt;=g&lt;t\epsilon$&#x3002;<br>&#x7136;&#x540E;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x8FD1;&#x4F3C;&#x68AF;&#x5EA6;&#x5BC6;&#x5EA6;&#x51FD;&#x6570;&#xFF1A;</p><script type="math/tex; mode=display">\hat{GD}(g)=\frac{R_{ind(g)}}{\epsilon}=R_{ind(g)}M</script><p>&#x7136;&#x540E;&#x6211;&#x4EEC;&#x5C31;&#x5F97;&#x5230;&#x4E86;&#x8FD1;&#x4F3C;&#x68AF;&#x5EA6;&#x5BC6;&#x5EA6;harmonizing&#x53C2;&#x6570;&#xFF1A;</p><script type="math/tex; mode=display">\hat{\beta}_i=\frac{N}{\hat{GD}(g_i)}</script><p>&#x6700;&#x540E;&#x6211;&#x4EEC;&#x5F97;&#x5230;&#x4E86;&#x91CD;&#x65B0;&#x5236;&#x5B9A;&#x7684;&#x635F;&#x5931;&#x51FD;&#x6570;&#xFF1A;</p><script type="math/tex; mode=display">\begin{aligned}\hat{L}_{GHM-C}& =\frac{1}{N}\sum_{i=1}^N\hat{\beta}_iL_{CE}(p_i,{p_i}^{*}) \\& = \sum_{i=1}^N\frac{L_{CE}(p_i,p_i^*)}{\hat{GD}(g_i)}\end{aligned}</script><h3 id="EMA"><a href="#EMA" class="headerlink" title="EMA"></a>EMA</h3><p>&#x57FA;&#x4E8E;Mini-batch&#x7EDF;&#x8BA1;&#x7684;&#x65B9;&#x6CD5;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF1A;&#x5F53;&#x4E00;&#x4E2A;mini-batch&#x4E2D;&#x5B58;&#x5728;&#x5927;&#x91CF;&#x7684;&#x5F02;&#x5E38;&#x70B9;&#x65F6;&#xFF0C;&#x7EDF;&#x8BA1;&#x7ED3;&#x679C;&#x4E3A;&#x566A;&#x58F0;&#xFF0C;&#x800C;&#x4E14;&#x4F7F;&#x8BAD;&#x7EC3;&#x53D8;&#x5F97;&#x4E0D;&#x7A33;&#x5B9A;&#x3002;Exponential moving average(EMA)&#x662F;&#x89E3;&#x51B3;&#x6B64;&#x95EE;&#x9898;&#x7684;&#x5E38;&#x7528;&#x65B9;&#x6CD5;&#xFF0C;&#x6BD4;&#x5982;&#x5E26;&#x52A8;&#x91CF;&#x7684;SGD&#x53CA;BN&#x5904;&#x7406;&#x3002;&#x7531;&#x4E8E;&#x68AF;&#x5EA6;&#x5BC6;&#x5EA6;&#x7684;&#x8FD1;&#x4F3C;&#x8BA1;&#x7B97;&#x4E2D;&#x7684;&#x6837;&#x672C;&#x6765;&#x81EA;&#x4E8E;&#x5355;&#x5143;&#x533A;&#x57DF;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x5728;&#x6BCF;&#x4E2A;&#x5355;&#x5143;&#x533A;&#x57DF;&#x5E94;&#x7528;EMA&#xFF0C;&#x8FDB;&#x800C;&#x5F97;&#x5230;&#x66F4;&#x591A;&#x7A33;&#x5B9A;&#x7684;&#x68AF;&#x5EA6;&#x5BC6;&#x5EA6;&#x3002;</p><h2 id="GHM-R-Loss"><a href="#GHM-R-Loss" class="headerlink" title="GHM-R Loss"></a>GHM-R Loss</h2><p>Smooth L1&#x635F;&#x5931;&#x51FD;&#x6570;&#x4E3A;&#xFF1A;</p><script type="math/tex; mode=display">L_{reg}=\sum_{i\in\lbrace x,y,w,h\rbrace}SL_1(t_i-t_i^*)</script><script type="math/tex; mode=display">SL_1(d) = \left\{  \begin{array}{lr}    \frac{d^2}{2\delta} & if |d|<=\delta \\    |d|-\frac{\delta}{2} & otherwise  \end{array}\right.</script><p>&#x7531;&#x4E8E;$d=t_i-t_i^*$,smoothL1 loss&#x5173;&#x4E8E;$t_1$&#x7684;&#x5BFC;&#x6570;&#x4E3A;&#xFF1A;</p><script type="math/tex; mode=display">\frac{\partial SL_1}{\partial t_i} = \frac{\partial SL_1}{\partial d} = \left\{  \begin{array}{lr}    \frac{d}{\delta} & if |d|<=\delta \\    sgn(d) & otherwise  \end{array}\right.</script><p>&#x5BF9;&#x4E8E;&#x6240;&#x6709;$|d|&gt;\delta$&#x7684;&#x6837;&#x672C;&#xFF0C;&#x90FD;&#x5177;&#x6709;&#x76F8;&#x540C;&#x7684;gradient norm$|\frac{\partial SL_1}{\partial t_i}|=1$&#x3002;&#x8FD9;&#x5C31;&#x4E0D;&#x53EF;&#x80FD;&#x4EC5;&#x4EC5;&#x4F9D;&#x9760;gradient norm&#x6765;&#x533A;&#x5206;&#x4E0D;&#x540C;&#x5C5E;&#x6027;&#x7684;&#x6837;&#x672C;&#x3002;&#x4E00;&#x4E2A;&#x9009;&#x62E9;&#x5C31;&#x662F;&#x76F4;&#x63A5;&#x4F7F;&#x7528;$|d|$&#x4F5C;&#x4E3A;&#x4E0D;&#x540C;&#x5C5E;&#x6027;&#x7684;&#x5EA6;&#x91CF;&#x3002;&#x4F46;&#x65B0;&#x7684;&#x95EE;&#x9898;&#x662F;$|d|$&#x7406;&#x8BBA;&#x4E0A;&#x53EF;&#x4EE5;&#x8FBE;&#x5230;&#x65E0;&#x7A77;&#x5927;&#xFF0C;&#x5355;&#x4F4D;&#x533A;&#x57DF;&#x7684;&#x8FD1;&#x4F3C;&#x65E0;&#x6CD5;&#x5B9E;&#x73B0;&#x3002;<br>&#x4E3A;&#x4E86;&#x4FBF;&#x6377;&#x7684;&#x5728;&#x56DE;&#x5F52;loss&#x4E0A;&#x5E94;&#x7528;GHM&#xFF0C;&#x6211;&#x4EEC;&#x628A;&#x4F20;&#x7EDF;&#x7684;$SL_1$loss&#x6539;&#x53D8;&#x4E3A;&#x66F4;&#x4F18;&#x96C5;&#x7684;&#x5F62;&#x5F0F;&#xFF1A;</p><script type="math/tex; mode=display">ASL_1(d)=\sqrt{d^2+{\mu}^2}-\mu</script><p>&#x5F53;$d$&#x5F88;&#x5C0F;&#x65F6;&#xFF0C;&#x8FD1;&#x4F3C;&#x4E3A;&#x4E00;&#x4E2A;&#x65B9;&#x5DEE;&#x51FD;&#x6570;(L2 loss)&#xFF0C;&#x5F53;$d$&#x5F88;&#x5927;&#x65F6;&#x8FD1;&#x4F3C;&#x4E3A;&#x4E00;&#x4E2A;&#x7EBF;&#x6027;&#x635F;&#x5931;(L1 loss)&#xFF0C;&#x79F0;&#x8BE5;&#x635F;&#x5931;&#x4E3A;Authentic Smooth L1&#x635F;&#x5931;&#xFF0C;&#x5177;&#x6709;&#x5F88;&#x597D;&#x7684;&#x5E73;&#x6ED1;&#x6027;&#xFF0C;&#x5176;&#x504F;&#x5BFC;&#x5B58;&#x5728;&#x4E14;&#x8FDE;&#x7EED;&#x3002;&amp;ASL_1$&#x7684;&#x504F;&#x5BFC;&#x5982;&#x4E0B;&#xFF1A;</p><script type="math/tex; mode=display">\frac{\partial ASL1}{\partial d}=\frac{d}{\sqrt{d^2+{\mu}^2}}</script><p>&#x6211;&#x4EEC;&#x5B9A;&#x4E49;$gr=|\frac{d}{\sqrt{d^2+{\mu}^2}}|$&#x4E3A;$ASL_1$loss&#x7684;gradient norm&#xFF0C;&#x5176;&#x68AF;&#x5EA6;&#x5206;&#x5E03;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF0C;&#x4ECE;&#x56FE;&#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x5B58;&#x5728;&#x5927;&#x91CF;&#x7684;&#x5F02;&#x5E38;&#x70B9;&#x3002;&#x800C;&#x56DE;&#x5F52;&#x635F;&#x5931;&#x53EA;&#x4F5C;&#x7528;&#x5728;&#x6B63;&#x6837;&#x672C;&#x4E2D;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x5206;&#x7C7B;&#x4E0E;&#x56DE;&#x5F52;&#x7684;&#x5206;&#x5E03;&#x662F;&#x4E0D;&#x540C;&#x7684;&#x3002;&#x6700;&#x540E;&#xFF0C;&#x5C06;GHM&#x5E94;&#x7528;&#x4E8E;&#x56DE;&#x5F52;loss:</p><script type="math/tex; mode=display">\begin{aligned}L_{GHM-R} & =\frac{1}{N}\sum_{i=1}^N\beta_iASL_1(d_i) \\& = \sum_{i=1}^N\frac{ASL_1(d_i)}{GD({gr}_i)}\end{aligned}</script><p><img src="/2019/08/01/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;6/4.png" alt></p><p>&#x6211;&#x4EEC;&#x5F3A;&#x8C03;&#xFF0C;&#x5728;&#x8FB9;&#x6846;&#x56DE;&#x5F52;&#x4E2D;&#x5E76;&#x4E0D;&#x662F;&#x6240;&#x6709;&#x7684;&#x201C;&#x7B80;&#x5355;&#x6837;&#x672C;&#x201D;&#x90FD;&#x662F;&#x4E0D;&#x91CD;&#x8981;&#x7684;&#x3002;&#x5728;&#x5206;&#x7C7B;&#x4E2D;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x6837;&#x672C;&#x901A;&#x5E38;&#x662F;&#x4E00;&#x4E2A;&#x80CC;&#x666F;&#x533A;&#x57DF;&#xFF0C;&#x6709;&#x7740;&#x5F88;&#x4F4E;&#x7684;&#x9884;&#x6D4B;&#x53EF;&#x80FD;&#x503C;&#xFF0C;&#x4F1A;&#x88AB;&#x6392;&#x9664;&#x5728;&#x6700;&#x7EC8;&#x5019;&#x9009;&#x6846;&#x5916;&#x3002;&#x56E0;&#x6B64;&#x5BF9;&#x8FD9;&#x4E9B;&#x6837;&#x672C;&#x7684;&#x6539;&#x8FDB;&#x5E76;&#x4E0D;&#x4F1A;&#x5BF9;&#x7CBE;&#x5EA6;&#x4EA7;&#x751F;&#x4EFB;&#x4F55;&#x7684;&#x5F71;&#x54CD;&#x3002;&#x4F46;&#x662F;&#x5728;&#x8FB9;&#x6846;&#x56DE;&#x5F52;&#x4E2D;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x6837;&#x672C;&#x4ECD;&#x7136;&#x504F;&#x79BB;&#x4E86;&#x771F;&#x5B9E;&#x6846;&#x4F4D;&#x7F6E;&#x3002;&#x5BF9;&#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x66F4;&#x597D;&#x7684;&#x9884;&#x6D4B;&#x4F1A;&#x76F4;&#x63A5;&#x63D0;&#x5347;&#x6700;&#x7EC8;&#x5019;&#x9009;&#x6846;&#x7684;&#x8D28;&#x91CF;&#x3002;&#x800C;&#x4E14;&#xFF0C;&#x9AD8;&#x7EA7;&#x7684;&#x6570;&#x636E;&#x96C6;&#x66F4;&#x5173;&#x5FC3;&#x5B9A;&#x4F4D;&#x7684;&#x7CBE;&#x786E;&#x6027;<br>&#x6211;&#x4EEC;&#x7684;GHM-R&#x80FD;&#x591F;harmonize&#x7B80;&#x5355;&#x6837;&#x672C;&#x4EE5;&#x53CA;&#x56F0;&#x96BE;&#x6837;&#x672C;&#x5BF9;&#x8FB9;&#x6846;&#x56DE;&#x5F52;&#x7684;&#x8D21;&#x732E;&#xFF0C;&#x901A;&#x8FC7;&#x5BF9;&#x7B80;&#x5355;&#x6837;&#x672C;&#x7684;&#x91CD;&#x8981;&#x90E8;&#x5206;&#x8FDB;&#x884C;&#x5347;&#x6743;&#xFF0C;&#x4EE5;&#x53CA;&#x5BF9;&#x79BB;&#x7FA4;&#x6837;&#x672C;&#x8FDB;&#x884C;&#x964D;&#x6743;&#x3002;&#x5B9E;&#x9A8C;&#x663E;&#x793A;&#x5B83;&#x80FD;&#x6BD4;$SL_1$&#x4E00;&#x7EA7;$ASL_1$&#x83B7;&#x5F97;&#x66F4;&#x597D;&#x7684;&#x6027;&#x80FD;&#x3002;</p><h1 id="Experiments"><a href="#Experiments" class="headerlink" title="Experiments"></a>Experiments</h1><p><img src="/2019/08/01/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;6/5.png" alt><br><img src="/2019/08/01/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;6/6.png" alt><br><img src="/2019/08/01/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;6/7.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 目标检测 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NexT主题阅读全文设置</title>
      <link href="/2019/08/01/hexo%E9%98%85%E8%AF%BB%E5%85%A8%E6%96%87/"/>
      <url>/2019/08/01/hexo%E9%98%85%E8%AF%BB%E5%85%A8%E6%96%87/</url>
      
        <content type="html"><![CDATA[<p>Hexo &#x7684; Next &#x4E3B;&#x9898;&#x9ED8;&#x8BA4;&#x662F;&#x9996;&#x9875;&#x663E;&#x793A;&#x4F60;&#x6BCF;&#x7BC7;&#x6587;&#x7AE0;&#x7684;&#x5168;&#x6587;&#x5185;&#x5BB9;&#x3002;&#x60F3;&#x8981;&#x5728;&#x7F51;&#x7AD9;&#x9996;&#x9875;&#x53EA;&#x663E;&#x793A;&#x6BCF;&#x7BC7;&#x6587;&#x7AE0;&#x7684;&#x90E8;&#x5206;&#x5185;&#x5BB9;&#xFF0C;&#x4E0D;&#x8981;&#x5168;&#x90E8;&#x5185;&#x5BB9;&#x90FD;&#x5C55;&#x793A;&#x51FA;&#x6765;&#x3002;&#x6709;&#x4E24;&#x4E2A;&#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#xFF1A;</p><ul><li>&#x4FEE;&#x6539; _config.yml &#x6587;&#x4EF6;&#x8BBE;&#x7F6E;</li><li>&#x76F4;&#x63A5;&#x5728;&#x4F60;&#x7684; md &#x535A;&#x6587;&#x4E2D;&#x52A0;&#x4E00;&#x53E5;<code>&lt;!--more--&gt;</code></li></ul><a id="more"></a><h1 id="&#x7B2C;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;"><a href="#&#x7B2C;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;" class="headerlink" title="&#x7B2C;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;"></a>&#x7B2C;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;</h1><p>&#x7528;&#x6587;&#x672C;&#x7F16;&#x8F91;&#x5668;&#x6253;&#x5F00; themes/next &#x76EE;&#x5F55;&#x4E0B;&#x7684; _config.yml &#x6587;&#x4EF6;&#xFF0C;&#x627E;&#x5230;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Automatically Excerpt. Not recommend.</span><br><span class="line"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: false</span><br><span class="line">  length: 150</span><br></pre></td></tr></table></figure></p><p>&#x628A;<code>enable</code>&#x7684;<code>false</code>&#x6539;&#x6210;<code>true</code>&#x5C31;&#x884C;&#x4E86;&#xFF0C;&#x7136;&#x540E;<code>length</code>&#x662F;&#x8BBE;&#x5B9A;&#x6587;&#x7AE0;&#x9884;&#x89C8;&#x7684;&#x6587;&#x672C;&#x957F;&#x5EA6;&#x3002;&#x4FEE;&#x6539;&#x540E;&#x91CD;&#x542F; hexo &#x5C31;&#x597D;&#x4E86;&#x3002;<br>&#x4F46;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x7684;&#x6548;&#x679C;&#x662F;&#x4F1A;&#x683C;&#x5F0F;&#x5316;&#x4F60;&#x6587;&#x7AE0;&#x7684;&#x6837;&#x5F0F;&#xFF0C;&#x76F4;&#x63A5;&#x628A;&#x6587;&#x5B57;&#x6324;&#x5728;&#x4E00;&#x8D77;&#x663E;&#x793A;&#xFF0C;&#x6700;&#x540E;&#x4F1A;&#x6709;<code>...</code>&#x3002;</p><h1 id="&#x7B2C;&#x4E8C;&#x79CD;&#x65B9;&#x6CD5;"><a href="#&#x7B2C;&#x4E8C;&#x79CD;&#x65B9;&#x6CD5;" class="headerlink" title="&#x7B2C;&#x4E8C;&#x79CD;&#x65B9;&#x6CD5;"></a>&#x7B2C;&#x4E8C;&#x79CD;&#x65B9;&#x6CD5;</h1><p>&#x82E5;&#x60F3;&#x4FDD;&#x7559;&#x4E86;&#x6837;&#x5F0F;&#x5E76;&#x4E14;&#x81EA;&#x884C;&#x9009;&#x62E9;&#x663E;&#x793A;&#x54EA;&#x4E9B;&#x5185;&#x5BB9;&#x6765;&#x9884;&#x89C8;&#x3002;&#x5C31;&#x53EF;&#x4EE5;&#x5728;&#x5199;md&#x535A;&#x6587;&#x65F6;&#xFF0C;&#x5728;&#x60F3;&#x8981;&#x663E;&#x793A;&#x9884;&#x89C8;&#x7684;&#x90E8;&#x5206;&#x540E;&#x52A0;&#x4E0A;<code>&lt;I--more--&gt;</code>&#xFF0C;&#x8FD9;&#x6837;&#x8FD9;&#x6837;&#x9996;&#x9875;&#x548C;&#x5217;&#x8868;&#x9875;&#x5C55;&#x793A;&#x7684;&#x6587;&#x7AE0;&#x5185;&#x5BB9;&#x5C31;&#x662F;<code>&lt;!--more--&gt;</code>&#x4E4B;&#x524D;&#x7684;&#x6587;&#x5B57;&#xFF0C;&#x800C;&#x4E4B;&#x540E;&#x7684;&#x5C31;&#x4E0D;&#x4F1A;&#x663E;&#x793A;&#x4E86;&#xFF0C;&#x540C;&#x65F6;&#x4E5F;&#x4FDD;&#x7559;&#x6587;&#x7AE0;&#x539F;&#x6837;&#x5F0F;&#x3002;</p>]]></content>
      
      
      <categories>
          
          <category> Hexo框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> NexT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分组卷积——Group convolution</title>
      <link href="/2019/07/31/group-convolution/"/>
      <url>/2019/07/31/group-convolution/</url>
      
        <content type="html"><![CDATA[<p><img src="/2019/07/31/group-convolution/2.png" alt></p><a id="more"></a><h1 id="&#x5E38;&#x89C4;&#x5377;&#x79EF;"><a href="#&#x5E38;&#x89C4;&#x5377;&#x79EF;" class="headerlink" title="&#x5E38;&#x89C4;&#x5377;&#x79EF;"></a>&#x5E38;&#x89C4;&#x5377;&#x79EF;</h1><p>&#x5982;&#x679C;&#x8F93;&#x5165;feature map&#x5C3A;&#x5BF8;&#x4E3A;C&#x2217;H&#x2217;W&#xFF0C;&#x5377;&#x79EF;&#x6838;&#x6709;N&#x4E2A;&#xFF0C;&#x8F93;&#x51FA;feature map&#x4E0E;&#x5377;&#x79EF;&#x6838;&#x7684;&#x6570;&#x91CF;&#x76F8;&#x540C;&#x4E5F;&#x662F;N&#xFF0C;&#x6BCF;&#x4E2A;&#x5377;&#x79EF;&#x6838;&#x7684;&#x5C3A;&#x5BF8;&#x4E3A;C&#x2217;K&#x2217;K&#xFF0C;N&#x4E2A;&#x5377;&#x79EF;&#x6838;&#x7684;&#x603B;&#x53C2;&#x6570;&#x91CF;&#x4E3A;N&#x2217;C&#x2217;K&#x2217;K&#xFF0C;&#x8F93;&#x5165;map&#x4E0E;&#x8F93;&#x51FA;map&#x7684;&#x8FDE;&#x63A5;&#x65B9;&#x5F0F;&#x5982;&#x4E0A;&#x56FE;&#x5DE6;&#x6240;&#x793A;&#x3002;</p><h1 id="&#x5206;&#x7EC4;&#x5377;&#x79EF;"><a href="#&#x5206;&#x7EC4;&#x5377;&#x79EF;" class="headerlink" title="&#x5206;&#x7EC4;&#x5377;&#x79EF;"></a>&#x5206;&#x7EC4;&#x5377;&#x79EF;</h1><p>Group Convolution&#x5206;&#x7EC4;&#x5377;&#x79EF;&#xFF0C;&#x6700;&#x65E9;&#x89C1;&#x4E8E;AlexNet&#x2014;&#x2014;2012&#x5E74;Imagenet&#x7684;&#x51A0;&#x519B;&#x65B9;&#x6CD5;&#xFF0C;Group Convolution&#x88AB;&#x7528;&#x6765;&#x5207;&#x5206;&#x7F51;&#x7EDC;&#xFF0C;&#x4F7F;&#x5176;&#x5728;2&#x4E2A;GPU&#x4E0A;&#x5E76;&#x884C;&#x8FD0;&#x884C;&#xFF0C;AlexNet&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x5982;&#x4E0B;<br><img src="/2019/07/31/group-convolution/1.png" alt><br>Group Convolution&#x987E;&#x540D;&#x601D;&#x4E49;&#xFF0C;&#x5219;&#x662F;&#x5BF9;&#x8F93;&#x5165;feature map&#x8FDB;&#x884C;&#x5206;&#x7EC4;&#xFF0C;&#x7136;&#x540E;&#x6BCF;&#x7EC4;&#x5206;&#x522B;&#x5377;&#x79EF;&#x3002;&#x5047;&#x8BBE;&#x8F93;&#x5165;feature map&#x7684;&#x5C3A;&#x5BF8;&#x4ECD;&#x4E3A;C&#x2217;H&#x2217;W&#xFF0C;&#x8F93;&#x51FA;feature map&#x7684;&#x6570;&#x91CF;&#x4E3A;N&#x4E2A;&#xFF0C;&#x5982;&#x679C;&#x8BBE;&#x5B9A;&#x8981;&#x5206;&#x6210;G&#x4E2A;groups&#xFF0C;&#x5219;&#x6BCF;&#x7EC4;&#x7684;&#x8F93;&#x5165;feature map&#x6570;&#x91CF;&#x4E3A;$\frac{C}{G}$&#xFF0C;&#x6BCF;&#x7EC4;&#x7684;&#x8F93;&#x51FA;feature map&#x6570;&#x91CF;&#x4E3A;$\frac{N}{G}$&#xFF0C;&#x6BCF;&#x4E2A;&#x5377;&#x79EF;&#x6838;&#x7684;&#x5C3A;&#x5BF8;&#x4E3A;$\frac{C}{G}&#x2217;K&#x2217;K$&#xFF0C;&#x5377;&#x79EF;&#x6838;&#x7684;&#x603B;&#x6570;&#x4ECD;&#x4E3A;N&#x4E2A;&#xFF0C;&#x6BCF;&#x7EC4;&#x7684;&#x5377;&#x79EF;&#x6838;&#x6570;&#x91CF;&#x4E3A;$\frac{N}{G}$&#xFF0C;&#x5377;&#x79EF;&#x6838;&#x53EA;&#x4E0E;&#x5176;&#x540C;&#x7EC4;&#x7684;&#x8F93;&#x5165;map&#x8FDB;&#x884C;&#x5377;&#x79EF;&#xFF0C;&#x5377;&#x79EF;&#x6838;&#x7684;&#x603B;&#x53C2;&#x6570;&#x91CF;&#x4E3A;$N&#x2217;\frac{C}{G}&#x2217;K&#x2217;K$&#xFF0C;&#x53EF;&#x89C1;&#xFF0C;&#x603B;&#x53C2;&#x6570;&#x91CF;&#x51CF;&#x5C11;&#x4E3A;&#x539F;&#x6765;&#x7684;$\frac{1}{G}$&#xFF0C;&#x5176;&#x8FDE;&#x63A5;&#x65B9;&#x5F0F;&#x5982;&#x4E0A;&#x56FE;&#x53F3;&#x6240;&#x793A;&#xFF0C;group1&#x8F93;&#x51FA;map&#x6570;&#x4E3A;2&#xFF0C;&#x6709;2&#x4E2A;&#x5377;&#x79EF;&#x6838;&#xFF0C;&#x6BCF;&#x4E2A;&#x5377;&#x79EF;&#x6838;&#x7684;channel&#x6570;&#x4E3A;4&#xFF0C;&#x4E0E;group1&#x7684;&#x8F93;&#x5165;map&#x7684;channel&#x6570;&#x76F8;&#x540C;&#xFF0C;&#x5377;&#x79EF;&#x6838;&#x53EA;&#x4E0E;&#x540C;&#x7EC4;&#x7684;&#x8F93;&#x5165;map&#x5377;&#x79EF;&#xFF0C;&#x800C;&#x4E0D;&#x4E0E;&#x5176;&#x4ED6;&#x7EC4;&#x7684;&#x8F93;&#x5165;map&#x5377;&#x79EF;&#x3002;</p><h1 id="&#x7528;&#x9014;"><a href="#&#x7528;&#x9014;" class="headerlink" title="&#x7528;&#x9014;"></a>&#x7528;&#x9014;</h1><ul><li><strong>&#x51CF;&#x5C11;&#x53C2;&#x6570;&#x91CF;</strong><br>&#x5206;&#x6210;G&#x7EC4;&#xFF0C;&#x5219;&#x8BE5;&#x5C42;&#x7684;&#x53C2;&#x6570;&#x91CF;&#x51CF;&#x5C11;&#x4E3A;&#x539F;&#x6765;&#x7684;$\frac{1}{G}$</li><li><strong>Structured Sparss</strong><br>&#x6BCF;&#x4E2A;&#x5377;&#x79EF;&#x6838;&#x7684;&#x5C3A;&#x5BF8;&#x7531;$C&#x2217;K&#x2217;K$&#x53D8;&#x4E3A;$\frac{C}{G}&#x2217;K&#x2217;K$&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;&#x5176;&#x4F59;$(C&#x2212;\frac{C}{G})&#x2217;K&#x2217;K$&#x7684;&#x53C2;&#x6570;&#x89C6;&#x4E3A;0&#xFF0C;&#x6709;&#x65F6;&#x751A;&#x81F3;&#x53EF;&#x4EE5;&#x5728;&#x51CF;&#x5C11;&#x53C2;&#x6570;&#x91CF;&#x7684;&#x540C;&#x65F6;&#x83B7;&#x5F97;&#x66F4;&#x597D;&#x7684;&#x6548;&#x679C;&#xFF08;&#x76F8;&#x5F53;&#x4E8E;&#x6B63;&#x5219;&#xFF09;&#x3002;</li><li><strong>Depthwise Convolution</strong><br>&#x5F53;&#x5206;&#x7EC4;&#x6570;&#x91CF;&#x7B49;&#x4E8E;&#x8F93;&#x5165;map&#x6570;&#x91CF;&#xFF0C;&#x8F93;&#x51FA;map&#x6570;&#x91CF;&#x4E5F;&#x7B49;&#x4E8E;&#x8F93;&#x5165;map&#x6570;&#x91CF;&#xFF0C;&#x5373;$G=N=C$&#x3001;N&#x4E2A;&#x5377;&#x79EF;&#x6838;&#x6BCF;&#x4E2A;&#x5C3A;&#x5BF8;&#x4E3A;$1&#x2217;K&#x2217;K$&#x65F6;&#xFF0C;Group Convolution&#x5C31;&#x6210;&#x4E86;Depthwise Convolution</li><li><strong>Global Depthwise Convolution(GDC)</strong><br>&#x5982;&#x679C;&#x5206;&#x7EC4;&#x6570;$G=N=C$&#xFF0C;&#x540C;&#x65F6;&#x5377;&#x79EF;&#x6838;&#x7684;&#x5C3A;&#x5BF8;&#x4E0E;&#x8F93;&#x5165;map&#x7684;&#x5C3A;&#x5BF8;&#x76F8;&#x540C;&#xFF0C;&#x5373;$K=H=W$&#xFF0C;&#x5219;&#x8F93;&#x51FA;map&#x4E3A;$C&#x2217;1&#x2217;1$&#x5373;&#x957F;&#x5EA6;&#x4E3A;C&#x7684;&#x5411;&#x91CF;&#xFF0C;&#x6B64;&#x65F6;&#x79F0;&#x4E4B;&#x4E3A;Global Depthwise Convolution&#xFF08;GDC&#xFF09;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x6210;&#x662F;&#x5168;&#x5C40;&#x52A0;&#x6743;&#x6C60;&#x5316;&#xFF0C;&#x4E0E; Global Average Pooling&#xFF08;GAP&#xFF09; &#x7684;&#x4E0D;&#x540C;&#x4E4B;&#x5904;&#x5728;&#x4E8E;&#xFF0C;GDC &#x7ED9;&#x6BCF;&#x4E2A;&#x4F4D;&#x7F6E;&#x8D4B;&#x4E88;&#x4E86;&#x53EF;&#x5B66;&#x4E60;&#x7684;&#x6743;&#x91CD;&#xFF08;&#x5BF9;&#x4E8E;&#x5DF2;&#x5BF9;&#x9F50;&#x7684;&#x56FE;&#x50CF;&#x8FD9;&#x5F88;&#x6709;&#x6548;&#xFF0C;&#x6BD4;&#x5982;&#x4EBA;&#x8138;&#xFF0C;&#x4E2D;&#x5FC3;&#x4F4D;&#x7F6E;&#x548C;&#x8FB9;&#x754C;&#x4F4D;&#x7F6E;&#x7684;&#x6743;&#x91CD;&#x81EA;&#x7136;&#x5E94;&#x8BE5;&#x4E0D;&#x540C;&#xFF09;&#xFF0C;&#x800C;GAP&#x6BCF;&#x4E2A;&#x4F4D;&#x7F6E;&#x7684;&#x6743;&#x91CD;&#x76F8;&#x540C;&#xFF0C;&#x5168;&#x5C40;&#x53D6;&#x4E2A;&#x5E73;&#x5747;&#x3002;</li></ul><blockquote><p>&#x53C2;&#x8003;&#xFF1A;<a href="https://www.cnblogs.com/shine-lee/p/10243114.html" target="_blank" rel="noopener">https://www.cnblogs.com/shine-lee/p/10243114.html</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 卷积网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Squeeze-and-Excitation Networks(SENet)</title>
      <link href="/2019/07/31/SENet/"/>
      <url>/2019/07/31/SENet/</url>
      
        <content type="html"><![CDATA[<blockquote><p>&#x8BBA;&#x6587;&#x94FE;&#x63A5;&#xFF1A;<a href="https://arxiv.org/abs/1709.01507" target="_blank" rel="noopener">https://arxiv.org/abs/1709.01507</a><br>&#x4EE3;&#x7801;&#x94FE;&#x63A5;&#xFF1A;<a href="https://github.com/hujie-frank/SENet" target="_blank" rel="noopener">https://github.com/hujie-frank/SENet</a> </p></blockquote><h1 id="SENet&#x6982;&#x8FF0;"><a href="#SENet&#x6982;&#x8FF0;" class="headerlink" title="SENet&#x6982;&#x8FF0;"></a>SENet&#x6982;&#x8FF0;</h1><p>&#x5377;&#x79EF;&#x6838;&#x4F5C;&#x4E3A;CNN&#x7684;&#x6838;&#x5FC3;&#xFF0C;&#x901A;&#x5E38;&#x90FD;&#x662F;&#x5728;&#x5C40;&#x90E8;&#x611F;&#x53D7;&#x91CE;&#x4E0A;&#x5C06;&#x7A7A;&#x95F4;&#xFF08;spatial&#xFF09;&#x4FE1;&#x606F;&#x548C;&#x7279;&#x5F81;&#x7EF4;&#x5EA6;&#xFF08;channel-wise&#xFF09;&#x7684;&#x4FE1;&#x606F;&#x8FDB;&#x884C;&#x805A;&#x5408;&#x6700;&#x540E;&#x83B7;&#x53D6;&#x5168;&#x5C40;&#x4FE1;&#x606F;&#x3002;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7531;&#x4E00;&#x7CFB;&#x5217;&#x5377;&#x79EF;&#x5C42;&#x3001;&#x975E;&#x7EBF;&#x6027;&#x5C42;&#x548C;&#x4E0B;&#x91C7;&#x6837;&#x5C42;&#x6784;&#x6210;&#xFF0C;&#x8FD9;&#x6837;&#x5B83;&#x4EEC;&#x80FD;&#x591F;&#x4ECE;&#x5168;&#x5C40;&#x611F;&#x53D7;&#x91CE;&#x4E0A;&#x53BB;&#x6355;&#x83B7;&#x56FE;&#x50CF;&#x7684;&#x7279;&#x5F81;&#x6765;&#x8FDB;&#x884C;&#x56FE;&#x50CF;&#x7684;&#x63CF;&#x8FF0;&#xFF0C;&#x7136;&#x800C;&#x53BB;&#x5B66;&#x5230;&#x4E00;&#x4E2A;&#x6027;&#x80FD;&#x975E;&#x5E38;&#x5F3A;&#x52B2;&#x7684;&#x7F51;&#x7EDC;&#x662F;&#x76F8;&#x5F53;&#x56F0;&#x96BE;&#x7684;&#x3002;<br>&#x8BBA;&#x6587;&#x7684;&#x52A8;&#x673A;&#x662F;&#x4ECE;&#x7279;&#x5F81;&#x901A;&#x9053;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#x5165;&#x624B;&#xFF0C;&#x5E0C;&#x671B;&#x663E;&#x5F0F;&#x5730;&#x5EFA;&#x6A21;&#x7279;&#x5F81;&#x901A;&#x9053;&#x4E4B;&#x95F4;&#x7684;&#x76F8;&#x4E92;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x6CA1;&#x6709;&#x5F15;&#x5165;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x7A7A;&#x95F4;&#x7EF4;&#x5EA6;&#x6765;&#x8FDB;&#x884C;&#x7279;&#x5F81;&#x901A;&#x9053;&#x95F4;&#x7684;&#x878D;&#x5408;&#xFF0C;&#x800C;&#x662F;&#x91C7;&#x7528;&#x4E86;&#x4E00;&#x79CD;&#x5168;&#x65B0;&#x7684;&#x201C;&#x7279;&#x5F81;&#x91CD;&#x6807;&#x5B9A;&#x201D;&#x7B56;&#x7565;&#x3002;&#x5177;&#x4F53;&#x6765;&#x8BF4;&#xFF0C;&#x5C31;&#x662F;&#x901A;&#x8FC7;&#x5B66;&#x4E60;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x81EA;&#x52A8;&#x83B7;&#x53D6;&#x5230;&#x6BCF;&#x4E2A;&#x7279;&#x5F81;&#x901A;&#x9053;&#x7684;&#x91CD;&#x8981;&#x7A0B;&#x5EA6;&#xFF0C;&#x7136;&#x540E;&#x4F9D;&#x7167;&#x8FD9;&#x4E2A;&#x91CD;&#x8981;&#x7A0B;&#x5EA6;&#x53BB;&#x589E;&#x5F3A;&#x6709;&#x7528;&#x7684;&#x7279;&#x5F81;&#x5E76;&#x6291;&#x5236;&#x5BF9;&#x5F53;&#x524D;&#x4EFB;&#x52A1;&#x7528;&#x5904;&#x4E0D;&#x5927;&#x7684;&#x7279;&#x5F81;&#x3002;<br>&#x901A;&#x4FD7;&#x7684;&#x6765;&#x8BF4;SENet&#x7684;&#x6838;&#x5FC3;&#x601D;&#x60F3;&#x5728;&#x4E8E;&#x901A;&#x8FC7;&#x7F51;&#x7EDC;&#x6839;&#x636E;loss&#x53BB;&#x5B66;&#x4E60;&#x7279;&#x5F81;&#x6743;&#x91CD;&#xFF0C;&#x4F7F;&#x5F97;&#x6709;&#x6548;&#x7684;feature map&#x6743;&#x91CD;&#x5927;&#xFF0C;&#x65E0;&#x6548;&#x6216;&#x6548;&#x679C;&#x5C0F;&#x7684;feature map&#x6743;&#x91CD;&#x5C0F;&#x7684;&#x65B9;&#x5F0F;&#x8BAD;&#x7EC3;&#x6A21;&#x578B;&#x8FBE;&#x5230;&#x66F4;&#x597D;&#x7684;&#x7ED3;&#x679C;&#x3002;SE block&#x5D4C;&#x5728;&#x539F;&#x6709;&#x7684;&#x4E00;&#x4E9B;&#x5206;&#x7C7B;&#x7F51;&#x7EDC;&#x4E2D;&#x4E0D;&#x53EF;&#x907F;&#x514D;&#x5730;&#x589E;&#x52A0;&#x4E86;&#x4E00;&#x4E9B;&#x53C2;&#x6570;&#x548C;&#x8BA1;&#x7B97;&#x91CF;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x6548;&#x679C;&#x9762;&#x524D;&#x8FD8;&#x662F;&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#x7684; &#x3002;Sequeeze-and-Excitation(SE) block&#x5E76;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x7684;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x4E2A;&#x5B50;&#x7ED3;&#x6784;&#xFF0C;&#x53EF;&#x4EE5;&#x5D4C;&#x5230;&#x5176;&#x4ED6;&#x5206;&#x7C7B;&#x6216;&#x68C0;&#x6D4B;&#x6A21;&#x578B;&#x4E2D;&#x3002;</p><a id="more"></a><h1 id="SENet&#x7ED3;&#x6784;"><a href="#SENet&#x7ED3;&#x6784;" class="headerlink" title="SENet&#x7ED3;&#x6784;"></a>SENet&#x7ED3;&#x6784;</h1><p><img src="/2019/07/31/SENet/1.png" alt></p><p>&#x4E0A;&#x56FE;&#x4E3A;SENet&#x7684;block&#x5355;&#x5143;&#x7684;&#x793A;&#x610F;&#x56FE;&#xFF0C;&#x56FE;&#x4E2D;&#x7684;$F_{tr}$&#x4E3A;&#x4F20;&#x7EDF;&#x7684;&#x5377;&#x79EF;&#x7ED3;&#x6784;&#xFF0C;$X\in R^{C^<code>&#xD7;H^</code>&#xD7;W^`}$&#x4E3A;&#x8F93;&#x5165;&#xFF0C;$U\in$ R^{C&#xD7;H&#xD7;W}&#x4E3A;&#x8F93;&#x51FA;&#xFF0C;&#x8FD9;&#x4E9B;&#x90FD;&#x662F;&#x4EE5;&#x5F80;&#x7ED3;&#x6784;&#x4E2D;&#x5DF2;&#x5B58;&#x5728;&#x7684;&#xFF0C;SKNet&#x589E;&#x52A0;&#x7684;&#x662F;&#x90E8;&#x5206;&#x662F;$U$&#x540E;&#x9762;&#x7684;&#x7ED3;&#x6784;&#xFF0C;&#x901A;&#x8FC7;&#x4E09;&#x4E2A;&#x64CD;&#x4F5C;&#x6765;&#x91CD;&#x65B0;&#x6807;&#x5B9A;&#x524D;&#x9762;&#x5F97;&#x5230;&#x7684;&#x7279;&#x5F81;&#xFF1A;</p><ul><li><strong>Squeeze&#x64CD;&#x4F5C;</strong><br>&#x5BF9;$U$&#x505A;&#x4E00;&#x4E2A;Global Average Pooling,&#x5C06;$(H&#xD7;W&#xD7;C)$&#x7684;&#x8F93;&#x5165;&#x8F6C;&#x6362;&#x4E3A;$(1&#xD7;1&#xD7;C)$&#x7684;&#x8F93;&#x51FA;&#xFF0C;&#x5373;&#x5C06;&#x7A7A;&#x95F4;&#x4E0A;&#x6240;&#x6709;&#x70B9;&#x7684;&#x4FE1;&#x606F;&#x90FD;&#x5E73;&#x5747;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x503C;&#x3002;&#x8FD9;&#x4E48;&#x505A;&#x662F;&#x56E0;&#x4E3A;&#x6700;&#x7EC8;&#x7684;scale&#x662F;&#x5BF9;&#x6574;&#x4E2A;&#x901A;&#x9053;&#x4F5C;&#x7528;&#x7684;&#xFF0C;&#x8FD9;&#x5C31;&#x5F97;&#x57FA;&#x4E8E;&#x901A;&#x9053;&#x7684;&#x6574;&#x4F53;&#x4FE1;&#x606F;&#x6765;&#x8BA1;&#x7B97;scale&#x3002;&#x53E6;&#x5916;&#x4F5C;&#x8005;&#x8981;&#x5229;&#x7528;&#x7684;&#x662F;&#x901A;&#x9053;&#x95F4;&#x7684;&#x76F8;&#x5173;&#x6027;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x7A7A;&#x95F4;&#x5206;&#x5E03;&#x4E2D;&#x7684;&#x76F8;&#x5173;&#x6027;&#xFF0C;&#x7528;GAP&#x5C4F;&#x853D;&#x6389;&#x7A7A;&#x95F4;&#x4E0A;&#x7684;&#x5206;&#x5E03;&#x4FE1;&#x606F;&#x80FD;&#x8BA9;scale&#x7684;&#x8BA1;&#x7B97;&#x66F4;&#x52A0;&#x51C6;&#x786E;&#x3002;<script type="math/tex; mode=display">z_c=F_{sq}(U_c)=\frac{1}{W×H}\sum_{i=1}^{W}\sum_{j=1}^{H}u_c(i,j)</script></li><li><strong>Excitation&#x64CD;&#x4F5C;</strong><br>&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x7C7B;&#x4F3C;&#x4E8E;&#x5FAA;&#x73AF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#x95E8;&#x7684;&#x673A;&#x5236;&#x3002;&#x901A;&#x8FC7;&#x53C2;&#x6570; w &#x6765;&#x4E3A;&#x6BCF;&#x4E2A;&#x7279;&#x5F81;&#x901A;&#x9053;&#x751F;&#x6210;&#x6743;&#x91CD;&#xFF0C;&#x5176;&#x4E2D;&#x53C2;&#x6570; w &#x88AB;&#x5B66;&#x4E60;&#x7528;&#x6765;&#x663E;&#x5F0F;&#x5730;&#x5EFA;&#x6A21;&#x7279;&#x5F81;&#x901A;&#x9053;&#x95F4;&#x7684;&#x76F8;&#x5173;&#x6027;&#x3002;&#x7528;&#x4E24;&#x4E2A;&#x5168;&#x8FDE;&#x63A5;&#x6765;&#x5B9E;&#x73B0;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x5168;&#x8FDE;&#x63A5;&#x628A;C&#x4E2A;&#x901A;&#x9053;&#x538B;&#x7F29;&#x6210;&#x4E86;C/r&#x4E2A;&#x901A;&#x9053;&#x6765;&#x964D;&#x4F4E;&#x8BA1;&#x7B97;&#x91CF;&#xFF08;&#x540E;&#x9762;&#x8DDF;&#x4E86;RELU&#xFF09;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x5168;&#x8FDE;&#x63A5;&#x518D;&#x6062;&#x590D;&#x56DE;C&#x4E2A;&#x901A;&#x9053;&#xFF08;&#x540E;&#x9762;&#x8DDF;&#x4E86;Sigmoid&#xFF09;&#xFF0C;r&#x662F;&#x6307;&#x538B;&#x7F29;&#x7684;&#x6BD4;&#x4F8B;&#x3002;&#x4F5C;&#x8005;&#x5C1D;&#x8BD5;&#x4E86;r&#x5728;&#x5404;&#x79CD;&#x53D6;&#x503C;&#x4E0B;&#x7684;&#x6027;&#x80FD; &#xFF0C;&#x6700;&#x540E;&#x5F97;&#x51FA;&#x7ED3;&#x8BBA;r=16&#x65F6;&#x6574;&#x4F53;&#x6027;&#x80FD;&#x548C;&#x8BA1;&#x7B97;&#x91CF;&#x6700;&#x5E73;&#x8861;&#x3002;<script type="math/tex; mode=display">s=F_{ex}(z,W)=\sigma(g(z,W))=\sigma(W_2\delta(W_1z))</script></li><li><strong>*Rewight&#x64CD;&#x4F5C;</strong><br>&#x5C06; Excitation &#x7684;&#x8F93;&#x51FA;&#x7684;&#x6743;&#x91CD;&#x770B;&#x505A;&#x662F;&#x8FDB;&#x8FC7;&#x7279;&#x5F81;&#x9009;&#x62E9;&#x540E;&#x7684;&#x6BCF;&#x4E2A;&#x7279;&#x5F81;&#x901A;&#x9053;&#x7684;&#x91CD;&#x8981;&#x6027;&#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7;&#x4E58;&#x6CD5;&#x9010;&#x901A;&#x9053;&#x52A0;&#x6743;&#x5230;&#x5148;&#x524D;&#x7684;&#x7279;&#x5F81;&#x4E0A;&#xFF0C;&#x5B8C;&#x6210;&#x5728;&#x901A;&#x9053;&#x7EF4;&#x5EA6;&#x4E0A;&#x7684;&#x5BF9;&#x539F;&#x59CB;&#x7279;&#x5F81;&#x7684;&#x91CD;&#x6807;&#x5B9A;&#x3002;<script type="math/tex; mode=display">\overline{x_c}=F_{scale}=u_c\cdot s_c</script></li></ul><h1 id="SENet&#x5728;&#x5177;&#x4F53;&#x7F51;&#x7EDC;&#x4E2D;&#x5E94;&#x7528;"><a href="#SENet&#x5728;&#x5177;&#x4F53;&#x7F51;&#x7EDC;&#x4E2D;&#x5E94;&#x7528;" class="headerlink" title="SENet&#x5728;&#x5177;&#x4F53;&#x7F51;&#x7EDC;&#x4E2D;&#x5E94;&#x7528;"></a>SENet&#x5728;&#x5177;&#x4F53;&#x7F51;&#x7EDC;&#x4E2D;&#x5E94;&#x7528;</h1><p><img src="/2019/07/31/SENet/2.png" alt></p><p>&#x4E0A;&#x5DE6;&#x56FE;&#x662F;&#x5C06; SE &#x6A21;&#x5757;&#x5D4C;&#x5165;&#x5230; Inception &#x7ED3;&#x6784;&#x7684;&#x4E00;&#x4E2A;&#x793A;&#x4F8B;&#x3002;&#x65B9;&#x6846;&#x65C1;&#x8FB9;&#x7684;&#x7EF4;&#x5EA6;&#x4FE1;&#x606F;&#x4EE3;&#x8868;&#x8BE5;&#x5C42;&#x7684;&#x8F93;&#x51FA;&#x3002;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x4F7F;&#x7528; global average pooling &#x4F5C;&#x4E3A; Squeeze &#x64CD;&#x4F5C;&#x3002;&#x7D27;&#x63A5;&#x7740;&#x4E24;&#x4E2A; Fully Connected &#x5C42;&#x7EC4;&#x6210;&#x4E00;&#x4E2A; Bottleneck &#x7ED3;&#x6784;&#x53BB;&#x5EFA;&#x6A21;&#x901A;&#x9053;&#x95F4;&#x7684;&#x76F8;&#x5173;&#x6027;&#xFF0C;&#x5E76;&#x8F93;&#x51FA;&#x548C;&#x8F93;&#x5165;&#x7279;&#x5F81;&#x540C;&#x6837;&#x6570;&#x76EE;&#x7684;&#x6743;&#x91CD;&#x3002;&#x6211;&#x4EEC;&#x9996;&#x5148;&#x5C06;&#x7279;&#x5F81;&#x7EF4;&#x5EA6;&#x964D;&#x4F4E;&#x5230;&#x8F93;&#x5165;&#x7684; 1/16&#xFF0C;&#x7136;&#x540E;&#x7ECF;&#x8FC7; ReLu &#x6FC0;&#x6D3B;&#x540E;&#x518D;&#x901A;&#x8FC7;&#x4E00;&#x4E2A; Fully Connected &#x5C42;&#x5347;&#x56DE;&#x5230;&#x539F;&#x6765;&#x7684;&#x7EF4;&#x5EA6;&#x3002;&#x8FD9;&#x6837;&#x505A;&#x6BD4;&#x76F4;&#x63A5;&#x7528;&#x4E00;&#x4E2A; Fully Connected &#x5C42;&#x7684;&#x597D;&#x5904;&#x5728;&#x4E8E;&#xFF1A;1&#xFF09;&#x5177;&#x6709;&#x66F4;&#x591A;&#x7684;&#x975E;&#x7EBF;&#x6027;&#xFF0C;&#x53EF;&#x4EE5;&#x66F4;&#x597D;&#x5730;&#x62DF;&#x5408;&#x901A;&#x9053;&#x95F4;&#x590D;&#x6742;&#x7684;&#x76F8;&#x5173;&#x6027;&#xFF1B;2&#xFF09;&#x6781;&#x5927;&#x5730;&#x51CF;&#x5C11;&#x4E86;&#x53C2;&#x6570;&#x91CF;&#x548C;&#x8BA1;&#x7B97;&#x91CF;&#x3002;&#x7136;&#x540E;&#x901A;&#x8FC7;&#x4E00;&#x4E2A; Sigmoid &#x7684;&#x95E8;&#x83B7;&#x5F97; 0~1 &#x4E4B;&#x95F4;&#x5F52;&#x4E00;&#x5316;&#x7684;&#x6743;&#x91CD;&#xFF0C;&#x6700;&#x540E;&#x901A;&#x8FC7;&#x4E00;&#x4E2A; Scale &#x7684;&#x64CD;&#x4F5C;&#x6765;&#x5C06;&#x5F52;&#x4E00;&#x5316;&#x540E;&#x7684;&#x6743;&#x91CD;&#x52A0;&#x6743;&#x5230;&#x6BCF;&#x4E2A;&#x901A;&#x9053;&#x7684;&#x7279;&#x5F81;&#x4E0A;&#x3002;<br>&#x9664;&#x6B64;&#x4E4B;&#x5916;&#xFF0C;SE &#x6A21;&#x5757;&#x8FD8;&#x53EF;&#x4EE5;&#x5D4C;&#x5165;&#x5230;&#x542B;&#x6709; skip-connections &#x7684;&#x6A21;&#x5757;&#x4E2D;&#x3002;&#x4E0A;&#x53F3;&#x56FE;&#x662F;&#x5C06; SE &#x5D4C;&#x5165;&#x5230; ResNet &#x6A21;&#x5757;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#xFF0C;&#x64CD;&#x4F5C;&#x8FC7;&#x7A0B;&#x57FA;&#x672C;&#x548C; SE-Inception &#x4E00;&#x6837;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x662F;&#x5728; Addition &#x524D;&#x5BF9;&#x5206;&#x652F;&#x4E0A; Residual &#x7684;&#x7279;&#x5F81;&#x8FDB;&#x884C;&#x4E86;&#x7279;&#x5F81;&#x91CD;&#x6807;&#x5B9A;&#x3002;&#x5982;&#x679C;&#x5BF9; Addition &#x540E;&#x4E3B;&#x652F;&#x4E0A;&#x7684;&#x7279;&#x5F81;&#x8FDB;&#x884C;&#x91CD;&#x6807;&#x5B9A;&#xFF0C;&#x7531;&#x4E8E;&#x5728;&#x4E3B;&#x5E72;&#x4E0A;&#x5B58;&#x5728; 0~1 &#x7684; scale &#x64CD;&#x4F5C;&#xFF0C;&#x5728;&#x7F51;&#x7EDC;&#x8F83;&#x6DF1; BP &#x4F18;&#x5316;&#x65F6;&#x5C31;&#x4F1A;&#x5728;&#x9760;&#x8FD1;&#x8F93;&#x5165;&#x5C42;&#x5BB9;&#x6613;&#x51FA;&#x73B0;&#x68AF;&#x5EA6;&#x6D88;&#x6563;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x5BFC;&#x81F4;&#x6A21;&#x578B;&#x96BE;&#x4EE5;&#x4F18;&#x5316;&#x3002;<br>&#x76EE;&#x524D;&#x5927;&#x591A;&#x6570;&#x7684;&#x4E3B;&#x6D41;&#x7F51;&#x7EDC;&#x90FD;&#x662F;&#x57FA;&#x4E8E;&#x8FD9;&#x4E24;&#x79CD;&#x7C7B;&#x4F3C;&#x7684;&#x5355;&#x5143;&#x901A;&#x8FC7; repeat &#x65B9;&#x5F0F;&#x53E0;&#x52A0;&#x6765;&#x6784;&#x9020;&#x7684;&#x3002;&#x7531;&#x6B64;&#x53EF;&#x89C1;&#xFF0C;SE &#x6A21;&#x5757;&#x53EF;&#x4EE5;&#x5D4C;&#x5165;&#x5230;&#x73B0;&#x5728;&#x51E0;&#x4E4E;&#x6240;&#x6709;&#x7684;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x4E2D;&#x3002;&#x901A;&#x8FC7;&#x5728;&#x539F;&#x59CB;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x7684; building block &#x5355;&#x5143;&#x4E2D;&#x5D4C;&#x5165; SE &#x6A21;&#x5757;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x83B7;&#x5F97;&#x4E0D;&#x540C;&#x79CD;&#x7C7B;&#x7684; SENet&#x3002;&#x5982; SE-BN-Inception&#x3001;SE-ResNet&#x3001;SE-ReNeXt&#x3001;SE-Inception-ResNet-v2 &#x7B49;&#x7B49;&#x3002;</p><h1 id="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"><a href="#&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;" class="headerlink" title="&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;"></a>&#x5B9E;&#x9A8C;&#x7ED3;&#x679C;</h1><p><img src="/2019/07/31/SENet/3.png" alt></p><p><img src="/2019/07/31/SENet/4.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 卷积网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文阅读笔记５：CenterNet:Keypoint Triplets for Object Detection</title>
      <link href="/2019/07/31/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B05/"/>
      <url>/2019/07/31/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B05/</url>
      
        <content type="html"><![CDATA[<blockquote><p>&#x8BBA;&#x6587;&#x5730;&#x5740;&#xFF1A;<a href="https://arxiv.org/abs/1904.08189" target="_blank" rel="noopener">https://arxiv.org/abs/1904.08189</a><br>&#x4EE3;&#x7801;&#x5730;&#x5740;&#xFF1A;<a href="https://github.com/Duankaiwen/CenterNet" target="_blank" rel="noopener">https://github.com/Duankaiwen/CenterNet</a></p></blockquote><h1 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h1><p>&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x4E2D;&#xFF0C;&#x57FA;&#x4E8E;&#x5173;&#x952E;&#x70B9;&#x7684;&#x65B9;&#x6CD5;&#x7ECF;&#x5E38;&#x51FA;&#x73B0;&#x5927;&#x91CF;&#x4E0D;&#x6B63;&#x786E;&#x7684;&#x8FB9;&#x754C;&#x6846;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x7531;&#x4E8E;&#x7F3A;&#x4E4F;&#x5BF9;&#x76F8;&#x5173;&#x526A;&#x88C1;&#x533A;&#x57DF;&#x7684;&#x989D;&#x5916;&#x76D1;&#x7763;&#x9020;&#x6210;&#x7684;&#x3002;&#x672C;&#x6587;&#x63D0;&#x51FA;&#x4E00;&#x79CD;&#x6709;&#x6548;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x4EE5;&#x6700;&#x5C0F;&#x7684;&#x8D44;&#x6E90;&#x63A2;&#x7D22;&#x526A;&#x88C1;&#x533A;&#x57DF;&#x7684;&#x89C6;&#x89C9;&#x6A21;&#x5F0F;&#x3002;&#x672C;&#x6587;&#x63D0;&#x51FA;&#x7684;CenterNet&#x662F;&#x4E00;&#x4E2A;&#x5355;&#x9636;&#x6BB5;&#x7684;&#x5173;&#x952E;&#x70B9;&#x68C0;&#x6D4B;&#x6A21;&#x578B;&#x3002;CenterNet&#x901A;&#x8FC7;&#x68C0;&#x6D4B;&#x6BCF;&#x4E2A;&#x76EE;&#x6807;&#x7269;&#x770B;&#x4F5C;&#x662F;&#x4E00;&#x4E2A;&#x4E09;&#x4E2A;&#x5173;&#x952E;&#x70B9;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x4E00;&#x5BF9;&#x5173;&#x952E;&#x70B9;&#xFF0C;&#x8FD9;&#x6837;&#x505A;&#x540C;&#x65F6;&#x63D0;&#x9AD8;&#x4E86;&#x51C6;&#x786E;&#x7387;&#x53CA;&#x53EC;&#x56DE;&#x7387;&#x3002;&#x672C;&#x6587;&#x8FD8;&#x8BBE;&#x8BA1;&#x4E86;&#x53E6;&#x5916;&#x4E24;&#x4E2A;&#x6A21;&#x578B;&#xFF0C;cascade corner pooling&#x53CA;center pooling&#xFF0C;&#x5BB9;&#x6613;&#x83B7;&#x5F97;&#x4ECE;&#x5DE6;&#x4E0A;&#x89D2;&#x53CA;&#x53F3;&#x4E0B;&#x89D2;&#x7684;&#x4E30;&#x5BCC;&#x4FE1;&#x606F;&#xFF0C;&#x540C;&#x65F6;&#x5728;&#x4E2D;&#x95F4;&#x533A;&#x57DF;&#x83B7;&#x5F97;&#x66F4;&#x591A;&#x7684;&#x8BC6;&#x522B;&#x4FE1;&#x606F;&#x3002;&#x5728;&#xFF2D;&#xFF33;-COCO&#x6570;&#x636E;&#x96C6;&#x4E2D;&#xFF23;enterNet&#x7684;AP&#x8FBE;&#x5230;&#x4E86;47.0%&#x3002;</p><a id="more"></a><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>&#x672C;&#x6587;&#x6539;&#x8FDB;&#x4E86;CornerNet&#xFF0C;&#x589E;&#x52A0;&#x4E86;&#x4E00;&#x4E2A;&#x89C2;&#x5BDF;&#x6BCF;&#x4E2A;&#x5019;&#x9009;&#x533A;&#x57DF;&#x7684;&#x89C6;&#x89C9;&#x6A21;&#x5F0F;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x8FDB;&#x800C;&#x53EF;&#x4EE5;&#x5224;&#x65AD;&#x6BCF;&#x4E2A;&#x8FB9;&#x754C;&#x6846;&#x7684;&#x6B63;&#x786E;&#x6027;&#x3002;CenterNet&#x901A;&#x8FC7;&#x589E;&#x52A0;&#x4E00;&#x4E2A;&#x5173;&#x952E;&#x70B9;&#x6765;&#x63A2;&#x7D22;proposal&#x4E2D;&#x95F4;&#x533A;&#x57DF;&#xFF08;&#x8FD1;&#x4F3C;&#x51E0;&#x4F55;&#x4E2D;&#x5FC3;&#xFF09;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x672C;&#x6587;&#x521B;&#x65B0;&#x70B9;&#x5728;&#x4E8E;&#xFF0C;&#x5982;&#x679C;&#x9884;&#x6D4B;&#x7684;&#x8FB9;&#x754C;&#x6846;&#x4E0E;ground truth&#x6709;&#x8F83;&#x9AD8;&#x7684;IoU,&#x5219;&#x4E2D;&#x5FC3;&#x5173;&#x952E;&#x70B9;&#x9884;&#x6D4B;&#x51FA;&#x76F8;&#x540C;&#x7C7B;&#x522B;&#x7684;&#x6982;&#x7387;&#x8981;&#x9AD8;&#xFF0C;&#x53CD;&#x4E4B;&#x4EA6;&#x7136;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5728;&#x8FDB;&#x884C;inference&#x65F6;&#xFF0C;&#x5F53;&#x901A;&#x8FC7;&#x4E00;&#x7EC4;&#x5173;&#x952E;&#x70B9;&#x4EA7;&#x751F;&#x4E86;&#x4E00;&#x4E2A;&#x8FB9;&#x754C;&#x6846;&#xFF0C;&#x6211;&#x4EEC;&#x7EE7;&#x7EED;&#x89C2;&#x5BDF;&#x662F;&#x5426;&#x5177;&#x6709;&#x540C;&#x7C7B;&#x522B;&#x7684;&#x4E00;&#x4E2A;&#x5173;&#x952E;&#x70B9;&#x843D;&#x5165;&#x533A;&#x57DF;&#x7684;&#x4E2D;&#x5FC3;&#xFF0C;&#x5373;&#x4F7F;&#x7528;&#x4E09;&#x4E2A;&#x70B9;&#x8868;&#x793A;&#x76EE;&#x6807;&#x3002;<br><img src="/2019/07/31/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;5/1.png" alt><br>&#x4E3A;&#x4E86;&#x66F4;&#x597D;&#x7684;&#x68C0;&#x6D4B;&#x4E2D;&#x5FC3;&#x7684;&#x5173;&#x952E;&#x70B9;&#x5373;&#x89D2;&#x70B9;&#xFF0C;&#x63D0;&#x51FA;&#x4E86;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#x6765;&#x4E30;&#x5BCC;&#x4E2D;&#x5FC3;&#x70B9;&#x53CA;&#x89D2;&#x70B9;&#x7684;&#x4FE1;&#x606F;&#x3002;</p><ul><li><strong>center pooling</strong>&#xFF1A;&#x7528;&#x4E8E;&#x9884;&#x6D4B;&#x4E2D;&#x5FC3;&#x5173;&#x952E;&#x70B9;&#x7684;&#x5206;&#x652F;&#xFF0C;&#x6709;&#x5229;&#x4E8E;&#x4E2D;&#x5FC3;&#x83B7;&#x5F97;&#x66F4;&#x591A;&#x76EE;&#x6807;&#x7269;&#x7684;&#x4E2D;&#x5FC3;&#x533A;&#x57DF;&#xFF0C;&#x8FDB;&#x800C;&#x66F4;&#x6613;&#x611F;&#x77E5;proposal&#x7684;&#x4E2D;&#x5FC3;&#x533A;&#x57DF;&#x3002;&#x901A;&#x8FC7;&#x53D6;&#x4E2D;&#x5FC3;&#x4F4D;&#x7F6E;&#x6A2A;&#x5411;&#x4E0E;&#x7EB5;&#x5411;&#x54CD;&#x5E94;&#x503C;&#x7684;&#x548C;&#x7684;&#x6700;&#x5927;&#x503C;&#x5B9E;&#x73B0;&#x6B64;&#x65B9;&#x6CD5;&#x3002;</li><li><strong>cascade corner pooling</strong>&#xFF1A;&#x589E;&#x52A0;&#x539F;&#x59CB;&#x7684;corner pooling&#x611F;&#x77E5;&#x5185;&#x90E8;&#x4FE1;&#x606F;&#x7684;&#x529F;&#x80FD;&#x3002;&#x7ED3;&#x5408;&#x4E86;feature map&#x4E2D;&#x76EE;&#x6807;&#x7269;&#x5185;&#x90E8;&#x53CA;&#x8FB9;&#x754C;&#x65B9;&#x5411;&#x7684;&#x54CD;&#x5E94;&#x503C;&#x548C;&#x7684;&#x6700;&#x5927;&#x503C;&#x6765;&#x9884;&#x6D4B;&#x89D2;&#x70B9;&#x3002;&#x7ECF;&#x8BD5;&#x9A8C;&#x8BC1;&#x5B9E;&#xFF0C;&#x6B64;&#x65B9;&#x6CD5;&#x5728;&#x5B58;&#x5728;feature-level &#x566A;&#x58F0;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x66F4;&#x52A0;&#x7A33;&#x5B9A;&#xFF0C;&#x6709;&#x52A9;&#x4E8E;&#x51C6;&#x786E;&#x7387;&#x53CA;&#x53EC;&#x56DE;&#x7387;&#x7684;&#x63D0;&#x5347;&#x3002;</li></ul><h1 id="Related-Work"><a href="#Related-Work" class="headerlink" title="Related Work"></a>Related Work</h1><ul><li><strong>Two-stage approaches</strong><br>&#x628A;&#x76EE;&#x6807;&#x68C0;&#x6D4B;task&#x5206;&#x4E3A;&#x4E24;&#x4E2A;stages&#xFF1A;&#x63D0;&#x53D6;RoIs,&#x7136;&#x540E;&#x5BF9;RoIs&#x8FDB;&#x884C;&#x5206;&#x7C7B;&#x548C;&#x56DE;&#x5F52;&#x3002;</li><li><strong>One-stage approaches</strong><br>&#x79FB;&#x9664;RoI&#x63D0;&#x53D6;&#x6B65;&#x9AA4;&#xFF0C;&#x76F4;&#x63A5;&#x5BF9;&#x5019;&#x9009;&#x7684;anchor boxs&#x8FDB;&#x884C;&#x5206;&#x7C7B;&#x548C;&#x56DE;&#x5F52;</li></ul><h1 id="Our-Approach"><a href="#Our-Approach" class="headerlink" title="Our Approach"></a>Our Approach</h1><h2 id="baseline-and-Motivation"><a href="#baseline-and-Motivation" class="headerlink" title="baseline and Motivation"></a>baseline and Motivation</h2><p>&#x672C;&#x8BBA;&#x6587;&#x7684; baseline &#x4E3A; CornerNet&#xFF0C;&#x56E0;&#x6B64;&#x9996;&#x5148;&#x8BA8;&#x8BBA; CornerNet &#x4E3A;&#x4EC0;&#x4E48;&#x5BB9;&#x6613;&#x4EA7;&#x751F;&#x5F88;&#x591A;&#x7684;&#x8BEF;&#x68C0;&#x3002;&#x9996;&#x5148;&#xFF0C;CornerNet &#x901A;&#x8FC7;&#x68C0;&#x6D4B;&#x89D2;&#x70B9;&#x786E;&#x5B9A;&#x76EE;&#x6807;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x901A;&#x8FC7;&#x521D;&#x59CB;&#x5019;&#x9009;&#x6846; anchor &#x7684;&#x56DE;&#x5F52;&#x786E;&#x5B9A;&#x76EE;&#x6807;&#xFF0C;&#x7531;&#x4E8E;&#x6CA1;&#x6709;&#x4E86; anchor &#x7684;&#x9650;&#x5236;&#xFF0C;&#x4F7F;&#x5F97;&#x4EFB;&#x610F;&#x4E24;&#x4E2A;&#x89D2;&#x70B9;&#x90FD;&#x53EF;&#x4EE5;&#x7EC4;&#x6210;&#x4E00;&#x4E2A;&#x76EE;&#x6807;&#x6846;&#xFF0C;&#x8FD9;&#x5C31;&#x5BF9;&#x5224;&#x65AD;&#x4E24;&#x4E2A;&#x89D2;&#x70B9;&#x662F;&#x5426;&#x5C5E;&#x4E8E;&#x540C;&#x4E00;&#x7269;&#x4F53;&#x7684;&#x7B97;&#x6CD5;&#x8981;&#x6C42;&#x5F88;&#x9AD8;&#xFF0C;&#x4E00;&#x4F46;&#x51C6;&#x786E;&#x5EA6;&#x5DEE;&#x4E00;&#x70B9;&#xFF0C;&#x5C31;&#x4F1A;&#x4EA7;&#x751F;&#x5F88;&#x591A;&#x9519;&#x8BEF;&#x76EE;&#x6807;&#x6846;&#x3002;&#x5176;&#x6B21;&#xFF0C;&#x6070;&#x6070;&#x8FD9;&#x4E2A;&#x7B97;&#x6CD5;&#x6709;&#x7F3A;&#x9677;&#x3002;&#x56E0;&#x4E3A;&#x6B64;&#x7B97;&#x6CD5;&#x5728;&#x5224;&#x65AD;&#x4E24;&#x4E2A;&#x89D2;&#x70B9;&#x662F;&#x5426;&#x5C5E;&#x4E8E;&#x540C;&#x4E00;&#x7269;&#x4F53;&#x65F6;&#xFF0C;&#x7F3A;&#x4E4F;&#x5168;&#x5C40;&#x4FE1;&#x606F;&#x7684;&#x8F85;&#x52A9;&#xFF0C;&#x56E0;&#x6B64;&#x5F88;&#x5BB9;&#x6613;&#x628A;&#x539F;&#x672C;&#x4E0D;&#x662F;&#x540C;&#x4E00;&#x7269;&#x4F53;&#x7684;&#x4E24;&#x4E2A;&#x89D2;&#x70B9;&#x770B;&#x6210;&#x662F;&#x4E00;&#x5BF9;&#x89D2;&#x70B9;&#xFF0C;&#x56E0;&#x6B64;&#x4EA7;&#x751F;&#x4E86;&#x5F88;&#x591A;&#x9519;&#x8BEF;&#x76EE;&#x6807;&#x6846;&#x3002;&#x6700;&#x540E;&#xFF0C;&#x89D2;&#x70B9;&#x7684;&#x7279;&#x5F81;&#x5BF9;&#x8FB9;&#x7F18;&#x6BD4;&#x8F83;&#x654F;&#x611F;&#xFF0C;&#x8FD9;&#x5BFC;&#x81F4;&#x5F88;&#x591A;&#x89D2;&#x70B9;&#x540C;&#x6837;&#x5BF9;&#x80CC;&#x666F;&#x7684;&#x8FB9;&#x7F18;&#x5F88;&#x654F;&#x611F;&#xFF0C;&#x56E0;&#x6B64;&#x5728;&#x80CC;&#x666F;&#x5904;&#x4E5F;&#x68C0;&#x6D4B;&#x5230;&#x4E86;&#x9519;&#x8BEF;&#x7684;&#x89D2;&#x70B9;&#x3002;&#x7EFC;&#x4E0A;&#x539F;&#x56E0;&#xFF0C;&#x4F7F;&#x5F97; CornerNet &#x4EA7;&#x751F;&#x4E86;&#x5F88;&#x591A;&#x8BEF;&#x68C0;&#x3002;</p><p>&#x6211;&#x4EEC;&#x5206;&#x6790;&#x51FA;&#x4E86; CornerNet &#x7684;&#x95EE;&#x9898;&#x540E;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x662F;&#x627E;&#x51FA;&#x89E3;&#x51B3;&#x4E4B;&#x9053;&#xFF0C;&#x5173;&#x952E;&#x95EE;&#x9898;&#x5728;&#x4E8E;&#x8BA9;&#x7F51;&#x7EDC;&#x5177;&#x5907;&#x611F;&#x77E5;&#x7269;&#x4F53;&#x5185;&#x90E8;&#x4FE1;&#x606F;&#x7684;&#x80FD;&#x529B;&#x3002;&#x4E00;&#x4E2A;&#x8F83;&#x5BB9;&#x6613;&#x60F3;&#x5230;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#x628A; CornerNet &#x53D8;&#x6210;&#x4E00;&#x4E2A; two-stage &#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5373;&#x5229;&#x7528; RoI pooling &#x6216; RoI align &#x63D0;&#x53D6;&#x9884;&#x6D4B;&#x6846;&#x7684;&#x5185;&#x90E8;&#x4FE1;&#x606F;&#xFF0C;&#x4ECE;&#x800C;&#x83B7;&#x5F97;&#x611F;&#x77E5;&#x80FD;&#x529B;&#x3002;&#x4F46;&#x8FD9;&#x6837;&#x505A;&#x5F00;&#x9500;&#x5F88;&#x5927;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;&#x7528;&#x5173;&#x952E;&#x70B9;&#x4E09;&#x5143;&#x7EC4;&#x6765;&#x68C0;&#x6D4B;&#x76EE;&#x6807;&#xFF0C;&#x8FD9;&#x6837;&#x4F7F;&#x5F97;&#x6211;&#x4EEC;&#x7684;&#x65B9;&#x6CD5;&#x5728; one-stage &#x7684;&#x524D;&#x63D0;&#x4E0B;&#x5C31;&#x80FD;&#x83B7;&#x5F97;&#x611F;&#x77E5;&#x7269;&#x4F53;&#x5185;&#x90E8;&#x4FE1;&#x606F;&#x7684;&#x80FD;&#x529B;&#x3002;&#x5E76;&#x4E14;&#x5F00;&#x9500;&#x8F83;&#x5C0F;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x5173;&#x6CE8;&#x7269;&#x4F53;&#x7684;&#x4E2D;&#x5FC3;&#xFF0C;&#x4ECE;&#x800C;&#x907F;&#x514D;&#x4E86; RoI pooling &#x6216; RoI align &#x5173;&#x6CE8;&#x7269;&#x4F53;&#x5185;&#x90E8;&#x7684;&#x5168;&#x90E8;&#x4FE1;&#x606F;&#x3002;</p><h2 id="Object-Detecton-as-Keypoint-Triplets"><a href="#Object-Detecton-as-Keypoint-Triplets" class="headerlink" title="Object Detecton as Keypoint Triplets"></a>Object Detecton as Keypoint Triplets</h2><p>&#x7F51;&#x7EDC;&#x901A;&#x8FC7; center pooling &#x548C; cascade corner pooling &#x5206;&#x522B;&#x5F97;&#x5230; center heatmap &#x548C; corner heatmaps&#xFF0C;&#x7528;&#x6765;&#x9884;&#x6D4B;&#x5173;&#x952E;&#x70B9;&#x7684;&#x4F4D;&#x7F6E;&#x3002;&#x5F97;&#x5230;&#x89D2;&#x70B9;&#x7684;&#x4F4D;&#x7F6E;&#x548C;&#x7C7B;&#x522B;&#x540E;&#xFF0C;&#x901A;&#x8FC7; offsets &#x5C06;&#x89D2;&#x70B9;&#x7684;&#x4F4D;&#x7F6E;&#x6620;&#x5C04;&#x5230;&#x8F93;&#x5165;&#x56FE;&#x7247;&#x7684;&#x5BF9;&#x5E94;&#x4F4D;&#x7F6E;&#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7; embedings &#x5224;&#x65AD;&#x54EA;&#x4E24;&#x4E2A;&#x89D2;&#x70B9;&#x5C5E;&#x4E8E;&#x540C;&#x4E00;&#x4E2A;&#x7269;&#x4F53;&#xFF0C;&#x4EE5;&#x4FBF;&#x7EC4;&#x6210;&#x4E00;&#x4E2A;&#x68C0;&#x6D4B;&#x6846;&#x3002;&#x6B63;&#x5982;&#x524D;&#x6587;&#x6240;&#x8BF4;&#xFF0C;&#x7EC4;&#x5408;&#x8FC7;&#x7A0B;&#x4E2D;&#x7531;&#x4E8E;&#x7F3A;&#x4E4F;&#x6765;&#x81EA;&#x76EE;&#x6807;&#x533A;&#x57DF;&#x5185;&#x90E8;&#x4FE1;&#x606F;&#x7684;&#x8F85;&#x52A9;&#xFF0C;&#x4ECE;&#x800C;&#x5BFC;&#x81F4;&#x5927;&#x91CF;&#x7684;&#x8BEF;&#x68C0;&#x3002;&#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x8FD9;&#x4E00;&#x95EE;&#x9898;&#xFF0C;CenterNet &#x4E0D;&#x4EC5;&#x9884;&#x6D4B;&#x89D2;&#x70B9;&#xFF0C;&#x8FD8;&#x9884;&#x6D4B;&#x4E2D;&#x5FC3;&#x70B9;&#x3002;&#x6211;&#x4EEC;&#x5BF9;&#x6BCF;&#x4E2A;&#x9884;&#x6D4B;&#x6846;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x4E2D;&#x5FC3;&#x533A;&#x57DF;&#xFF0C;&#x901A;&#x8FC7;&#x5224;&#x65AD;&#x6BCF;&#x4E2A;&#x76EE;&#x6807;&#x6846;&#x7684;&#x4E2D;&#x5FC3;&#x533A;&#x57DF;&#x662F;&#x5426;&#x542B;&#x6709;&#x4E2D;&#x5FC3;&#x70B9;&#xFF0C;&#x82E5;&#x6709;&#x5219;&#x4FDD;&#x7559;&#xFF0C;&#x5E76;&#x4E14;&#x6B64;&#x65F6;&#x6846;&#x7684; confidence &#x4E3A;&#x4E2D;&#x5FC3;&#x70B9;&#xFF0C;&#x5DE6;&#x4E0A;&#x89D2;&#x70B9;&#x548C;&#x53F3;&#x4E0B;&#x89D2;&#x70B9;&#x7684;confidence&#x7684;&#x5E73;&#x5747;&#xFF0C;&#x82E5;&#x65E0;&#x5219;&#x53BB;&#x9664;&#xFF0C;&#x4F7F;&#x5F97;&#x7F51;&#x7EDC;&#x5177;&#x5907;&#x611F;&#x77E5;&#x76EE;&#x6807;&#x533A;&#x57DF;&#x5185;&#x90E8;&#x4FE1;&#x606F;&#x7684;&#x80FD;&#x529B;&#xFF0C;&#x80FD;&#x591F;&#x6709;&#x6548;&#x9664;&#x9519;&#x8BEF;&#x7684;&#x76EE;&#x6807;&#x6846;&#x3002;<br><img src="&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;5//2.png" alt><br>&#x6211;&#x4EEC;&#x53D1;&#x73B0;&#x4E2D;&#x5FC3;&#x533A;&#x57DF;&#x7684;&#x5C3A;&#x5EA6;&#x4F1A;&#x5F71;&#x54CD;&#x9519;&#x8BEF;&#x6846;&#x53BB;&#x9664;&#x6548;&#x679C;&#x3002;&#x4E2D;&#x5FC3;&#x533A;&#x57DF;&#x8FC7;&#x5C0F;&#x5BFC;&#x81F4;&#x5F88;&#x591A;&#x51C6;&#x786E;&#x7684;&#x5C0F;&#x5C3A;&#x5EA6;&#x7684;&#x76EE;&#x6807;&#x4E5F;&#x4F1A;&#x88AB;&#x53BB;&#x9664;&#xFF0C;&#x800C;&#x4E2D;&#x5FC3;&#x533A;&#x57DF;&#x8FC7;&#x5927;&#x5BFC;&#x81F4;&#x5F88;&#x591A;&#x5927;&#x5C3A;&#x5EA6;&#x7684;&#x9519;&#x8BEF;&#x76EE;&#x6807;&#x6846;&#x65E0;&#x6CD5;&#x88AB;&#x53BB;&#x9664;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;&#x5C3A;&#x5EA6;&#x53EF;&#x8C03;&#x8282;&#x7684;&#x4E2D;&#x5FC3;&#x533A;&#x57DF;&#x5B9A;&#x4E49;&#x6CD5;&#x3002;</p><script type="math/tex; mode=display">\left\{ \begin{array}{c}    ctl_{x}=\frac{(n+1)tl_x+(n-1)br_x}{2n} \\     ctl_{y}=\frac{(n+1)tl_y+(n-1)br_y}{2n} \\     cbr_{x}=\frac{(n-1)tl_x+(n+1)br_x}{2n} \\    cbr_{y}=\frac{(n-1)tl_y+(n+1)br_y}{2n}\end{array}\right.</script><p>&#x8BE5;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x5728;&#x9884;&#x6D4B;&#x6846;&#x7684;&#x5C3A;&#x5EA6;&#x8F83;&#x5927;&#x65F6;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x76F8;&#x5BF9;&#x8F83;&#x5C0F;&#x7684;&#x4E2D;&#x5FC3;&#x533A;&#x57DF;&#xFF0C;&#x5728;&#x9884;&#x6D4B;&#x6846;&#x7684;&#x5C3A;&#x5EA6;&#x8F83;&#x5C0F;&#x65F6;&#x9884;&#x6D4B;&#x4E00;&#x4E2A;&#x76F8;&#x5BF9;&#x8F83;&#x5927;&#x7684;&#x4E2D;&#x5FC3;&#x533A;&#x57DF;&#x3002;&#x5982;&#x56FE;&#x6240;&#x793A;&#x3002;<br><img src="/2019/07/31/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;5/3.png" alt><br>$n$&#x51B3;&#x5B9A;&#x4E86;&#x4E2D;&#x5FC3;&#x533A;&#x57DF;&#x7684;&#x5C3A;&#x5EA6;&#x3002;&#x5728;&#x672C;&#x6587;&#x4E2D;&#xFF0C;&#x5BF9;&#x4E8E;&#x5C3A;&#x5EA6;&#x5C0F;&#x4E8E;&#x6216;&#x8005;&#x5927;&#x4E8E;150&#x7684;&#x8FB9;&#x754C;&#x6846;&#xFF0C;$n$&#x5206;&#x522B;&#x53D6;&#x503C;&#x4E3A;3&#x6216;5&#x3002;</p><h2 id="Enriching-Center-and-Corner-Information"><a href="#Enriching-Center-and-Corner-Information" class="headerlink" title="Enriching Center and Corner Information"></a>Enriching Center and Corner Information</h2><p><img src="/2019/07/31/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;5/4.png" alt></p><ul><li><strong>Center pooling</strong><br>&#x4E00;&#x4E2A;&#x7269;&#x4F53;&#x7684;&#x4E2D;&#x5FC3;&#x5E76;&#x4E0D;&#x4E00;&#x5B9A;&#x542B;&#x6709;&#x5F88;&#x5F3A;&#x7684;&#xFF0C;&#x6613;&#x4E8E;&#x533A;&#x5206;&#x4E8E;&#x5176;&#x4ED6;&#x7C7B;&#x522B;&#x7684;&#x8BED;&#x4E49;&#x4FE1;&#x606F;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x4E00;&#x4E2A;&#x4EBA;&#x7684;&#x5934;&#x90E8;&#x542B;&#x6709;&#x5F88;&#x5F3A;&#x7684;&#xFF0C;&#x6613;&#x4E8E;&#x533A;&#x5206;&#x4E8E;&#x5176;&#x4ED6;&#x7C7B;&#x522B;&#x7684;&#x8BED;&#x4E49;&#x4FE1;&#x606F;&#xFF0C;&#x4F46;&#x662F;&#x5176;&#x4E2D;&#x5FC3;&#x5F80;&#x5F80;&#x4F4D;&#x4E8E;&#x4EBA;&#x7684;&#x4E2D;&#x90E8;&#x3002;&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;center pooling &#x6765;&#x4E30;&#x5BCC;&#x4E2D;&#x5FC3;&#x70B9;&#x7279;&#x5F81;&#x3002;center pooling&#x63D0;&#x53D6;&#x4E2D;&#x5FC3;&#x70B9;&#x6C34;&#x5E73;&#x65B9;&#x5411;&#x548C;&#x5782;&#x76F4;&#x65B9;&#x5411;&#x7684;&#x6700;&#x5927;&#x503C;&#x5E76;&#x76F8;&#x52A0;&#xFF0C;&#x4EE5;&#x6B64;&#x7ED9;&#x4E2D;&#x5FC3;&#x70B9;&#x63D0;&#x4F9B;&#x6240;&#x5904;&#x4F4D;&#x7F6E;&#x4EE5;&#x5916;&#x7684;&#x4FE1;&#x606F;&#x3002;&#x8FD9;&#x4E00;&#x64CD;&#x4F5C;&#x4F7F;&#x4E2D;&#x5FC3;&#x70B9;&#x6709;&#x673A;&#x4F1A;&#x83B7;&#x5F97;&#x66F4;&#x6613;&#x4E8E;&#x533A;&#x5206;&#x4E8E;&#x5176;&#x4ED6;&#x7C7B;&#x522B;&#x7684;&#x8BED;&#x4E49;&#x4FE1;&#x606F;&#x3002;Center pooling &#x53EF;&#x901A;&#x8FC7;&#x4E0D;&#x540C;&#x65B9;&#x5411;&#x4E0A;&#x7684; corner pooling &#x7684;&#x7EC4;&#x5408;&#x5B9E;&#x73B0;&#x3002;&#x4E00;&#x4E2A;&#x6C34;&#x5E73;&#x65B9;&#x5411;&#x4E0A;&#x7684;&#x53D6;&#x6700;&#x5927;&#x503C;&#x64CD;&#x4F5C;&#x53EF;&#x7531; left pooling &#x548C; right pooling&#x901A;&#x8FC7;&#x4E32;&#x8054;&#x5B9E;&#x73B0;&#xFF0C;&#x540C;&#x7406;&#xFF0C;&#x4E00;&#x4E2A;&#x5782;&#x76F4;&#x65B9;&#x5411;&#x4E0A;&#x7684;&#x53D6;&#x6700;&#x5927;&#x503C;&#x64CD;&#x4F5C;&#x53EF;&#x7531; top pooling &#x548C; bottom pooling&#x901A;&#x8FC7;&#x4E32;&#x8054;&#x5B9E;&#x73B0;</li><li><strong>Cascade corner pooling</strong><br>&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#x89D2;&#x70B9;&#x4F4D;&#x4E8E;&#x7269;&#x4F53;&#x5916;&#x90E8;&#xFF0C;&#x6240;&#x5904;&#x4F4D;&#x7F6E;&#x5E76;&#x4E0D;&#x542B;&#x6709;&#x5173;&#x8054;&#x7269;&#x4F53;&#x7684;&#x8BED;&#x4E49;&#x4FE1;&#x606F;&#xFF0C;&#x8FD9;&#x4E3A;&#x89D2;&#x70B9;&#x7684;&#x68C0;&#x6D4B;&#x5E26;&#x6765;&#x4E86;&#x56F0;&#x96BE;&#x3002;&#x4F20;&#x7EDF;&#x505A;&#x6CD5; corner pooling&#xFF0C;&#x5B83;&#x63D0;&#x53D6;&#x7269;&#x4F53;&#x8FB9;&#x754C;&#x6700;&#x5927;&#x503C;&#x5E76;&#x76F8;&#x52A0;&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x53EA;&#x80FD;&#x63D0;&#x4F9B;&#x5173;&#x8054;&#x7269;&#x4F53;&#x8FB9;&#x7F18;&#x8BED;&#x4E49;&#x4FE1;&#x606F;&#xFF0C;&#x5BF9;&#x4E8E;&#x66F4;&#x52A0;&#x4E30;&#x5BCC;&#x7684;&#x7269;&#x4F53;&#x5185;&#x90E8;&#x8BED;&#x4E49;&#x4FE1;&#x606F;&#x5219;&#x5F88;&#x96BE;&#x63D0;&#x53D6;&#x5230;&#x3002;cascade corner pooling &#x9996;&#x5148;&#x63D0;&#x53D6;&#x7269;&#x4F53;&#x8FB9;&#x754C;&#x6700;&#x5927;&#x503C;&#xFF0C;&#x7136;&#x540E;&#x5728;&#x8FB9;&#x754C;&#x6700;&#x5927;&#x503C;&#x5904;&#x7EE7;&#x7EED;&#x5411;&#x5185;&#x90E8;(&#x56FE;&#x4E2D;&#x6CBF;&#x865A;&#x7EBF;&#x65B9;&#x5411;)&#x63D0;&#x53D6;&#x63D0;&#x6700;&#x5927;&#x503C;&#xFF0C;&#x5E76;&#x4E0E;&#x8FB9;&#x754C;&#x6700;&#x5927;&#x503C;&#x76F8;&#x52A0;&#xFF0C;&#x4EE5;&#x6B64;&#x7ED9;&#x89D2;&#x70B9;&#x7279;&#x5F81;&#x63D0;&#x4F9B;&#x66F4;&#x52A0;&#x4E30;&#x5BCC;&#x7684;&#x5173;&#x8054;&#x7269;&#x4F53;&#x8BED;&#x4E49;&#x4FE1;&#x606F;&#x3002;Cascade corner pooling &#x4E5F;&#x53EF;&#x901A;&#x8FC7;&#x4E0D;&#x540C;&#x65B9;&#x5411;&#x4E0A;&#x7684; corner pooling &#x7684;&#x7EC4;&#x5408;&#x5B9E;&#x73B0;&#x3002;<br><img src="&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;5//5.png" alt></li></ul><h2 id="Training-and-Inference"><a href="#Training-and-Inference" class="headerlink" title="Training and Inference"></a>Training and Inference</h2><ul><li><strong>Training</strong> &#x8F93;&#x5165;&#x56FE;&#x50CF;&#x7684;&#x5206;&#x8FA8;&#x7387;&#x4E3A;512&#xD7;512&#xFF0C;heatmaps&#x7684;&#x5927;&#x5C0F;&#x4E3A;128&#xD7;128&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x6570;&#x636E;&#x589E;&#x5F3A;&#x6765;&#x8BAD;&#x7EC3;&#x4E00;&#x4E2A;&#x9C81;&#x68D2;&#x7684;&#x6A21;&#x578B;&#x3002;&#x7528;Adam&#x6765;&#x4F18;&#x5316;&#x8BAD;&#x7EC3;&#x7684;&#x635F;&#x5931;&#xFF1A;<script type="math/tex; mode=display">L=L_{det}^{co}+L_{det}^{ce}+\alpha L_{pull}^{co}+\beta L_{push}^{co}+\gamma(L_{off}^{co}+L_{off}^{ce})</script></li></ul><h1 id="Experiments"><a href="#Experiments" class="headerlink" title="Experiments"></a>Experiments</h1><ul><li><strong>Comparisons with State-of-the-art Detectors</strong><br><img src="/2019/07/31/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;5/6.png" alt></li></ul>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 目标检测 </tag>
            
            <tag> anchor-free </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文阅读笔记4：CornerNet:Detecting Objects as Paired Keypoints</title>
      <link href="/2019/07/30/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B04/"/>
      <url>/2019/07/30/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B04/</url>
      
        <content type="html"><![CDATA[<blockquote><p>&#x8BBA;&#x6587;&#x94FE;&#x63A5;&#xFF1A;<a href="https://arxiv.org/abs/1808.01244" target="_blank" rel="noopener">https://arxiv.org/abs/1808.01244</a><br>&#x4EE3;&#x7801;&#x94FE;&#x63A5;&#xFF1A;<a href="https://github.com/umich-vl/CornerNet" target="_blank" rel="noopener">https://github.com/umich-vl/CornerNet</a></p></blockquote><h1 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h1><p>&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x79CD;&#x65B0;&#x7684;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x65B9;&#x6CD5;&#xFF0C;&#x4F7F;&#x7528;&#x5355;&#x4E2A;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x5C06;&#x76EE;&#x6807;&#x8FB9;&#x754C;&#x6846;&#x68C0;&#x6D4B;&#x4E3A;&#x4E00;&#x5BF9;&#x5173;&#x952E;&#x70B9;&#xFF08;&#x5373;&#x8FB9;&#x754C;&#x6846;&#x7684;&#x5DE6;&#x4E0A;&#x89D2;&#x548C;&#x53F3;&#x4E0B;&#x89D2;&#xFF09;&#x3002;&#x901A;&#x8FC7;&#x5C06;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x4E3A;&#x6210;&#x5BF9;&#x5173;&#x952E;&#x70B9;&#xFF0C;&#x6211;&#x4EEC;&#x6D88;&#x9664;&#x4E86;&#x73B0;&#x6709;&#x7684;one stage&#x68C0;&#x6D4B;&#x5668;&#x8BBE;&#x8BA1;&#x4E2D;&#x5BF9;&#x4E00;&#x7EC4;anchors&#x7684;&#x9700;&#x8981;&#x3002;&#x9664;&#x4E86;&#x4E0A;&#x8FF0;&#x65B0;&#x9896;&#x7684;&#x6784;&#x60F3;&#xFF0C;&#x6587;&#x7AE0;&#x8FD8;&#x5F15;&#x5165;&#x4E86;corner pooling&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x79CD;&#x65B0;&#x578B;&#x7684;&#x6C60;&#x5316;&#x5C42;&#xFF0C;&#x53EF;&#x4EE5;&#x5E2E;&#x52A9;&#x7F51;&#x7EDC;&#x66F4;&#x597D;&#x5730;&#x5B9A;&#x4F4D;&#x8FB9;&#x754C;&#x6846;&#x7684;&#x89D2;&#x70B9;&#x3002;CornerNet&#x5728;MS COCO&#x4E0A;&#x5B9E;&#x73B0;&#x4E86;42.1&#xFF05;&#x7684;AP&#xFF0C;&#x4F18;&#x4E8E;&#x6240;&#x6709;&#x73B0;&#x6709;&#x7684;one stage&#x68C0;&#x6D4B;&#x5668;&#x3002;</p><a id="more"></a><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>&#x57FA;&#x4E8E;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x5BF9;&#x8C61;&#x68C0;&#x6D4B;&#x5668;&#xFF08;ConvNets&#xFF09;&#x5DF2;&#x7ECF;&#x5728;&#x5404;&#x79CD;&#x5177;&#x6709;&#x6311;&#x6218;&#x6027;&#x7684;&#x57FA;&#x51C6;&#x6D4B;&#x8BD5;&#x4E2D;&#x53D6;&#x5F97;&#x4E86;&#x6700;&#x65B0;&#x6210;&#x679C;&#x3002;&#x73B0;&#x6709;&#x6280;&#x672F;&#x65B9;&#x6CD5;&#x7684;&#x4E00;&#x4E2A;&#x5171;&#x540C;&#x7EC4;&#x6210;&#x90E8;&#x5206;&#x662F;anchor boxes&#xFF0C;&#x5B83;&#x4EEC;&#x662F;&#x5305;&#x542B;&#x5404;&#x79CD;&#x5C3A;&#x5BF8;&#x548C;&#x5BBD;&#x9AD8;&#x6BD4;&#x7684;&#x77E9;&#x5F62;&#x6846;&#xFF0C;&#x662F;&#x7528;&#x4F5C;&#x68C0;&#x6D4B;&#x7684;&#x5019;&#x9009;&#x6846;&#x3002;anchor boxes&#x5E7F;&#x6CDB;&#x7528;&#x4E8E;one stage&#x68C0;&#x6D4B;&#x5668;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x83B7;&#x5F97;&#x4E0E;two stage&#x68C0;&#x6D4B;&#x5668;&#x9AD8;&#x5EA6;&#x76F8;&#x5F53;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x540C;&#x65F6;&#x6548;&#x7387;&#x66F4;&#x9AD8;&#x3002; one stage&#x68C0;&#x6D4B;&#x5668;&#x5C06;anchor boxes&#x5BC6;&#x96C6;&#x5730;&#x5206;&#x5E03;&#x5728;&#x56FE;&#x50CF;&#x4E0A;&#xFF0C;&#x901A;&#x8FC7;&#x5BF9;anchor boxes&#x8FDB;&#x884C;&#x8BC4;&#x5206;&#xFF0C;&#x5E76;&#x901A;&#x8FC7;&#x56DE;&#x5F52;&#x6765;&#x6539;&#x8FDB;&#x5176;&#x5750;&#x6807;&#x6765;&#x751F;&#x6210;&#x6700;&#x7EC8;&#x7684;&#x8FB9;&#x754C;&#x6846;&#x9884;&#x6D4B;&#x3002;</p><p>&#x4F46;anchor boxes&#x7684;&#x4F7F;&#x7528;&#x6709;&#x4E24;&#x4E2A;&#x7F3A;&#x70B9;&#x3002; &#x9996;&#x5148;&#xFF0C;&#x6211;&#x4EEC;&#x901A;&#x5E38;&#x9700;&#x8981;&#x4E00;&#x7EC4;&#x975E;&#x5E38;&#x5927;&#x7684;anchor boxes&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; &#x5728;DSSD&#x4E2D;&#x8D85;&#x8FC7;4&#x4E07;&#xFF0C;&#x5728;RetinaNet&#x4E2D;&#x8D85;&#x8FC7;10&#x4E07;&#xFF0C; &#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x8BAD;&#x7EC3;&#x5668;&#x88AB;&#x8BAD;&#x7EC3;&#x4EE5;&#x5206;&#x7C7B;&#x6BCF;&#x4E2A;anchor boxes&#x662F;&#x5426;&#x4E0E;ground truth&#x5145;&#x5206;&#x91CD;&#x53E0;&#xFF0C;&#x5E76;&#x4E14;&#x9700;&#x8981;&#x5927;&#x91CF;anchor boxes&#x4EE5;&#x786E;&#x4FDD;&#x4E0E;&#x5927;&#x591A;&#x6570;ground truth&#x5145;&#x5206;&#x91CD;&#x53E0;&#x3002; &#x7ED3;&#x679C;&#xFF0C;&#x53EA;&#x6709;&#x4E00;&#x5C0F;&#x90E8;&#x5206;anchor boxes&#x4E0E;ground truth&#x91CD;&#x53E0;; &#x8FD9;&#x5728;&#x6B63;&#x8D1F;&#x6837;&#x672C;&#x4E4B;&#x95F4;&#x9020;&#x6210;&#x4E86;&#x5DE8;&#x5927;&#x7684;&#x4E0D;&#x5E73;&#x8861;&#xFF0C;&#x51CF;&#x6162;&#x4E86;&#x8BAD;&#x7EC3;&#x901F;&#x5EA6;&#x3002;</p><p>&#x5176;&#x6B21;&#xFF0C;anchor boxes&#x7684;&#x4F7F;&#x7528;&#x5F15;&#x5165;&#x4E86;&#x8BB8;&#x591A;&#x8D85;&#x53C2;&#x6570;&#x548C;&#x8BBE;&#x8BA1;&#x9009;&#x62E9;&#x3002; &#x8FD9;&#x4E9B;&#x5305;&#x62EC;&#x591A;&#x5C11;&#x4E2A;box&#xFF0C;&#x5927;&#x5C0F;&#x548C;&#x5BBD;&#x9AD8;&#x6BD4;&#x3002; &#x8FD9;&#x4E9B;&#x9009;&#x62E9;&#x4E3B;&#x8981;&#x662F;&#x901A;&#x8FC7;ad-hoc&#x542F;&#x53D1;&#x5F0F;&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x7684;&#xFF0C;&#x5E76;&#x4E14;&#x5F53;&#x4E0E;&#x591A;&#x5C3A;&#x5EA6;&#x67B6;&#x6784;&#x76F8;&#x7ED3;&#x5408;&#x65F6;&#x53EF;&#x80FD;&#x4F1A;&#x53D8;&#x5F97;&#x66F4;&#x52A0;&#x590D;&#x6742;&#xFF0C;&#x5176;&#x4E2D;&#x5355;&#x4E2A;&#x7F51;&#x7EDC;&#x5728;&#x591A;&#x4E2A;&#x5206;&#x8FA8;&#x7387;&#x4E0B;&#x8FDB;&#x884C;&#x5355;&#x72EC;&#x9884;&#x6D4B;&#xFF0C;&#x6BCF;&#x4E2A;&#x5C3A;&#x5EA6;&#x4F7F;&#x7528;&#x4E0D;&#x540C;&#x7684;&#x7279;&#x5F81;&#x548C;&#x5B83;&#x81EA;&#x5DF1;&#x7684;&#x4E00;&#x7EC4;anchor boxes&#x3002;</p><p>&#x5728;&#x672C;&#x6587;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x4ECB;&#x7ECD;&#x4E86;CornerNet&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x79CD;&#x65B0;&#x7684;one stage&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x65B9;&#x6CD5;&#xFF0C;&#x53EF;&#x4EE5;&#x6D88;&#x9664;anchor boxes&#x3002; &#x6211;&#x4EEC;&#x5C06;&#x4E00;&#x4E2A;&#x76EE;&#x6807;&#x7269;&#x4F53;&#x68C0;&#x6D4B;&#x4E3A;&#x4E00;&#x5BF9;&#x5173;&#x952E;&#x70B9;&#x2014;&#x2014;&#x8FB9;&#x754C;&#x6846;&#x7684;&#x5DE6;&#x4E0A;&#x89D2;&#x548C;&#x53F3;&#x4E0B;&#x89D2;&#x3002; &#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x5355;&#x4E2A;&#x5377;&#x79EF;&#x7F51;&#x7EDC;&#x6765;&#x9884;&#x6D4B;&#x540C;&#x4E00;&#x7269;&#x4F53;&#x7C7B;&#x522B;&#x7684;&#x6240;&#x6709;&#x5B9E;&#x4F8B;&#x7684;&#x5DE6;&#x4E0A;&#x89D2;&#x7684;&#x70ED;&#x56FE;&#xFF0C;&#x6240;&#x6709;&#x53F3;&#x4E0B;&#x89D2;&#x7684;&#x70ED;&#x56FE;&#xFF0C;&#x4EE5;&#x53CA;&#x6BCF;&#x4E2A;&#x68C0;&#x6D4B;&#x5230;&#x7684;&#x89D2;&#x70B9;&#x7684;&#x5D4C;&#x5165;&#x5411;&#x91CF;&#x3002; &#x5D4C;&#x5165;&#x7528;&#x4E8E;&#x5BF9;&#x5C5E;&#x4E8E;&#x540C;&#x4E00;&#x76EE;&#x6807;&#x7684;&#x4E00;&#x5BF9;&#x89D2;&#x70B9;&#x8FDB;&#x884C;&#x5206;&#x7EC4;&#x2014;&#x2014;&#x8BAD;&#x7EC3;&#x7F51;&#x7EDC;&#x4EE5;&#x9884;&#x6D4B;&#x5B83;&#x4EEC;&#x7684;&#x7C7B;&#x4F3C;&#x5D4C;&#x5165;&#x3002; &#x6211;&#x4EEC;&#x7684;&#x65B9;&#x6CD5;&#x6781;&#x5927;&#x5730;&#x7B80;&#x5316;&#x4E86;&#x7F51;&#x7EDC;&#x7684;&#x8F93;&#x51FA;&#xFF0C;&#x5E76;&#x4E14;&#x65E0;&#x9700;&#x8BBE;&#x8BA1;anchor boxes&#x3002;&#x6211;&#x4EEC;&#x7684;&#x65B9;&#x6CD5;&#x53D7;&#x5230;Newell&#x7B49;&#x4EBA;&#x5728;&#x591A;&#x4EBA;&#x59FF;&#x6001;&#x4F30;&#x8BA1;&#x4E0A;&#x4E0B;&#x6587;&#x4E2D;&#x5173;&#x8054;&#x5D4C;&#x5165;&#x7684;&#x542F;&#x53D1;&#x3002;</p><p><img src="/2019/07/30/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;4/1.png" alt></p><p>CornerNet&#x7684;&#x53E6;&#x4E00;&#x4E2A;&#x65B0;&#x9896;&#x7EC4;&#x4EF6;&#x662F;corner pooling&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x79CD;&#x65B0;&#x578B;&#x7684;&#x6C60;&#x5316;&#x5C42;&#xFF0C;&#x53EF;&#x5E2E;&#x52A9;&#x5377;&#x79EF;&#x7F51;&#x7EDC;&#x66F4;&#x597D;&#x5730;&#x5B9A;&#x4F4D;&#x8FB9;&#x754C;&#x6846;&#x7684;&#x89D2;&#x70B9;&#x3002; &#x8FB9;&#x754C;&#x6846;&#x7684;&#x4E00;&#x89D2;&#x901A;&#x5E38;&#x5728;&#x76EE;&#x6807;&#x4E4B;&#x5916;&#xFF0C;&#x53C2;&#x8003;&#x5706;&#x5F62;&#x7684;&#x60C5;&#x51B5;&#x4EE5;&#x53CA;&#x56FE;2&#x4E2D;&#x7684;&#x4F8B;&#x5B50;&#x3002;&#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x89D2;&#x70B9;&#x4E0D;&#x80FD;&#x6839;&#x636E;&#x5F53;&#x524D;&#x7684;&#x4FE1;&#x606F;&#x8FDB;&#x884C;&#x5B9A;&#x4F4D;&#x3002;&#x76F8;&#x53CD;&#xFF0C;&#x4E3A;&#x4E86;&#x786E;&#x5B9A;&#x50CF;&#x7D20;&#x4F4D;&#x7F6E;&#x662F;&#x5426;&#x6709;&#x5DE6;&#x4E0A;&#x89D2;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x6C34;&#x5E73;&#x5730;&#x5411;&#x53F3;&#x770B;&#x76EE;&#x6807;&#x7684;&#x6700;&#x4E0A;&#x9762;&#x8FB9;&#x754C;&#xFF0C;&#x5782;&#x76F4;&#x5730;&#x5411;&#x5E95;&#x90E8;&#x770B;&#x7269;&#x4F53;&#x7684;&#x6700;&#x5DE6;&#x8FB9;&#x8FB9;&#x754C;&#x3002; &#x8FD9;&#x6FC0;&#x53D1;&#x4E86;&#x6211;&#x4EEC;&#x7684;corner pooling layer&#xFF1A;&#x5B83;&#x5305;&#x542B;&#x4E24;&#x4E2A;&#x7279;&#x5F81;&#x56FE;; &#x5728;&#x6BCF;&#x4E2A;&#x50CF;&#x7D20;&#x4F4D;&#x7F6E;&#xFF0C;&#x5B83;&#x6700;&#x5927;&#x6C60;&#x5316;&#x4ECE;&#x7B2C;&#x4E00;&#x4E2A;&#x7279;&#x5F81;&#x6620;&#x5C04;&#x5230;&#x53F3;&#x4FA7;&#x7684;&#x6240;&#x6709;&#x7279;&#x5F81;&#x5411;&#x91CF;&#xFF0C;&#x6700;&#x5927;&#x6C60;&#x5316;&#x4ECE;&#x7B2C;&#x4E8C;&#x4E2A;&#x7279;&#x5F81;&#x6620;&#x5C04;&#x4E0B;&#x9762;&#x7684;&#x6240;&#x6709;&#x7279;&#x5F81;&#x5411;&#x91CF;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x4E24;&#x4E2A;&#x6C60;&#x5316;&#x7ED3;&#x679C;&#x4E00;&#x8D77;&#x6DFB;&#x52A0;</p><p><img src="/2019/07/30/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;4/2.png" alt></p><p>&#x6211;&#x4EEC;&#x5047;&#x8BBE;&#x4E86;&#x4E24;&#x4E2A;&#x539F;&#x56E0;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x68C0;&#x6D4B;&#x89D2;&#x70B9;&#x4F1A;&#x6BD4;&#x68C0;&#x6D4B;&#x8FB9;&#x754C;&#x6846;&#x4E2D;&#x5FC3;&#x6216;proposals&#x66F4;&#x597D;&#x3002;&#x9996;&#x5148;&#xFF0C;&#x76D2;&#x5B50;&#x7684;&#x4E2D;&#x5FC3;&#x53EF;&#x80FD;&#x66F4;&#x96BE;&#x4EE5;&#x5B9A;&#x4F4D;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x53D6;&#x51B3;&#x4E8E;&#x76EE;&#x6807;&#x7684;&#x6240;&#x6709;4&#x4E2A;&#x8FB9;&#xFF0C;&#x800C;&#x5B9A;&#x4F4D;&#x89D2;&#x53D6;&#x51B3;&#x4E8E;2&#x8FB9;&#xFF0C;&#x56E0;&#x6B64;&#x66F4;&#x5BB9;&#x6613;&#xFF0C;&#x751A;&#x81F3;&#x66F4;&#x591A;&#x7684;corner pooling&#xFF0C;&#x5B83;&#x7F16;&#x7801;&#x4E00;&#x4E9B;&#x660E;&#x786E;&#x7684;&#x5173;&#x4E8E;&#x89D2;&#x70B9;&#x5B9A;&#x4E49;&#x7684;&#x5148;&#x9A8C;&#x4FE1;&#x606F;&#x3002; &#x5176;&#x6B21;&#xFF0C;&#x89D2;&#x70B9;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x79CD;&#x66F4;&#x6709;&#x6548;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x5BC6;&#x96C6;&#x5730;&#x79BB;&#x6563;&#x8FB9;&#x754C;&#x6846;&#x7684;&#x7A7A;&#x95F4;&#xFF1A;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x7528;$O(wh)$&#x89D2;&#x70B9;&#x6765;&#x8868;&#x793A;$O(w^2h^2)$&#x53EF;&#x80FD;&#x7684;anchor boxes&#x3002;</p><h1 id="Related-Works"><a href="#Related-Works" class="headerlink" title="Related Works"></a>Related Works</h1><h2 id="Two-stage-object-detectors"><a href="#Two-stage-object-detectors" class="headerlink" title="Two-stage object detectors"></a>Two-stage object detectors</h2><p>Two-stage&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x7531;R-CNN&#x9996;&#x6B21;&#x5F15;&#x5165;&#x5E76;&#x63A8;&#x5E7F;&#x3002;Two-stage&#x68C0;&#x6D4B;&#x5668;&#x751F;&#x6210;&#x4E00;&#x7EC4;&#x7A00;&#x758F;&#x7684;&#x611F;&#x5174;&#x8DA3;&#x533A;&#x57DF;(RoIs)&#xFF0C;&#x5E76;&#x901A;&#x8FC7;&#x7F51;&#x7EDC;&#x5BF9;&#x6BCF;&#x4E2A;&#x533A;&#x57DF;&#x8FDB;&#x884C;&#x5206;&#x7C7B;&#x3002;R-CNN&#x4F7F;&#x7528;&#x4F4E;&#x5C42;&#x6B21;&#x89C6;&#x89C9;&#x7B97;&#x6CD5;&#x751F;&#x6210;(RoIs)&#x3002;&#x7136;&#x540E;&#x4ECE;&#x56FE;&#x50CF;&#x4E2D;&#x63D0;&#x53D6;&#x6BCF;&#x4E2A;&#x533A;&#x57DF;&#xFF0C;&#x7531;ConvNet&#x72EC;&#x7ACB;&#x5904;&#x7406;&#xFF0C;&#x8FD9;&#x5C06;&#x5BFC;&#x81F4;&#x5927;&#x91CF;&#x8BA1;&#x7B97;&#x5197;&#x4F59;&#x3002;&#x540E;&#x6765;&#xFF0C;SPP-Net&#x548C;Fast R-CNN&#x6539;&#x8FDB;&#x4E86;R-CNN&#xFF0C;&#x8BBE;&#x8BA1;&#x4E86;&#x4E00;&#x4E2A;&#x7279;&#x6B8A;&#x7684;&#x6C60;&#x5316;&#x5C42;(&#x91D1;&#x5B57;&#x5854;&#x6C60;&#x5316;)&#xFF0C;&#x5C06;&#x6BCF;&#x4E2A;&#x533A;&#x57DF;&#x4ECE;feature map&#x4E2D;&#x6C60;&#x5316;&#x3002;&#x7136;&#x800C;&#xFF0C;&#x4E24;&#x8005;&#x4ECD;&#x7136;&#x4F9D;&#x8D56;&#x4E8E;&#x5355;&#x72EC;&#x7684;proposals&#x7B97;&#x6CD5;&#xFF0C;&#x4E0D;&#x80FD;&#x8FDB;&#x884C;&#x7AEF;&#x5230;&#x7AEF;&#x8BAD;&#x7EC3;&#x3002;Faster-RCNN&#x901A;&#x8FC7;&#x5F15;&#x5165;&#x533A;&#x57DF;&#x751F;&#x6210;&#x7F51;&#x7EDC;(RPN)&#x6765;&#x53BB;&#x9664;&#x4F4E;&#x5C42;&#x6B21;&#x7684;proposals&#x7B97;&#x6CD5;&#xFF0C;RPN&#x4ECE;&#x4E00;&#x7EC4;&#x9884;&#x5148;&#x786E;&#x5B9A;&#x7684;&#x5019;&#x9009;&#x6846;(&#x901A;&#x5E38;&#x79F0;&#x4E3A;anchor boxes)&#x4E2D;&#x751F;&#x6210;proposals&#x3002;&#x8FD9;&#x4E0D;&#x4EC5;&#x4F7F;&#x68C0;&#x6D4B;&#x5668;&#x66F4;&#x52A0;&#x9AD8;&#x6548;&#xFF0C;&#x901A;&#x8FC7;RPN&#x4E0E;&#x68C0;&#x6D4B;&#x7F51;&#x7EDC;&#x7684;&#x8054;&#x5408;&#x8BAD;&#x7EC3;&#xFF0C;&#x53EF;&#x5B9E;&#x73B0;&#x7AEF;&#x5230;&#x7AEF;&#x8BAD;&#x7EC3;&#x3002;R-FCN&#x5C06;&#x5168;&#x8FDE;&#x63A5;&#x5B50;&#x68C0;&#x6D4B;&#x7F51;&#x7EDC;&#x66FF;&#x6362;&#x4E3A;&#x5B8C;&#x5168;&#x5377;&#x79EF;&#x5B50;&#x68C0;&#x6D4B;&#x7F51;&#x7EDC;&#xFF0C;&#x8FDB;&#x4E00;&#x6B65;&#x63D0;&#x9AD8;&#x4E86;Faster R-CNN&#x7684;&#x68C0;&#x6D4B;&#x6548;&#x7387;&#x3002;&#x5176;&#x4ED6;&#x7684;&#x5DE5;&#x4F5C;&#x4E3B;&#x8981;&#x96C6;&#x4E2D;&#x5728;&#x7ED3;&#x5408;&#x5B50;&#x7C7B;&#x522B;&#x4FE1;&#x606F;&#xFF0C;&#x7528;&#x66F4;&#x591A;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x4FE1;&#x606F;&#x5728;&#x591A;&#x4E2A;&#x5C3A;&#x5EA6;&#x4E0A;&#x751F;&#x6210;&#x76EE;&#x6807;&#x7684;proposals&#xFF0C;&#x9009;&#x62E9;&#x66F4;&#x597D;&#x7684;&#x7279;&#x5F81;&#xFF0C;&#x63D0;&#x9AD8;&#x901F;&#x5EA6;&#xFF0C;&#x5E76;&#x884C;&#x5904;&#x7406;&#x548C;&#x66F4;&#x597D;&#x7684;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;&#x3002;</p><h2 id="One-stage-object-detectors"><a href="#One-stage-object-detectors" class="headerlink" title="One-stage object detectors"></a>One-stage object detectors</h2><p>&#x53E6;&#x4E00;&#x65B9;&#x9762;&#xFF0C;YOLO&#x548C;SSD&#x63A8;&#x5E7F;&#x4E86;one-stage&#x65B9;&#x6CD5;&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x6D88;&#x9664;&#x4E86;RoI&#x6C60;&#x5316;&#x6B65;&#x9AA4;&#xFF0C;&#x5E76;&#x5728;&#x5355;&#x4E2A;&#x7F51;&#x7EDC;&#x4E2D;&#x68C0;&#x6D4B;&#x76EE;&#x6807;&#x3002;One-stage&#x68C0;&#x6D4B;&#x5668;&#x901A;&#x5E38;&#x6BD4;two-stage&#x68C0;&#x6D4B;&#x5668;&#x8BA1;&#x7B97;&#x6548;&#x7387;&#x66F4;&#x9AD8;&#xFF0C;&#x540C;&#x65F6;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x5177;&#x6709;&#x6311;&#x6218;&#x6027;&#x7684;&#x57FA;&#x51C6;&#x4E0A;&#x4FDD;&#x6301;&#x7740;&#x5177;&#x6709;&#x7ADE;&#x4E89;&#x6027;&#x7684;&#x6027;&#x80FD;&#x3002;<br>SSD&#x7B97;&#x6CD5;&#x5C06;anchor boxes&#x5BC6;&#x96C6;&#x5730;&#x653E;&#x7F6E;&#x5728;&#x591A;&#x4E2A;&#x5C3A;&#x5EA6;&#x7684;feature maps&#x4E4B;&#x4E0A;&#xFF0C;&#x76F4;&#x63A5;&#x5BF9;&#x6BCF;&#x4E2A;anchor boxes&#x8FDB;&#x884C;&#x5206;&#x7C7B;&#x548C;&#x7EC6;&#x5316;&#x3002;YOLO&#x76F4;&#x63A5;&#x4ECE;&#x56FE;&#x50CF;&#x4E2D;&#x9884;&#x6D4B;&#x8FB9;&#x754C;&#x6846;&#x5750;&#x6807;&#xFF0C;&#x540E;&#x6765;&#x5728;YOLO9000&#x4E2D;&#xFF0C;&#x901A;&#x8FC7;&#x4F7F;&#x7528;anchor boxes&#x8FDB;&#x884C;&#x4E86;&#x6539;&#x8FDB;&#x3002;DSSD&#x548C;RON&#x91C7;&#x7528;&#x4E86;&#x7C7B;&#x4F3C;&#x6C99;&#x6F0F;&#x7684;&#x7F51;&#x7EDC;&#xFF0C;&#x4F7F;&#x5B83;&#x4EEC;&#x80FD;&#x591F;&#x901A;&#x8FC7;&#x8DF3;&#x8DC3;&#x8FDE;&#x63A5;&#x5C06;&#x4F4E;&#x7EA7;&#x548C;&#x9AD8;&#x7EA7;&#x7279;&#x6027;&#x7ED3;&#x5408;&#x8D77;&#x6765;&#xFF0C;&#x4ECE;&#x800C;&#x66F4;&#x51C6;&#x786E;&#x5730;&#x9884;&#x6D4B;&#x8FB9;&#x754C;&#x6846;&#x3002;&#x7136;&#x800C;&#xFF0C;&#x5728;RetinaNet&#x51FA;&#x73B0;&#x4E4B;&#x524D;&#xFF0C;&#x8FD9;&#x4E9B;one-stage&#x68C0;&#x6D4B;&#x5668;&#x7684;&#x68C0;&#x6D4B;&#x7CBE;&#x5EA6;&#x4ECD;&#x7136;&#x843D;&#x540E;&#x4E8E;two-stage&#x68C0;&#x6D4B;&#x5668;&#x3002;&#x5728;RetinaNet&#x4E2D;&#xFF0C;&#x4F5C;&#x8005;&#x8BA4;&#x4E3A;&#x5BC6;&#x96C6;&#x7684;anchor boxes&#x5728;&#x8BAD;&#x7EC3;&#x4E2D;&#x9020;&#x6210;&#x4E86;&#x6B63;&#x6837;&#x672C;&#x548C;&#x8D1F;&#x6837;&#x672C;&#x4E4B;&#x95F4;&#x7684;&#x5DE8;&#x5927;&#x4E0D;&#x5E73;&#x8861;&#x3002;&#x8FD9;&#x79CD;&#x4E0D;&#x5E73;&#x8861;&#x5BFC;&#x81F4;&#x8BAD;&#x7EC3;&#x6548;&#x7387;&#x4F4E;&#x4E0B;&#xFF0C;&#x4ECE;&#x800C;&#x5BFC;&#x81F4;&#x7ED3;&#x679C;&#x4E0D;&#x4F73;&#x3002;&#x4ED6;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x79CD;&#x65B0;&#x7684;loss&#xFF0C;Focal Loss&#xFF0C;&#x6765;&#x52A8;&#x6001;&#x8C03;&#x6574;&#x6BCF;&#x4E2A;anchor boxes&#x7684;&#x6743;&#x91CD;&#xFF0C;&#x5E76;&#x8BF4;&#x660E;&#x4E86;&#x4ED6;&#x4EEC;&#x7684;one-stage&#x68C0;&#x6D4B;&#x5668;&#x68C0;&#x6D4B;&#x6027;&#x80FD;&#x4F18;&#x4E8E;two-stage&#x68C0;&#x6D4B;&#x5668;&#x3002;RefineDet&#x5EFA;&#x8BAE;&#x5BF9;anchor boxes&#x8FDB;&#x884C;&#x8FC7;&#x6EE4;&#xFF0C;&#x4EE5;&#x51CF;&#x5C11;&#x8D1F;&#x6837;&#x672C;&#x7684;&#x6570;&#x91CF;&#xFF0C;&#x5E76;&#x5BF9;anchor boxes&#x8FDB;&#x884C;&#x7C97;&#x7565;&#x7684;&#x8C03;&#x6574;&#x3002;</p><p>&#x6211;&#x4EEC;&#x7684;&#x65B9;&#x6CD5;&#x53D7;&#x5230;Newell&#x7B49;&#x4EBA;&#x5728;&#x591A;&#x4EBA;&#x59FF;&#x6001;&#x4F30;&#x8BA1;&#x4E0A;&#x4E0B;&#x6587;&#x4E2D;&#x5173;&#x8054;&#x5D4C;&#x5165;&#x7684;&#x542F;&#x53D1;&#x3002;Newell&#x7B49;&#x4EBA;&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x79CD;&#x5728;&#x5355;&#x4E2A;&#x7F51;&#x7EDC;&#x4E2D;&#x68C0;&#x6D4B;&#x548C;&#x5206;&#x7EC4;&#x4EBA;&#x7C7B;&#x5173;&#x8282;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x5728;&#x4ED6;&#x4EEC;&#x7684;&#x65B9;&#x6CD5;&#x4E2D;&#xFF0C;&#x6BCF;&#x4E2A;&#x68C0;&#x6D4B;&#x5230;&#x7684;&#x4EBA;&#x7C7B;&#x5173;&#x8282;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x5D4C;&#x5165;&#x5411;&#x91CF;&#x3002;&#x8FD9;&#x4E9B;&#x5173;&#x8282;&#x662F;&#x6839;&#x636E;&#x5B83;&#x4EEC;&#x5D4C;&#x5165;&#x7684;&#x8DDD;&#x79BB;&#x6765;&#x5206;&#x7EC4;&#x7684;&#x3002;&#x672C;&#x6587;&#x662F;&#x7B2C;&#x4E00;&#x4E2A;&#x5C06;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x4EFB;&#x52A1;&#x5B9A;&#x4E49;&#x4E3A;&#x540C;&#x65F6;&#x68C0;&#x6D4B;&#x548C;&#x5206;&#x7EC4;&#x89D2;&#x70B9;&#x7684;&#x4EFB;&#x52A1;&#x3002;&#x6211;&#x4EEC;&#x7684;&#x53E6;&#x4E00;&#x4E2A;&#x65B0;&#x9896;&#x4E4B;&#x5904;&#x5728;&#x4E8E;corner pooling layer&#xFF0C;&#x5B83;&#x6709;&#x52A9;&#x4E8E;&#x66F4;&#x597D;&#x5B9A;&#x4F4D;&#x89D2;&#x70B9;&#x3002;&#x6211;&#x4EEC;&#x8FD8;&#x5BF9;&#x6C99;&#x6F0F;&#x7ED3;&#x6784;&#x8FDB;&#x884C;&#x4E86;&#x663E;&#x8457;&#x5730;&#x4FEE;&#x6539;&#xFF0C;&#x5E76;&#x6DFB;&#x52A0;&#x4E86;&#x65B0;&#x7684;focal loss&#x7684;&#x53D8;&#x4F53;&#xFF0C;&#x4EE5;&#x5E2E;&#x52A9;&#x66F4;&#x597D;&#x5730;&#x8BAD;&#x7EC3;&#x7F51;&#x7EDC;&#x3002;</p><h1 id="CornerNet"><a href="#CornerNet" class="headerlink" title="CornerNet"></a>CornerNet</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><p>&#x5728;CornerNet&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x7269;&#x4F53;&#x8FB9;&#x754C;&#x6846;&#x68C0;&#x6D4B;&#x4E3A;&#x4E00;&#x5BF9;&#x5173;&#x952E;&#x70B9;&#xFF08;&#x5373;&#x8FB9;&#x754C;&#x6846;&#x7684;&#x5DE6;&#x4E0A;&#x89D2;&#x548C;&#x53F3;&#x4E0B;&#x89D2;&#xFF09;&#x3002;&#x5377;&#x79EF;&#x7F51;&#x7EDC;&#x901A;&#x8FC7;&#x9884;&#x6D4B;&#x4E24;&#x7EC4;&#x70ED;&#x56FE;&#x6765;&#x8868;&#x793A;&#x4E0D;&#x540C;&#x7269;&#x4F53;&#x7C7B;&#x522B;&#x7684;&#x89D2;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x4E00;&#x7EC4;&#x7528;&#x4E8E;&#x5DE6;&#x4E0A;&#x89D2;&#xFF0C;&#x53E6;&#x4E00;&#x7EC4;&#x7528;&#x4E8E;&#x53F3;&#x4E0B;&#x89D2;&#x3002; &#x7F51;&#x7EDC;&#x8FD8;&#x9884;&#x6D4B;&#x6BCF;&#x4E2A;&#x68C0;&#x6D4B;&#x5230;&#x7684;&#x89D2;&#x7684;&#x5D4C;&#x5165;&#x5411;&#x91CF;&#xFF0C;&#x4F7F;&#x5F97;&#x6765;&#x81EA;&#x540C;&#x4E00;&#x76EE;&#x6807;&#x7684;&#x4E24;&#x4E2A;&#x89D2;&#x7684;&#x5D4C;&#x5165;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x5F88;&#x5C0F;&#x3002; &#x4E3A;&#x4E86;&#x4EA7;&#x751F;&#x66F4;&#x7D27;&#x5BC6;&#x7684;&#x8FB9;&#x754C;&#x6846;&#xFF0C;&#x7F51;&#x7EDC;&#x8FD8;&#x9884;&#x6D4B;&#x504F;&#x79FB;&#x4EE5;&#x7A0D;&#x5FAE;&#x8C03;&#x6574;&#x89D2;&#x7684;&#x4F4D;&#x7F6E;&#x3002; &#x901A;&#x8FC7;&#x9884;&#x6D4B;&#x7684;&#x70ED;&#x56FE;&#xFF0C;&#x5D4C;&#x5165;&#x548C;&#x504F;&#x79FB;&#xFF0C;&#x6211;&#x4EEC;&#x5E94;&#x7528;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x540E;&#x5904;&#x7406;&#x7B97;&#x6CD5;&#x6765;&#x83B7;&#x5F97;&#x6700;&#x7EC8;&#x7684;&#x8FB9;&#x754C;&#x6846;&#x3002;<br>&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x6C99;&#x6F0F;&#x7F51;&#x7EDC;&#x4F5C;&#x4E3A;CornerNet&#x7684;&#x9AA8;&#x5E72;&#x7F51;&#x7EDC;&#x3002; &#x6C99;&#x6F0F;&#x7F51;&#x7EDC;&#x4E4B;&#x540E;&#x662F;&#x4E24;&#x4E2A;&#x9884;&#x6D4B;&#x6A21;&#x5757;&#x3002; &#x4E00;&#x4E2A;&#x6A21;&#x5757;&#x7528;&#x4E8E;&#x5DE6;&#x4E0A;&#x89D2;&#xFF0C;&#x800C;&#x53E6;&#x4E00;&#x4E2A;&#x6A21;&#x5757;&#x7528;&#x4E8E;&#x53F3;&#x4E0B;&#x89D2;&#x3002; &#x6BCF;&#x4E2A;&#x6A21;&#x5757;&#x90FD;&#x6709;&#x81EA;&#x5DF1;&#x7684;corner pooling&#x6A21;&#x5757;&#xFF0C;&#x5728;&#x9884;&#x6D4B;&#x70ED;&#x56FE;&#x3001;&#x5D4C;&#x5165;&#x548C;&#x504F;&#x79FB;&#x4E4B;&#x524D;&#xFF0C;&#x6C60;&#x5316;&#x6765;&#x81EA;&#x6C99;&#x6F0F;&#x7F51;&#x7EDC;&#x7684;&#x7279;&#x5F81;&#x3002; &#x4E0E;&#x8BB8;&#x591A;&#x5176;&#x4ED6;&#x7269;&#x4F53;&#x63A2;&#x6D4B;&#x5668;&#x4E0D;&#x540C;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x4F7F;&#x7528;&#x4E0D;&#x540C;&#x5C3A;&#x5EA6;&#x7684;&#x7279;&#x5F81;&#x6765;&#x68C0;&#x6D4B;&#x4E0D;&#x540C;&#x5927;&#x5C0F;&#x7684;&#x7269;&#x4F53;&#x3002; &#x6211;&#x4EEC;&#x53EA;&#x5C06;&#x4E24;&#x4E2A;&#x6A21;&#x5757;&#x5E94;&#x7528;&#x4E8E;&#x6C99;&#x6F0F;&#x7F51;&#x7EDC;&#x7684;&#x8F93;&#x51FA;&#x3002;</p><h2 id="Detecting-Corners"><a href="#Detecting-Corners" class="headerlink" title="Detecting Corners"></a>Detecting Corners</h2><p>&#x6211;&#x4EEC;&#x9884;&#x6D4B;&#x4E24;&#x7EC4;&#x70ED;&#x56FE;&#xFF0C;&#x4E00;&#x7EC4;&#x7528;&#x4E8E;&#x5DE6;&#x4E0A;&#x89D2;&#xFF0C;&#x53E6;&#x4E00;&#x7EC4;&#x7528;&#x4E8E;&#x53F3;&#x4E0B;&#x89D2;&#x3002; &#x6BCF;&#x7EC4;&#x70ED;&#x56FE;&#x5177;&#x6709;C&#x4E2A;&#x901A;&#x9053;&#xFF0C;&#x5176;&#x4E2D;C&#x662F;&#x5206;&#x7C7B;&#x7684;&#x6570;&#x91CF;&#xFF0C;&#x5E76;&#x4E14;&#x5927;&#x5C0F;&#x4E3A;H&#xD7;W&#x3002; &#x6CA1;&#x6709;&#x80CC;&#x666F;&#x901A;&#x9053;&#x3002; &#x6BCF;&#x4E2A;&#x901A;&#x9053;&#x90FD;&#x662F;&#x4E00;&#x4E2A;&#x4E8C;&#x8FDB;&#x5236;&#x63A9;&#x7801;&#xFF0C;&#x7528;&#x4E8E;&#x8868;&#x793A;&#x8BE5;&#x7C7B;&#x7684;&#x89D2;&#x70B9;&#x4F4D;&#x7F6E;&#x3002;<br>&#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x89D2;&#x70B9;&#xFF0C;&#x6709;&#x4E00;&#x4E2A;ground-truth&#x6B63;&#x4F4D;&#x7F6E;&#xFF0C;&#x5176;&#x4ED6;&#x6240;&#x6709;&#x7684;&#x4F4D;&#x7F6E;&#x90FD;&#x662F;&#x8D1F;&#x503C;&#x3002; &#x5728;&#x8BAD;&#x7EC3;&#x671F;&#x95F4;&#xFF0C;&#x6211;&#x4EEC;&#x6CA1;&#x6709;&#x540C;&#x7B49;&#x5730;&#x60E9;&#x7F5A;&#x8D1F;&#x4F4D;&#x7F6E;&#xFF0C;&#x800C;&#x662F;&#x51CF;&#x5C11;&#x5BF9;&#x6B63;&#x4F4D;&#x7F6E;&#x534A;&#x5F84;&#x5185;&#x7684;&#x8D1F;&#x4F4D;&#x7F6E;&#x7ED9;&#x4E88;&#x7684;&#x60E9;&#x7F5A;&#x3002; &#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x5982;&#x679C;&#x4E00;&#x5BF9;&#x5047;&#x89D2;&#x70B9;&#x68C0;&#x6D4B;&#x5668;&#x9760;&#x8FD1;&#x5B83;&#x4EEC;&#x5404;&#x81EA;&#x7684;ground-truth&#x4F4D;&#x7F6E;&#xFF0C;&#x5B83;&#x4ECD;&#x7136;&#x53EF;&#x4EE5;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x4E0E;ground-truth&#x5145;&#x5206;&#x91CD;&#x53E0;&#x7684;&#x8FB9;&#x754C;&#x6846;&#xFF08;&#x56FE;5&#xFF09;&#x3002;&#x6211;&#x4EEC;&#x901A;&#x8FC7;&#x786E;&#x4FDD;&#x534A;&#x5F84;&#x5185;&#x7684;&#x4E00;&#x5BF9;&#x70B9;&#x751F;&#x6210;&#x7684;&#x8FB9;&#x754C;&#x6846;&#x4E0E;ground-truth&#x7684;IoU &#x2265; t&#xFF08;&#x6211;&#x4EEC;&#x5728;&#x6240;&#x6709;&#x5B9E;&#x9A8C;&#x4E2D;&#x5C06;t&#x8BBE;&#x7F6E;&#x4E3A;0.7&#xFF09;&#x6765;&#x786E;&#x5B9A;&#x7269;&#x4F53;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x4ECE;&#x800C;&#x786E;&#x5B9A;&#x534A;&#x5F84;&#x3002; &#x7ED9;&#x5B9A;&#x534A;&#x5F84;&#xFF0C;&#x60E9;&#x7F5A;&#x7684;&#x51CF;&#x5C11;&#x91CF;&#x7531;&#x975E;&#x6807;&#x51C6;&#x5316;&#x7684;2D&#x9AD8;&#x65AF;$e^{-\frac{x^2+y^2}{2\sigma^{2}}}$&#x7ED9;&#x51FA;&#xFF0C;&#x5176;&#x4E2D;&#x5FC3;&#x4F4D;&#x4E8E;&#x6B63;&#x4F4D;&#x7F6E;&#xFF0C;&#x5176;$\sigma$&#x662F;&#x534A;&#x5F84;&#x7684;1/3&#x3002;<br>$p_{cij}$&#x4E3A;&#x9884;&#x6D4B;&#x70ED;&#x56FE;&#x4E2D;$c$&#x7C7B;&#x4F4D;&#x7F6E;$(i,j)$&#x7684;&#x5F97;&#x5206;&#xFF0C;$y_{cij}$&#x4E3A;&#x7528;&#x975E;&#x6807;&#x51C6;&#x5316;&#x9AD8;&#x65AF;&#x589E;&#x5F3A;&#x7684;&#x201C;ground-truth&#x201D;&#x70ED;&#x56FE;&#x3002;&#x6211;&#x4EEC;&#x8BBE;&#x8BA1;&#x4E86;&#x4E00;&#x4E2A;&#x5C40;&#x90E8;&#x635F;&#x5931;(focal loss)&#x7684;&#x53D8;&#x4F53;:</p><script type="math/tex; mode=display">L_{det}=\frac{-1}{N}\sum_{c-1}^{C}\sum_{i=1}^{H}\sum_{j=1}^{W}\left\{  \begin{array}{lr}    (1-p_{cij})^{\alpha}log(p_{cij}) & if 　y_{cij} = 1\\    (1-y_{cij})^{\beta}(p_{cij})^{\alpha}lpg(1-p_{cij}) & otherwise  \end{array}\right.</script><p>&#x5176;&#x4E2D;N&#x662F;&#x56FE;&#x50CF;&#x4E2D;&#x76EE;&#x6807;&#x7684;&#x6570;&#x91CF;,$\alpha$&#x548C;$\beta$&#x662F;&#x63A7;&#x5236;&#x6BCF;&#x4E2A;&#x70B9;&#x7684;&#x8D21;&#x732E;&#x7684;&#x8D85;&#x53C2;&#x6570;&#xFF08;&#x5728;&#x6240;&#x6709;&#x5B9E;&#x9A8C;&#x4E2D;&#x6211;&#x4EEC;&#x5C06;$\alpha$&#x8BBE;&#x7F6E;&#x4E3A;2, $\beta$&#x8BBE;&#x7F6E;&#x4E3A;4&#xFF09;&#x3002;&#x5229;&#x7528;$y_{cij}$&#x4E2D;&#x7F16;&#x7801;&#x7684;&#x9AD8;&#x65AF;&#x51F8;&#x70B9;&#xFF0C;$(1-y_{cij})$&#x9879;&#x51CF;&#x5C11;&#x4E86;ground-truth&#x5468;&#x56F4;&#x7684;&#x60E9;&#x7F5A;&#x3002;</p><p>&#x8BB8;&#x591A;&#x7F51;&#x7EDC;&#x6D89;&#x53CA;&#x4E0B;&#x91C7;&#x6837;&#x5C42;&#x4EE5;&#x6536;&#x96C6;&#x5168;&#x5C40;&#x4FE1;&#x606F;&#x548C;&#x51CF;&#x5C11;&#x5185;&#x5B58;&#x4F7F;&#x7528;&#x3002;&#x5F53;&#x5B83;&#x4EEC;&#x5B8C;&#x5168;&#x5377;&#x79EF;&#x5E94;&#x7528;&#x4E8E;&#x56FE;&#x50CF;&#x65F6;&#xFF0C;&#x8F93;&#x51FA;&#x7684;&#x5C3A;&#x5BF8;&#x901A;&#x5E38;&#x5C0F;&#x4E8E;&#x56FE;&#x50CF;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x56FE;&#x50CF;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;$(x,y)$&#x88AB;&#x6620;&#x5C04;&#x5230;&#x70ED;&#x56FE;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;$(\lfloor\frac{x}{n}\rfloor,[\lfloor\frac{y}{n}\rfloor)$&#xFF0C;&#x5176;&#x4E2D;n&#x662F;&#x4E0B;&#x91C7;&#x6837;&#x56E0;&#x5B50;&#x3002;&#x5F53;&#x6211;&#x4EEC;&#x5C06;&#x70ED;&#x56FE;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#x91CD;&#x65B0;&#x6620;&#x5C04;&#x5230;&#x8F93;&#x5165;&#x56FE;&#x50CF;&#x65F6;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x4E22;&#x5931;&#x4E00;&#x4E9B;&#x7CBE;&#x5EA6;&#xFF0C;&#x8FD9;&#x4F1A;&#x6781;&#x5927;&#x5730;&#x5F71;&#x54CD;&#x5C0F;&#x8FB9;&#x754C;&#x6846;&#x4E0E;ground-truth&#x4E4B;&#x95F4;&#x7684;IoU&#x3002; &#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x6211;&#x4EEC;&#x9884;&#x6D4B;&#x4F4D;&#x7F6E;&#x504F;&#x79FB;&#xFF0C;&#x4EE5;&#x7A0D;&#x5FAE;&#x8C03;&#x6574;&#x89D2;&#x4F4D;&#x7F6E;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x5C06;&#x5B83;&#x4EEC;&#x91CD;&#x65B0;&#x6620;&#x5C04;&#x5230;&#x8F93;&#x5165;&#x5206;&#x8FA8;&#x7387;&#x3002;</p><script type="math/tex; mode=display">o_{k}=(\frac{x_{k}}{n}-\lfloor\frac{x_{k}}{n}\rfloor,\frac{y_{k}}{n}-\lfloor\frac{y_{k}}{n}\rfloor)</script><p>&#x5176;&#x4E2D;$o_{k}$&#x662F;&#x504F;&#x79FB;&#x91CF;&#xFF0C;$x_{k}$&#x548C;$y_{k}$&#x662F;&#x89D2;&#x70B9;$k$&#x7684;x&#x548C;y&#x5750;&#x6807;&#x3002;&#x7279;&#x522B;&#x662F;&#xFF0C;&#x6211;&#x4EEC;&#x9884;&#x6D4B;&#x6240;&#x6709;&#x7C7B;&#x522B;&#x7684;&#x5DE6;&#x4E0A;&#x89D2;&#x5171;&#x4EAB;&#x4E00;&#x7EC4;&#x504F;&#x79FB;&#xFF0C;&#x53E6;&#x4E00;&#x7EC4;&#x7531;&#x53F3;&#x4E0B;&#x89D2;&#x5171;&#x4EAB;&#x3002;&#x5BF9;&#x4E8E;&#x8BAD;&#x7EC3;&#xFF0C;&#x6211;&#x4EEC;&#x5728;ground-truth&#x89D2;&#x70B9;&#x4F4D;&#x7F6E;&#x5E94;&#x7528;&#x5E73;&#x6ED1;&#x7684;L1&#x635F;&#x5931;:</p><script type="math/tex; mode=display">L_{off}=\frac{1}{N}\sum_{k=1}^{N}SmoothL1Loss(o_{k},\hat{o}_{k}</script><h2 id="Grouping-Corners"><a href="#Grouping-Corners" class="headerlink" title="Grouping Corners"></a>Grouping Corners</h2><p>&#x56FE;&#x50CF;&#x4E2D;&#x53EF;&#x80FD;&#x51FA;&#x73B0;&#x591A;&#x4E2A;&#x76EE;&#x6807;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x80FD;&#x68C0;&#x6D4B;&#x5230;&#x591A;&#x4E2A;&#x5DE6;&#x4E0A;&#x89D2;&#x548C;&#x53F3;&#x4E0B;&#x89D2;&#x3002;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x786E;&#x5B9A;&#x5DE6;&#x4E0A;&#x89D2;&#x548C;&#x53F3;&#x4E0B;&#x89D2;&#x7684;&#x4E00;&#x5BF9;&#x89D2;&#x70B9;&#x662F;&#x5426;&#x6765;&#x81EA;&#x540C;&#x4E00;&#x4E2A;&#x76EE;&#x6807;&#x8FB9;&#x754C;&#x6846;&#x3002;&#x6211;&#x4EEC;&#x7684;&#x65B9;&#x6CD5;&#x53D7;&#x5230;Newell&#x7B49;&#x4EBA;&#x63D0;&#x51FA;&#x7684;&#x7528;&#x4E8E;&#x591A;&#x4EBA;&#x59FF;&#x6001;&#x4F30;&#x8BA1;&#x4EFB;&#x52A1;&#x7684;&#x5173;&#x8054;&#x5D4C;&#x5165;&#x65B9;&#x6CD5;&#x7684;&#x542F;&#x53D1;&#x3002;Newell&#x7B49;&#x4EBA;&#x68C0;&#x6D4B;&#x6240;&#x6709;&#x4EBA;&#x7C7B;&#x5173;&#x8282;&#xFF0C;&#x5E76;&#x4E3A;&#x6BCF;&#x4E2A;&#x68C0;&#x6D4B;&#x5230;&#x7684;&#x5173;&#x8282;&#x751F;&#x6210;&#x5D4C;&#x5165;&#x3002;&#x4ED6;&#x4EEC;&#x6839;&#x636E;&#x5D4C;&#x5165;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x5C06;&#x8282;&#x70B9;&#x8FDB;&#x884C;&#x5206;&#x7EC4;&#x3002;</p><p>&#x5173;&#x8054;&#x5D4C;&#x5165;&#x7684;&#x601D;&#x60F3;&#x4E5F;&#x9002;&#x7528;&#x4E8E;&#x6211;&#x4EEC;&#x7684;&#x4EFB;&#x52A1;&#x3002; &#x7F51;&#x7EDC;&#x9884;&#x6D4B;&#x6BCF;&#x4E2A;&#x68C0;&#x6D4B;&#x5230;&#x7684;&#x89D2;&#x70B9;&#x7684;&#x5D4C;&#x5165;&#x5411;&#x91CF;&#xFF0C;&#x4F7F;&#x5F97;&#x5982;&#x679C;&#x5DE6;&#x4E0A;&#x89D2;&#x548C;&#x53F3;&#x4E0B;&#x89D2;&#x5C5E;&#x4E8E;&#x540C;&#x4E00;&#x4E2A;&#x8FB9;&#x754C;&#x6846;&#xFF0C;&#x5219;&#x5B83;&#x4EEC;&#x7684;&#x5D4C;&#x5165;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x5E94;&#x8BE5;&#x5C0F;&#x3002; &#x7136;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x5DE6;&#x4E0A;&#x89D2;&#x548C;&#x53F3;&#x4E0B;&#x89D2;&#x5D4C;&#x5165;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x5BF9;&#x89D2;&#x70B9;&#x8FDB;&#x884C;&#x5206;&#x7EC4;&#x3002; &#x5D4C;&#x5165;&#x7684;&#x5B9E;&#x9645;&#x503C;&#x5E76;&#x4E0D;&#x91CD;&#x8981;&#x3002; &#x4EC5;&#x4F7F;&#x7528;&#x5D4C;&#x5165;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x6765;&#x5BF9;&#x89D2;&#x70B9;&#x8FDB;&#x884C;&#x5206;&#x7EC4;&#x3002;</p><p>&#x6211;&#x4EEC;&#x5173;&#x6CE8;Newell&#x7B49;&#x4EBA;&#x5E76;&#x4F7F;&#x7528;1&#x7EF4;&#x5D4C;&#x5165;&#x3002;$e_{tk}$&#x6210;&#x4E3A;&#x5BF9;&#x8C61;k&#x7684;&#x5DE6;&#x4E0A;&#x7684;&#x5D4C;&#x5165;&#xFF0C;$e_{bk}$&#x4E3A;&#x53F3;&#x4E0B;&#x89D2;&#x7684;&#x7684;&#x5D4C;&#x5165;&#x3002;&#x5982;&#x4E2D;&#x6240;&#x8FF0;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x201C;pull&#x201D;&#x635F;&#x5931;&#x6765;&#x8BAD;&#x7EC3;&#x7F51;&#x7EDC;&#x5BF9;&#x89D2;&#x70B9;&#x8FDB;&#x884C;&#x5206;&#x7EC4;&#xFF0C;&#x5E76;&#x4E14;&#x7528;&#x201C;push&#x201D;&#x635F;&#x5931;&#x6765;&#x5206;&#x79BB;&#x89D2;&#x70B9;&#xFF1A;</p><script type="math/tex; mode=display">L_{pull}=\frac{1}{N}\sum_{k=1}^{N}[(e_{tk}-e_{k})^2+(e_{bk}-e_{k})^2]</script><script type="math/tex; mode=display">L_{push}=\frac{1}{N-1}\sum_{k=1}^{N}\sum_{j=1,j\neq k}^{N}max(0,\Delta-|e_{k}-e_{j}|)</script><p>&#x5176;&#x4E2D;$e_{k}$&#x662F;$e_{tk}$&#x548C;$e_{bk}$&#x7684;&#x5E73;&#x5747;&#x503C;&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x6240;&#x6709;&#x5B9E;&#x9A8C;&#x4E2D;&#x5C06;$\Delta$&#x8BBE;&#x4E3A;1&#x3002;&#x4E0E;&#x504F;&#x79FB;&#x635F;&#x5931;&#x7C7B;&#x4F3C;&#xFF0C;&#x6211;&#x4EEC;&#x4EC5;&#x5728;ground-truth&#x89D2;&#x70B9;&#x4F4D;&#x7F6E;&#x5E94;&#x7528;&#x635F;&#x5931;&#x3002;</p><h2 id="Corner-Pooling"><a href="#Corner-Pooling" class="headerlink" title="Corner Pooling"></a>Corner Pooling</h2><p>&#x5982;&#x56FE;2&#x6240;&#x793A;&#xFF0C;&#x901A;&#x5E38;&#x6CA1;&#x6709;&#x5C40;&#x90E8;&#x89C6;&#x89C9;&#x8BC1;&#x636E;&#x8868;&#x660E;&#x5B58;&#x5728;&#x89D2;&#x70B9;&#x3002;&#x8981;&#x786E;&#x5B9A;&#x50CF;&#x7D20;&#x662F;&#x5426;&#x4E3A;&#x5DE6;&#x4E0A;&#x89D2;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x6C34;&#x5E73;&#x5730;&#x5411;&#x53F3;&#x770B;&#x76EE;&#x6807;&#x7684;&#x6700;&#x4E0A;&#x9762;&#x8FB9;&#x754C;&#xFF0C;&#x5782;&#x76F4;&#x5730;&#x5411;&#x5E95;&#x90E8;&#x770B;&#x7269;&#x4F53;&#x7684;&#x6700;&#x5DE6;&#x8FB9;&#x8FB9;&#x754C;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x6211;&#x4EEC;&#x63D0;&#x51FA;corner Pooling&#x901A;&#x8FC7;&#x7F16;&#x7801;&#x663E;&#x5F0F;&#x5148;&#x9A8C;&#x77E5;&#x8BC6;&#x6765;&#x66F4;&#x597D;&#x5730;&#x5B9A;&#x4F4D;&#x89D2;&#x70B9;&#x3002;</p><p>&#x5047;&#x8BBE;&#x6211;&#x4EEC;&#x8981;&#x786E;&#x5B9A;$(i,j)$&#x4F4D;&#x7F6E;&#x662F;&#x5DE6;&#x4E0A;&#x89D2;&#x3002;&#x8BBE;$f_t$&#x548C;$f_l$&#x4E3A;&#x5DE6;&#x4E0A;&#x89D2;&#x6C60;&#x5316;&#x5C42;&#x7684;&#x8F93;&#x5165;&#x7279;&#x5F81;&#x6620;&#x5C04;&#xFF0C;$f_{t_{ij}}$&#x548C;$f_{l_{ij}}$&#x5206;&#x522B;&#x4E3A;$(i,j)$&#x4F4D;&#x7F6E;&#x4E2D;$f_t$&#x548C;$f_lf$&#x7684;&#x5411;&#x91CF;$H&#xD7;W$&#x7684;&#x7279;&#x5F81;&#x6620;&#x5C04;&#xFF0C;corner pooling&#x5C42;&#x9996;&#x5148;&#x6700;&#x5927;&#x6C60;&#x5316;$f_t$&#x4E2D;&#x5728;$(i,j)$&#x4E0E;$(i,H)$&#x4E4B;&#x95F4;&#x6240;&#x6709;&#x7684;&#x7279;&#x5F81;&#x5411;&#x91CF;&#xFF0C;&#x4F7F;&#x4E4B;&#x6210;&#x4E3A;&#x7279;&#x5F81;&#x5411;&#x91CF;$t_{ij}$&#xFF0C;&#x8FD8;&#x6709;&#xFF0C;&#x6700;&#x5927;&#x6C60;&#x5316;$f_l$&#x4E2D;&#x5728;$(i,j)$&#x4E0E;$(W,j)$&#x4E4B;&#x95F4;&#x6240;&#x6709;&#x7684;&#x7279;&#x5F81;&#x5411;&#x91CF;&#xFF0C;&#x4F7F;&#x4E4B;&#x6210;&#x4E3A;&#x7279;&#x5F81;&#x5411;&#x91CF;$l_{ij}$&#x3002;&#x6700;&#x540E;&#xFF0C;&#x628A;$t_{ij}$&#x548C;$l_{ij}$&#x52A0;&#x5728;&#x4E00;&#x8D77;&#x3002;&#x8FD9;&#x4E2A;&#x8BA1;&#x7B97;&#x53EF;&#x4EE5;&#x7528;&#x4EE5;&#x4E0B;&#x516C;&#x5F0F;&#x8868;&#x793A;:</p><script type="math/tex; mode=display">t_{ij} = \left\{  \begin{array}{lr}    max({f_t}_{ij},t_{(i+1)j}) & if　i < H\\    {f_t}_{Hj} & otherwise  \end{array}\right.</script><script type="math/tex; mode=display">l_{ij} = \left\{  \begin{array}{lr}    max({f_l}_{ij},l_{i(j+1)}) & if　j < H\\    {f_l}_{iW} & otherwise  \end{array}\right.</script><p>&#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x6211;&#x4EEC;&#x5E94;&#x7528;&#x4E86;&#x4E00;&#x4E2A;elementwise&#x6700;&#x5927;&#x5316;&#x64CD;&#x4F5C;&#x3002;&#x52A8;&#x6001;&#x89C4;&#x5212;&#x53EF;&#x4EE5;&#x6709;&#x6548;&#x5730;&#x8BA1;&#x7B97;$t_{ij}$&#x548C;$l_{ij}$&#x3002;&#x6211;&#x4EEC;&#x4EE5;&#x7C7B;&#x4F3C;&#x7684;&#x65B9;&#x5F0F;&#x5B9A;&#x4E49;&#x53F3;&#x4E0B;&#x89D2;&#x6C60;&#x5316;&#x5C42;&#x3002;&#x6700;&#x5927;&#x6C60;&#x5316;$(0,j)$&#x4E0E;$(i,j)$&#x4E4B;&#x95F4;&#x6240;&#x6709;&#x7684;&#x7279;&#x5F81;&#x5411;&#x91CF;&#x3001;$(i,0)$&#x4E0E;$(i,j)$&#x4E4B;&#x95F4;&#x6240;&#x6709;&#x7684;&#x7279;&#x5F81;&#x5411;&#x91CF;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x6C60;&#x5316;&#x7ED3;&#x679C;&#x76F8;&#x52A0;&#x3002;Corner pooling&#x5C42;&#x7528;&#x4E8E;&#x9884;&#x6D4B;&#x6A21;&#x5757;&#xFF0C;&#x7528;&#x4E8E;&#x9884;&#x6D4B;&#x70ED;&#x56FE;&#x3001;&#x5D4C;&#x5165;&#x548C;&#x504F;&#x79FB;&#x91CF;&#x3002;</p><p><img src="/2019/07/30/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;4/3.png" alt></p><p>&#x9884;&#x6D4B;&#x6A21;&#x5757;&#x7684;&#x7ED3;&#x6784;&#x5982;&#x56FE;&#x6240;&#x793A;&#x3002;&#x6A21;&#x5757;&#x7684;&#x7B2C;&#x4E00;&#x90E8;&#x5206;&#x662F;&#x6B8B;&#x5DEE;&#x6A21;&#x5757;&#x7684;&#x4FEE;&#x6539;&#x7248;&#x672C;&#x3002;&#x5728;&#x8FD9;&#x4E2A;&#x4FEE;&#x6539;&#x540E;&#x7684;&#x6B8B;&#x5DEE;&#x6A21;&#x5757;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x7B2C;&#x4E00;&#x4E2A;3&#xD7;3&#x7684;&#x5377;&#x79EF;&#x6A21;&#x5757;&#x66FF;&#x6362;&#x4E3A;&#x4E00;&#x4E2A;corner pooling&#x6A21;&#x5757;&#x3002;&#x8FD9;&#x4E2A;&#x6B8B;&#x5DEE;&#x6A21;&#x5757;&#xFF0C;&#x9996;&#x5148;&#x901A;&#x8FC7;&#x5177;&#x6709;128&#x4E2A;&#x901A;&#x9053;&#x7684;2&#x4E2A;3&#xD7;3&#x5377;&#x79EF;&#x6A21;&#x5757;&#x7684;&#x4E3B;&#x5E72;&#x7F51;&#x7EDC;&#x5904;&#x7406;&#x7279;&#x5F81;&#xFF0C;&#x7136;&#x540E;&#x5E94;&#x7528;&#x4E00;&#x4E2A;corner pooling&#x5C42;&#x3002;&#x6B8B;&#x5DEE;&#x6A21;&#x5757;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x6C60;&#x5316;&#x7279;&#x5F81;&#x8F93;&#x5165;&#x5177;&#x6709;256&#x4E2A;&#x901A;&#x9053;&#x7684;3&#xD7;3&#x7684;Conv-BN&#x5C42;&#xFF0C;&#x7136;&#x540E;&#x52A0;&#x4E0A;&#x53CD;&#x5411;projection shortcut&#x3002;&#x4FEE;&#x6539;&#x540E;&#x7684;&#x6B8B;&#x5757;&#xFF0C;&#x540E;&#x8DDF;&#x4E00;&#x4E2A;&#x5177;&#x6709;256&#x4E2A;&#x901A;&#x9053;&#x7684;3&#xD7;3&#x7684;&#x5377;&#x79EF;&#x6A21;&#x5757;&#xFF0C;&#x548C;256&#x4E2A;&#x901A;&#x9053;&#x7684;3&#x4E2A;Conv-ReLU-Conv&#x5C42;&#x6765;&#x4EA7;&#x751F;&#x70ED;&#x56FE;&#xFF0C;&#x5D4C;&#x5165;&#x548C;&#x504F;&#x79FB;&#x91CF;&#x3002;</p><h2 id="Hourglass-Network"><a href="#Hourglass-Network" class="headerlink" title="Hourglass Network"></a>Hourglass Network</h2><p>CornerNet&#x4F7F;&#x7528;&#x6C99;&#x6F0F;&#x7F51;&#x7EDC;&#x4F5C;&#x4E3A;&#x5176;&#x9AA8;&#x5E72;&#x7F51;&#x7EDC;&#x3002;&#x6C99;&#x6F0F;&#x7F51;&#x7EDC;&#x9996;&#x6B21;&#x88AB;&#x63D0;&#x5230;&#x662F;&#x7528;&#x4E8E;&#x4EBA;&#x4F53;&#x59FF;&#x6001;&#x4F30;&#x8BA1;&#x4EFB;&#x52A1;&#x3002;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x5B8C;&#x5168;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x7531;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x6C99;&#x6F0F;&#x6A21;&#x5757;&#x7EC4;&#x6210;&#x3002;&#x6C99;&#x6F0F;&#x6A21;&#x5757;&#x9996;&#x5148;&#x901A;&#x8FC7;&#x4E00;&#x7CFB;&#x5217;&#x5377;&#x79EF;&#x5C42;&#x548C;&#x6700;&#x5927;&#x6C60;&#x5316;&#x5C42;&#x5BF9;&#x8F93;&#x5165;&#x7279;&#x6027;&#x8FDB;&#x884C;&#x4E0B;&#x91C7;&#x6837;&#x3002;&#x7136;&#x540E;&#x901A;&#x8FC7;&#x4E00;&#x7CFB;&#x5217;&#x7684;&#x4E0A;&#x91C7;&#x6837;&#x548C;&#x5377;&#x79EF;&#x5C42;&#x5C06;&#x7279;&#x5F81;&#x4E0A;&#x91C7;&#x6837;&#x56DE;&#x539F;&#x6765;&#x7684;&#x5206;&#x8FA8;&#x7387;&#x3002;&#x7531;&#x4E8E;&#x7EC6;&#x8282;&#x5728;&#x6700;&#x5927;&#x6C60;&#x5316;&#x5C42;&#x4E2D;&#x4E22;&#x5931;&#xFF0C;&#x56E0;&#x6B64;&#x6DFB;&#x52A0;&#x4E86;&#x8DF3;&#x8FC7;&#x5C42;&#x7528;&#x6765;&#x5C06;&#x7EC6;&#x8282;&#x5E26;&#x56DE;&#x5230;&#x4E0A;&#x91C7;&#x6837;&#x7684;&#x7279;&#x5F81;&#x3002;&#x6C99;&#x6F0F;&#x6A21;&#x5757;&#x5728;&#x4E00;&#x4E2A;&#x7EDF;&#x4E00;&#x7684;&#x7ED3;&#x6784;&#x4E2D;&#x6355;&#x83B7;&#x5168;&#x5C40;&#x548C;&#x5C40;&#x90E8;&#x7279;&#x5F81;&#x3002;&#x5F53;&#x591A;&#x4E2A;&#x6C99;&#x6F0F;&#x6A21;&#x5757;&#x5806;&#x79EF;&#x5728;&#x7F51;&#x7EDC;&#x4E2D;&#x65F6;&#xFF0C;&#x6C99;&#x6F0F;&#x6A21;&#x5757;&#x53EF;&#x4EE5;&#x91CD;&#x65B0;&#x5904;&#x7406;&#x7279;&#x5F81;&#x4EE5;&#x83B7;&#x53D6;&#x66F4;&#x9AD8;&#x7EA7;&#x522B;&#x7684;&#x4FE1;&#x606F;&#x3002;&#x8FD9;&#x4E9B;&#x7279;&#x6027;&#x4F7F;&#x6C99;&#x6F0F;&#x7F51;&#x7EDC;&#x6210;&#x4E3A;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x7684;&#x7406;&#x60F3;&#x9009;&#x62E9;&#x3002;&#x4E8B;&#x5B9E;&#x4E0A;&#xFF0C;&#x8BB8;&#x591A;&#x73B0;&#x6709;&#x7684;&#x68C0;&#x6D4B;&#x5668;&#x5DF2;&#x7ECF;&#x91C7;&#x7528;&#x4E86;&#x7C7B;&#x4F3C;&#x6C99;&#x6F0F;&#x7F51;&#x7EDC;&#x7684;&#x7F51;&#x7EDC;&#x3002;</p><p>&#x6211;&#x4EEC;&#x7684;&#x6C99;&#x6F0F;&#x7F51;&#x7EDC;&#x7531;&#x4E24;&#x4E2A;&#x6C99;&#x6F0F;&#x7EC4;&#x6210;&#xFF0C;&#x6211;&#x4EEC;&#x5BF9;&#x6C99;&#x6F0F;&#x6A21;&#x5757;&#x7684;&#x7ED3;&#x6784;&#x505A;&#x4E86;&#x4E00;&#x4E9B;&#x4FEE;&#x6539;&#x3002;&#x6211;&#x4EEC;&#x4E0D;&#x4F7F;&#x7528;&#x6700;&#x5927;&#x6C60;&#xFF0C;&#x800C;&#x662F;&#x4F7F;&#x7528;&#x6B65;&#x957F;2&#x6765;&#x964D;&#x4F4E;&#x7279;&#x5F81;&#x5206;&#x8FA8;&#x7387;&#x3002;&#x6211;&#x4EEC;&#x51CF;&#x5C11;&#x4E86;5&#x500D;&#x7684;&#x7279;&#x5F81;&#x5206;&#x8FA8;&#x7387;&#xFF0C;&#x5E76;&#x589E;&#x52A0;&#x4E86;&#x7279;&#x5F81;&#x901A;&#x9053;&#x7684;&#x6570;&#x91CF;(256,384,384,384,512)&#x3002;&#x5F53;&#x6211;&#x4EEC;&#x5BF9;&#x7279;&#x5F81;&#x8FDB;&#x884C;&#x4E0A;&#x91C7;&#x6837;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x5E94;&#x7528;&#x4E86;&#x4E24;&#x4E2A;&#x6B8B;&#x5DEE;&#x6A21;&#x5757;&#xFF0C;&#x7136;&#x540E;&#x662F;&#x4E00;&#x4E2A;&#x6700;&#x8FD1;&#x7684;&#x76F8;&#x90BB;&#x4E0A;&#x91C7;&#x6837;&#x3002;&#x6BCF;&#x4E2A;&#x8DF3;&#x8DC3;&#x8FDE;&#x63A5;&#x8FD8;&#x5305;&#x542B;&#x4E24;&#x4E2A;&#x6B8B;&#x5DEE;&#x6A21;&#x5757;&#x3002;&#x6C99;&#x6F0F;&#x6A21;&#x5757;&#x4E2D;&#x95F4;&#x6709;4&#x4E2A;512&#x901A;&#x9053;&#x7684;&#x6B8B;&#x5DEE;&#x6A21;&#x5757;&#x3002;&#x5728;&#x6C99;&#x6F0F;&#x6A21;&#x5757;&#x4E4B;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;128&#x4E2A;&#x901A;&#x9053;7&#xD7;7&#x7684;&#x5377;&#x79EF;&#x6A21;&#x5757;&#xFF0C;&#x6B65;&#x957F;&#x4E3A;2&#xFF0C;4&#x500D;&#x51CF;&#x5C11;&#x7684;&#x56FE;&#x50CF;&#x5206;&#x8FA8;&#x7387;&#xFF0C;&#x540E;&#x8DDF;&#x4E00;&#x4E2A;256&#x4E2A;&#x901A;&#x9053;&#xFF0C;&#x6B65;&#x957F;&#x4E3A;2&#x7684;&#x6B8B;&#x5DEE;&#x5757;&#x3002;</p><p>&#x5728;&#x57FA;&#x7840;&#x4E0A;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x5728;&#x8BAD;&#x7EC3;&#x65F6;&#x589E;&#x52A0;&#x4E86;&#x4E2D;&#x95F4;&#x76D1;&#x7763;&#x3002;&#x4F46;&#x662F;&#xFF0C;&#x6211;&#x4EEC;&#x6CA1;&#x6709;&#x5411;&#x7F51;&#x7EDC;&#x4E2D;&#x6DFB;&#x52A0;&#x53CD;&#x5411;&#x4E2D;&#x95F4;&#x9884;&#x6D4B;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x53D1;&#x73B0;&#x8FD9;&#x4F1A;&#x635F;&#x5BB3;&#x7F51;&#x7EDC;&#x7684;&#x6027;&#x80FD;&#x3002;&#x6211;&#x4EEC;&#x5728;&#x7B2C;&#x4E00;&#x4E2A;&#x6C99;&#x6F0F;&#x6A21;&#x5757;&#x7684;&#x8F93;&#x5165;&#x548C;&#x8F93;&#x51FA;&#xFF0C;&#x5E94;&#x7528;&#x4E86;&#x4E00;&#x4E2A;3&#xD7;3&#x7684;Conv-BN&#x6A21;&#x5757;&#x3002;&#x7136;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x901A;&#x8FC7;&#x5143;&#x7D20;&#x7EA7;&#x7684;&#x52A0;&#x6CD5;&#x5408;&#x5E76;&#x5B83;&#x4EEC;&#xFF0C;&#x540E;&#x8DDF;&#x4E00;&#x4E2A;ReLU&#x548C;&#x4E00;&#x4E2A;&#x5177;&#x6709;256&#x4E2A;&#x901A;&#x9053;&#x7684;&#x6B8B;&#x5DEE;&#x5757;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x5176;&#x7528;&#x4F5C;&#x7B2C;&#x4E8C;&#x4E2A;&#x6C99;&#x6F0F;&#x6A21;&#x5757;&#x7684;&#x8F93;&#x5165;&#x3002;&#x6C99;&#x6F0F;&#x7F51;&#x7EDC;&#x7684;&#x6DF1;&#x5EA6;&#x4E3A;104&#x3002;&#x4E0E;&#x8BB8;&#x591A;&#x5176;&#x4ED6;&#x6700;&#x5148;&#x8FDB;&#x7684;&#x68C0;&#x6D4B;&#x5668;&#x4E0D;&#x540C;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x4F7F;&#x7528;&#x6574;&#x4E2A;&#x7F51;&#x7EDC;&#x6700;&#x540E;&#x4E00;&#x5C42;&#x7684;&#x7279;&#x5F81;&#x6765;&#x8FDB;&#x884C;&#x9884;&#x6D4B;&#x3002;</p><h1 id="Experiments"><a href="#Experiments" class="headerlink" title="Experiments"></a>Experiments</h1><h2 id="Training-Details"><a href="#Training-Details" class="headerlink" title="Training Details"></a>Training Details</h2><p>&#x6211;&#x4EEC;&#x5728;PyTorch&#x4E2D;&#x5B9E;&#x73B0;&#x4E86;CornerNet&#x3002;&#x7F51;&#x7EDC;&#x662F;&#x5728;&#x9ED8;&#x8BA4;&#x7684;PyTorch&#x8BBE;&#x7F6E;&#x4E0B;&#x968F;&#x673A;&#x521D;&#x59CB;&#x5316;&#x7684;&#xFF0C;&#x6CA1;&#x6709;&#x5728;&#x4EFB;&#x4F55;&#x5916;&#x90E8;&#x6570;&#x636E;&#x96C6;&#x4E0A;&#x8FDB;&#x884C;&#x9884;&#x8BAD;&#x7EC3;&#x3002;&#x5F53;&#x6211;&#x4EEC;&#x5E94;&#x7528;focal loss&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x9075;&#x5FAA;&#x6765;&#x8BBE;&#x7F6E;&#x5377;&#x79EF;&#x5C42;&#x4E2D;&#x7684;&#x504F;&#x5DEE;&#x6765;&#x9884;&#x6D4B;&#x89D2;&#x70B9;&#x70ED;&#x56FE;&#x3002;&#x5728;&#x8BAD;&#x7EC3;&#x671F;&#x95F4;&#xFF0C;&#x6211;&#x4EEC;&#x8BBE;&#x7F6E;&#x4E86;&#x7F51;&#x7EDC;&#x7684;&#x8F93;&#x5165;&#x5206;&#x8FA8;&#x7387;511&#xD7;511,&#x5BFC;&#x81F4;&#x8F93;&#x51FA;&#x5206;&#x8FA8;&#x7387;&#x4E3A;128&#xD7;128&#x3002;&#x4E3A;&#x4E86;&#x51CF;&#x5C11;&#x8FC7;&#x62DF;&#x5408;&#xFF0C;&#x6211;&#x4EEC;&#x91C7;&#x7528;&#x4E86;&#x6807;&#x51C6;&#x7684;&#x6570;&#x636E;&#x589E;&#x5F3A;&#x6280;&#x672F;&#xFF0C;&#x5305;&#x62EC;&#x968F;&#x673A;&#x6C34;&#x5E73;&#x7FFB;&#x8F6C;&#x3001;&#x968F;&#x673A;&#x7F29;&#x653E;&#x3001;&#x968F;&#x673A;&#x88C1;&#x526A;&#x548C;&#x968F;&#x673A;&#x8272;&#x5F69;&#x6296;&#x52A8;&#xFF0C;&#x5176;&#x4E2D;&#x5305;&#x62EC;&#x8C03;&#x6574;&#x56FE;&#x50CF;&#x7684;&#x4EAE;&#x5EA6;&#xFF0C;&#x9971;&#x548C;&#x5EA6;&#x548C;&#x5BF9;&#x6BD4;&#x5EA6;&#x3002; &#x6700;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;PCA&#x5E94;&#x7528;&#x4E8E;&#x8F93;&#x5165;&#x56FE;&#x50CF;&#x3002;<br>&#x6211;&#x4EEC;&#x4F7F;&#x7528;Adam&#x6765;&#x4F18;&#x5316;&#x5B8C;&#x6574;&#x7684;&#x8BAD;&#x7EC3;&#x635F;&#x5931;&#xFF1A;</p><script type="math/tex; mode=display">L=L_{det}+\alpha L_{pull}+\beta L_{push}+\gamma L_{off}</script><p>&#x5176;&#x4E2D;$\alpha$&#xFF0C;$\beta$&#x548C;$\gamma$&#x5206;&#x522B;&#x662F;pull&#xFF0C;push&#x548C;offset&#x7684;&#x6743;&#x91CD;&#x3002;&#x6211;&#x4EEC;&#x5C06;$\alpha$&#x548C;$\beta$&#x90FD;&#x8BBE;&#x7F6E;&#x4E3A;0.1&#xFF0C;&#x5C06;$\gamma$&#x8BBE;&#x7F6E;&#x4E3A;1&#x3002;&#x6211;&#x4EEC;&#x53D1;&#x73B0;&#xFF0C;1&#x548C;&#x66F4;&#x5927;&#x7684;$\alpha$&#x548C;$\beta$&#x503C;&#x4F1A;&#x5BFC;&#x81F4;&#x6027;&#x80FD;&#x4E0D;&#x4F73;&#x3002;&#x6211;&#x4EEC;&#x4F7F;&#x7528;49&#x7684;batch size&#xFF0C;&#x5E76;&#x5728;10&#x4E2A;Titan X&#xFF08;PASCAL&#xFF09;GPU&#x4E0A;&#x8BAD;&#x7EC3;&#x7F51;&#x7EDC;&#xFF08;&#x4E3B;GPU 4&#x4E2A;&#x56FE;&#x50CF;&#xFF0C;&#x5176;&#x4F59;GPU&#x6BCF;&#x4E2A;GPU 5&#x4E2A;&#x56FE;&#x50CF;&#xFF09;&#x3002; &#x4E3A;&#x4E86;&#x8282;&#x7701;GPU&#x8D44;&#x6E90;&#xFF0C;&#x5728;&#x6211;&#x4EEC;&#x7684; ablation experiments&#xFF08;&#x5373;&#x6A21;&#x578B;&#x7B80;&#x5316;&#x6D4B;&#x8BD5;&#xFF0C;&#x53BB;&#x6389;&#x8BE5;&#x7ED3;&#x6784;&#x7684;&#x7F51;&#x7EDC;&#x4E0E;&#x52A0;&#x4E0A;&#x8BE5;&#x7ED3;&#x6784;&#x7684;&#x7F51;&#x7EDC;&#x6240;&#x5F97;&#x5230;&#x7684;&#x7ED3;&#x679C;&#x8FDB;&#x884C;&#x5BF9;&#x6BD4;&#xFF09;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x8BAD;&#x7EC3;&#x7F51;&#x7EDC;&#xFF0C;&#x8FDB;&#x884C;250k&#x6B21;&#x8FED;&#x4EE3;&#xFF0C;&#x5B66;&#x4E60;&#x7387;&#x4E3A;$2.5&#xD7;10^{-4}$&#x3002;&#x5F53;&#x6211;&#x4EEC;&#x5C06;&#x6211;&#x4EEC;&#x7684;&#x7ED3;&#x679C;&#x4E0E;&#x5176;&#x4ED6;&#x68C0;&#x6D4B;&#x5668;&#x8FDB;&#x884C;&#x6BD4;&#x8F83;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x989D;&#x5916;&#x8BAD;&#x7EC3;&#x7F51;&#x7EDC;&#xFF0C;&#x8FDB;&#x884C;250 k&#x6B21;&#x8FED;&#x4EE3;&#xFF0C;&#x5E76;&#x5230;&#x6700;&#x540E;50 k&#x6B21;&#x8FED;&#x4EE3;&#x65F6;&#xFF0C;&#x5C06;&#x5B66;&#x4E60;&#x901F;&#x7387;&#x964D;&#x4F4E;&#x5230;$2.5&#xD7;10^{-5}$&#x3002;</p><h2 id="Testing-Details"><a href="#Testing-Details" class="headerlink" title="Testing Details"></a>Testing Details</h2><p>&#x5728;&#x6D4B;&#x8BD5;&#x671F;&#x95F4;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x7B80;&#x5355;&#x7684;&#x540E;&#x5904;&#x7406;&#x7B97;&#x6CD5;&#x4ECE;&#x70ED;&#x56FE;&#xFF0C;&#x5D4C;&#x5165;&#x548C;&#x504F;&#x79FB;&#x751F;&#x6210;&#x8FB9;&#x754C;&#x6846;&#x3002;&#x6211;&#x4EEC;&#x9996;&#x5148;&#x901A;&#x8FC7;&#x5728;&#x89D2;&#x70B9;&#x70ED;&#x56FE;&#x4E0A;&#x4F7F;&#x7528;3&#xD7;3&#x6700;&#x5927;&#x6C60;&#x5316;&#x5C42;&#x6765;&#x5E94;&#x7528;&#x975E;&#x6781;&#x5927;&#x503C;&#x6291;&#x5236;(NMS)&#x3002;&#x7136;&#x540E;&#x6211;&#x4EEC;&#x4ECE;&#x70ED;&#x56FE;&#x4E2D;&#x9009;&#x62E9;&#x524D;100&#x4E2A;&#x5DE6;&#x4E0A;&#x89D2;&#x548C;&#x524D;100&#x4E2A;&#x53F3;&#x4E0B;&#x89D2;&#x3002;&#x89D2;&#x70B9;&#x4F4D;&#x7F6E;&#x7531;&#x76F8;&#x5E94;&#x7684;&#x504F;&#x79FB;&#x8C03;&#x6574;&#x3002;&#x6211;&#x4EEC;&#x8BA1;&#x7B97;&#x5DE6;&#x4E0A;&#x89D2;&#x548C;&#x53F3;&#x4E0B;&#x89D2;&#x5D4C;&#x5165;&#x4E4B;&#x95F4;&#x7684;L1&#x8DDD;&#x79BB;&#x3002;&#x8DDD;&#x79BB;&#x5927;&#x4E8E;0.5&#x6216;&#x5305;&#x542B;&#x4E0D;&#x540C;&#x7C7B;&#x522B;&#x7684;&#x89D2;&#x70B9;&#x5BF9;&#x5C06;&#x88AB;&#x5254;&#x9664;&#x3002;&#x5DE6;&#x4E0A;&#x89D2;&#x548C;&#x53F3;&#x4E0B;&#x89D2;&#x7684;&#x5E73;&#x5747;&#x5F97;&#x5206;&#x7528;&#x4F5C;&#x68C0;&#x6D4B;&#x5206;&#x6570;&#x3002;</p><p>&#x6211;&#x4EEC;&#x4E0D;&#x662F;&#x5C06;&#x56FE;&#x50CF;&#x5927;&#x5C0F;&#x8C03;&#x6574;&#x4E3A;&#x56FA;&#x5B9A;&#x5927;&#x5C0F;&#xFF0C;&#x800C;&#x662F;&#x4FDD;&#x6301;&#x56FE;&#x50CF;&#x7684;&#x539F;&#x59CB;&#x5206;&#x8FA8;&#x7387;&#xFF0C;&#x5E76;&#x5728;&#x5C06;&#x5176;&#x8F93;&#x5165;&#x7ED9;CornerNet&#x4E4B;&#x524D;&#x7528;0&#x586B;&#x5145;&#x3002;&#x539F;&#x59CB;&#x56FE;&#x50CF;&#x548C;&#x7FFB;&#x8F6C;&#x56FE;&#x50CF;&#x90FD;&#x7528;&#x4E8E;&#x6D4B;&#x8BD5;&#x3002;&#x6211;&#x4EEC;&#x5C06;&#x539F;&#x59CB;&#x56FE;&#x50CF;&#x548C;&#x7FFB;&#x8F6C;&#x56FE;&#x50CF;&#x7684;&#x68C0;&#x6D4B;&#x7ED3;&#x5408;&#x8D77;&#x6765;&#xFF0C;&#x5E76;&#x5E94;&#x7528;soft-max&#x6765;&#x6291;&#x5236;&#x5197;&#x4F59;&#x68C0;&#x6D4B;&#x3002;&#x4EC5;&#x8BB0;&#x5F55;&#x524D;100&#x4E2A;&#x68C0;&#x6D4B;&#x9879;&#x3002;Titan X&#xFF08;PASCAL&#xFF09;GPU&#x4E0A;&#x7684;&#x6BCF;&#x4E2A;&#x56FE;&#x50CF;&#x7684;&#x5E73;&#x5747;&#x68C0;&#x6D4B;&#x65F6;&#x95F4;&#x4E3A;244ms&#x3002;</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 目标检测 </tag>
            
            <tag> anchor-free </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文阅读笔记3：Selective Kernel Networks</title>
      <link href="/2019/07/30/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B03/"/>
      <url>/2019/07/30/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B03/</url>
      
        <content type="html"><![CDATA[<blockquote><p>&#x8BBA;&#x6587;&#x5730;&#x5740;&#xFF1A;<a href="https://arxiv.org/pdf/1903.06586.pdf" target="_blank" rel="noopener">https://arxiv.org/pdf/1903.06586.pdf</a><br>&#x8BBA;&#x6587;&#x4EE3;&#x7801;&#xFF1A;<a href="https://github.com/implus/SKNet" target="_blank" rel="noopener">https://github.com/implus/SKNet</a></p></blockquote><h1 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h1><p>&#x5728;&#x6807;&#x51C6;&#x7684;&#x5377;&#x79EF;&#x7F51;&#x7EDC;&#x4E2D;&#xFF0C;&#x6BCF;&#x5C42;&#x7F51;&#x7EDC;&#x4E2D;&#x795E;&#x7ECF;&#x5143;&#x7684;&#x611F;&#x53D7;&#x91CE;&#x7684;&#x5927;&#x5C0F;&#x90FD;&#x662F;&#x76F8;&#x540C;&#x7684;&#x3002;&#x5728;&#x795E;&#x7ECF;&#x5B66;&#x4E2D;&#xFF0C;&#x89C6;&#x89C9;&#x795E;&#x7ECF;&#x5143;&#x611F;&#x53D7;&#x91CE;&#x7684;&#x5927;&#x5C0F;&#x662F;&#x7531;&#x523A;&#x6FC0;&#x673A;&#x5236;&#x6784;&#x5EFA;&#x7684;&#xFF0C;&#x800C;&#x5728;&#x5377;&#x79EF;&#x7F51;&#x7EDC;&#x4E2D;&#x5374;&#x5F88;&#x5C11;&#x8003;&#x8651;&#x8FD9;&#x4E2A;&#x56E0;&#x7D20;&#x3002;&#x672C;&#x6587;&#x63D0;&#x51FA;&#x7684;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x4F7F;&#x795E;&#x7ECF;&#x5143;&#x5BF9;&#x4E8E;&#x4E0D;&#x540C;&#x5C3A;&#x5BF8;&#x7684;&#x8F93;&#x5165;&#x4FE1;&#x606F;&#x8FDB;&#x884C;&#x81EA;&#x9002;&#x5E94;&#x7684;&#x8C03;&#x6574;&#x5176;&#x611F;&#x53D7;&#x91CE;&#x7684;&#x5927;&#x5C0F;&#x3002;building block&#x4E3A;Selective Kernel&#x5355;&#x5143;&#x3002;&#x5176;&#x5B58;&#x5728;&#x591A;&#x4E2A;&#x5206;&#x652F;&#xFF0C;&#x6BCF;&#x4E2A;&#x5206;&#x652F;&#x7684;&#x5377;&#x79EF;&#x6838;&#x7684;&#x5C3A;&#x5BF8;&#x90FD;&#x4E0D;&#x540C;&#x3002;&#x4E0D;&#x540C;&#x5C3A;&#x5BF8;&#x7684;&#x5377;&#x79EF;&#x6838;&#x6700;&#x540E;&#x901A;&#x8FC7;softmax&#x8FDB;&#x884C;&#x878D;&#x5408;&#x3002;&#x5206;&#x652F;&#x4E2D;&#x4E0D;&#x540C;&#x6CE8;&#x610F;&#x529B;&#x5728;fusion layer&#x4EA7;&#x751F;&#x4E0D;&#x540C;&#x7684;&#x6709;&#x6548;&#x611F;&#x53D7;&#x91CE;&#x3002;&#x591A;&#x4E2A;SK&#x5355;&#x5143;&#x8FDB;&#x884C;&#x5806;&#x53E0;&#x6784;&#x6210;Selective  Kernel  Networks  (SKNets)&#x3002;&#x8BE6;&#x7EC6;&#x5206;&#x6790;&#x663E;&#x793A;SKNet&#x91CC;&#x7684;&#x795E;&#x7ECF;&#x5143;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x8F93;&#x5165;&#x901A;&#x8FC7;&#x9002;&#x5E94;&#x6027;&#x7684;&#x8C03;&#x6574;&#x611F;&#x53D7;&#x91CE;&#x7684;&#x5927;&#x5C0F;&#x6765;&#x6355;&#x6349;&#x4E0D;&#x540C;&#x5C3A;&#x5EA6;&#x7684;&#x76EE;&#x6807;object&#x3002;</p><a id="more"></a><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>&#x5728;&#x4E0A;&#x4E16;&#x7EAA;&#x732B;&#x7684;&#x524D;&#x89C6;&#x89C9;&#x76AE;&#x5C42;&#x795E;&#x7ECF;&#x5143;&#x7684;&#x5C40;&#x90E8;&#x611F;&#x53D7;&#x91CE;&#x6FC0;&#x53D1;&#x4E86;&#x5377;&#x79EF;&#x7F51;&#x7EDC;&#x7684;&#x4EA7;&#x751F;&#x3002;&#x5728;&#x89C6;&#x89C9;&#x76AE;&#x5C42;&#x4E2D;&#xFF0C;&#x76F8;&#x540C;&#x533A;&#x57DF;&#x7684;&#x795E;&#x7ECF;&#x5143;&#x7684;&#x5C40;&#x90E8;&#x611F;&#x53D7;&#x91CE;&#x7684;&#x5927;&#x5C0F;&#x662F;&#x4E0D;&#x540C;&#x7684;&#xFF0C;&#x4ECE;&#x800C;&#x53EF;&#x4EE5;&#x5728;&#x76F8;&#x540C;&#x7684;&#x5904;&#x7406;&#x9636;&#x6BB5;&#x4E2D;&#x83B7;&#x5F97;&#x4E0D;&#x540C;&#x5C3A;&#x5BF8;&#x7684;&#x7A7A;&#x95F4;&#x4FE1;&#x606F;&#x3002;&#x8BE5;&#x601D;&#x60F3;&#x88AB;Inception&#x7CFB;&#x5217;&#x7F51;&#x7EDC;&#x5B8C;&#x7F8E;&#x7684;&#x5E94;&#x7528;&#xFF0C;&#x5728;&#x5176;building block&#x4E2D;&#xFF0C;3x3,5x5,7x7&#x7684;&#x5377;&#x79EF;&#x901A;&#x8FC7;&#x7B80;&#x5355;&#x7684;&#x62FC;&#x63A5;&#x6765;&#x5F97;&#x5230;&#x591A;&#x5C3A;&#x5BF8;&#x4FE1;&#x606F;&#x3002;</p><p>&#x7136;&#x800C;&#xFF0C;&#x5728;&#x8BBE;&#x8BA1;&#x5377;&#x79EF;&#x7F51;&#x7EDC;&#x65F6;&#xFF0C;&#x795E;&#x7ECF;&#x5143;&#x611F;&#x53D7;&#x91CE;&#x7684;&#x5176;&#x4ED6;&#x5C5E;&#x6027;&#x5E76;&#x6CA1;&#x6709;&#x88AB;&#x8003;&#x8651;&#x5230;&#x3002;&#x6BD4;&#x5982;&#x611F;&#x53D7;&#x91CE;&#x5C3A;&#x5BF8;&#x7684;&#x81EA;&#x9002;&#x5E94;&#x8C03;&#x6574;&#x3002;&#x5927;&#x91CF;&#x5B9E;&#x9A8C;&#x8BC1;&#x660E;&#xFF0C;&#x89C6;&#x89C9;&#x76AE;&#x5C42;&#x7684;&#x795E;&#x7ECF;&#x5143;&#x7684;&#x611F;&#x53D7;&#x91CE;&#x5C3A;&#x5BF8;&#x5E76;&#x4E0D;&#x662F;&#x56FA;&#x5B9A;&#x7684;&#xFF0C;&#x800C;&#x662F;&#x53D7;&#x6FC0;&#x52B1;&#x8C03;&#x5236;&#x7684;&#x3002;&#x50CF;Inception&#x8FD9;&#x79CD;&#x5177;&#x6709;&#x591A;&#x4E2A;&#x5206;&#x652F;&#x7684;&#x7F51;&#x7EDC;&#x5176;&#x5185;&#x90E8;&#x5B58;&#x5728;&#x4E00;&#x79CD;&#x6F5C;&#x5728;&#x7684;&#x673A;&#x5236;&#x53EF;&#x4EE5;&#x5728;&#x4E0B;&#x4E00;&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#x6839;&#x636E;&#x8F93;&#x5165;&#x7684;&#x5185;&#x5BB9;&#x8C03;&#x6574;&#x795E;&#x7ECF;&#x5143;&#x611F;&#x53D7;&#x91CE;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x4E0B;&#x4E00;&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#x901A;&#x8FC7;&#x7EBF;&#x6027;&#x7EC4;&#x5408;&#x5C06;&#x4E0D;&#x540C;&#x5206;&#x652F;&#x7684;&#x7279;&#x5F81;&#x8FDB;&#x884C;&#x878D;&#x5408;&#x3002;&#x4F46;&#x662F;&#x7EBF;&#x6027;&#x7EC4;&#x5408;&#x7684;&#x65B9;&#x6CD5;&#x4E0D;&#x8DB3;&#x4E8E;&#x63D0;&#x4F9B;&#x7F51;&#x7EDC;&#x5F3A;&#x5927;&#x7684;&#x8C03;&#x6574;&#x80FD;&#x529B;&#x3002;</p><p>&#x672C;&#x6587;&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x79CD;&#x975E;&#x7EBF;&#x6027;&#x7684;&#x65B9;&#x6CD5;&#x805A;&#x5408;&#x6765;&#x81EA;&#x4E0D;&#x540C;&#x6838;&#x7684;&#x7279;&#x5F81;&#x8FDB;&#x800C;&#x5B9E;&#x73B0;&#x611F;&#x53D7;&#x91CE;&#x4E0D;&#x540C;&#x5C3A;&#x5BF8;&#x7684;&#x8C03;&#x6574;&#x3002;&#x5F15;&#x5165;&#x4E86;&#x201D;Selective Kernel&#x201D;&#x5377;&#x79EF;&#xFF0C;&#x5176;&#x5305;&#x542B;&#x4E86;&#x4E09;&#x4E2A;&#x64CD;&#x4F5C;&#xFF1A;Split,Fuse,Select&#xFF1A;</p><ul><li>Split&#x64CD;&#x4F5C;&#x4EA7;&#x751F;&#x591A;&#x4E2A;&#x4E0D;&#x540C;&#x6838;&#x5C3A;&#x5BF8;&#x7684;&#x901A;&#x9053;&#x5BF9;&#x5E94;&#x4E8E;&#x795E;&#x7ECF;&#x5143;&#x7684;&#x4E0D;&#x540C;&#x611F;&#x53D7;&#x91CE;&#x5C3A;&#x5BF8;&#x3002;</li><li>Fuse&#x64CD;&#x4F5C;&#x7EC4;&#x5408;&#x878D;&#x5408;&#x6765;&#x81EA;&#x591A;&#x901A;&#x9053;&#x7684;&#x4FE1;&#x606F;&#x4ECE;&#x800C;&#x83B7;&#x5F97;&#x4E00;&#x4E2A;&#x5168;&#x5C40;&#x53CA;&#x53EF;&#x7406;&#x89E3;&#x6027;&#x7684;&#x8868;&#x793A;&#x7528;&#x4E8E;&#x8FDB;&#x884C;&#x6743;&#x91CD;&#x9009;&#x62E9;&#x3002;</li><li>Select&#x64CD;&#x4F5C;&#x6839;&#x636E;&#x6311;&#x9009;&#x5F97;&#x5230;&#x7684;&#x6743;&#x91CD;&#x5BF9;&#x4E0D;&#x540C;&#x6838;&#x5C3A;&#x5BF8;&#x7684;feature map&#x8FDB;&#x884C;&#x878D;&#x5408;&#x3002;</li></ul><h1 id="Related-work"><a href="#Related-work" class="headerlink" title="Related work"></a>Related work</h1><ul><li>Multi-batch convolutional network<ul><li>Highway network</li><li>ResNet</li><li>FractalNets and Multilevel ResNets</li><li>TnceptionNets</li></ul></li><li>Grouped/depthwise/dilated convolutions<ul><li>Grouped convolution &#x51CF;&#x5C11;&#x4E86;&#x53C2;&#x6570;&#x4E2A;&#x6570;&#x4EE5;&#x53CA;&#x8BA1;&#x7B97;&#x6210;&#x672C;&#xFF0C;&#x9996;&#x6B21;&#x5E94;&#x7528;&#x4E8E;AlexNet&#x3002;&#x4F7F;&#x7528;grouped convolution&#xFF0C;ResNeXts&#x4E5F;&#x80FD;&#x591F;&#x63D0;&#x5347;&#x51C6;&#x786E;&#x7387;&#x3002;</li><li>Depthwise convolution grouped convolution&#x7684;&#x7279;&#x6B8A;&#x60C5;&#x51B5;&#xFF0C;groups&#x7684;&#x4E2A;&#x6570;&#x7B49;&#x4E8E;&#x901A;&#x9053;&#x7684;&#x4E2A;&#x6570;&#x3002;</li><li>Dilated convolutions &#x53EF;&#x4EE5;&#x6307;&#x6570;&#x5F0F;&#x6269;&#x5927;&#x611F;&#x53D7;&#x91CE;&#xFF0C;&#x800C;&#x4E14;&#x4E0D;&#x4F1A;loss of coverage&#x3002;<br>&#x5728;SK convolution&#x4E2D;&#xFF0C;&#x5927;&#x5C3A;&#x5BF8;&#x7684;&#x5377;&#x79EF;&#x6838;&#x88AB;&#x8BBE;&#x8BA1;&#x6210;grouped/depthwise/dilated convolutions&#x7684;&#x96C6;&#x5408;&#xFF0C;&#x6765;&#x907F;&#x514D;&#x6C89;&#x91CD;&#x7684;&#x5F00;&#x9500;&#x3002;</li></ul></li><li>Attention mechanisms<br>&#x8BBE;&#x8BA1;&#x4E00;&#x7CFB;&#x5217;&#x7684;&#x6CE8;&#x610F;&#x529B;&#x5206;&#x914D;&#x7CFB;&#x6570;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x4E00;&#x7CFB;&#x5217;&#x6743;&#x91CD;&#x53C2;&#x6570;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x5F3A;&#x8C03;&#x6216;&#x9009;&#x62E9;&#x76EE;&#x6807;&#x5904;&#x7406;&#x5BF9;&#x8C61;&#x7684;&#x91CD;&#x8981;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x4E14;&#x6291;&#x5236;&#x4E00;&#x4E9B;&#x65E0;&#x5173;&#x7684;&#x7EC6;&#x8282;&#x4FE1;&#x606F;&#x3002;</li><li>Dynamic convolutions<ul><li>Dynamic Filter &#x53EA;&#x80FD;&#x9002;&#x5E94;&#x6027;&#x7684;&#x6539;&#x53D8;filters&#x7684;&#x53C2;&#x6570;&#x800C;&#x4E0D;&#x662F;&#x5377;&#x79EF;&#x6838;&#x5927;&#x5C0F;&#x7684;&#x8C03;&#x6574;</li><li>Active Convo-lution &#x4F7F;&#x7528;&#x504F;&#x79FB;&#x6765;&#x589E;&#x5F3A;&#x5377;&#x79EF;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#x91C7;&#x6837;</li><li>De-formable Convolutional Networks &#x52A8;&#x6001;&#x5730;&#x4EA7;&#x751F;&#x4F4D;&#x7F6E;&#x504F;&#x79FB;</li></ul></li></ul><h1 id="Methods"><a href="#Methods" class="headerlink" title="Methods"></a>Methods</h1><h2 id="Selective-Kernel-Convolution"><a href="#Selective-Kernel-Convolution" class="headerlink" title="Selective Kernel Convolution"></a>Selective Kernel Convolution</h2><p>SK convolution &#x5305;&#x542B;&#x4E09;&#x4E2A;&#x64CD;&#x4F5C;&#x2014;&#x2014;Split,Fuse&#x4EE5;&#x53CA;Select&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF1A;<br><img src="/2019/07/30/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;3/1.png" alt><br>&#x5728;&#x8FD9;&#x4E2A;&#x4F8B;&#x5B50;&#x4E2D;&#x7531;&#x4E24;&#x4E2A;&#x5206;&#x652F;&#xFF0C;&#x56E0;&#x6B64;&#x53EA;&#x6709;&#x4E24;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x5377;&#x79EF;&#x6838;&#xFF0C;&#x5355;&#x5B83;&#x5F88;&#x5BB9;&#x6613;&#x62D3;&#x5C55;&#x6210;&#x591A;&#x4E2A;&#x5206;&#x652F;&#x3002;</p><ul><li><p>Split&#xFF1A;&#x7ED9;&#x5B9A;feature map $X\in R^{H^{&#x2018;}&#xD7;W^{&#x2018;}&#xD7;C^{&#x2018;}}$,&#x6211;&#x4EEC;&#x5148;&#x6267;&#x884C;&#x4E24;&#x4E2A;&#x5377;&#x79EF;&#x6838;&#x5927;&#x5C0F;&#x5206;&#x522B;&#x4E3A;3&#x548C;5&#x7684;&#x53D8;&#x6362;$\overline{T}:X\rightarrow \overline{U}\in R^{R&#xD7;W&#xD7;C}$&#x4EE5;&#x53CA;$\hat{T}:X\rightarrow \hat{U}\in R^{R&#xD7;W&#xD7;C}$&#x4E24;&#x79CD;&#x53D8;&#x6362;&#x90FD;&#x662F;&#x7531;&#x4E00;&#x7CFB;&#x5217;&#x9AD8;&#x6548;&#x7684;grouped/depthwise convolution&#xFF0C;Batch Normalization&#x4EE5;&#x53CA;ReLU&#x51FD;&#x6570;&#x7EC4;&#x6210;&#x3002;&#x4E3A;&#x4E86;&#x66F4;&#x52A0;&#x9AD8;&#x6548;&#xFF0C;5<em>5&#x7684;&#x5377;&#x79EF;&#x6838;&#x7531;3</em>3&#x7A7A;&#x6D1E;&#x4E3A;2&#x7684;&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x4EE3;&#x66FF;&#x3002;</p></li><li><p>Fuse&#xFF1A;&#x57FA;&#x672C;&#x7684;&#x60F3;&#x6CD5;&#x662F;&#x4F7F;&#x7528;gates&#x6765;&#x63A7;&#x5236;&#x6765;&#x81EA;&#x591A;&#x4E2A;&#x5206;&#x652F;&#x7684;&#x5E26;&#x7740;&#x4E0D;&#x540C;&#x5C3A;&#x5EA6;&#x4FE1;&#x606F;&#x7684;information&#x6D41;&#x5165;&#x4E0B;&#x4E00;&#x5C42;&#x7684;&#x795E;&#x7ECF;&#x5143;&#x3002;&#x4E3A;&#x4E86;&#x5B9E;&#x73B0;&#x8FD9;&#x4E2A;&#x76EE;&#x6807;&#xFF0C;gates&#x9700;&#x8981;&#x805A;&#x5408;&#x6765;&#x81EA;&#x6240;&#x6709;&#x5206;&#x652F;&#x7684;information&#x3002;&#x6211;&#x4EEC;&#x9996;&#x5148;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x9010;&#x5143;&#x7D20;&#x7684;summation&#xFF1A;</p><script type="math/tex; mode=display">U=\overline{U}+\hat{U}</script><p>&#x7136;&#x540E;&#x6211;&#x4EEC;&#x7F16;&#x7801;&#x8FD9;&#x4E2A;&#x5168;&#x5C40;&#x4FE1;&#x606F;&#x901A;&#x8FC7;&#x5168;&#x5C40;&#x5E73;&#x5747;&#x6C60;&#x5316;&#x6765;&#x751F;&#x6210;&#x9010;&#x901A;&#x9053;&#x7684;&#x7EDF;&#x8BA1;&#x91CF;$s\in R^{C}$s&#x4E2D;&#x7684;&#x7B2C;c&#x4E2A;&#x5143;&#x7D20;&#x901A;&#x8FC7;&#x5728;U&#x7684;HxW&#x7EF4;&#x5EA6;&#x4E0A;&#x8FDB;&#x884C;&#x538B;&#x7F29;&#x8BA1;&#x7B97;&#x5F97;&#x5230;&#xFF1A;</p><script type="math/tex; mode=display">s_{c}=F_{gp}(U_{c})=\frac{1}{H×W}\sum_{i=1}^{H}\sum_{j=1}^{W}U_{c}(i,j)</script><p>&#x7136;&#x540E;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x7528;&#x4E8E;&#x6307;&#x5BFC;&#x7CBE;&#x786E;&#x6027;&#x4EE5;&#x53CA;&#x9002;&#x5E94;&#x6027;&#x9009;&#x62E9;&#x7684;&#x7D27;&#x51D1;&#x7684;feature$z\in R^{d&#xD7;1}$&#x3002;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x5F97;&#x5230;&#xFF0C;&#x540C;&#x65F6;&#xFF0C;&#x8FDB;&#x884C;&#x4E86;&#x964D;&#x7EF4;&#x5904;&#x7406;&#xFF1A;</p><script type="math/tex; mode=display">z=F_{fc}(s)=\delta(B(Ws))</script><p>$\delta$&#x4E3A;ReLU&#x51FD;&#x6570;&#xFF0C;B&#x4E3A;Batch Normalization&#x3002;&#x4E3A;&#x4E86;&#x9A8C;&#x8BC1;W&#x4E2D;d&#x7684;&#x4F5C;&#x7528;&#xFF0C;&#x5F15;&#x5165;&#x4E86;&#x4E00;&#x4E2A;&#x8870;&#x51CF;&#x7387;r&#xFF0C;&#x5982;&#x4E0B;&#xFF0C;&#x5176;&#x4E2D;C&#x4EE3;&#x8868;&#x901A;&#x9053;&#x6570;&#xFF0C;L&#x4E3A;d&#x7684;&#x6700;&#x5C0F;&#x503C;&#x3002;</p><script type="math/tex; mode=display">d=max(C/r,L)</script></li><li><p>Select&#xFF1A;&#x901A;&#x9053;&#x95F4;&#x7684;soft attention&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x4E0D;&#x540C;&#x5C3A;&#x5BF8;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x5176;&#x88AB;&#x7D27;&#x51D1;&#x7684;&#x7279;&#x5F81;&#x4FE1;&#x606F;Z&#x5F15;&#x5BFC;&#x3002;&#x5728;channel-wise&#x5E94;&#x7528;softmax&#x64CD;&#x4F5C;&#x3002;</p><script type="math/tex; mode=display">a_{c}=\frac{e^{A_{c}z}}{e^{A_{c}z+e^{B_{c}z}}} \quad b_{c}=\frac{e^{B_{c}z}}{e^{A_{c}z+e^{B_{c}z}}}</script><p>$A,B\in R^{C&#xD7;d}$&#xFF0C;&#x4E2A;&#x4EBA;&#x7406;&#x89E3;&#x77E9;&#x9635;A&#x548C;B&#x5C31;&#x662F;&#x4E24;&#x4E2A;&#x5168;&#x8FDE;&#x63A5;&#x7684;&#x6743;&#x503C;&#x77E9;&#x9635;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x7591;&#x95EE;&#xFF0C;&#x90A3;&#x4E48;&#x751F;&#x6210;&#x5411;&#x91CF;z&#x7684;&#x610F;&#x4E49;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x5728;&#x5411;&#x91CF;s&#x4E0A;&#x505A;&#x5168;&#x8FDE;&#x63A5;&#x3002;&#x5411;&#x91CF;a&#x548C;b&#x5206;&#x522B;&#x4E3A;$\overline{U}$&#x4EE5;&#x53CA;$\hat{U}$&#x7684;soft attention vector&#x3002;$A_{c}$&#x4E3A;&#x77E9;&#x9635;A&#x7684;&#x7B2C;c&#x884C;&#xFF0C;$a_{c}$&#x4E3A;&#x5411;&#x91CF;a&#x7684;&#x7B2C;c&#x4E2A;&#x5143;&#x7D20;&#x3002;&#x5728;&#x4E24;&#x4E2A;&#x5206;&#x652F;&#x7684;&#x60C5;&#x51B5;&#x4E2D;&#xFF0C;&#x77E9;&#x9635;B&#x662F;&#x591A;&#x4F59;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;$a_{c}+b_{c}=1$&#x3002;&#x6700;&#x540E;&#x7684;feature map$V$&#x901A;&#x8FC7;&#x4E0D;&#x540C;&#x5377;&#x79EF;&#x6838;&#x7684;&#x6CE8;&#x610F;&#x529B;&#x6743;&#x91CD;&#x5F97;&#x5230;&#xFF1A;</p><script type="math/tex; mode=display">V_{c}=a_{c}\cdot \overline{U}+b_{c}\cdot \hat{U},\quad a_{c}+b_{c}=1</script><p>$V=[V_{1},V_{2},&#x2026;,V_{C}],\quad V_{c}\in R^{H&#xD7;W}$</p></li></ul><h2 id="Network-Architecture"><a href="#Network-Architecture" class="headerlink" title="Network Architecture"></a>Network Architecture</h2><p>&#x548C;ResNeXt&#x7C7B;&#x4F3C;&#xFF0C;SKNet&#x4E5F;&#x4E3B;&#x8981;&#x7531;&#x4E00;&#x5806;&#x540D;&#x4E3A;&#x201C;SK unit&#x201D;&#x7684;repeated bottleneck blocks&#x7EC4;&#x6210;&#x3002;&#x6BCF;&#x4E00;&#x4E2A;SK unit&#x7531;1<em>1&#x7684;&#x5377;&#x79EF;&#xFF0C;SK&#x5377;&#x79EF;&#x4EE5;&#x53CA;1</em>1&#x5377;&#x79EF;&#x7EC4;&#x6210;&#x3002;ResNeXt&#x4E2D;&#x6240;&#x6709;&#x5177;&#x6709;&#x8F83;&#x5927;&#x5C3A;&#x5BF8;&#x7684;&#x5377;&#x79EF;&#x6838;&#x90FD;&#x66FF;&#x6362;&#x4E3A;SK&#x5377;&#x79EF;&#xFF0C;&#x4ECE;&#x800C;&#x53EF;&#x4EE5;&#x4F7F;&#x7F51;&#x7EDC;&#x9009;&#x62E9;&#x5408;&#x9002;&#x7684;&#x611F;&#x53D7;&#x91CE;&#x5927;&#x5C0F;&#x3002;<br>&#x5728;SK&#x5355;&#x5143;&#x4E2D;&#xFF0C;&#x5B58;&#x5728;&#x4E09;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x8D85;&#x53C2;&#x6570;&#xFF0C;&#x6765;&#x51B3;&#x5B9A;SK&#x5377;&#x79EF;&#x7684;&#x6700;&#x7EC8;&#x8BBE;&#x7F6E;&#xFF1A;</p><ul><li>&#x8DEF;&#x5F84;&#x7684;&#x6570;&#x91CF;M&#xFF0C;&#x51B3;&#x5B9A;&#x4E86;&#x805A;&#x5408;&#x591A;&#x5C11;&#x79CD;&#x4E0D;&#x540C;&#x5C3A;&#x5BF8;&#x7684;&#x5377;&#x79EF;&#x6838;&#x3002;</li><li>&#x7EC4;&#x6570;G&#xFF0C;&#x63A7;&#x5236;&#x6BCF;&#x4E00;&#x6761;&#x8DEF;&#x5F84;&#x7684;&#x57FA;&#x6570;</li><li>&#x8870;&#x51CF;&#x7387;r&#xFF0C;&#x63A7;&#x5236;&#x5728;fuse&#x64CD;&#x4F5C;&#x4E2D;&#x53C2;&#x6570;&#x7684;&#x4E2A;&#x6570;</li></ul><p>&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A;<br><img src="/2019/07/30/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;3/2.png" alt></p><h1 id="Experiments"><a href="#Experiments" class="headerlink" title="Experiments"></a>Experiments</h1><p><img src="/2019/07/30/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;3/3.png" alt></p><p><img src="/2019/07/30/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;3/4.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 卷积网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python——argparse模块</title>
      <link href="/2019/07/29/python-argparse/"/>
      <url>/2019/07/29/python-argparse/</url>
      
        <content type="html"><![CDATA[<blockquote><p>&#x53C2;&#x8003;&#xFF1A;<a href="http://vra.github.io/2017/12/02/argparse-usage/" target="_blank" rel="noopener">http://vra.github.io/2017/12/02/argparse-usage/</a></p></blockquote><p>argparse &#x662F;python&#x81EA;&#x5E26;&#x7684;&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;&#x89E3;&#x6790;&#x5305;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x65B9;&#x4FBF;&#x5730;&#x8BFB;&#x53D6;&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;&#xFF0C;&#x5F53;&#x4F60;&#x7684;&#x4EE3;&#x7801;&#x9700;&#x8981;&#x9891;&#x7E41;&#x5730;&#x4FEE;&#x6539;&#x53C2;&#x6570;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x5DE5;&#x5177;&#x53EF;&#x4EE5;&#x5C06;&#x53C2;&#x6570;&#x548C;&#x4EE3;&#x7801;&#x5206;&#x79BB;&#x5F00;&#x6765;&#xFF0C;&#x8BA9;&#x4F60;&#x7684;&#x4EE3;&#x7801;&#x66F4;&#x7B80;&#x6D01;&#xFF0C;&#x9002;&#x7528;&#x8303;&#x56F4;&#x66F4;&#x5E7F;&#x3002;</p><a id="more"></a><h1 id="&#x57FA;&#x672C;&#x6846;&#x67B6;"><a href="#&#x57FA;&#x672C;&#x6846;&#x67B6;" class="headerlink" title="&#x57FA;&#x672C;&#x6846;&#x67B6;"></a>&#x57FA;&#x672C;&#x6846;&#x67B6;</h1><p>&#x4E0B;&#x9762;&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;argparser&#x4ECE;&#x547D;&#x4EE4;&#x884C;&#x83B7;&#x53D6;&#x7528;&#x6237;&#x540D;&#xFF0C;&#x7136;&#x540E;&#x6253;&#x5370;&#x2019;Hello &#x2018;+ &#x7528;&#x6237;&#x540D;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># file-name:print_name.py</span><br><span class="line">import argparse</span><br><span class="line"></span><br><span class="line">def get_parser():</span><br><span class="line">    parser = argparse.ArgumentParser(description=&quot;Demo of argparse&quot;)</span><br><span class="line">    parser.add_argument(&apos;--name&apos;, default=&apos;Great&apos;)</span><br><span class="line">    </span><br><span class="line">    return parser</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    parser = get_parser()</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line">    name = args.name</span><br><span class="line">    print(&apos;Hello {}&apos;.format(name))</span><br></pre></td></tr></table></figure></p><p>&#x6267;&#x884C;&#x4EE3;&#x7801;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python print_name.py --name Zheng</span><br><span class="line">Hello Zheng</span><br></pre></td></tr></table></figure></p><p>&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x6BB5;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x663E;&#x793A;&#x5F15;&#x5165;&#x4E86;argparser&#x5305;&#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7;argparser.ArgumentParser&#x51FD;&#x6570;&#x751F;&#x6210;argparser&#x5BF9;&#x8C61;&#xFF0C;&#x5176;&#x4E2D;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x7684;description&#x51FD;&#x6570;&#x8868;&#x793A;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x663E;&#x793A;&#x5E2E;&#x52A9;&#x4FE1;&#x606F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD9;&#x4E2A;&#x7A0B;&#x5E8F;&#x7684;&#x63CF;&#x8FF0;&#x4FE1;&#x606F;&#x3002;&#x4E4B;&#x540E;&#x6211;&#x4EEC;&#x901A;&#x8FC7;&#x5BF9;&#x8C61;&#x7684;add_argument&#x51FD;&#x6570;&#x6765;&#x589E;&#x52A0;&#x53C2;&#x6570;&#x3002;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x53EA;&#x589E;&#x52A0;&#x4E86;&#x4E00;&#x4E2A;&#x2014;name&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x7136;&#x540E;&#x540E;&#x9762;&#x7684;default&#x53C2;&#x6570;&#x8868;&#x793A;&#x5982;&#x679C;&#x6CA1;&#x63D0;&#x4F9B;&#x53C2;&#x6570;&#xFF0C;&#x6211;&#x4EEC;&#x9ED8;&#x8BA4;&#x91C7;&#x7528;&#x7684;&#x503C;&#x3002;&#x6700;&#x540E;&#x6211;&#x4EEC;&#x901A;&#x8FC7;argpaser&#x5BF9;&#x8C61;&#x7684;parser_args&#x51FD;&#x6570;&#x6765;&#x83B7;&#x53D6;&#x6240;&#x6709;&#x53C2;&#x6570;args&#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7;args.name&#x7684;&#x65B9;&#x5F0F;&#x5F97;&#x5230;&#x6211;&#x4EEC;&#x8BBE;&#x7F6E;&#x7684;&#x2014;name&#x53C2;&#x6570;&#x7684;&#x503C;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x8FD9;&#x91CC;argparse&#x9ED8;&#x8BA4;&#x7684;&#x53C2;&#x6570;&#x540D;&#x5C31;&#x662F;&#x2014;name&#x5F62;&#x5F0F;&#x91CC;&#x9762;&#x2014;&#x540E;&#x9762;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002;&#x6574;&#x4E2A;&#x6D41;&#x7A0B;&#x5C31;&#x662F;&#x8FD9;&#x6837;&#x3002;</p><h1 id="default-&#x6CA1;&#x6709;&#x8BBE;&#x7F6E;&#x503C;&#x60C5;&#x51B5;&#x4E0B;&#x7684;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;"><a href="#default-&#x6CA1;&#x6709;&#x8BBE;&#x7F6E;&#x503C;&#x60C5;&#x51B5;&#x4E0B;&#x7684;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;" class="headerlink" title="default:&#x6CA1;&#x6709;&#x8BBE;&#x7F6E;&#x503C;&#x60C5;&#x51B5;&#x4E0B;&#x7684;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;"></a><code>default</code>:&#x6CA1;&#x6709;&#x8BBE;&#x7F6E;&#x503C;&#x60C5;&#x51B5;&#x4E0B;&#x7684;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;</h1><p>&#x5982;&#x540C;&#x4E0A;&#x4F8B;&#x4E2D;&#x5C55;&#x793A;&#x7684;&#xFF0C;default&#x8868;&#x793A;&#x547D;&#x4EE4;&#x884C;&#x6CA1;&#x6709;&#x8BBE;&#x7F6E;&#x8BE5;&#x53C2;&#x6570;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7A0B;&#x5E8F;&#x4E2D;&#x7528;&#x4EC0;&#x4E48;&#x503C;&#x6765;&#x4EE3;&#x66FF;&#x3002;</p><h1 id="required-&#x8868;&#x793A;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x5426;&#x4E00;&#x5B9A;&#x9700;&#x8981;&#x8BBE;&#x7F6E;"><a href="#required-&#x8868;&#x793A;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x5426;&#x4E00;&#x5B9A;&#x9700;&#x8981;&#x8BBE;&#x7F6E;" class="headerlink" title="required:&#x8868;&#x793A;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x5426;&#x4E00;&#x5B9A;&#x9700;&#x8981;&#x8BBE;&#x7F6E;"></a><code>required</code>:&#x8868;&#x793A;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x5426;&#x4E00;&#x5B9A;&#x9700;&#x8981;&#x8BBE;&#x7F6E;</h1><p>&#x82E5;&#x8BBE;&#x7F6E;&#x4E86;<code>required=true</code>,&#x5219;&#x5728;&#x5B9E;&#x9645;&#x8FD0;&#x884C;&#x65F6;&#x4E0D;&#x8BBE;&#x7F6E;&#x8BE5;&#x53C2;&#x6570;&#x5C06;&#x62A5;&#x9519;</p><pre><code>parser.add_argument(&apos;-name&apos;, required=True)</code></pre><p>&#x5219;&#x8FD0;&#x884C;&#x4E0B;&#x9762;&#x7684;&#x547D;&#x4EE4;&#x4F1A;&#x62A5;&#x9519;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ python print_name.py</span><br><span class="line">usage: print_name.py [-h] --name NAME</span><br><span class="line">print_name.py: error: argument --name is required</span><br></pre></td></tr></table></figure></p><h1 id="type&#xFF1A;&#x53C2;&#x6570;&#x7C7B;&#x578B;"><a href="#type&#xFF1A;&#x53C2;&#x6570;&#x7C7B;&#x578B;" class="headerlink" title="type&#xFF1A;&#x53C2;&#x6570;&#x7C7B;&#x578B;"></a><code>type</code>&#xFF1A;&#x53C2;&#x6570;&#x7C7B;&#x578B;</h1><p>&#x9ED8;&#x8BA4;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#x4E3A;<code>str</code>&#x7C7B;&#x578B;&#xFF0C;&#x82E5;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x6574;&#x6570;&#x6216;&#x8005;&#x5E03;&#x5C14;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#xFF0C;&#x9700;&#x8981;&#x8BBE;&#x7F6E;<code>type=int</code>&#x6216;<code>type=bool</code>&#x3002;</p><h1 id="choices&#xFF1A;&#x53C2;&#x6570;&#x503C;&#x53EA;&#x80FD;&#x4ECE;&#x51E0;&#x4E2A;&#x9009;&#x9879;&#x91CC;&#x9762;&#x9009;&#x62E9;"><a href="#choices&#xFF1A;&#x53C2;&#x6570;&#x503C;&#x53EA;&#x80FD;&#x4ECE;&#x51E0;&#x4E2A;&#x9009;&#x9879;&#x91CC;&#x9762;&#x9009;&#x62E9;" class="headerlink" title="choices&#xFF1A;&#x53C2;&#x6570;&#x503C;&#x53EA;&#x80FD;&#x4ECE;&#x51E0;&#x4E2A;&#x9009;&#x9879;&#x91CC;&#x9762;&#x9009;&#x62E9;"></a><code>choices</code>&#xFF1A;&#x53C2;&#x6570;&#x503C;&#x53EA;&#x80FD;&#x4ECE;&#x51E0;&#x4E2A;&#x9009;&#x9879;&#x91CC;&#x9762;&#x9009;&#x62E9;</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># file-name: choices.py</span><br><span class="line">import argparse</span><br><span class="line"></span><br><span class="line">def get_parser():</span><br><span class="line">    parser = argparse.ArgumentParser(</span><br><span class="line">        description=&apos;choices demo&apos;)</span><br><span class="line">    parser.add_argument(&apos;-arch&apos;, required=True, choices=[&apos;alexnet&apos;, &apos;vgg&apos;])</span><br><span class="line"></span><br><span class="line">    return parser</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    parser = get_parser()</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line">    print(&apos;the arch of CNN is &apos;.format(args.arch))</span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x50CF;&#x4E0B;&#x9762;&#x8FD9;&#x6837;&#x6267;&#x884C;&#x4F1A;&#x62A5;&#x9519;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ python choices.py -arch resnet</span><br><span class="line">usage: choices.py [-h] -arch {alexnet,vgg}</span><br><span class="line">choices.py: error: argument -arch: invalid choice: &apos;resnet&apos; (choose from &apos;alexnet&apos;, &apos;vgg&apos;)</span><br></pre></td></tr></table></figure></p><h1 id="help&#xFF1A;&#x6307;&#x5B9A;&#x53C2;&#x6570;&#x7684;&#x8BF4;&#x660E;&#x4FE1;&#x606F;"><a href="#help&#xFF1A;&#x6307;&#x5B9A;&#x53C2;&#x6570;&#x7684;&#x8BF4;&#x660E;&#x4FE1;&#x606F;" class="headerlink" title="help&#xFF1A;&#x6307;&#x5B9A;&#x53C2;&#x6570;&#x7684;&#x8BF4;&#x660E;&#x4FE1;&#x606F;"></a><code>help</code>&#xFF1A;&#x6307;&#x5B9A;&#x53C2;&#x6570;&#x7684;&#x8BF4;&#x660E;&#x4FE1;&#x606F;</h1><p>&#x5728;&#x73B0;&#x5B9E;&#x5E2E;&#x52A9;&#x4FE1;&#x606F;&#x7684;&#x65F6;&#x5019;&#xFF0C;help&#x53C2;&#x6570;&#x7684;&#x503C;&#x53EF;&#x4EE5;&#x7ED9;&#x4F7F;&#x7528;&#x5DE5;&#x5177;&#x7684;&#x4EBA;&#x63D0;&#x4F9B;&#x8BE5;&#x53C2;&#x6570;&#x662F;&#x7528;&#x6765;&#x8BBE;&#x7F6E;&#x4EC0;&#x4E48;&#x7684;&#x8BF4;&#x660E;&#xFF0C;&#x5BF9;&#x4E8E;&#x5927;&#x578B;&#x7684;&#x9879;&#x76EE;&#xFF0C;help&#x53C2;&#x6570;&#x548C;&#x5F88;&#x6709;&#x5FC5;&#x8981;&#x7684;&#xFF0C;&#x4E0D;&#x7136;&#x4F7F;&#x7528;&#x8005;&#x4E0D;&#x592A;&#x660E;&#x767D;&#x6BCF;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x542B;&#x4E49;&#xFF0C;&#x589E;&#x5927;&#x4E86;&#x4F7F;&#x7528;&#x96BE;&#x5EA6;&#x3002;&#x4E0B;&#x9762;&#x662F;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># file-name: help.py</span><br><span class="line">import argparse</span><br><span class="line"></span><br><span class="line">def get_parser():</span><br><span class="line">    parser = argparse.ArgumentParser(</span><br><span class="line">        description=&apos;help demo&apos;)</span><br><span class="line">    parser.add_argument(&apos;-arch&apos;, required=True, choices=[&apos;alexnet&apos;, &apos;vgg&apos;],</span><br><span class="line">        help=&apos;the architecture of CNN, at this time we only support alexnet and vgg.&apos;)</span><br><span class="line"></span><br><span class="line">    return parser</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    parser = get_parser()</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line">    print(&apos;the arch of CNN is &apos;.format(args.arch))</span><br></pre></td></tr></table></figure></p><p>&#x5728;&#x547D;&#x4EE4;&#x884C;&#x52A0;-h&#x6216;&#x2014;help&#x53C2;&#x6570;&#x8FD0;&#x884C;&#x8BE5;&#x547D;&#x4EE4;&#xFF0C;&#x83B7;&#x53D6;&#x5E2E;&#x52A9;&#x4FE1;&#x606F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ python help.py -h</span><br><span class="line">usage: help.py [-h] -arch {alexnet,vgg}</span><br><span class="line"></span><br><span class="line">choices demo</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">  -h, --help           show this help message and exit</span><br><span class="line">  -arch {alexnet,vgg}  the architecture of CNN, at this time we only support</span><br><span class="line">                       alexnet and vgg.</span><br></pre></td></tr></table></figure></p><h1 id="dest&#xFF1A;&#x8BBE;&#x7F6E;&#x53C2;&#x6570;&#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x53D8;&#x91CF;&#x540D;"><a href="#dest&#xFF1A;&#x8BBE;&#x7F6E;&#x53C2;&#x6570;&#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x53D8;&#x91CF;&#x540D;" class="headerlink" title="dest&#xFF1A;&#x8BBE;&#x7F6E;&#x53C2;&#x6570;&#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x53D8;&#x91CF;&#x540D;"></a><code>dest</code>&#xFF1A;&#x8BBE;&#x7F6E;&#x53C2;&#x6570;&#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x53D8;&#x91CF;&#x540D;</h1><p>argparse&#x9ED8;&#x8BA4;&#x7684;&#x53D8;&#x91CF;&#x540D;&#x662F;<code>--</code>&#x6216;<code>-</code>&#x540E;&#x9762;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x4F46;&#x662F;&#x4F60;&#x4E5F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;<code>dest=xxx</code>&#x6765;&#x8BBE;&#x7F6E;&#x53C2;&#x6570;&#x7684;&#x53D8;&#x91CF;&#x540D;&#xFF0C;&#x7136;&#x540E;&#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x7528;<code>args.xxx</code>&#x6765;&#x83B7;&#x53D6;&#x53C2;&#x6570;&#x7684;&#x503C;&#x3002;</p><h1 id="nargs&#xFF1A;-&#x8BBE;&#x7F6E;&#x53C2;&#x6570;&#x5728;&#x4F7F;&#x7528;&#x53EF;&#x4EE5;&#x63D0;&#x4F9B;&#x7684;&#x4E2A;&#x6570;"><a href="#nargs&#xFF1A;-&#x8BBE;&#x7F6E;&#x53C2;&#x6570;&#x5728;&#x4F7F;&#x7528;&#x53EF;&#x4EE5;&#x63D0;&#x4F9B;&#x7684;&#x4E2A;&#x6570;" class="headerlink" title="nargs&#xFF1A; &#x8BBE;&#x7F6E;&#x53C2;&#x6570;&#x5728;&#x4F7F;&#x7528;&#x53EF;&#x4EE5;&#x63D0;&#x4F9B;&#x7684;&#x4E2A;&#x6570;"></a><code>nargs</code>&#xFF1A; &#x8BBE;&#x7F6E;&#x53C2;&#x6570;&#x5728;&#x4F7F;&#x7528;&#x53EF;&#x4EE5;&#x63D0;&#x4F9B;&#x7684;&#x4E2A;&#x6570;</h1><p>&#x4F7F;&#x7528;&#x65B9;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code>parser.add_argument(&apos;-name&apos;, nargs=x)</code></pre><p>x&#x7684;&#x9009;&#x503C;&#x548C;&#x542B;&#x4E49;&#xFF1A;</p><div class="table-container"><table><thead><tr><th>&#x503C;</th><th>&#x542B;&#x4E49;</th></tr></thead><tbody><tr><td>N</td><td>&#x53C2;&#x6570;&#x7684;&#x7EDD;&#x5BF9;&#x4E2A;&#x6570;</td></tr><tr><td>&#x2018;?&#x2019;</td><td>0&#x6216;1&#x4E00;&#x4E2A;&#x53C2;&#x6570;</td></tr><tr><td>&#x2018;*&#x2019;</td><td>0&#x6216;&#x6240;&#x6709;&#x53C2;&#x6570;</td></tr><tr><td>&#x2018;+&#x2019;</td><td>&#x6240;&#x6709;&#xFF0C;&#x5E76;&#x4E14;&#x81F3;&#x5C11;&#x4E00;&#x4E2A;&#x53C2;&#x6570;</td></tr></tbody></table></div><p>&#x5982;&#x4E0B;&#x4F8B;&#x5B50;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># file-name: nargs.py</span><br><span class="line">import argparse</span><br><span class="line"></span><br><span class="line">def get_parser():</span><br><span class="line">    parser = argparse.ArgumentParser(</span><br><span class="line">        description=&apos;nargs demo&apos;)</span><br><span class="line">    parser.add_argument(&apos;-name&apos;, required=True, nargs=&apos;+&apos;)</span><br><span class="line"></span><br><span class="line">    return parser</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    parser = get_parser()</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line">    names = &apos;, &apos;.join(args.name)</span><br><span class="line">    print(&apos;Hello to {}&apos;.format(names))</span><br></pre></td></tr></table></figure></p><p>&#x6267;&#x884C;&#x547D;&#x4EE4;&#x548C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python nargs.py -name A B C</span><br><span class="line">Hello to A, B, C</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python——with语句和contextlib模块</title>
      <link href="/2019/07/29/python%E4%B8%8A%E4%B8%8B%E6%96%87%E7%AE%A1%E7%90%86/"/>
      <url>/2019/07/29/python%E4%B8%8A%E4%B8%8B%E6%96%87%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="with&#x8BED;&#x53E5;"><a href="#with&#x8BED;&#x53E5;" class="headerlink" title="with&#x8BED;&#x53E5;"></a>with&#x8BED;&#x53E5;</h1><p>&#x521B;&#x5EFA;&#x4E0A;&#x4E0B;&#x6587;&#x7BA1;&#x7406;&#x5B9E;&#x9645;&#x5C31;&#x662F;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7C7B;&#xFF0C;&#x6DFB;&#x52A0;<strong>enter</strong>&#x548C;<strong>exit</strong>&#x65B9;&#x6CD5;&#x3002;&#x4E0B;&#x9762;&#x6211;&#x4EEC;&#x6765;&#x5B9E;&#x73B0;open&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x7BA1;&#x7406;&#x529F;&#x80FD;&#xFF1A;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">class OpenContext(object):</span><br><span class="line"></span><br><span class="line">    def __init__(self, filename, mode):</span><br><span class="line">        self.fp = open(filename, mode)</span><br><span class="line"></span><br><span class="line">    def __enter__(self):</span><br><span class="line">        return self.fp</span><br><span class="line"></span><br><span class="line">    def __exit__(self, exc_type, exc_val, exc_tb):</span><br><span class="line">        self.fp.close()</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">with OpenContext(&apos;/tmp/a.txt&apos;, &apos;a&apos;) as file_obj:</span><br><span class="line">    file_obj.write(&quot;hello 6666&quot;)</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="contextlib&#x6A21;&#x5757;"><a href="#contextlib&#x6A21;&#x5757;" class="headerlink" title="contextlib&#x6A21;&#x5757;"></a>contextlib&#x6A21;&#x5757;</h1><p>&#x4E0A;&#x9762;&#x6211;&#x4EEC;&#x81EA;&#x5B9A;&#x4E49;&#x4E0A;&#x4E0B;&#x6587;&#x7BA1;&#x7406;&#x5668;&#x786E;&#x5B9E;&#x5F88;&#x65B9;&#x4FBF;&#xFF0C;&#x4F46;&#x662F;Python&#x6807;&#x51C6;&#x5E93;&#x8FD8;&#x63D0;&#x4F9B;&#x4E86;&#x66F4;&#x52A0;&#x6613;&#x7528;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x7BA1;&#x7406;&#x5668;&#x5DE5;&#x5177;&#x6A21;&#x5757;contextlib&#xFF0C;&#x5B83;&#x662F;&#x901A;&#x8FC7;&#x751F;&#x6210;&#x5668;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x9700;&#x8981;&#x518D;&#x521B;&#x5EFA;&#x7C7B;&#x4EE5;&#x53CA;<strong>enter</strong>&#x548C;<strong>exit</strong>&#x8FD9;&#x4E24;&#x4E2A;&#x7279;&#x4FD7;&#x7684;&#x65B9;&#x6CD5;&#xFF1A;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">from contextlib import contextmanager</span><br><span class="line"></span><br><span class="line">@contextmanager</span><br><span class="line">def make_open_context(filename, mode):</span><br><span class="line">    fp = open(filename, mode)</span><br><span class="line">    try:</span><br><span class="line">        yield fp</span><br><span class="line">    finally:</span><br><span class="line">        fp.close()</span><br><span class="line"></span><br><span class="line">with make_open_context(&apos;/tmp/a.txt&apos;, &apos;a&apos;) as file_obj:</span><br><span class="line">    file_obj.write(&quot;hello 666&quot;)</span><br></pre></td></tr></table></figure><p>&#x5728;&#x4E0A;&#x6587;&#x4E2D;&#xFF0C;yield&#x5173;&#x952E;&#x8BCD;&#x628A;&#x4E0A;&#x4E0B;&#x6587;&#x5206;&#x5272;&#x6210;&#x4E24;&#x90E8;&#x5206;&#xFF1A;yield&#x4E4B;&#x524D;&#x5C31;&#x662F;<strong>init</strong>&#x4E2D;&#x7684;&#x4EE3;&#x7801;&#x5757;&#xFF1B;yield&#x4E4B;&#x540E;&#x5176;&#x5B9E;&#x5C31;&#x662F;<strong>exit</strong>&#x4E2D;&#x7684;&#x4EE3;&#x7801;&#x5757;&#xFF0C;yield&#x751F;&#x6210;&#x7684;&#x503C;&#x4F1A;&#x7ED1;&#x5B9A;&#x5230;with&#x8BED;&#x53E5;as&#x5B50;&#x53E5;&#x4E2D;&#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x4F8B;&#x5982;&#x5728;&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C;yield&#x751F;&#x6210;&#x7684;&#x503C;&#x662F;&#x6587;&#x4EF6;&#x53E5;&#x67C4;&#x5BF9;&#x8C61;fp&#xFF0C;&#x5728;&#x4E0B;&#x9762;&#x7684;with&#x8BED;&#x53E5;&#x4E2D;&#xFF0C;&#x4F1A;&#x5C06;fp&#x548C;file_obj&#x7ED1;&#x5B9A;&#x5230;&#x4E00;&#x8D77;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;file_obj&#x6B64;&#x65F6;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x53E5;&#x67C4;&#x5BF9;&#x8C61;&#xFF0C;&#x90A3;&#x4E48;&#x5B83;&#x5C31;&#x53EF;&#x4EE5;&#x64CD;&#x4F5C;&#x6587;&#x4EF6;&#x4E86;&#xFF0C;&#x56E0;&#x6B64;&#x5C31;&#x53EF;&#x4EE5;&#x8C03;&#x7528;file_obj.write(&#x201C;hello 666&#x201D;)&#xFF0C;&#x53E6;&#x5916;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#x5982;&#x679C;yield&#x6CA1;&#x6709;&#x751F;&#x6210;&#x503C;&#xFF0C;&#x90A3;&#x4E48;&#x5728;with&#x8BED;&#x53E5;&#x4E2D;&#x5C31;&#x4E0D;&#x9700;&#x8981;&#x5199;as&#x5B50;&#x53E5;&#x4E86;</p><h1 id="&#x6848;&#x4F8B;"><a href="#&#x6848;&#x4F8B;" class="headerlink" title="&#x6848;&#x4F8B;"></a>&#x6848;&#x4F8B;</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># _*_ coding:utf-8 _*_</span><br><span class="line"></span><br><span class="line">from contextlib import contextmanager</span><br><span class="line"></span><br><span class="line">@contextmanager</span><br><span class="line">def book_mark():</span><br><span class="line">    print(&apos;&#x300A;&apos;, end=&quot;&quot;)</span><br><span class="line">    yield</span><br><span class="line">    print(&apos;&#x300B;&apos;, end=&quot;&quot;)</span><br><span class="line"></span><br><span class="line">with book_mark():</span><br><span class="line">    # &#x6838;&#x5FC3;&#x4EE3;&#x7801;</span><br><span class="line">    print(&apos;&#x4E14;&#x5C06;&#x751F;&#x6D3B;&#x4E00;&#x996E;&#x800C;&#x5C3D;&apos;, end=&quot;&quot;)</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6837;&#x5728;&#x6253;&#x5370;&#x4E66;&#x540D;&#x65F6;&#xFF0C;&#x901A;&#x8FC7;&#x4E0A;&#x4E0B;&#x6587;&#x7BA1;&#x7406;&#x5668;&#xFF0C;&#x4F1A;&#x81EA;&#x52A8;&#x52A0;&#x4E0A;&#x4E66;&#x540D;&#x53F7;</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo使用数学公式</title>
      <link href="/2019/07/29/hexo%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/"/>
      <url>/2019/07/29/hexo%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<blockquote><p>&#x53C2;&#x8003;&#xFF1A;<a href="https://www.jianshu.com/p/7ab21c7f0674" target="_blank" rel="noopener">https://www.jianshu.com/p/7ab21c7f0674</a></p></blockquote><h1 id="&#x5728;Hexo&#x4E2D;&#x6E32;&#x67D3;MathJax&#x6570;&#x5B66;&#x516C;&#x5F0F;"><a href="#&#x5728;Hexo&#x4E2D;&#x6E32;&#x67D3;MathJax&#x6570;&#x5B66;&#x516C;&#x5F0F;" class="headerlink" title="&#x5728;Hexo&#x4E2D;&#x6E32;&#x67D3;MathJax&#x6570;&#x5B66;&#x516C;&#x5F0F;"></a>&#x5728;Hexo&#x4E2D;&#x6E32;&#x67D3;MathJax&#x6570;&#x5B66;&#x516C;&#x5F0F;</h1><p>&#x5728;&#x7528;markdown&#x5199;&#x6280;&#x672F;&#x6587;&#x6863;&#x65F6;&#xFF0C;&#x514D;&#x4E0D;&#x4E86;&#x4F1A;&#x78B0;&#x5230;&#x6570;&#x5B66;&#x516C;&#x5F0F;&#x3002;&#x5E38;&#x7528;&#x7684;Markdown&#x7F16;&#x8F91;&#x5668;&#x90FD;&#x4F1A;&#x96C6;&#x6210;Mathjax&#xFF0C;&#x7528;&#x6765;&#x6E32;&#x67D3;&#x6587;&#x6863;&#x4E2D;&#x7684;&#x7C7B;Latex&#x683C;&#x5F0F;&#x4E66;&#x5199;&#x7684;&#x6570;&#x5B66;&#x516C;&#x5F0F;&#x3002;&#x57FA;&#x4E8E;Hexo&#x642D;&#x5EFA;&#x7684;&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;&#xFF0C;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#x6E32;&#x67D3;&#x6570;&#x5B66;&#x516C;&#x5F0F;&#x5374;&#x4F1A;&#x51FA;&#x73B0;&#x5404;&#x79CD;&#x5404;&#x6837;&#x7684;&#x95EE;&#x9898;&#x3002;</p><a id="more"></a><h2 id="&#x539F;&#x56E0;"><a href="#&#x539F;&#x56E0;" class="headerlink" title="&#x539F;&#x56E0;"></a>&#x539F;&#x56E0;</h2><p>Hexo&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;&#x201D;hexo-renderer-marked&#x201D;&#x5F15;&#x64CE;&#x6E32;&#x67D3;&#x7F51;&#x9875;&#xFF0C;&#x8BE5;&#x5F15;&#x64CE;&#x4F1A;&#x628A;&#x4E00;&#x4E9B;&#x7279;&#x6B8A;&#x7684;markdown&#x7B26;&#x53F7;&#x8F6C;&#x6362;&#x4E3A;&#x76F8;&#x5E94;&#x7684;html&#x6807;&#x7B7E;&#xFF0C;&#x6BD4;&#x5982;&#x5728;markdown&#x8BED;&#x6CD5;&#x4E2D;&#xFF0C;&#x4E0B;&#x5212;&#x7EBF;&#x2019;_&#x2019;&#x4EE3;&#x8868;&#x659C;&#x4F53;&#xFF0C;&#x4F1A;&#x88AB;&#x6E32;&#x67D3;&#x5F15;&#x64CE;&#x5904;&#x7406;&#x4E3A;<code>&lt;em&gt;</code>&#x6807;&#x7B7E;&#x3002;<br>&#x56E0;&#x4E3A;&#x7C7B;Latex&#x683C;&#x5F0F;&#x4E66;&#x5199;&#x7684;&#x6570;&#x5B66;&#x516C;&#x5F0F;&#x4E0B;&#x5212;&#x7EBF; &#x2018;_&#x2019; &#x8868;&#x793A;&#x4E0B;&#x6807;&#xFF0C;&#x6709;&#x7279;&#x6B8A;&#x7684;&#x542B;&#x4E49;&#xFF0C;&#x5982;&#x679C;&#x88AB;&#x5F3A;&#x5236;&#x8F6C;&#x6362;&#x4E3A;<code>&lt;em&gt;</code>&#x6807;&#x7B7E;&#xFF0C;&#x90A3;&#x4E48;MathJax&#x5F15;&#x64CE;&#x5728;&#x6E32;&#x67D3;&#x6570;&#x5B66;&#x516C;&#x5F0F;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x4F1A;&#x51FA;&#x9519;&#x3002;&#x4F8B;&#x5982;&#xFF0C;$x_i$&#x5728;&#x5F00;&#x59CB;&#x88AB;&#x6E32;&#x67D3;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5904;&#x7406;&#x4E3A;$x<code>&lt;em&gt;</code>i<code>&lt;/em&gt;</code>$&#xFF0C;&#x8FD9;&#x6837;MathJax&#x5F15;&#x64CE;&#x5C31;&#x8BA4;&#x4E3A;&#x8BE5;&#x516C;&#x5F0F;&#x6709;&#x8BED;&#x6CD5;&#x9519;&#x8BEF;&#xFF0C;&#x56E0;&#x4E3A;&#x4E0D;&#x4F1A;&#x6E32;&#x67D3;&#x3002;<br>&#x7C7B;&#x4F3C;&#x7684;&#x8BED;&#x4E49;&#x51B2;&#x7A81;&#x7684;&#x7B26;&#x53F7;&#x8FD8;&#x5305;&#x62EC;&#x2019;*&#x2019;, &#x2018;{&#x2018;, &#x2018;}&#x2019;, &#x2018;\&#x2019;&#x7B49;&#x3002;</p><h2 id="&#x65B9;&#x6CD5;"><a href="#&#x65B9;&#x6CD5;" class="headerlink" title="&#x65B9;&#x6CD5;"></a>&#x65B9;&#x6CD5;</h2><p>&#x66F4;&#x6362;Hexo&#x7684;markdown&#x6E32;&#x67D3;&#x5F15;&#x64CE;&#xFF0C;<code>hexo-renderer-kramed</code>&#x5F15;&#x64CE;&#x662F;&#x5728;&#x9ED8;&#x8BA4;&#x7684;&#x6E32;&#x67D3;&#x5F15;&#x64CE;<code>hexo-renderer-marked</code>&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x4FEE;&#x6539;&#x4E86;&#x4E00;&#x4E9B;bug&#xFF0C;&#x4E24;&#x8005;&#x6BD4;&#x8F83;&#x63A5;&#x8FD1;&#xFF0C;&#x4E5F;&#x6BD4;&#x8F83;&#x8F7B;&#x91CF;&#x7EA7;&#x3002;</p><pre><code>npm uninstall hexo-renderer-marked --save #&#x5378;&#x8F7D;&#x539F;&#x5F15;&#x64CE;npm install hexo-renderer-kramed --save #&#x5B89;&#x88C5;&#x65B0;&#x5F15;&#x64CE;</code></pre><p>&#x5B89;&#x88C5;&#x540E;&#x884C;&#x95F4;&#x516C;&#x5F0F;&#x53EF;&#x4EE5;&#x6B63;&#x786E;&#x6E32;&#x67D3;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x6837;&#x8FD8;&#x6CA1;&#x6709;&#x5B8C;&#x5168;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#xFF0C;&#x884C;&#x5185;&#x516C;&#x5F0F;&#x7684;&#x6E32;&#x67D3;&#x8FD8;&#x662F;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x56E0;&#x4E3A;hexo-renderer-kramed&#x5F15;&#x64CE;&#x4E5F;&#x6709;&#x8BED;&#x4E49;&#x51B2;&#x7A81;&#x7684;&#x95EE;&#x9898;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x5230;&#x535A;&#x5BA2;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x627E;&#x5230;node_modules\kramed\lib\rules\inline.js&#xFF0C;&#x628A;&#x7B2C;11&#x884C;&#x7684;escape&#x53D8;&#x91CF;&#x7684;&#x503C;&#x505A;&#x76F8;&#x5E94;&#x7684;&#x4FEE;&#x6539;&#xFF1A;</p><pre><code>escape: /^\\([`*\[\]()#$+\-.!_&gt;])/</code></pre><p>&#x8FD9;&#x4E00;&#x6B65;&#x662F;&#x5728;&#x539F;&#x57FA;&#x7840;&#x4E0A;&#x53D6;&#x6D88;&#x4E86;&#x5BF9;\,{,}&#x7684;&#x8F6C;&#x4E49;(escape)&#x3002;<br>&#x540C;&#x65F6;&#x628A;&#x7B2C;20&#x884C;&#x7684;em&#x53D8;&#x91CF;&#x4E5F;&#x8981;&#x505A;&#x76F8;&#x5E94;&#x7684;&#x4FEE;&#x6539;&#x3002;</p><pre><code>em: /^\*((?:\*\*|[\s\S])+?)\*(?!\*)/</code></pre><h2 id="&#x5F00;&#x542F;mathjax"><a href="#&#x5F00;&#x542F;mathjax" class="headerlink" title="&#x5F00;&#x542F;mathjax"></a>&#x5F00;&#x542F;mathjax</h2><p>&#x8FDB;&#x5165;&#x5230;&#x4E3B;&#x9898;&#x76EE;&#x5F55;&#xFF0C;&#x627E;&#x5230;_config.yml&#x914D;&#x7F6E;&#x95EE;&#x9898;&#xFF0C;&#x628A;mathjax&#x9ED8;&#x8BA4;&#x7684;false&#x4FEE;&#x6539;&#x4E3A;true&#xFF0C;&#x5177;&#x4F53;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Math Formulas Render Support</span></span><br><span class="line"><span class="attr">math:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Default (true) will load mathjax / katex script on demand.</span></span><br><span class="line">  <span class="comment"># That is it only render those page which has `mathjax: true` in Front-matter.</span></span><br><span class="line">  <span class="comment"># If you set it to false, it will load mathjax / katex srcipt EVERY PAGE.</span></span><br><span class="line"><span class="attr">  per_page:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># hexo-renderer-pandoc (or hexo-renderer-kramed) required for full MathJax support.</span></span><br><span class="line"><span class="attr">  mathjax:</span></span><br><span class="line"><span class="attr">    enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># See: https://mhchem.github.io/MathJax-mhchem/</span></span><br><span class="line"><span class="attr">    mhchem:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>&#x8FD8;&#x9700;&#x8981;&#x5728;&#x6587;&#x7AE0;&#x7684;Front-matter&#x91CC;&#x6253;&#x5F00;mathjax&#x5F00;&#x5173;:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: index.html</span><br><span class="line">date: 2016-12-28 21:01:30</span><br><span class="line">tags:</span><br><span class="line">mathjax: true</span><br><span class="line">--</span><br></pre></td></tr></table></figure></p><p>&#x8FD9;&#x6837;&#x5C31;&#x53EA;&#x6709;&#x5728;&#x7528;&#x5230;&#x516C;&#x5F0F;&#x7684;&#x9875;&#x9762;&#x624D;&#x52A0;&#x8F7D; Mathjax&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x6E32;&#x67D3;&#x6570;&#x5B66;&#x516C;&#x5F0F;&#x7684;&#x9875;&#x9762;&#x7684;&#x8BBF;&#x95EE;&#x901F;&#x5EA6;&#x5C31;&#x4E0D;&#x4F1A;&#x53D7;&#x5230;&#x5F71;&#x54CD;&#x4E86;&#x3002;</p>]]></content>
      
      
      <categories>
          
          <category> Hexo框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo上传图片</title>
      <link href="/2019/07/29/hexo%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87/"/>
      <url>/2019/07/29/hexo%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo&#x63D2;&#x5165;&#x672C;&#x5730;&#x56FE;&#x7247;"><a href="#Hexo&#x63D2;&#x5165;&#x672C;&#x5730;&#x56FE;&#x7247;" class="headerlink" title="Hexo&#x63D2;&#x5165;&#x672C;&#x5730;&#x56FE;&#x7247;"></a>Hexo&#x63D2;&#x5165;&#x672C;&#x5730;&#x56FE;&#x7247;</h1><p>1.&#x6253;&#x5F00;&#x535A;&#x5BA2;&#x914D;&#x7F6E;&#x6587;&#x4EF6;_config.yml&#xFF0C;&#x5C06;post_asset_folder&#x8FD9;&#x4E2A;&#x9009;&#x9879;&#x8BBE;&#x7F6E;&#x4E3A;true</p><pre><code>post_asset_floder: true</code></pre><p>2.cd&#x5230;&#x535A;&#x5BA2;&#x6587;&#x4EF6;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x8F93;&#x5165;&#x547D;&#x4EE4;&#x884C;</p><pre><code>npm install hexo-asset-image --save</code></pre><p>&#x4E0B;&#x8F7D;&#x5B89;&#x88C5;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x4E0A;&#x4F20;&#x672C;&#x5730;&#x56FE;&#x7247;&#x7684;&#x63D2;&#x4EF6;</p><a id="more"></a><p>3.&#x5728;&#x8FD0;&#x884C;<code>hexo new xxx</code>&#x6765;&#x751F;&#x6210;md&#x683C;&#x5F0F;&#x535A;&#x6587;&#x540E;&#xFF0C;&#x5728;/source/_posts&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x9664;&#x4E86;&#x4F1A;&#x751F;&#x6210;xxx.md&#x6587;&#x4EF6;&#xFF0C;&#x8FD8;&#x4F1A;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x540C;&#x540D;&#x6587;&#x4EF6;&#x5939;</p><p>4.&#x5728;xxx.md&#x4E2D;&#x60F3;&#x5F15;&#x5165;&#x672C;&#x5730;&#x56FE;&#x7247;&#x65F6;&#xFF0C;&#x5148;&#x628A;&#x56FE;&#x7247;&#x590D;&#x5236;&#x5230;&#x540C;&#x540D;&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#xFF0C;&#x7136;&#x540E;&#x5728;&#x9700;&#x8981;&#x5F15;&#x7528;&#x56FE;&#x7247;&#x7684;&#x5730;&#x65B9;&#x6309;&#x7167;markdown&#x7684;&#x683C;&#x5F0F;&#x8F93;&#x5165;</p><pre><code>![&#x56FE;&#x7247;&#x6807;&#x9898;](xxx/&#x56FE;&#x7247;&#x540D;.jpg)</code></pre><h1 id="&#x4E0A;&#x4F20;&#x56FE;&#x7247;&#x6CA1;&#x6709;&#x663E;&#x793A;"><a href="#&#x4E0A;&#x4F20;&#x56FE;&#x7247;&#x6CA1;&#x6709;&#x663E;&#x793A;" class="headerlink" title="&#x4E0A;&#x4F20;&#x56FE;&#x7247;&#x6CA1;&#x6709;&#x663E;&#x793A;"></a>&#x4E0A;&#x4F20;&#x56FE;&#x7247;&#x6CA1;&#x6709;&#x663E;&#x793A;</h1><p>&#x5B8C;&#x6210;&#x4EE5;&#x4E0A;&#x64CD;&#x4F5C;&#x540E;&#x4F60;&#x53EF;&#x80FD;&#x53D1;&#x73B0;&#x6253;&#x5F00;&#x7F51;&#x9875;&#x56FE;&#x7247;&#x6CA1;&#x6709;&#x663E;&#x793A;&#xFF0C;&#x53EF;&#x80FD;&#x7684;&#x539F;&#x56E0;&#x5C31;&#x662F;hexo-asset-image&#x7684;&#x7248;&#x672C;&#x4E0D;&#x5BF9;&#xFF0C;&#x6211;&#x4EEC;&#x9ED8;&#x8BA4;&#x4E0B;&#x8F7D;&#x7684;&#x662F;1.0.0&#x7248;&#x672C;&#x3002;&#x5728;&#x7F51;&#x4E0A;&#x67E5;&#x9605;&#x8D44;&#x6599;&#x540E;&#x5F97;&#x77E5;0.0.1&#x7248;&#x672C;&#x53EF;&#x884C;&#x3002;&#x4E8E;&#x662F;&#x6253;&#x5F00;&#x535A;&#x5BA2;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x7684;package.ison&#x6587;&#x4EF6;&#xFF0C;&#x5C06;kexo-asset-image&#x7684;&#x7248;&#x672C;&#x53F7;&#x6539;&#x6210;0.0.1&#xFF0C;&#x7136;&#x540E;&#x5728;&#x8BE5;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x6267;&#x884C;</p><pre><code>npm install</code></pre><p>&#x7136;&#x540E;&#x6267;&#x884C;hexo clean,hexo g,hexo s&#x7B49;&#x4E00;&#x7CFB;&#x5217;&#x547D;&#x4EE4;&#xFF0C;&#x5373;&#x53EF;&#x770B;&#x5230;&#x7F51;&#x9875;&#x4E0A;&#x4E0A;&#x4F20;&#x4E86;&#x672C;&#x5730;&#x56FE;&#x7247;</p>]]></content>
      
      
      <categories>
          
          <category> Hexo框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> NexT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文阅读笔记2：Objects as Points</title>
      <link href="/2019/07/29/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B02/"/>
      <url>/2019/07/29/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B02/</url>
      
        <content type="html"><![CDATA[<blockquote><p>&#x8BBA;&#x6587;&#x5730;&#x5740;&#xFF1A;<a href="https://arxiv.org/pdf/1904.07850.pdf" target="_blank" rel="noopener">https://arxiv.org/pdf/1904.07850.pdf</a><br>&#x8BBA;&#x6587;&#x4EE3;&#x7801;&#xFF1A;<a href="https://github.com/xingyizhou/CenterNet" target="_blank" rel="noopener">https://github.com/xingyizhou/CenterNet</a></p></blockquote><h1 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h1><p>&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x8BC6;&#x522B;&#x5F80;&#x5F80;&#x5728;&#x56FE;&#x50CF;&#x4E0A;&#x5C06;&#x76EE;&#x6807;&#x4EE5;&#x8F74;&#x5BF9;&#x79F0;&#x7684;&#x6846;&#x5F62;&#x5F0F;&#x6846;&#x51FA;&#x3002;&#x5927;&#x591A;&#x6210;&#x529F;&#x7684;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x5668;&#x90FD;&#x5148;&#x7A77;&#x4E3E;&#x51FA;&#x6F5C;&#x5728;&#x76EE;&#x6807;&#x4F4D;&#x7F6E;&#xFF0C;&#x7136;&#x540E;&#x5BF9;&#x8BE5;&#x4F4D;&#x7F6E;&#x8FDB;&#x884C;&#x5206;&#x7C7B;&#xFF0C;&#x8FD9;&#x79CD;&#x505A;&#x6CD5;&#x6D6A;&#x8D39;&#x65F6;&#x95F4;&#xFF0C;&#x4F4E;&#x6548;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x989D;&#x5916;&#x7684;&#x540E;&#x5904;&#x7406;&#x3002;&#x672C;&#x6587;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x91C7;&#x7528;&#x4E0D;&#x540C;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x6784;&#x5EFA;&#x6A21;&#x578B;&#x65F6;&#x5C06;&#x76EE;&#x6807;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x70B9;&#x2014;&#x2014;&#x5373;&#x76EE;&#x6807;BBox&#x7684;&#x4E2D;&#x5FC3;&#x70B9;&#x3002;&#x6211;&#x4EEC;&#x7684;&#x68C0;&#x6D4B;&#x5668;&#x91C7;&#x7528;&#x5173;&#x952E;&#x70B9;&#x4F30;&#x8BA1;&#x6765;&#x627E;&#x5230;&#x4E2D;&#x5FC3;&#x70B9;&#xFF0C;&#x5E76;&#x56DE;&#x5F52;&#x5230;&#x5176;&#x4ED6;&#x76EE;&#x6807;&#x5C5E;&#x6027;&#xFF0C;&#x4F8B;&#x5982;&#x5C3A;&#x5BF8;&#xFF0C;3D&#x4F4D;&#x7F6E;&#xFF0C;&#x65B9;&#x5411;&#xFF0C;&#x751A;&#x81F3;&#x59FF;&#x6001;&#x3002;&#x6211;&#x4EEC;&#x57FA;&#x4E8E;&#x4E2D;&#x5FC3;&#x70B9;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x79F0;&#x4E3A;&#xFF1A;CenterNet&#xFF0C;&#x76F8;&#x6BD4;&#x8F83;&#x4E8E;&#x57FA;&#x4E8E;BBox&#x7684;&#x68C0;&#x6D4B;&#x5668;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x6A21;&#x578B;&#x662F;&#x7AEF;&#x5230;&#x7AEF;&#x53EF;&#x5FAE;&#x7684;&#xFF0C;&#x66F4;&#x7B80;&#x5355;&#xFF0C;&#x66F4;&#x5FEB;&#xFF0C;&#x66F4;&#x7CBE;&#x786E;&#x3002;&#x6211;&#x4EEC;&#x7684;&#x6A21;&#x578B;&#x5B9E;&#x73B0;&#x4E86;&#x901F;&#x5EA6;&#x548C;&#x7CBE;&#x786E;&#x7684;&#x6700;&#x597D;&#x6743;&#x8861;&#xFF0C;&#x4EE5;&#x4E0B;&#x662F;&#x5176;&#x6027;&#x80FD;&#xFF1A;<br>MS COCO dataset, with 28:1% AP at 142 FPS, 37:4% AP at 52 FPS, and 45:1% AP with multi-scale testing at 1.4 FPS.</p><a id="more"></a><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>&#x5F53;&#x524D;&#x7684;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x7528;&#x4E00;&#x4E2A;&#x7D27;&#x7D27;&#x5305;&#x542B;&#x76EE;&#x6807;&#x7684;&#x8F74;&#x5BF9;&#x79F0;&#x7684;&#x8FB9;&#x754C;&#x6846;&#x6765;&#x8868;&#x793A;&#x6BCF;&#x4E00;&#x4E2A;&#x76EE;&#x6807;&#x3002;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E00;&#x4E2A;&#x76EE;&#x6807;&#xFF0C;&#x4F7F;&#x7528;&#x5206;&#x7C7B;&#x5668;&#x6765;&#x786E;&#x5B9A;&#x6BCF;&#x4E2A;&#x6846;&#x4E2D;&#x662F;&#x5426;&#x4E3A;&#x7279;&#x5B9A;&#x7684;&#x76EE;&#x6807;&#x8FD8;&#x662F;&#x80CC;&#x666F;&#x3002;</p><ul><li><p><strong>One-stage detectors</strong> &#x5728;&#x56FE;&#x50CF;&#x4E0A;&#x6ED1;&#x52A8;&#x590D;&#x6742;&#x6392;&#x5217;&#x7684;&#x53EF;&#x80FD;bbox&#xFF08;&#x5373;&#x951A;&#x70B9;&#xFF09;,&#x7136;&#x540E;&#x76F4;&#x63A5;&#x5BF9;&#x6846;&#x8FDB;&#x884C;&#x5206;&#x7C7B;&#xFF0C;&#x800C;&#x4E0D;&#x4F1A;&#x6307;&#x5B9A;&#x6846;&#x4E2D;&#x5185;&#x5BB9;&#x3002;</p></li><li><p><strong>Two-stage detectors</strong> &#x5BF9;&#x6BCF;&#x4E2A;&#x6F5C;&#x5728;&#x6846;&#x91CD;&#x65B0;&#x8BA1;&#x7B97;&#x56FE;&#x50CF;&#x7279;&#x5F81;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x90A3;&#x4E9B;&#x7279;&#x5F81;&#x8FDB;&#x884C;&#x5206;&#x7C7B;&#x3002;</p></li><li><p><strong>Post-processing</strong> &#x4E5F;&#x5373;&#x662F;non-maxima suppression(&#x975E;&#x6781;&#x5927;&#x503C;&#x6291;&#x5236;)&#xFF0C;&#x901A;&#x8FC7;&#x8BA1;&#x7B97;IoU&#x6765;&#x79FB;&#x9664;&#x5BF9;&#x540C;&#x4E00;&#x4E2A;instance&#x7684;&#x91CD;&#x590D;&#x68C0;&#x6D4B;&#x3002;&#x8FD9;&#x79CD;&#x540E;&#x5904;&#x7406;&#x5F88;&#x96BE;&#x533A;&#x5206;&#x548C;&#x8BAD;&#x7EC3;&#xFF0C;&#x56E0;&#x6B64;&#x73B0;&#x6709;&#x5927;&#x591A;&#x68C0;&#x6D4B;&#x5668;&#x90FD;&#x4E0D;&#x662F;&#x7AEF;&#x5230;&#x7AEF;&#x53EF;&#x8BAD;&#x7EC3;&#x7684;&#x3002;</p></li></ul><p>&#x672C;&#x6587;&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x79CD;&#x7B80;&#x4FBF;&#x548C;&#x9AD8;&#x6548;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x4F7F;&#x7528;&#x76EE;&#x6807;&#x8FB9;&#x754C;&#x6846;&#x4E2D;&#x5FC3;&#x7684;&#x4E00;&#x4E2A;&#x70B9;&#x6765;&#x4EE3;&#x8868;&#x76EE;&#x6807;&#x3002;&#x7136;&#x540E;&#x5728;&#x4E2D;&#x5FC3;&#x70B9;&#x4F4D;&#x7F6E;&#x56DE;&#x5F52;&#x51FA;&#x76EE;&#x6807;&#x7684;&#x4E00;&#x4E9B;&#x5C5E;&#x6027;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;size, dimension, 3D extent, orientation, pose&#x3002; &#x800C;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x95EE;&#x9898;&#x53D8;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x6807;&#x51C6;&#x7684;&#x5173;&#x952E;&#x70B9;&#x4F30;&#x8BA1;&#x95EE;&#x9898;&#x3002;&#x6211;&#x4EEC;&#x4EC5;&#x4EC5;&#x5C06;&#x56FE;&#x50CF;&#x4F20;&#x5165;&#x5168;&#x5377;&#x79EF;&#x7F51;&#x7EDC;&#xFF0C;&#x5F97;&#x5230;&#x4E00;&#x4E2A;heatmap&#xFF0C;heatmap&#x5CF0;&#x503C;&#x70B9;&#x5373;&#x4E2D;&#x5FC3;&#x70B9;&#xFF0C;&#x6BCF;&#x4E2A;&#x7279;&#x5F81;&#x56FE;&#x7684;&#x5CF0;&#x503C;&#x70B9;&#x4F4D;&#x7F6E;&#x9884;&#x6D4B;&#x4E86;&#x76EE;&#x6807;&#x7684;&#x5BBD;&#x9AD8;&#x4FE1;&#x606F;&#x3002;&#x4E0D;&#x9700;&#x8981;NMS&#x505A;&#x540E;&#x5904;&#x7406;&#x3002;</p><h1 id="Related-work"><a href="#Related-work" class="headerlink" title="Related work"></a>Related work</h1><ul><li><strong>Object  detection  by  region  classification</strong> RCNN Fast-RCNN</li><li><strong>Object detection with implicit anchors</strong> Faster-RCNN&#x901A;&#x8FC7;&#x68C0;&#x6D4B;&#x7F51;&#x7EDC;&#x751F;&#x6210;region proposal&#x3002;&#x5728;&#x4F4E;&#x5206;&#x8FA8;&#x7387;&#x56FE;&#x50CF;&#x7F51;&#x683C;&#x5468;&#x56F4;&#x91C7;&#x6837;&#x56FA;&#x5B9A;&#x5F62;&#x72B6;&#x7684;&#x8FB9;&#x754C;&#x6846;(anchors)&#xFF0C;&#x5BF9;&#x6BCF;&#x4E2A;anchor&#x8FDB;&#x884C;&#x662F;&#x5426;&#x4E3A;&#x524D;&#x666F;&#x7684;&#x5206;&#x7C7B;&#x3002;&#x7136;&#x540E;&#x5BF9;&#x6BCF;&#x4E00;&#x4E2A;&#x524D;&#x666F;&#x6837;&#x672C;&#x8FDB;&#x884C;&#x591A;&#x7C7B;&#x522B;&#x5206;&#x7C7B;&#xFF0C;&#x5F97;&#x5230;&#x6700;&#x7EC8;&#x7684;&#x7ED3;&#x679C;&#x3002;<br>&#x6211;&#x4EEC;&#x7684;&#x65B9;&#x6CD5;&#x7C7B;&#x4F3C;&#x4E8E;anchor-based&#x5355;&#x9636;&#x6BB5;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x4E00;&#x4E2A;&#x4E2D;&#x5FC3;&#x70B9;&#x53EF;&#x4EE5;&#x770B;&#x505A;&#x4E00;&#x4E2A;&#x5F62;&#x72B6;&#x672A;&#x77E5;&#x7684;anchor&#x3002;&#x7136;&#x800C;&#xFF0C;&#x5B58;&#x5728;&#x4E00;&#x4E9B;&#x91CD;&#x8981;&#x7684;&#x4E0D;&#x540C;&#x70B9;&#xFF1A;<ul><li>&#x6211;&#x4EEC;&#x5206;&#x914D;&#x7684;&#x951A;&#x70B9;&#x4EC5;&#x4EC5;&#x662F;&#x653E;&#x5728;&#x4F4D;&#x7F6E;&#x4E0A;&#xFF0C;&#x6CA1;&#x6709;&#x5C3A;&#x5BF8;&#x6846;&#x3002;&#x6CA1;&#x6709;&#x624B;&#x52A8;&#x8BBE;&#x7F6E;&#x7684;&#x9608;&#x503C;&#x505A;&#x524D;&#x540E;&#x666F;&#x5206;&#x7C7B;&#x3002;&#xFF08;&#x50CF;Faster RCNN&#x4F1A;&#x5C06;&#x4E0E;GT IOU &gt;0.7&#x7684;&#x4F5C;&#x4E3A;&#x524D;&#x666F;&#xFF0C;&lt;0.3&#x7684;&#x4F5C;&#x4E3A;&#x80CC;&#x666F;&#xFF0C;&#x5176;&#x4ED6;&#x4E0D;&#x7BA1;&#xFF09;</li><li>&#x6BCF;&#x4E2A;&#x76EE;&#x6807;&#x4EC5;&#x4EC5;&#x6709;&#x4E00;&#x4E2A;&#x6B63;&#x7684;&#x951A;&#x70B9;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x4F1A;&#x7528;&#x5230;NMS&#xFF0C;&#x6211;&#x4EEC;&#x63D0;&#x53D6;&#x5173;&#x952E;&#x70B9;&#x7279;&#x5F81;&#x56FE;&#x4E0A;&#x5C40;&#x90E8;&#x5CF0;&#x503C;&#x70B9;&#xFF08;local peaks&#xFF09;</li><li>CenterNet &#x76F8;&#x6BD4;&#x8F83;&#x4F20;&#x7EDF;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x800C;&#x8A00;&#xFF08;&#x7F29;&#x653E;16&#x500D;&#x5C3A;&#x5EA6;&#xFF09;&#xFF0C;&#x4F7F;&#x7528;&#x66F4;&#x5927;&#x5206;&#x8FA8;&#x7387;&#x7684;&#x8F93;&#x51FA;&#x7279;&#x5F81;&#x56FE;&#xFF08;&#x7F29;&#x653E;&#x4E86;4&#x500D;&#xFF09;&#xFF0C;&#x56E0;&#x6B64;&#x65E0;&#x9700;&#x7528;&#x5230;&#x591A;&#x91CD;&#x7279;&#x5F81;&#x56FE;&#x951A;&#x70B9;</li></ul></li><li><strong>Object detection by keypoint estimation</strong> CornerNet&#x68C0;&#x6D4B;&#x8FB9;&#x754C;&#x6846;&#x7684;&#x4E24;&#x4E2A;&#x89D2;&#x70B9;&#x4F5C;&#x4E3A;&#x5173;&#x952E;&#x70B9;&#xFF0C;ExtremeNet&#x68C0;&#x6D4B;&#x6240;&#x6709;&#x7269;&#x4F53;&#x7684;&#x4E0A;&#x4E0B;&#x5DE6;&#x53F3;&#x4EE5;&#x53CA;&#x4E2D;&#x5FC3;&#x5E97;&#x6765;&#x68C0;&#x6D4B;&#x76EE;&#x6807;&#x3002;&#x7136;&#x800C;&#x5B83;&#x4EEC;&#x90FD;&#x9700;&#x8981;&#x5728;&#x5173;&#x952E;&#x70B9;&#x68C0;&#x6D4B;&#x540E;&#x52A0;&#x4E0A;&#x4E00;&#x4E2A;grouping&#x9636;&#x6BB5;&#xFF0C;&#x8FD9;&#x4F1A;&#x663E;&#x8457;&#x62D6;&#x6162;&#x5B83;&#x4EEC;&#x7684;&#x7B97;&#x6CD5;&#x3002;&#x800C;CenterNet&#x53EA;&#x662F;&#x5BF9;&#x6BCF;&#x4E2A;&#x76EE;&#x6807;&#x7B80;&#x5355;&#x7684;&#x63D0;&#x53D6;&#x4E00;&#x4E2A;&#x4E2D;&#x5FC3;&#x5E97;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x9700;&#x8981;grouping&#x4EE5;&#x53CA;post-processing&#x3002;</li></ul><h1 id="Preliminary"><a href="#Preliminary" class="headerlink" title="Preliminary"></a>Preliminary</h1><p>&#x7528;$I\in R^{W&#xD7;H&#xD7;3}$&#x8868;&#x793A;&#x957F;&#x4E3A;H&#x5BBD;&#x4E3A;W&#x7684;&#x8F93;&#x5165;&#x56FE;&#x50CF;&#x3002;&#x6211;&#x4EEC;&#x7684;&#x76EE;&#x6807;&#x662F;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x5173;&#x952E;&#x70B9;heat map $Y\in[0,1]^{\frac{W}{R}&#xD7;\frac{H}{R}&#xD7;C}$,R&#x4E3A;&#x8F93;&#x51FA;&#x6B65;&#x957F;&#xFF0C;C&#x4E3A;&#x5173;&#x952E;&#x70B9;&#x7684;&#x7C7B;&#x522B;&#x6570;&#x91CF;&#x3002;$\hat{Y}_{xyz}=1$&#x8868;&#x793A;&#x68C0;&#x6D4B;&#x5230;&#x7684;&#x5173;&#x952E;&#x70B9;&#xFF0C;$\hat{Y}_{xyz}=0$&#x8868;&#x793A;&#x80CC;&#x666F;&#x3002;&#x6211;&#x4EEC;&#x91C7;&#x7528;&#x4E86;&#x51E0;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x5168;&#x5377;&#x79EF;&#x7F16;&#x7801;-&#x89E3;&#x7801;&#x7F51;&#x7EDC;&#x6765;&#x9884;&#x6D4B;&#x56FE;&#x50CF; I &#x5F97;&#x5230;&#x7684;$\hat{Y}$&#xFF1A;</p><ul><li>stacked hourglass network</li><li>upconvolutional residual networks (ResNet)</li><li>deep layer aggregation (DLA)</li></ul><p>&#x5BF9;&#x4E8E;&#x7C7B;&#x522B;&#x4E3A;c&#x7684;&#x771F;&#x5B9E;&#x6846;&#x7684;&#x5173;&#x952E;&#x70B9;$p\in R^2$&#xFF0C;&#x6211;&#x4EEC;&#x8BA1;&#x7B97;&#x5B83;&#x5728;&#x4F4E;&#x5206;&#x8FA8;&#x7387;&#x4E0A;&#x5BF9;&#x5E94;&#x7684;&#x5173;&#x952E;&#x70B9;&#x4E3A;$\overline{p}=\lfloor\frac{p}{R}\rfloor$&#x3002;&#x6211;&#x4EEC;&#x5C06;GT&#x5173;&#x952E;&#x70B9;&#x901A;&#x8FC7;&#x9AD8;&#x65AF;&#x6838;$Y_{xyz}=exp{(-\frac{(x-\overline{p}_{x})^2+(y-\overline{p}_{y})^2}{2\sigma_{p}^2})}$&#x5206;&#x6563;&#x5230;heat map  $Y\in[0,1]^{\frac{W}{R}&#xD7;\frac{H}{R}&#xD7;C}$&#x4E0A;&#xFF0C;&#x5176;&#x4E2D;$\sigma_{p}$&#x662F;&#x76EE;&#x6807;&#x5C3A;&#x5EA6;&#x81EA;&#x9002;&#x5E94;&#x7684;&#x6807;&#x51C6;&#x65B9;&#x5DEE;&#x3002;&#x5982;&#x679C;&#x5BF9;&#x4E8E;&#x540C;&#x4E2A;&#x7C7B; c &#xFF08;&#x540C;&#x4E2A;&#x5173;&#x952E;&#x70B9;&#x6216;&#x662F;&#x76EE;&#x6807;&#x7C7B;&#x522B;&#xFF09;&#x6709;&#x4E24;&#x4E2A;&#x9AD8;&#x65AF;&#x51FD;&#x6570;&#x53D1;&#x751F;&#x91CD;&#x53E0;&#xFF0C;&#x6211;&#x4EEC;&#x9009;&#x62E9;&#x5143;&#x7D20;&#x7EA7;&#x6700;&#x5927;&#x7684;&#x3002;&#x8BAD;&#x7EC3;&#x76EE;&#x6807;&#x51FD;&#x6570;&#x5982;&#x4E0B;&#xFF0C;&#x50CF;&#x7D20;&#x7EA7;&#x903B;&#x8F91;&#x56DE;&#x5F52;&#x7684;focal loss&#xFF1A;<br><img src="/2019/07/29/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;2/focalloss.png" alt></p><p>&#x7531;&#x4E8E;&#x56FE;&#x50CF;&#x4E0B;&#x91C7;&#x6837;&#x65F6;&#xFF0C;GT&#x7684;&#x5173;&#x952E;&#x70B9;&#x4F1A;&#x56E0;&#x6570;&#x636E;&#x662F;&#x79BB;&#x6563;&#x7684;&#x800C;&#x4EA7;&#x751F;&#x504F;&#x5DEE;&#xFF0C;&#x6211;&#x4EEC;&#x5BF9;&#x6BCF;&#x4E2A;&#x4E2D;&#x5FC3;&#x70B9;&#x9644;&#x52A0;&#x9884;&#x6D4B;&#x4E86;&#x4E2A;&#x5C40;&#x90E8;&#x504F;&#x79FB;$\hat{O}\in R^{\frac{W}{R}&#xD7;\frac{H}{R}&#xD7;2}$,&#x6240;&#x6709;&#x7C7B;&#x522B; c &#x5171;&#x4EAB;&#x540C;&#x4E2A;&#x504F;&#x79FB;&#x9884;&#x6D4B;&#xFF0C;&#x8FD9;&#x4E2A;&#x504F;&#x79FB;&#x540C;&#x4E2A; L1 loss&#x6765;&#x8BAD;&#x7EC3;&#xFF1A;<br><img src="/2019/07/29/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;2/offsetloss.png" alt><br>&#x53EA;&#x4F1A;&#x5728;&#x5173;&#x952E;&#x70B9;$\overline{p}$&#x4F4D;&#x7F6E; &#x505A;&#x76D1;&#x7763;&#x64CD;&#x4F5C;&#xFF0C;&#x5176;&#x4ED6;&#x4F4D;&#x7F6E;&#x65E0;&#x89C6;&#x3002;<br>&#x5173;&#x4E8E;&#x8FD9;&#x4E2A;&#x635F;&#x5931;&#x51FD;&#x6570;&#x8865;&#x5145;&#x4E00;&#x70B9;&#x89E3;&#x91CA;&#x3002;&#x8FD9;&#x4E2A;&#x635F;&#x5931;&#x51FD;&#x6570;&#x4E0E;focal loss&#x7C7B;&#x4F3C;&#xFF0C;&#x5BF9;&#x4E8E;easy example&#x7684;&#x4E2D;&#x5FC3;&#x5E97;&#xFF0C;&#x9002;&#x5F53;&#x51CF;&#x5C11;&#x5176;&#x8BAD;&#x7EC3;&#x6BD4;&#x91CD;&#x4E5F;&#x5C31;&#x662F;loss&#x503C;&#x3002;</p><ul><li>&#x5F53;$Y_{xyc}=1$&#x65F6;&#xFF0C;$(1-\hat{Y}_{xyc})^\alpha$&#x5C31;&#x5145;&#x5F53;&#x4E86;&#x77EB;&#x6B63;&#x7684;&#x4F5C;&#x7528;&#x3002;<ul><li>&#x5F53;$\hat{Y}_{xyc}$&#x63A5;&#x8FD1;&#x4E8E;1&#x65F6;&#xFF0C;&#x8BF4;&#x660E;&#x662F;&#x5BB9;&#x6613;&#x68C0;&#x6D4B;&#x51FA;&#x6765;&#x7684;&#x70B9;&#xFF0C;&#x8FD9;&#x4E2A;&#x503C;&#x5C31;&#x4F1A;&#x76F8;&#x5E94;&#x6BD4;&#x8F83;&#x4F4E;&#x3002;</li><li>&#x5F53;$\hat{Y}_{xyc}$&#x63A5;&#x8FD1;&#x4E8E;0&#x65F6;&#xFF0C;&#x8BF4;&#x660E;&#x8FD9;&#x4E2A;&#x4E2D;&#x5FC3;&#x70B9;&#x8FD8;&#x6CA1;&#x6709;&#x5B66;&#x4E60;&#x5230;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x8981;&#x589E;&#x5927;&#x5176;&#x8BAD;&#x7EC3;&#x6BD4;&#x91CD;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x4E2A;&#x503C;&#x5C31;&#x4F1A;&#x6BD4;&#x8F83;&#x5927;&#x3002;</li></ul></li><li>&#x5F53;otherwise&#x65F6;&#xFF0C;$(1-Y_{xyc})^\beta$&#x548C;$(\hat{Y}_{xyc})^\alpha$&#x534F;&#x540C;&#x8FDB;&#x884C;&#x77EB;&#x6B63;&#x3002;<ul><li>&#x5F53;$\hat{Y}_{xyc}$&#x8D8A;&#x63A5;&#x8FD1;1&#x65F6;&#xFF0C;&#x8BF4;&#x660E;&#x6837;&#x672C;&#x8D8A;&#x5BB9;&#x6613;&#x88AB;&#x8BEF;&#x68C0;&#xFF0C;&#x9700;&#x8981;&#x589E;&#x52A0;&#x5BF9;&#x5176;&#x7684;&#x60E9;&#x7F5A;&#xFF0C;&#x901A;&#x8FC7;$(\hat{Y}_{xyc})^\alpha$&#x6765;&#x5B9E;&#x73B0;&#x3002;</li><li>&#x7531;&#x4E8E;&#x6B63;&#x8D1F;&#x6837;&#x672C;&#x7684;&#x6570;&#x91CF;&#x5F88;&#x4E0D;&#x5E73;&#x8861;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x6291;&#x5236;&#x8D1F;&#x6837;&#x672C;&#x7684;&#x8BAD;&#x7EC3;&#x6BD4;&#x91CD;&#x3002;&#x7531;&#x4E8E;&#x68C0;&#x6D4B;&#x5230;&#x7684;&#x8D1F;&#x6837;&#x672C;&#x5728;&#x6B63;&#x6837;&#x672C;&#x5373;&#x4E2D;&#x5FC3;&#x70B9;&#x5468;&#x56F4;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x6BD4;&#x8F83;&#x9AD8;&#xFF0C;&#x6240;&#x4EE5;&#x5B83;&#x4EEC;&#x7684;$(1-Y_{xyc})$&#x63A5;&#x8FD1;&#x4E8E;1&#x3002;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;$(1-Y_{xyc})^\beta$&#x6765;&#x5B9E;&#x73B0;&#x3002;</li></ul></li></ul><h1 id="Objects-as-Points"><a href="#Objects-as-Points" class="headerlink" title="Objects as Points"></a>Objects as Points</h1><p>&#x7528;$(x_{1}^{(k)},y_{1}^{(k)},x_{2}^{(k)},y_{2}^{(k)})$&#x6765;&#x8868;&#x793A;&#x7C7B;&#x522B;&#x4E3A;$c_{k}$&#x7684;object$k$&#x7684;&#x8FB9;&#x754C;&#x6846;&#x3002;&#x90A3;&#x4E48;&#x5B83;&#x7684;&#x4E2D;&#x5FC3;&#x70B9;&#x5373;&#x4E3A;$(\frac{x_{1}^{(k)}+x_{2}^{(k)}}{2},\frac{y_{1}^{(k)}+y_{2}^{(k)}}{2})$&#x3002;&#x6211;&#x4EEC;&#x7528;&#x5173;&#x952E;&#x70B9;&#x4F30;&#x8BA1;$\hat{Y}$&#x6765;&#x5F97;&#x5230;&#x6240;&#x6709;&#x7684;&#x4E2D;&#x5FC3;&#x70B9;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x6211;&#x4EEC;&#x4E3A;&#x6BCF;&#x4E2A;&#x76EE;&#x6807; k &#x56DE;&#x5F52;&#x51FA;&#x76EE;&#x6807;&#x7684;&#x5C3A;&#x5BF8;$s_{k}=(x_{2}^{(k)}-x_{1}^{(k)},y_{2}^{(k)}-y_{1}^{(k)})$&#x3002;&#x4E3A;&#x4E86;&#x51CF;&#x5C11;&#x8BA1;&#x7B97;&#x8D1F;&#x62C5;&#xFF0C;&#x6211;&#x4EEC;&#x4E3A;&#x6BCF;&#x4E2A;&#x76EE;&#x6807;&#x79CD;&#x7C7B;&#x4F7F;&#x7528;&#x5355;&#x4E00;&#x7684;&#x5C3A;&#x5BF8;&#x9884;&#x6D4B;$\hat{S}\in R^{\frac{W}{R}&#xD7;\frac{H}{R}&#xD7;2}$,&#x6211;&#x4EEC;&#x5728;&#x4E2D;&#x5FC3;&#x70B9;&#x4F4D;&#x7F6E;&#x6DFB;&#x52A0;&#x4E86; L1 loss:</p><p><img src="/2019/07/29/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;2/sizeloss.png" alt></p><p>&#x6211;&#x4EEC;&#x4E0D;&#x5C06;scale&#x8FDB;&#x884C;&#x5F52;&#x4E00;&#x5316;&#xFF0C;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x539F;&#x59CB;&#x50CF;&#x7D20;&#x5750;&#x6807;&#x3002;&#x4E3A;&#x4E86;&#x8C03;&#x8282;&#x8BE5;loss&#x7684;&#x5F71;&#x54CD;&#xFF0C;&#x5C06;&#x5176;&#x4E58;&#x4E86;&#x4E2A;&#x7CFB;&#x6570;&#xFF0C;&#x6574;&#x4E2A;&#x8BAD;&#x7EC3;&#x7684;&#x76EE;&#x6807;loss&#x51FD;&#x6570;&#x4E3A;&#xFF1A;</p><p><img src="/2019/07/29/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;2/totalloss.png" alt></p><p>&#x6574;&#x4E2A;&#x7F51;&#x7EDC;&#x9884;&#x6D4B;&#x4F1A;&#x5728;&#x6BCF;&#x4E2A;&#x4F4D;&#x7F6E;&#x8F93;&#x51FA; C+4&#x4E2A;&#x503C;(&#x5373;&#x5173;&#x952E;&#x70B9;&#x7C7B;&#x522B;C, &#x504F;&#x79FB;&#x91CF;&#x7684;x,y&#xFF0C;&#x5C3A;&#x5BF8;&#x7684;w,h)&#xFF0C;&#x6240;&#x6709;&#x8F93;&#x51FA;&#x5171;&#x4EAB;&#x4E00;&#x4E2A;&#x5168;&#x5377;&#x79EF;&#x7684;backbone&#x3002;</p><p><strong>From points to bounding boxes</strong></p><p>&#x5728;&#x63A8;&#x7406;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x5206;&#x522B;&#x63D0;&#x53D6;&#x70ED;&#x529B;&#x56FE;&#x4E0A;&#x6BCF;&#x4E2A;&#x7C7B;&#x522B;&#x7684;&#x5CF0;&#x503C;&#x70B9;&#x3002;&#x5982;&#x4F55;&#x5F97;&#x5230;&#x8FD9;&#x4E9B;&#x5CF0;&#x503C;&#x70B9;&#x5462;&#xFF1F;&#x505A;&#x6CD5;&#x662F;&#x5C06;&#x70ED;&#x529B;&#x56FE;&#x4E0A;&#x7684;&#x6240;&#x6709;&#x54CD;&#x5E94;&#x70B9;&#x4E0E;&#x5176;&#x8FDE;&#x63A5;&#x7684;8&#x4E2A;&#x4E34;&#x8FD1;&#x70B9;&#x8FDB;&#x884C;&#x6BD4;&#x8F83;&#xFF0C;&#x5982;&#x679C;&#x8BE5;&#x70B9;&#x54CD;&#x5E94;&#x503C;&#x5927;&#x4E8E;&#x6216;&#x7B49;&#x4E8E;&#x5176;&#x516B;&#x4E2A;&#x4E34;&#x8FD1;&#x70B9;&#x503C;&#x5219;&#x4FDD;&#x7559;&#xFF0C;&#x6700;&#x540E;&#x6211;&#x4EEC;&#x4FDD;&#x7559;&#x6240;&#x6709;&#x6EE1;&#x8DB3;&#x4E4B;&#x524D;&#x8981;&#x6C42;&#x7684;&#x524D;100&#x4E2A;&#x5CF0;&#x503C;&#x70B9;&#x3002;</p><ul><li>&#x5173;&#x952E;&#x70B9;&#x68C0;&#x6D4B;&#x7ED3;&#x679C; $\hat{P}=\lbrace(\hat{x}_{i},\hat{y}_{i})\rbrace_{i=1}^{n}$</li><li>&#x504F;&#x79FB;&#x68C0;&#x6D4B;&#x7ED3;&#x679C; $\hat{O}_{\hat{x}_{i},\hat{y}_{i}}=(\delta\hat{x}_{i},\delta\hat{y}_{i})$</li><li>&#x5C3A;&#x5EA6;&#x68C0;&#x6D4B;&#x7ED3;&#x679C; $\hat{S}_{\hat{x}_{i},\hat{y}_{i}}=(\hat{w}_{i},\hat{h}_{i})$</li></ul><p>&#x6839;&#x636E;&#x4EE5;&#x4E0A;&#x7ED3;&#x679C;&#x5F97;&#x5230;&#x5728;$(\hat{x}_{i},\hat{y}_{i})$&#x7684;&#x8FB9;&#x754C;&#x6846;&#xFF1A;</p><p><img src="/2019/07/29/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;2/Bbox.png" alt></p><p>&#x6240;&#x6709;&#x7684;&#x8F93;&#x51FA;&#x90FD;&#x76F4;&#x63A5;&#x4ECE;&#x5173;&#x952E;&#x70B9;&#x4F30;&#x8BA1;&#x5F97;&#x5230;&#xFF0C;&#x65E0;&#x9700;&#x57FA;&#x4E8E;IOU&#x7684;NMS&#x6216;&#x8005;&#x5176;&#x4ED6;&#x540E;&#x5904;&#x7406;&#x3002;</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 目标检测 </tag>
            
            <tag> anchor-free </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>next主题个性化设置</title>
      <link href="/2019/07/26/next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E8%AE%BE%E7%BD%AE/"/>
      <url>/2019/07/26/next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="&#x4FEE;&#x6539;&#x7F51;&#x7AD9;&#x63CF;&#x8FF0;"><a href="#&#x4FEE;&#x6539;&#x7F51;&#x7AD9;&#x63CF;&#x8FF0;" class="headerlink" title="&#x4FEE;&#x6539;&#x7F51;&#x7AD9;&#x63CF;&#x8FF0;"></a>&#x4FEE;&#x6539;&#x7F51;&#x7AD9;&#x63CF;&#x8FF0;</h1><pre><code># Sitetitle: &#x6D45;&#x7B11;&#x306E;&#x535A;&#x5BA2;subtitle: &#x6211;&#x4EEC;&#x7684;&#x5F81;&#x9014;&#x662F;&#x661F;&#x8FB0;&#x5927;&#x6D77;author: Zheng Yujiedescription: Pytho/C++/&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;language: zh-CNtimezone: Asia/Shanghai</code></pre><ul><li>&#x201C;title&#x201D;&#xFF1A;&#x535A;&#x5BA2;&#x7684;&#x540D;&#x79F0;&#x3002;</li><li>&#x201C;subtitle&#x201D;&#xFF1A;&#x6839;&#x636E;&#x4E3B;&#x9898;&#x7684;&#x4E0D;&#x540C;&#xFF0C;&#x6709;&#x7684;&#x4F1A;&#x663E;&#x793A;&#x6709;&#x7684;&#x4E0D;&#x4F1A;&#x663E;&#x793A;&#x3002;</li><li>&#x201C;description&#x201D;&#xFF1A;&#x4E3B;&#x8981;&#x7528;&#x4E8E;SEO&#xFF0C;&#x544A;&#x8BC9;&#x641C;&#x7D22;&#x5F15;&#x64CE;&#x4E00;&#x4E2A;&#x5173;+ &#x4E8E;&#x7AD9;&#x70B9;&#x7684;&#x7B80;&#x5355;&#x63CF;&#x8FF0;&#xFF0C;&#x901A;&#x5E38;&#x5EFA;&#x8BAE;&#x5728;&#x5176;&#x4E2D;&#x5305;&#x542B;&#x7F51;&#x7AD9;&#x7684;&#x5173;&#x952E;&#x8BCD;&#x3002;</li><li>&#x201C;author&#x201D;&#xFF1A;&#x4F5C;&#x8005;&#x540D;&#x79F0;&#xFF0C;&#x7528;&#x4E8E;&#x4E3B;&#x9898;&#x663E;&#x793A;&#x6587;&#x7AE0;&#x7684;&#x4F5C;&#x8005;&#x3002;</li><li>&#x201C;language&#x201D;&#xFF1A;&#x8BED;&#x8A00;&#x4F1A;&#x5BF9;&#x5E94;&#x7684;&#x89E3;&#x6790;&#x6B63;&#x5728;&#x5E94;&#x7528;&#x7684;&#x4E3B;&#x9898;&#x4E2D;&#x7684;+ languages&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x7684;&#x4E0D;&#x540C;&#x8BED;&#x8A00;&#x6587;&#x4EF6;&#x3002;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x7684;&#x540D;&#x79F0;&#x8981;&#x548C;languages&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x7684;&#x8BED;&#x8A00;&#x6587;&#x4EF6;&#x540D;&#x79F0;&#x4E00;&#x81F4;&#x3002;</li><li>&#x201C;timezone&#x201D;&#xFF1A;&#x53EF;&#x4E0D;&#x586B;&#x5199;&#x3002;</li></ul><a id="more"></a><h1 id="&#x8BBE;&#x7F6E;&#x7F51;&#x7AD9;&#x56FE;&#x6807;"><a href="#&#x8BBE;&#x7F6E;&#x7F51;&#x7AD9;&#x56FE;&#x6807;" class="headerlink" title="&#x8BBE;&#x7F6E;&#x7F51;&#x7AD9;&#x56FE;&#x6807;"></a>&#x8BBE;&#x7F6E;&#x7F51;&#x7AD9;&#x56FE;&#x6807;</h1><p>&#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x7B2C;&#x4E00;&#x884C;&#x4EE3;&#x7801;&#x5C31;&#x662F;&#x7F51;&#x7AD9;icon&#x8BBE;&#x7F6E;&#xFF0C;&#x8FD9;&#x91CC;&#x4F60;&#x53EA;&#x9700;&#x8981;&#x627E;&#x5230;&#x4F60;&#x559C;&#x6B22;&#x7684;logo&#x628A;&#x5B83;&#x5236;&#x4F5C;&#x6210;ico&#x683C;&#x5F0F;&#x7136;&#x540E;&#x6539;&#x540D;favicon.ico&#xFF0C;&#x653E;&#x5230;/themes/next/source/images&#x4E0B;&#x9762;&#x5373;&#x53EF;&#x3002;</p><pre><code># Put your favicon.ico into `hexo-site/source/` directory.favicon: /favicon.ico # &#x7F51;&#x7AD9;logo</code></pre><h1 id="&#x66F4;&#x6362;&#x5934;&#x50CF;"><a href="#&#x66F4;&#x6362;&#x5934;&#x50CF;" class="headerlink" title="&#x66F4;&#x6362;&#x5934;&#x50CF;"></a>&#x66F4;&#x6362;&#x5934;&#x50CF;</h1><p>&#x4FEE;&#x6539;&#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x6587;&#x4EF6;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># Sidebar Avatar</span><br><span class="line">avatar:</span><br><span class="line">  # In theme directory (source/images): /images/avatar.gif</span><br><span class="line">  # In site directory (source/uploads): /uploads/avatar.gif</span><br><span class="line">  # You can also use other linking images.</span><br><span class="line">  url: /images/1.jpeg</span><br><span class="line">  # If true, the avatar would be dispalyed in circle.</span><br><span class="line">  rounded: false</span><br><span class="line">  # If true, the avatar would be rotated with the cursor.</span><br><span class="line">  rotated: false</span><br></pre></td></tr></table></figure></p><h1 id="&#x6DFB;&#x52A0;&#x4FA7;&#x8FB9;&#x680F;&#x793E;&#x4EA4;&#x94FE;&#x63A5;"><a href="#&#x6DFB;&#x52A0;&#x4FA7;&#x8FB9;&#x680F;&#x793E;&#x4EA4;&#x94FE;&#x63A5;" class="headerlink" title="&#x6DFB;&#x52A0;&#x4FA7;&#x8FB9;&#x680F;&#x793E;&#x4EA4;&#x94FE;&#x63A5;"></a>&#x6DFB;&#x52A0;&#x4FA7;&#x8FB9;&#x680F;&#x793E;&#x4EA4;&#x94FE;&#x63A5;</h1><p>&#x4E3B;&#x8981;&#x4FEE;&#x6539;&#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x7684;&#x793E;&#x4EA4;&#x94FE;&#x63A5;&#x548C;&#x5BF9;&#x5E94;&#x56FE;&#x6807;</p><pre><code># Social Links# Usage: `Key: permalink || icon`# Key is the link label showing to end users.# Value before `||` delimiter is the target permalink.# Value after `||` delimiter is the name of Font Awesome icon. If icon (with or without delimiter) is not specified, globe icon will be loaded.social:GitHub: https://github.com/zhengyujie || github#E-Mail: mailto:yourname@gmail.com || envelope#Google: https://plus.google.com/yourname || google#Twitter: https://twitter.com/yourname || twitter#FB Page: https://www.facebook.com/yourname || facebook#VK Group: https://vk.com/yourname || vk#StackOverflow: https://stackoverflow.com/yourname || stack-overflow#YouTube: https://youtube.com/yourname || youtube#Instagram: https://instagram.com/yourname || instagram#Skype: skype:yourname?call|chat || skypeMusic: https://music.163.com/#/playlist?id=327924141 || headphonesGoogle: https://www.google.com || googleBaidu: https://baidu.com || firefox</code></pre><h1 id="&#x6DFB;&#x52A0;&#x53CB;&#x60C5;&#x94FE;&#x63A5;"><a href="#&#x6DFB;&#x52A0;&#x53CB;&#x60C5;&#x94FE;&#x63A5;" class="headerlink" title="&#x6DFB;&#x52A0;&#x53CB;&#x60C5;&#x94FE;&#x63A5;"></a>&#x6DFB;&#x52A0;&#x53CB;&#x60C5;&#x94FE;&#x63A5;</h1><p>&#x4FEE;&#x6539;&#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x6587;&#x4EF6;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Blog rolls</span><br><span class="line">links_icon: heart</span><br><span class="line">links_title: FRIENDS</span><br><span class="line">links_layout: block</span><br><span class="line">#links_layout: inline</span><br><span class="line">links:</span><br><span class="line">  #Title: http://example.com</span><br></pre></td></tr></table></figure></p><h1 id="&#x5168;&#x6587;&#x9605;&#x8BFB;"><a href="#&#x5168;&#x6587;&#x9605;&#x8BFB;" class="headerlink" title="&#x5168;&#x6587;&#x9605;&#x8BFB;"></a>&#x5168;&#x6587;&#x9605;&#x8BFB;</h1><p>&#x5728;&#x5199;&#x6587;&#x7AE0;&#x65F6;&#x6DFB;&#x52A0;<code>&lt;!--more--&gt;</code></p><ul><li><code>&lt;!--more--&gt;</code>&#x4E0A;&#x65B9;&#x7684;&#x6B63;&#x5E38;&#x663E;&#x793A;</li><li><code>&lt;!--more--&gt;</code>&#x4E0B;&#x65B9;&#x7684;&#x9690;&#x85CF;</li></ul><h1 id="&#x6DFB;&#x52A0;follow-me-on-GitHub"><a href="#&#x6DFB;&#x52A0;follow-me-on-GitHub" class="headerlink" title="&#x6DFB;&#x52A0;follow me on GitHub"></a>&#x6DFB;&#x52A0;follow me on GitHub</h1><p>&#x4FEE;&#x6539;&#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x6587;&#x4EF6;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># `Follow me on GitHub` banner in the top-right corner.</span><br><span class="line">github_banner:</span><br><span class="line">  enable: true</span><br><span class="line">  permalink: https://github.com/zhengyujie</span><br><span class="line">  title: Follow me on GitHub</span><br></pre></td></tr></table></figure></p><h1 id="&#x6DFB;&#x52A0;&#x770B;&#x677F;&#x5A18;"><a href="#&#x6DFB;&#x52A0;&#x770B;&#x677F;&#x5A18;" class="headerlink" title="&#x6DFB;&#x52A0;&#x770B;&#x677F;&#x5A18;"></a>&#x6DFB;&#x52A0;&#x770B;&#x677F;&#x5A18;</h1><p>&#x5B89;&#x88C5;&#x63D2;&#x4EF6;</p><pre><code>npm install --save hexo-helper-live2d</code></pre><p>&#x5728;&#x535A;&#x5BA2;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x6DFB;&#x52A0;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptFrom: local</span><br><span class="line">  model:</span><br><span class="line">    scale: 1</span><br><span class="line">    hHeadPos: 0.5</span><br><span class="line">    vHeadPos: 0.618</span><br><span class="line">  display:</span><br><span class="line">    superSample: 2</span><br><span class="line">    width: 200</span><br><span class="line">    height: 400</span><br><span class="line">    position: right</span><br><span class="line">    hOffset: 0</span><br><span class="line">    vOffset: -20</span><br><span class="line">  mobile:</span><br><span class="line">    show: false</span><br><span class="line">  react:</span><br><span class="line">    opacity: 0.7</span><br></pre></td></tr></table></figure></p><h1 id="&#x5B57;&#x6570;&#x7EDF;&#x8BA1;&#x548C;&#x9605;&#x8BFB;&#x65F6;&#x957F;"><a href="#&#x5B57;&#x6570;&#x7EDF;&#x8BA1;&#x548C;&#x9605;&#x8BFB;&#x65F6;&#x957F;" class="headerlink" title="&#x5B57;&#x6570;&#x7EDF;&#x8BA1;&#x548C;&#x9605;&#x8BFB;&#x65F6;&#x957F;"></a>&#x5B57;&#x6570;&#x7EDF;&#x8BA1;&#x548C;&#x9605;&#x8BFB;&#x65F6;&#x957F;</h1><p>&#x5B89;&#x88C5;&#x63D2;&#x4EF6;</p><pre><code>npm install hexo-symbols-count-time --save</code></pre><p>&#x4FEE;&#x6539;&#x7AD9;&#x70B9;&#x914D;&#x7F6E;&#x6587;&#x4EF6;</p><pre><code>symbols_count_time:    #&#x6587;&#x7AE0;&#x5185;&#x662F;&#x5426;&#x663E;&#x793A;    symbols: true    time: true    # &#x7F51;&#x9875;&#x5E95;&#x90E8;&#x662F;&#x5426;&#x663E;&#x793A;    total_symbols: true    total_time: true</code></pre><p>&#x4FEE;&#x6539;&#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x6587;&#x4EF6;</p><pre><code># Post wordcount display settings# Dependencies: https://github.com/theme-next/hexo-symbols-count-timesymbols_count_time:    separated_meta: true    item_text_post: true    item_text_total: false    awl: 4    wpm: 275    suffix: mins.</code></pre>]]></content>
      
      
      <categories>
          
          <category> Hexo框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> NexT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>next主题安装和配置</title>
      <link href="/2019/07/26/next%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/07/26/next%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="&#x5B89;&#x88C5;&#x4E3B;&#x9898;"><a href="#&#x5B89;&#x88C5;&#x4E3B;&#x9898;" class="headerlink" title="&#x5B89;&#x88C5;&#x4E3B;&#x9898;"></a>&#x5B89;&#x88C5;&#x4E3B;&#x9898;</h1><p>&#x5728;&#x535A;&#x5BA2;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x8F93;&#x5165;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;</p><pre><code> git clone https://github.com/theme-next/hexo-theme-next themes / next</code></pre><p>&#x5C31;&#x53EF;&#x4EE5;&#x5C06;next&#x4E3B;&#x9898;&#x6587;&#x4EF6;&#x4ECE;<code>https://github.com/iissnan/hexo-theme-next</code>&#x4E0B;&#x8F7D;&#x5230;&#x5F53;&#x524D;&#x76EE;&#x5F55;&#x4E0B;&#x7684;themes&#x91CC;&#x9762;&#x7684;next&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#x3002;</p><h1 id="&#x542F;&#x7528;&#x4E3B;&#x9898;"><a href="#&#x542F;&#x7528;&#x4E3B;&#x9898;" class="headerlink" title="&#x542F;&#x7528;&#x4E3B;&#x9898;"></a>&#x542F;&#x7528;&#x4E3B;&#x9898;</h1><p>&#x4FEE;&#x6539;&#x7AD9;&#x70B9;&#x914D;&#x7F6E;&#x6587;&#x4EF6;</p><pre><code># Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: next</code></pre><a id="more"></a><h1 id="&#x4E3B;&#x9898;&#x8BBE;&#x5B9A;"><a href="#&#x4E3B;&#x9898;&#x8BBE;&#x5B9A;" class="headerlink" title="&#x4E3B;&#x9898;&#x8BBE;&#x5B9A;"></a>&#x4E3B;&#x9898;&#x8BBE;&#x5B9A;</h1><p>&#x76EE;&#x524D;next&#x4E3B;&#x9898;&#x652F;&#x6301;&#x56DB;&#x79CD;Scheme&#xFF1A;</p><ul><li>Muse - &#x9ED8;&#x8BA4; Scheme&#xFF0C;&#x8FD9;&#x662F; NexT &#x6700;&#x521D;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x9ED1;&#x767D;&#x4E3B;&#x8C03;&#xFF0C;&#x5927;&#x91CF;&#x7559;&#x767D;</li><li>Mist - Muse &#x7684;&#x7D27;&#x51D1;&#x7248;&#x672C;&#xFF0C;&#x6574;&#x6D01;&#x6709;&#x5E8F;&#x7684;&#x5355;&#x680F;&#x5916;&#x89C2;</li><li>Pisces - &#x53CC;&#x680F; Scheme&#xFF0C;&#x5C0F;&#x5BB6;&#x78A7;&#x7389;&#x4F3C;&#x7684;&#x6E05;&#x65B0;</li><li>Gemini - &#x5DE6;&#x4FA7;&#x7F51;&#x7AD9;&#x4FE1;&#x606F;&#x53CA;&#x76EE;&#x5F55;&#xFF0C;&#x5757;+&#x7247;&#x6BB5;&#x7ED3;&#x6784;&#x5E03;&#x5C40;</li></ul><p>Scheme&#x7684;&#x5207;&#x6362;&#x901A;&#x8FC7;&#x66F4;&#x6539;&#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x6587;&#x4EF6;,&#x641C;&#x7D22;scheme&#x5173;&#x952E;&#x5B57;&#x3002;&#x4F60;&#x4F1A;&#x770B;&#x5230;&#x6709;&#x56DB;&#x884C;scheme&#x7684;&#x914D;&#x7F6E;&#xFF0C;&#x5C06;&#x4F60;&#x9700;&#x7528;&#x542F;&#x7528;&#x7684;scheme&#x524D;&#x9762;&#x6CE8;&#x91CA;#&#x53BB;&#x9664;&#x5373;&#x53EF;&#x3002;</p><h1 id="&#x8BBE;&#x5B9A;&#x8BED;&#x8A00;"><a href="#&#x8BBE;&#x5B9A;&#x8BED;&#x8A00;" class="headerlink" title="&#x8BBE;&#x5B9A;&#x8BED;&#x8A00;"></a>&#x8BBE;&#x5B9A;&#x8BED;&#x8A00;</h1><p>&#x660E;&#x786E;&#x8BBE;&#x5B9A;&#x4F60;&#x6240;&#x9700;&#x8981;&#x7684;&#x8BED;&#x8A00;</p><pre><code>language&#xFF1A; zh-CN</code></pre><h1 id="&#x8BBE;&#x7F6E;&#x6807;&#x7B7E;&#x548C;&#x5206;&#x7C7B;&#x7B49;&#x754C;&#x9762;"><a href="#&#x8BBE;&#x7F6E;&#x6807;&#x7B7E;&#x548C;&#x5206;&#x7C7B;&#x7B49;&#x754C;&#x9762;" class="headerlink" title="&#x8BBE;&#x7F6E;&#x6807;&#x7B7E;&#x548C;&#x5206;&#x7C7B;&#x7B49;&#x754C;&#x9762;"></a>&#x8BBE;&#x7F6E;&#x6807;&#x7B7E;&#x548C;&#x5206;&#x7C7B;&#x7B49;&#x754C;&#x9762;</h1><p>&#x4FEE;&#x6539;&#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x6587;&#x4EF6;</p><pre><code># ---------------------------------------------------------------# Menu Settings# ---------------------------------------------------------------# When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash (/archives -&gt; archives)menu:home: /archives: /archives/tags: /tags/categories: /categories/about: /about/#sitemap: /sitemap.xml#commonweal: /404/</code></pre><p>&#x53BB;&#x6389;&#x76F8;&#x5E94;&#x7684;<code>#</code>&#x5373;&#x53EF;<br>&#x7136;&#x540E;&#x65B0;&#x5EFA;&#x9875;&#x9762;</p><pre><code>hexo new page &apos;tags&apos; #&#x521B;&#x5EFA;tags&#x5B50;&#x76EE;&#x5F55;hexo new page &apos;categories&apos; #&#x521B;&#x5EFA;categories&#x5B50;&#x76EE;&#x5F55;</code></pre><p>&#x5206;&#x522B;&#x4FEE;&#x6539;&#x5BF9;&#x5E94;&#x7684;<code>index.me</code>&#x6587;&#x4EF6;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#x6587;&#x7AE0;&#x5206;&#x7C7B;</span><br><span class="line">date: 2019-07-26 13:47:40</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>&#x4EE5;&#x53CA;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#x6587;&#x7AE0;&#x5206;&#x7C7B;</span><br><span class="line">date: 2019-07-26 13:47:40</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> Hexo框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> NexT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo的简介和安装</title>
      <link href="/2019/07/26/hexo%E7%AE%80%E4%BB%8B%E5%92%8C%E5%AE%89%E8%A3%85/"/>
      <url>/2019/07/26/hexo%E7%AE%80%E4%BB%8B%E5%92%8C%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo&#x7B80;&#x4ECB;"><a href="#hexo&#x7B80;&#x4ECB;" class="headerlink" title="hexo&#x7B80;&#x4ECB;"></a>hexo&#x7B80;&#x4ECB;</h1><p>&#x4E3B;&#x9875;&#xFF1A; <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">https://hexo.io/zh-cn/</a><br>Hexo &#x662F;&#x4E00;&#x4E2A;&#x5FEB;&#x901F;&#x3001;&#x7B80;&#x6D01;&#x4E14;&#x9AD8;&#x6548;&#x7684;&#x535A;&#x5BA2;&#x6846;&#x67B6;&#x3002;Hexo &#x4F7F;&#x7528; Markdown&#xFF08;&#x6216;&#x5176;&#x4ED6;&#x6E32;&#x67D3;&#x5F15;&#x64CE;&#xFF09;&#x89E3;&#x6790;&#x6587;&#x7AE0;&#xFF0C;&#x5728;&#x51E0;&#x79D2;&#x5185;&#xFF0C;&#x5373;&#x53EF;&#x5229;&#x7528;&#x9753;&#x4E3D;&#x7684;&#x4E3B;&#x9898;&#x751F;&#x6210;&#x9759;&#x6001;&#x7F51;&#x9875;&#x3002;</p><ul><li>hexo &#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x662F;&#x57FA;&#x4E8E;node.js&#x5236;&#x4F5C;&#x7684;&#x4E00;&#x4E2A;&#x535A;&#x5BA2;&#x5DE5;&#x5177;&#xFF0C;&#x4E0D;&#x662F;&#x6211;&#x4EEC;&#x7406;&#x89E3;&#x7684;&#x4E00;&#x4E2A;&#x5F00;&#x6E90;&#x7684;&#x535A;&#x5BA2;&#x7CFB;&#x7EDF;&#x3002;&#x5176;&#x4E2D;&#x7684;&#x5DEE;&#x522B;&#xFF0C;&#x6709;&#x70B9;&#x610F;&#x601D;&#x3002;</li><li>hexo &#x6B63;&#x5E38;&#x6765;&#x8BF4;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x90E8;&#x7F72;&#x5230;&#x6211;&#x4EEC;&#x7684;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x4FDD;&#x5B58;&#x7684;&#xFF0C;&#x5176;&#x5B9E;&#x662F;&#x57FA;&#x4E8E;&#x5728;hexo&#x901A;&#x8FC7;markdown&#x7F16;&#x5199;&#x7684;&#x6587;&#x7AE0;&#xFF0C;&#x7136;&#x540E;hexo&#x5E2E;&#x6211;&#x4EEC;&#x751F;&#x6210;&#x9759;&#x6001;&#x7684;html&#x9875;&#x9762;&#xFF0C;&#x7136;&#x540E;&#xFF0C;&#x5C06;&#x751F;&#x6210;&#x7684;html&#x4E0A;&#x4F20;&#x5230;&#x6211;&#x4EEC;&#x7684;&#x670D;&#x52A1;&#x5668;&#x3002;&#x7B80;&#x800C;&#x8A00;&#x4E4B;&#xFF1A;hexo&#x662F;&#x4E2A;&#x9759;&#x6001;&#x9875;&#x9762;&#x751F;&#x6210;&#x3001;&#x4E0A;&#x4F20;&#x7684;&#x5DE5;&#x5177;</li></ul><a id="more"></a><h1 id="hexo&#x642D;&#x5EFA;"><a href="#hexo&#x642D;&#x5EFA;" class="headerlink" title="hexo&#x642D;&#x5EFA;"></a>hexo&#x642D;&#x5EFA;</h1><h2 id="&#x5B89;&#x88C5;git"><a href="#&#x5B89;&#x88C5;git" class="headerlink" title="&#x5B89;&#x88C5;git"></a>&#x5B89;&#x88C5;git</h2><pre><code>sudo apt-get install git-core</code></pre><p>&#x5B89;&#x88C5;&#x597D;&#x540E;&#xFF0C;&#x4F7F;&#x7528;<code>git --Version</code>&#x6765;&#x67E5;&#x770B;&#x4E00;&#x4E0B;&#x7248;&#x672C;&#x3002;</p><h2 id="&#x5B89;&#x88C5;node-js"><a href="#&#x5B89;&#x88C5;node-js" class="headerlink" title="&#x5B89;&#x88C5;node.js"></a>&#x5B89;&#x88C5;node.js</h2><p>&#x5148;&#x5B89;&#x88C5;nvm&#xFF0C;&#x5373;&#x662F;Node Version Manager(Node&#x7248;&#x672C;&#x7BA1;&#x7406;&#x5668;)</p><pre><code>wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash</code></pre><p>&#x6FC0;&#x6D3B;nvm</p><pre><code>source ~/.nvm/nvm.sh</code></pre><p>&#x5B89;&#x88C5;node</p><pre><code>nvm install node</code></pre><p>&#x5B89;&#x88C5;&#x597D;&#x540E;</p><pre><code>node -vnpm -v</code></pre><p>&#x6765;&#x68C0;&#x67E5;&#x6709;&#x6CA1;&#x6709;&#x5B89;&#x88C5;&#x6210;&#x529F;</p><h2 id="&#x5B89;&#x88C5;hexo"><a href="#&#x5B89;&#x88C5;hexo" class="headerlink" title="&#x5B89;&#x88C5;hexo"></a>&#x5B89;&#x88C5;hexo</h2><pre><code>npm install -g hexo-cil</code></pre><p>&#x4ECD;&#x7136;&#x4F7F;&#x7528;<code>hexo -v</code>&#x6765;&#x68C0;&#x67E5;&#x6709;&#x6CA1;&#x6709;&#x5B89;&#x88C5;&#x6210;&#x529F;<br>&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x7136;&#x540E;<code>cd</code>&#x5230;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#x4E0B;</p><pre><code>hexo init</code></pre><p>&#x521D;&#x59CB;&#x5316;&#x540E;&#x5C31;&#x80FD;&#x5728;&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x770B;&#x5230;&#x4E00;&#x7CFB;&#x5217;&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x91CC;&#x505A;&#x70B9;&#x89E3;&#x91CA;</p><ul><li>node_modules&#xFF1A;&#x662F;&#x4F9D;&#x8D56;&#x5305;</li><li>public&#xFF1A;&#x5B58;&#x653E;&#x7684;&#x662F;&#x751F;&#x6210;&#x7684;&#x9875;&#x9762;</li><li>scaffolds&#xFF1A;&#x547D;&#x4EE4;&#x751F;&#x6210;&#x6587;&#x7AE0;&#x7B49;&#x7684;&#x6A21;&#x677F;</li><li>source&#xFF1A;&#x7528;&#x547D;&#x4EE4;&#x521B;&#x5EFA;&#x7684;&#x5404;&#x79CD;&#x6587;&#x7AE0;</li><li>themes&#xFF1A;&#x4E3B;&#x9898;</li><li>_config.yml&#xFF1A;&#x6574;&#x4E2A;&#x535A;&#x5BA2;&#x7684;&#x914D;&#x7F6E;</li><li>db.json&#xFF1A;source&#x89E3;&#x6790;&#x6240;&#x5F97;&#x5230;&#x7684;</li><li>package.json&#xFF1A;&#x9879;&#x76EE;&#x6240;&#x9700;&#x6A21;&#x5757;&#x9879;&#x76EE;&#x7684;&#x914D;&#x7F6E;&#x4FE1;&#x606F;</li></ul><p>&#x63A5;&#x7740;&#x8F93;&#x5165;&#x547D;&#x4EE4;&#x884C;</p><pre><code>hexo ghexo server</code></pre><p>&#x968F;&#x540E;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x8F93;&#x5165;<code>localhost:4000</code>&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x751F;&#x6210;&#x7684;&#x5FAE;&#x535A;&#x4E86;&#x3002;</p><h2 id="GitHub&#x521B;&#x5EFA;&#x4E2A;&#x4EBA;&#x4ED3;&#x5E93;"><a href="#GitHub&#x521B;&#x5EFA;&#x4E2A;&#x4EBA;&#x4ED3;&#x5E93;" class="headerlink" title="GitHub&#x521B;&#x5EFA;&#x4E2A;&#x4EBA;&#x4ED3;&#x5E93;"></a>GitHub&#x521B;&#x5EFA;&#x4E2A;&#x4EBA;&#x4ED3;&#x5E93;</h2><p>&#x9996;&#x5148;&#x6CE8;&#x518C;&#x4E00;&#x4E2A;GitHub&#x8D26;&#x53F7;<br>&#x7136;&#x540E;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x548C;&#x4F60;&#x7528;&#x6237;&#x540D;&#x76F8;&#x540C;&#x7684;&#x4ED3;&#x5E93;&#xFF0C;&#x5728;&#x540E;&#x9762;&#x52A0;&#x4E0A;<code>.github.io</code>&#x53EA;&#x6709;&#x8FD9;&#x6837;&#xFF0C;&#x5C06;&#x6765;&#x8981;&#x90E8;&#x7F72;&#x5230;GitHub page&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x624D;&#x4F1A;&#x88AB;&#x8BC6;&#x522B;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;<code>xxxx.github.io</code>&#xFF0C;&#x5176;&#x4E2D;xxx&#x5C31;&#x662F;&#x4F60;&#x6CE8;&#x518C;GitHub&#x7684;&#x7528;&#x6237;&#x540D;&#x3002;</p><h2 id="&#x5C06;hexo&#x90E8;&#x7F72;&#x5230;GitHub"><a href="#&#x5C06;hexo&#x90E8;&#x7F72;&#x5230;GitHub" class="headerlink" title="&#x5C06;hexo&#x90E8;&#x7F72;&#x5230;GitHub"></a>&#x5C06;hexo&#x90E8;&#x7F72;&#x5230;GitHub</h2><p>&#x4FEE;&#x6539;&#x7AD9;&#x70B9;&#x914D;&#x7F6E;&#x6587;&#x4EF6;<code>_config.yml</code>&#x7684;&#x6700;&#x540E;&#x90E8;&#x5206;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/YourgithubName/YourgithubName.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure></p><p>&#x8981;&#x5148;&#x5B89;&#x88C5;deploy-git,&#x624D;&#x80FD;&#x7528;&#x547D;&#x4EE4;&#x90E8;&#x7F72;&#x5230;GitHub</p><pre><code>npm install hexo-deployer-git --save</code></pre><p>&#x7136;&#x540E;</p><pre><code>hexo clean #&#x6E05;&#x9664;&#x4E4B;&#x524D;&#x751F;&#x6210;&#x7684;&#x4E1C;&#x897F;hexo generate  #&#x751F;&#x6210;&#x9759;&#x6001;&#x6587;&#x7AE0;&#xFF0C;&#x7F29;&#x5199;hexo ghexo deploy  #&#x90E8;&#x7F72;&#x6587;&#x7AE0;&#xFF0C;&#x7F29;&#x5199;hexo d</code></pre><p>&#x8FC7;&#x4E00;&#x4F1A;&#x513F;&#x5C31;&#x53EF;&#x4EE5;&#x5728;<code>http://yourname.github.io</code>&#x8FD9;&#x4E2A;&#x7F51;&#x7AD9;&#x770B;&#x5230;&#x4F60;&#x7684;&#x535A;&#x5BA2;&#x4E86;</p>]]></content>
      
      
      <categories>
          
          <category> Hexo框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文阅读笔记1：RepPoints:Point Set Representation for Object Detection</title>
      <link href="/2019/07/25/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B01/"/>
      <url>/2019/07/25/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B01/</url>
      
        <content type="html"><![CDATA[<blockquote><p>&#x8BBA;&#x6587;&#x5730;&#x5740;&#xFF1A;<a href="https://arxiv.org/abs/1904.11490" target="_blank" rel="noopener">https://arxiv.org/abs/1904.11490</a><br>&#x8BBA;&#x6587;&#x4EE3;&#x7801;&#xFF1A;&#x672A;&#x516C;&#x5E03;</p></blockquote><h1 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h1><p>&#x5F53;&#x524D;&#x4E3B;&#x6D41;&#x7684;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x7F51;&#x7EDC;&#xFF0C;&#x5BF9;&#x4E8E;bounding box&#x7684;&#x4F9D;&#x8D56;&#x5F88;&#x4E25;&#x91CD;&#xFF0C;&#x65E0;&#x8BBA;&#x662F;one-stage&#x8FD8;&#x662F;two-stage&#x7684;&#x68C0;&#x6D4B;&#x5668;&#xFF0C;&#x90FD;&#x9700;&#x8981;bounding box&#x5BF9;&#x76EE;&#x6807;&#x533A;&#x57DF;&#x8FDB;&#x884C;&#x63D0;&#x53D6;&#xFF0C;&#x5212;&#x5206;&#xFF0C;&#x7136;&#x540E;&#x8FDB;&#x884C;&#x5206;&#x7C7B;&#x548C;&#x56DE;&#x5F52;&#x3002;&#x4F46;&#x662F;&#x8FD9;&#x4E9B;bounding box&#x90FD;&#x662F;&#x89C4;&#x5219;&#x4E14;&#x76F8;&#x5BF9;&#x56FA;&#x5B9A;&#x7684;&#x5019;&#x9009;&#x6846;&#xFF0C;&#x53EA;&#x80FD;&#x5BF9;&#x76EE;&#x6807;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x8F83;&#x4E3A;&#x7C97;&#x7CD9;&#x7684;&#x5B9A;&#x4F4D;&#xFF0C;&#x8FD9;&#x5C31;&#x5BFC;&#x81F4;bounding box&#x63D0;&#x53D6;&#x51FA;&#x6765;&#x7684;&#x7279;&#x5F81;&#x4E5F;&#x662F;&#x7C97;&#x7CD9;&#x7684;&#x3002;&#x672C;&#x6587;&#x63D0;&#x51FA;&#x4E86;RepPoints&#xFF08;representive points&#xFF09;&#xFF0C;&#x901A;&#x8FC7;&#x4E00;&#x7EC4;&#x6709;&#x4EE3;&#x8868;&#x6027;&#x7684;&#x70B9;&#xFF0C;&#x5B9E;&#x73B0;&#x5BF9;&#x76EE;&#x6807;&#x7684;&#x66F4;&#x7CBE;&#x7EC6;&#x8868;&#x793A;&#xFF0C;&#x5BF9;&#x4E8E;&#x540E;&#x7EED;&#x7684;&#x5206;&#x7C7B;&#x548C;&#x5B9A;&#x4F4D;&#x90FD;&#x6709;&#x5E2E;&#x52A9;&#x3002;&#x5728;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x7ED9;&#x5B9A;Ground Truth&#x7684;&#x4F4D;&#x7F6E;&#x548C;&#x8BC6;&#x522B;&#x76EE;&#x6807;&#xFF0C;RepPoints&#x5B66;&#x4F1A;&#x81EA;&#x52A8;&#x6392;&#x5217;&#x4EE3;&#x8868;&#x6027;&#x70B9;&#xFF0C;&#x9650;&#x5B9A;&#x76EE;&#x6807;&#x7684;&#x7A7A;&#x95F4;&#x8303;&#x56F4;&#xFF0C;&#x5E76;&#x8868;&#x793A;&#x8BED;&#x4E49;&#x4E0A;&#x91CD;&#x8981;&#x7684;&#x5C40;&#x90E8;&#x533A;&#x57DF;&#x3002;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x90FD;&#x4E0D;&#x9700;&#x8981;anchor&#x8FDB;&#x884C;bounding box&#x7684;&#x91C7;&#x6837;&#xFF0C;&#x662F;&#x540D;&#x526F;&#x5176;&#x5B9E;&#x7684;anchor-free&#x3002;&#x5B9E;&#x9A8C;&#x8868;&#x660E;&#xFF0C;&#x57FA;&#x4E8E;RepPoints&#x7684;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#xFF0C;&#x5728;&#x6CA1;&#x91C7;&#x7528;&#x591A;&#x5C3A;&#x5EA6;&#x8BAD;&#x7EC3;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5728;COCO&#x6570;&#x636E;&#x96C6;&#x4E0A;&#xFF0C;AP&#x6307;&#x6807;&#x4E0A;&#x8FBE;&#x5230;&#x4E86;42.8%&#x3002;</p><a id="more"></a><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x4E00;&#x76F4;&#x662F;&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x4E2D;&#x7684;&#x57FA;&#x7840;&#x4E14;&#x70ED;&#x95E8;&#x9886;&#x57DF;&#xFF0C;&#x4E3A;&#x8BF8;&#x5982;&#x5206;&#x5272;&#xFF0C;&#x8DDF;&#x8E2A;&#x7B49;&#x4EFB;&#x52A1;&#x63D0;&#x4F9B;&#x8F85;&#x52A9;&#x3002;&#x968F;&#x7740;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x7684;&#x8FC5;&#x901F;&#x53D1;&#x5C55;&#xFF0C;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x7F51;&#x7EDC;&#x53D6;&#x5F97;&#x4E86;&#x8FC5;&#x901F;&#x7684;&#x53D1;&#x5C55;&#x8FDB;&#x6B65;&#xFF0C;&#x4EE3;&#x8868;&#x6027;&#x7F51;&#x7EDC;&#x5982;Faster R-CNN, YOLO&#xFF0C;Ssd&#x7B49;&#x90FD;&#x6709;&#x5F88;&#x597D;&#x7684;&#x8868;&#x73B0;&#x3002;&#x7EB5;&#x89C2;&#x6240;&#x6709;&#x7684;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x7F51;&#x7EDC;&#xFF0C;&#x90FD;&#x7ED5;&#x4E0D;&#x5F00;bounding box&#x7684;&#x5B58;&#x5728;&#xFF0C;bounding box&#x5305;&#x56F4;&#x56FE;&#x50CF;&#x7684;&#x76EE;&#x6807;&#x533A;&#x57DF;&#xFF0C;&#x4F5C;&#x4E3A;&#x6574;&#x4E2A;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x4E2D;&#x7684;&#x57FA;&#x672C;&#x5904;&#x7406;&#x5355;&#x5143;&#x3002;&#x57FA;&#x4E8E;&#x63D0;&#x53D6;&#x7684;bounding box&#xFF0C;&#x8FDB;&#x4E00;&#x6B65;&#x8FDB;&#x884C;&#x5206;&#x7C7B;&#x548C;&#x4F4D;&#x7F6E;&#x56DE;&#x5F52;&#x5904;&#x7406;&#x3002;bounding box&#x7684;&#x5E94;&#x7528;&#x5F88;&#x5927;&#x7A0B;&#x5EA6;&#x6E90;&#x4E8E;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x7684;&#x8BC4;&#x4EF7;&#x6307;&#x6807;&#xFF0C;&#x5373;&#x9884;&#x4F30;&#x6846;&#x548C;GT&#x6846;&#x7684;&#x91CD;&#x53E0;&#x8986;&#x76D6;&#x7A0B;&#x5EA6;&#x3002;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x539F;&#x56E0;&#x662F;&#x56E0;&#x4E3A;bounding box&#x8FD9;&#x79CD;&#x89C4;&#x5219;&#x7684;&#x5F62;&#x72B6;&#x5BF9;&#x7279;&#x5F81;&#x63D0;&#x53D6;&#x548C;&#x540E;&#x7EED;&#x7684;&#x6C60;&#x5316;&#x5904;&#x7406;&#x63D0;&#x4F9B;&#x4E86;&#x4FBF;&#x5229;&#x3002;&#x867D;&#x7136;&#x5982;&#x6B64;&#xFF0C;&#x4F46;&#x662F;bounding box&#x53EA;&#x662F;&#x5BF9;&#x76EE;&#x6807;&#x7684;&#x7C97;&#x7CD9;&#x63D0;&#x53D6;&#xFF0C;&#x8FD9;&#x79CD;&#x63D0;&#x53D6;&#x53EF;&#x80FD;&#x5E76;&#x4E0D;&#x7B26;&#x5408;&#x76EE;&#x6807;&#x7684;&#x59FF;&#x6001;&#x548C;&#x5F62;&#x72B6;&#xFF0C;&#x56E0;&#x6B64;&#x63D0;&#x53D6;&#x51FA;&#x6765;&#x7684;&#x5185;&#x5BB9;&#x52BF;&#x5FC5;&#x4F1A;&#x5305;&#x62EC;&#x4E00;&#x4E9B;&#x80CC;&#x666F;&#x4FE1;&#x606F;&#x7B49;&#x65E0;&#x5173;&#x4FE1;&#x606F;&#xFF0C;&#x8FD9;&#x53EF;&#x80FD;&#x4F1A;&#x4EA7;&#x751F;&#x8F83;&#x4F4E;&#x8D28;&#x91CF;&#x7684;&#x7279;&#x5F81;&#xFF0C;&#x4ECE;&#x800C;&#x5F71;&#x54CD;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x7684;&#x5206;&#x7C7B;&#x6027;&#x80FD;&#x3002;</p><p>&#x672C;&#x6587;&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x79CD;&#x5168;&#x65B0;&#x7684;&#x65B9;&#x6CD5;RepPoints&#xFF0C;&#x901A;&#x8FC7;&#x4E00;&#x7EC4;&#x70B9;&#x96C6;&#x63D0;&#x4F9B;&#x66F4;&#x7EC6;&#x7C92;&#x5EA6;&#x7684;&#x4F4D;&#x7F6E;&#x8868;&#x793A;&#x548C;&#x4FBF;&#x4E8E;&#x5206;&#x7C7B;&#x7684;&#x4FE1;&#x606F;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF1A;RepPoints&#x662F;&#x4E00;&#x7CFB;&#x5217;&#x70B9;&#x7EC4;&#x6210;&#x7684;&#x96C6;&#x5408;&#xFF0C;&#x8FD9;&#x4E9B;&#x70B9;&#x5206;&#x5E03;&#x5728;&#x76EE;&#x6807;&#x7684;&#x7A7A;&#x95F4;&#x8303;&#x56F4;&#x548C;&#x5177;&#x6709;&#x91CD;&#x8981;&#x8BED;&#x4E49;&#x4FE1;&#x606F;&#x7684;&#x4F4D;&#x7F6E;&#x3002;RepPoints&#x7684;&#x8BAD;&#x7EC3;&#x7531;&#x76EE;&#x6807;&#x5B9A;&#x4F4D;&#x548C;&#x8BC6;&#x522B;&#x5171;&#x540C;&#x9A71;&#x52A8;&#xFF0C;RepPoints&#x4E0E;GT bounding box&#x7D27;&#x5BC6;&#x7ED3;&#x5408;&#xFF0C;&#x5F15;&#x5BFC;&#x68C0;&#x6D4B;&#x5668;&#x6B63;&#x786E;&#x5206;&#x7C7B;&#x76EE;&#x6807;&#x3002;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x6446;&#x8131;&#x4E86;bounding box&#x7684;&#x9650;&#x5236;&#xFF0C;&#x66F4;&#x6CA1;&#x6709;&#x4E86;anchor&#x7684;&#x70E6;&#x607C;&#x3002;</p><p>&#x4E3A;&#x4E86;&#x8BC1;&#x660E;ReoPoints&#x7684;&#x5F3A;&#x5927;&#xFF0C;&#x672C;&#x6587;&#x5229;&#x7528;&#x4E00;&#x4E2A;&#x53EF;&#x53D8;&#x5F62;&#x5377;&#x79EF;&#x5B9E;&#x73B0;&#x4E86;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x7F51;&#x7EDC;&#xFF0C;&#x8BE5;&#x7F51;&#x7EDC;&#x5728;&#x4FDD;&#x6301;&#x7279;&#x5F81;&#x63D0;&#x53D6;&#x65B9;&#x4FBF;&#x7684;&#x540C;&#x65F6;&#xFF0C;&#x63D0;&#x4F9B;&#x4E86;&#x9002;&#x5408;&#x4E8E;&#x6307;&#x5BFC;&#x81EA;&#x9002;&#x5E94;&#x91C7;&#x6837;&#x7684;&#x8BC6;&#x522B;&#x53CD;&#x9988;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x4F1A;&#x6709;&#x8BE6;&#x7EC6;&#x4ECB;&#x7ECD;&#x3002;</p><p><img src="/2019/07/25/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;1/1.png" alt></p><h1 id="Related-Work"><a href="#Related-Work" class="headerlink" title="Related Work"></a>Related Work</h1><ul><li><p><strong>Bounding boxes for the object detection problem</strong><br>Bounding box&#x6D41;&#x884C;&#x7684;&#x4E3B;&#x8981;&#x539F;&#x56E0;&#x6709;&#xFF1A;</p><ul><li>Bounding box&#x53EF;&#x4EE5;&#x5F88;&#x4FBF;&#x6377;&#x7684;&#x8FDB;&#x884C;&#x6CE8;&#x91CA;&#x800C;&#x4E14;&#x51E0;&#x4E4E;&#x6CA1;&#x6709;&#x6B67;&#x4E49;&#xFF0C;&#x540C;&#x65F6;&#x5728;&#x6700;&#x540E;&#x7684;&#x8BA4;&#x77E5;&#x9636;&#x6BB5;&#x53EF;&#x4EE5;&#x63D0;&#x4F9B;&#x9AD8;&#x6548;&#x7684;&#x8FDB;&#x51C6;&#x5B9A;&#x4F4D;&#x3002;</li><li>&#x4E0D;&#x7BA1;&#x662F;&#x8FC7;&#x53BB;&#xFF0C;&#x8FD8;&#x662F;&#x5728;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x9886;&#x57DF;&#xFF0C;&#x51E0;&#x4E4E;&#x6240;&#x6709;&#x7684;&#x56FE;&#x7247;&#x7279;&#x5F81;&#x63D0;&#x53D6;&#x90FD;&#x662F;&#x4EE5;&#x7F51;&#x683C;&#x7684;&#x5F62;&#x5F0F;&#x4F5C;&#x4E3A;&#x8F93;&#x5165;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5E94;&#x7528;bounding box&#x53EF;&#x4EE5;&#x5F88;&#x65B9;&#x4FBF;&#x7684;&#x4FC3;&#x8FDB;&#x7279;&#x5F81;&#x63D0;&#x53D6;</li></ul></li><li><p><strong>Bounding boxes in modern object detectors</strong><br>bounding box&#x8868;&#x793A;&#x51FA;&#x73B0;&#x5728;&#x591A;&#x9636;&#x6BB5;&#x8BC6;&#x522B;&#x6A21;&#x5F0F;&#x7684;&#x51E0;&#x4E4E;&#x6240;&#x6709;&#x9636;&#x6BB5;&#xFF1A;1&#xFF09;&#x4F5C;&#x4E3A;anchors&#x3002;2&#xFF09;&#x4F5C;&#x4E3A;object proposals&#x3002;3&#xFF09;&#x4F5C;&#x4E3A;&#x6700;&#x7EC8;&#x7684;localization targets&#x3002;</p></li></ul><ul><li><p><strong>Other representations for object detection</strong><br>&#x6700;&#x8FD1;&#x7684;&#x76EE;&#x6807;&#x68C0;&#x6D4B;Bottom-up approaches&#xFF1A;</p><ul><li>CornerNet &#x9884;&#x6D4B;&#x5DE6;&#x4E0A;&#x4EE5;&#x53CA;&#x53F3;&#x4E0B;&#x7684;&#x89D2;&#x70B9;&#xFF0C;&#x5E94;&#x7528;&#x4E13;&#x95E8;&#x7684;grouping&#x65B9;&#x6CD5;&#x6765;&#x83B7;&#x5F97;object&#x7684;bounding box</li><li>ExtremeNet &#x5B9A;&#x4F4D;object&#x5728;x&#x548C;y&#x65B9;&#x5411;&#x4E0A;&#x7684;&#x6781;&#x70B9;&#x6765;&#x9884;&#x6D4B;bounding box</li></ul></li><li><p><strong>Deformation  modeling  in  object  recognition</strong></p></li></ul><h1 id="The-RepPoints-Representation"><a href="#The-RepPoints-Representation" class="headerlink" title="The RepPoints Representation"></a>The RepPoints Representation</h1><h2 id="Bounding-Box-Representation"><a href="#Bounding-Box-Representation" class="headerlink" title="Bounding Box Representation"></a>Bounding Box Representation</h2><ul><li><strong>Review of Multi-Stage Object Detectors</strong></li></ul><p><img src="/2019/07/25/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;1/2.png" alt></p><ul><li><strong>Bounding Box Regression</strong><br>&#x8FB9;&#x754C;&#x6846;&#x56DE;&#x5F52;&#x7684;&#x8FC7;&#x7A0B;&#x4E0D;&#x518D;&#x8D58;&#x8FF0;</li></ul><h2 id="RepPoints"><a href="#RepPoints" class="headerlink" title="RepPoints"></a>RepPoints</h2><p>&#x6B63;&#x5982;&#x524D;&#x9762;&#x8BA8;&#x8BBA;&#x7684;&#xFF0C;4-d&#x7684;bounding box&#x662F;&#x76EE;&#x6807;&#x4F4D;&#x7F6E;&#x7684;&#x7C97;&#x7CD9;&#x8868;&#x8FBE;&#xFF0C;&#x8FB9;&#x754C;&#x6846;&#x53EA;&#x8003;&#x8651;&#x76EE;&#x6807;&#x7684;&#x77E9;&#x5F62;&#x7A7A;&#x95F4;&#x8303;&#x56F4;&#xFF0C;&#x4E0D;&#x8003;&#x8651;&#x5F62;&#x72B6;&#x3001;&#x59FF;&#x6001;&#x548C;&#x8BED;&#x4E49;&#x4E0A;&#x91CD;&#x8981;&#x7684;&#x5C40;&#x90E8;&#x533A;&#x57DF;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x4F46;&#x6070;&#x6070;&#x662F;&#x8FD9;&#x4E9B;&#x533A;&#x57DF;&#xFF0C;&#x53EF;&#x7528;&#x4E8E;&#x66F4;&#x597D;&#x7684;&#x5B9A;&#x4F4D;&#x548C;&#x66F4;&#x597D;&#x7684;&#x5BF9;&#x8C61;&#x7279;&#x5F81;&#x63D0;&#x53D6;&#x3002;&#x4E3A;&#x4E86;&#x514B;&#x670D;&#x8FD9;&#x4E9B;&#x5C40;&#x9650;&#xFF0C;RepPoints&#x5EFA;&#x7ACB;&#x4E00;&#x7EC4;&#x81EA;&#x9002;&#x5E94;&#x7684;&#x7279;&#x5F81;&#x70B9;&#x96C6;$R\in\lbrace(x_{k},y_{k})\rbrace_{k=1}^{n}$&#x5176;&#x4E2D;n&#x662F;&#x6784;&#x6210;&#x70B9;&#x96C6;&#x7684;&#x70B9;&#x6570;&#x91CF;&#xFF0C;&#x5728;&#x672C;&#x6587;&#x4E2D;&#xFF0C;n&#x88AB;&#x8BBE;&#x7F6E;&#x4E3A;9&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x62BD;&#x6837;9&#x4E2A;&#x70B9;</p><ul><li><p><strong>RepPoints refinement</strong><br>&#x5BF9;R&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x70B9;&#x9884;&#x6D4B;&#x4E00;&#x7EC4;&#x504F;&#x79FB;$\lbrace(\Delta x_{k},\Delta y_{k})\rbrace_{k=1}^{n}$&#x3002;&#x56E0;&#x6B64;refinement&#x7684;&#x8FC7;&#x7A0B;&#x5C31;&#x53EF;&#x4EE5;&#x7B80;&#x5355;&#x7684;&#x8868;&#x793A;&#x4E3A;&#xFF1A;$R_{r}=\lbrace(x_{k}+\Delta x_{k},y_{k}+\Delta y_{k})\rbrace$</p></li><li><p><strong>Converting RepPoints to bounding box</strong><br>&#x5F97;&#x5230;&#x4E00;&#x7EC4;&#x70B9;&#x540E;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x628A;&#x8FD9;&#x4E9B;&#x70B9;&#x8F6C;&#x5316;&#x4E3A;bounding box ,&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x8F6C;&#x6362;&#x51FD;&#x6570;T:$R_{p}\rightarrow B_{p}$,<br>$R_{p}$&#x4E3A;object $P$&#x7684;RepPoints,$B_{p}$&#x8868;&#x793A;&#x4E00;&#x4E2A;pseudo box&#xFF0C;&#x8F6C;&#x6362;&#x51FD;&#x6570;&#x6709;&#x4E09;&#x79CD;&#x5F62;&#x5F0F;&#xFF1A;</p><ul><li>T=T1&#xFF1A;Min-max function. &#x5728;x,y&#x4E24;&#x4E2A;&#x5750;&#x6807;&#x8F74;&#x65B9;&#x5411;&#x4E0A;&#xFF0C;&#x5BFB;&#x627E;&#x70B9;&#x96C6;&#x4E2D;&#x7684;&#x6781;&#x503C;&#x70B9;&#x6765;&#x8868;&#x793A;bouning box&#xFF0C;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#xFF0C;&#x6709;&#x4E24;&#x4E2A;&#x70B9;&#x5C31;&#x80FD;&#x6784;&#x6210;&#x4E00;&#x4E2A;bounding box</li><li>T = T2: Partial min-max function. &#x5148;&#x4ECE;&#x70B9;&#x96C6;&#x4E2D;&#x9009;&#x53D6;&#x76F8;&#x5E94;&#x7684;&#x5B50;&#x96C6;&#xFF0C;&#x5C06;&#x9009;&#x53D6;&#x51FA;&#x7684;&#x70B9;&#x5229;&#x7528;&#xFF08;1&#xFF09;&#x5F0F;&#x65B9;&#x6CD5;&#xFF0C;&#x6784;&#x6210;bounding box</li><li>T = T3: Moment-based function.&#x8BA1;&#x7B97;&#x70B9;&#x96C6;&#x4E2D;&#x6240;&#x6709;&#x70B9;&#x7684;&#x5747;&#x503C;&#x4F5C;&#x4E3A;bounding box&#x7684;&#x4E2D;&#x5FC3;&#x70B9;&#x5750;&#x6807;&#xFF0C;&#x4E8C;&#x9636;&#x77E9;&#x4F5C;&#x4E3A;bounding box&#x7684;&#x5BBD;&#x548C;&#x9AD8;&#x3002;&#x201C;&#x77E9;&#x201D;&#x662F;&#x4E00;&#x7EC4;&#x70B9;&#x7EC4;&#x6210;&#x7684;&#x6A21;&#x578B;&#x7684;&#x7279;&#x5B9A;&#x7684;&#x6570;&#x91CF;&#x6D4B;&#x5EA6;&#xFF0C;&#x5173;&#x4E8E;&#x4E8C;&#x9636;&#x77E9;&#xFF0C;&#x53EF;&#x4EE5;&#x7B80;&#x5355;&#x7406;&#x89E3;&#x4E3A;&#x968F;&#x673A;&#x53D8;&#x91CF;&#x7684;&#x65B9;&#x5DEE;&#x3002;</li></ul></li><li><p><strong>Learning RepPoints</strong><br>RepPoints&#x7684;&#x5B66;&#x4E60;&#x662F;&#x76EE;&#x6807;&#x5B9A;&#x4F4D;&#x635F;&#x5931;&#x4EE5;&#x53CA;&#x76EE;&#x6807;&#x8BA4;&#x77E5;&#x635F;&#x5931;&#x5171;&#x540C;&#x9A71;&#x52A8;&#x7684;&#x3002;&#x5173;&#x4E8E;&#x76EE;&#x6807;&#x5B9A;&#x4F4D;&#x7684;&#x635F;&#x5931;&#xFF0C;&#x9700;&#x8981;&#x6211;&#x4EEC;&#x5229;&#x7528;&#x4E0A;&#x6587;&#x4E2D;&#x63D0;&#x5230;&#x7684;&#x8F6C;&#x6362;&#x51FD;&#x6570;T&#x751F;&#x6210;&#x4E00;&#x4E2A;pseudo box&#xFF0C;&#x7136;&#x540E;&#x5229;&#x7528;bounding box&#x548C;GT bounding box&#x8FDB;&#x884C;&#x8FD0;&#x7B97;&#x3002;&#x5728;&#x672C;&#x6587;&#x4E2D;&#xFF0C;&#x4F5C;&#x8005;&#x5728;&#x5DE6;&#x4E0A;&#x89D2;&#x548C;&#x53F3;&#x4E0B;&#x89D2;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;&#x8FD0;&#x7528;smooth L1&#xFF0C;&#x8FDB;&#x884C;&#x4F4D;&#x7F6E;&#x56DE;&#x5F52;&#x3002;</p></li></ul><h1 id="RPDet-an-Anchor-Free-Detector"><a href="#RPDet-an-Anchor-Free-Detector" class="headerlink" title="RPDet: an Anchor Free Detector"></a>RPDet: an Anchor Free Detector</h1><p>&#x4E3A;&#x4E86;&#x9A8C;&#x8BC1;&#x5229;&#x7528;RepPoints&#x4EE3;&#x66FF;bounding box&#x5019;&#x9009;&#x7684;&#x53EF;&#x884C;&#x548C;&#x5F3A;&#x5927;&#xFF0C;&#x8BBE;&#x8BA1;&#x4E86;&#x4E00;&#x4E2A;anchor-free&#x7684;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#xFF0C;&#x6574;&#x4E2A;&#x7F51;&#x7EDC;&#x662F;&#x7531;&#x4E24;&#x4E2A;&#x57FA;&#x4E8E;&#x53EF;&#x53D8;&#x5F62;&#x5377;&#x79EF;&#x7684;&#x8BC6;&#x522B;&#x9636;&#x6BB5;&#x7EC4;&#x6210;&#x3002;&#x4F5C;&#x8005;&#x5C06;RepPoints&#x548C;&#x53EF;&#x53D8;&#x5F62;&#x5377;&#x79EF;&#x5F88;&#x597D;&#x7684;&#x7ED3;&#x5408;&#x8D77;&#x6765;&#x3002;<br><img src="/2019/07/25/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;1/3.png" alt></p><p>&#x76EE;&#x6807;&#x8868;&#x793A;&#x7684;&#x6F14;&#x5316;&#x8FC7;&#x7A0B;&#xFF1A;<br><img src="/2019/07/25/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;1/4.png" alt></p><ul><li><p><strong>Center point based initial object representation</strong><br>&#x6211;&#x4EEC;&#x548C;YOLO&#x548C;DenseBox&#x4E00;&#x6837;&#x4F7F;&#x7528;&#x4E2D;&#x5FC3;&#x70B9;&#x4F5C;&#x4E3A;ojects&#x7684;&#x521D;&#x59CB;&#x8868;&#x793A;&#xFF0C;&#x4F7F;&#x4E4B;&#x6210;&#x4E3A;&#x4E00;&#x4E2A;anchor-free&#x7684;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x5668;&#x3002;&#x4E2D;&#x5FC3;&#x70B9;&#x8868;&#x793A;&#x7684;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x597D;&#x5904;&#x5C31;&#x662F;&#x5B83;&#x7684;&#x5047;&#x8BBE;&#x7A7A;&#x95F4;&#x76F8;&#x6BD4;&#x4E8E;anchor-based&#x66F4;tight&#x3002;</p></li><li><p><strong>Utilization  of  RepPoints</strong><br>the first set of RepPoints&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x5E38;&#x89C4;&#x7684;3*3&#x5377;&#x79EF;&#x5F97;&#x5230;&#xFF0C;&#x8FD9;&#x4E9B;RepPoints&#x7684;&#x5B66;&#x4E60;&#x7531;&#x4E24;&#x4E2A;objectives&#x9A71;&#x52A8;&#xFF1A;</p><ul><li>pseudo box&#x548C;ground-truth bbox&#x4E4B;&#x95F4;&#x7684;&#x5DE6;&#x4E0A;&#x4EE5;&#x53CA;&#x53F3;&#x4E0B;&#x89D2;&#x70B9;&#x7684;&#x8DDD;&#x79BB;loss</li><li>&#x968F;&#x540E;&#x9636;&#x6BB5;&#x7684;&#x8BA4;&#x77E5;loss<br>the second set of RepPoints&#x8868;&#x793A;&#x6700;&#x7EC8;&#x7684;object&#x5B9A;&#x4F4D;&#xFF0C;&#x53EA;&#x7531;&#x70B9;&#x4E4B;&#x95F4;&#x7684;&#x8DDD;&#x79BB;loss&#x9A71;&#x52A8;&#x3002;</li></ul></li><li><p><strong>Other details</strong><br>&#x4E0D;&#x518D;&#x53D9;&#x8FF0;</p></li></ul><h1 id="Deformable-Convolution"><a href="#Deformable-Convolution" class="headerlink" title="Deformable Convolution"></a>Deformable Convolution</h1><p>&#x7814;&#x7A76;&#x53D1;&#x73B0;&#xFF0C;&#x6807;&#x51C6;&#x5377;&#x79EF;&#x4E2D;&#x7684;&#x89C4;&#x5219;&#x91C7;&#x6837;&#x683C;&#x70B9;&#x91C7;&#x6837;&#x662F;&#x5BFC;&#x81F4;&#x7F51;&#x7EDC;&#x96BE;&#x4EE5;&#x9002;&#x5E94;&#x51E0;&#x4F55;&#x5F62;&#x53D8;&#x7684;&#x201C;&#x7F6A;&#x9B41;&#x7978;&#x9996;&#x201D;&#xFF0C;&#x4E3A;&#x4E86;&#x524A;&#x5F31;&#x8FD9;&#x4E2A;&#x9650;&#x5236;&#xFF0C;&#x5BF9;&#x5377;&#x79EF;&#x6838;&#x4E2D;&#x6BCF;&#x4E2A;&#x91C7;&#x6837;&#x70B9;&#x4E3A;&#x4F4D;&#x7F6E;&#x90FD;&#x589E;&#x52A0;&#x4E00;&#x4E2A;&#x504F;&#x79FB;&#x91CF;&#xFF0C;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x5728;&#x5F53;&#x524D;&#x4F4D;&#x7F6E;&#x9644;&#x8FD1;&#x968F;&#x610F;&#x91C7;&#x6837;&#x800C;&#x4E0D;&#x5C40;&#x9650;&#x4E8E;&#x89C4;&#x5219;&#x7684;&#x683C;&#x70B9;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#x662F;&#x5E38;&#x89C1;&#x7684;&#x91C7;&#x6837;&#x70B9;&#x548C;&#x53EF;&#x53D8;&#x5F62;&#x5377;&#x79EF;&#x91C7;&#x6837;&#x70B9;&#x7684;&#x5BF9;&#x6BD4;&#x3002;&#x5176;&#x4E2D;&#xFF08;a&#xFF09;&#x662F;&#x89C4;&#x5219;&#x7684;&#x91C7;&#x6837;&#x70B9;&#xFF0C;(b)(c)(d)&#x662F;&#x5728;&#x89C4;&#x5219;&#x91C7;&#x6837;&#x70B9;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#xFF0C;&#x52A0;&#x4E0A;&#x4E00;&#x4E2A;&#x504F;&#x79FB;&#x91CF;&#xFF0C;&#x4F7F;&#x5F97;&#x91C7;&#x6837;&#x70B9;&#x7684;&#x4F4D;&#x7F6E;&#x53D1;&#x751F;&#x53D8;&#x5316;</p><p><img src="/2019/07/25/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;1/5.png" alt></p><p>&#x53EF;&#x53D8;&#x5F62;&#x5377;&#x79EF;&#x7684;&#x76EE;&#x7684;&#x662F;&#x63D0;&#x5347;&#x5F62;&#x53D8;&#x7684;&#x5EFA;&#x6A21;&#x80FD;&#x529B;&#x3002;&#x901A;&#x8FC7;&#x53EF;&#x53D8;&#x5F62;&#x5377;&#x79EF;&#xFF08;deformable conv&#xFF09;&#x548C;&#x53EF;&#x53D8;&#x5F62;&#x611F;&#x5174;&#x8DA3;&#x533A;&#x57DF;&#x6C60;&#x5316;&#xFF08;deformable ROI Pooling&#xFF09;&#x8FD9;&#x4E24;&#x4E2A;&#x6A21;&#x5757;&#xFF0C;&#x57FA;&#x4E8E;&#x4E00;&#x4E2A;&#x5E73;&#x884C;&#x7F51;&#x7EDC;&#x5B66;&#x4E60;&#x4E00;&#x4E2A;&#x504F;&#x79FB;&#x91CF;&#xFF08;offset&#xFF09;&#xFF0C;&#x4F7F;&#x5F97;&#x5377;&#x79EF;&#x6838;&#x5728;feature map&#x4E0A;&#x7684;&#x91C7;&#x6837;&#x70B9;&#x53D1;&#x751F;&#x504F;&#x79FB;&#xFF0C;&#x96C6;&#x4E2D;&#x4E8E;&#x6211;&#x4EEC;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x533A;&#x57DF;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7528;&#x4E0B;&#x5217;&#x7F51;&#x7EDC;&#x7ED3;&#x6784;&#x6765;&#x770B;&#xFF1A;&#x4EE5;&#x4E00;&#x4E2A;feature map&#x4F5C;&#x4E3A;&#x8F93;&#x5165;&#xFF0C;&#x5E38;&#x89C4;&#x7684;&#x91C7;&#x6837;&#x70B9;&#x5982;&#x7EFF;&#x6846;&#x6240;&#x793A;&#xFF0C;&#x662F;&#x89C4;&#x5219;&#x4E14;&#x5C40;&#x9650;&#x7684;&#xFF0C;&#x800C;&#x53EF;&#x53D8;&#x5F62;&#x5377;&#x79EF;&#x7684;&#x505A;&#x6CD5;&#x662F;&#xFF0C;&#x589E;&#x52A0;&#x4E00;&#x8DEF;&#x7F51;&#x7EDC;&#xFF0C;&#x7ECF;&#x8FC7;&#x5377;&#x79EF;&#x4E4B;&#x540E;&#xFF0C;&#x8F93;&#x51FA;&#x4E00;&#x4E2A;&#x7EF4;&#x5EA6;&#x4E3A;2N&#x7684;map&#xFF0C;&#x5176;&#x4E2D;N&#x662F;&#x91C7;&#x6837;&#x70B9;&#x6570;&#x91CF;&#xFF0C;2N&#x662F;&#x8BF4;&#x660E;&#x5B66;&#x4E60;x,y&#x4E24;&#x4E2A;&#x65B9;&#x5411;&#x7684;&#x504F;&#x79FB;&#xFF0C;&#x8FD9;&#x6837;&#xFF0C;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E00;&#x4E2A;&#x539F;&#x59CB;&#x7684;&#x91C7;&#x6837;&#x70B9;&#xFF0C;&#x6211;&#x4EEC;&#x90FD;&#x5B66;&#x4E60;&#x5230;&#x4E86;&#x5B83;&#x5728;x,y&#x4E24;&#x4E2A;&#x65B9;&#x5411;&#x4E0A;&#x7684;&#x504F;&#x79FB;&#xFF0C;&#x5373;&#x4E0B;&#x56FE;offsets map&#xFF0C;&#x6307;&#x793A;&#x4E86;&#x539F;&#x59CB;&#x7684;&#x91C7;&#x6837;&#x70B9;&#x5728;&#x878D;&#x5408;x,y&#x4E24;&#x4E2A;&#x65B9;&#x5411;&#x7684;&#x504F;&#x79FB;&#x91CF;&#x540E;&#xFF0C;&#x6700;&#x7EC8;&#x7684;&#x504F;&#x79FB;&#x65B9;&#x5411;&#x3002;&#x7136;&#x540E;&#xFF0C;&#x5C06;&#x539F;&#x59CB;&#x91C7;&#x6837;&#x70B9;&#x4E0E;offset&#x5BF9;&#x5E94;&#x878D;&#x5408;&#xFF0C;&#x5F97;&#x5230;&#x6700;&#x7EC8;&#x91C7;&#x6837;&#x4F4D;&#x7F6E;&#xFF0C;&#x7ECF;&#x8FC7;&#x5377;&#x79EF;&#x8FD0;&#x7B97;&#xFF0C;&#x5F97;&#x5230;&#x8F93;&#x51FA;feature map&#x4E0A;&#x7684;&#x7ED3;&#x679C;&#x3002;</p><p><img src="&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;1//6.png" alt></p><p>&#x975E;&#x5E38;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x4E00;&#x4E2A;&#x70B9;&#x662F;&#xFF0C;&#x53EF;&#x53D8;&#x5F62;&#x5377;&#x79EF;&#x7684;&#x53EF;&#x53D8;&#x5F62;&#x4F53;&#x73B0;&#x5728;&#x91C7;&#x6837;&#x70B9;&#x4E0D;&#x662F;&#x5C40;&#x9650;&#x89C4;&#x5219;&#x7684;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5377;&#x79EF;&#x6838;&#x662F;&#x53EF;&#x53D8;&#x5F62;&#x7684;</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 目标检测 </tag>
            
            <tag> anchor-free </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
