<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>浅笑の博客</title>
  
  <subtitle>我们的征途是星辰大海</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zhengyujie.cn/"/>
  <updated>2019-08-24T02:57:27.220Z</updated>
  <id>http://zhengyujie.cn/</id>
  
  <author>
    <name>Zheng Yujie</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>小破站升级HTTPS</title>
    <link href="http://zhengyujie.cn/2019/08/24/%E5%8D%9A%E5%AE%A2%E5%8D%87%E7%BA%A7https/"/>
    <id>http://zhengyujie.cn/2019/08/24/博客升级https/</id>
    <published>2019-08-24T02:32:42.000Z</published>
    <updated>2019-08-24T02:57:27.220Z</updated>
    
    <content type="html"><![CDATA[<p>&#x4ECA;&#x5929;&#x5728;&#x4E86;&#x89E3;&#x5B8C;HTTP&#x548C;HTTPS&#x540E;&#xFF0C;&#x7ACB;&#x9A6C;&#x5C31;&#x5F00;&#x59CB;&#x7740;&#x624B;&#x5C06;&#x6211;&#x7684;&#x5C0F;&#x7834;&#x7AD9;&#x5347;&#x7EA7;&#x4E3A;HTTPS&#x3002;&#x800C;&#x4E14;chrome&#x6D4F;&#x89C8;&#x5668;&#x7F51;&#x5740;&#x680F;&#x91CC;&#x7684;&#x4E0D;&#x5B89;&#x5168;&#x4E09;&#x4E2A;&#x5B57;&#x5F3A;&#x70C8;&#x7684;&#x89E6;&#x53D1;&#x4E86;&#x6211;&#x7684;&#x5F3A;&#x8FEB;&#x75C7;&#xFF0C;&#x6362;&#x6210;&#x4E00;&#x628A;&#x7EFF;&#x9501;&#x4E0D;&#x662F;&#x7F8E;&#x6ECB;&#x6ECB;&#x3002;</p><a id="more"></a><h1 id="&#x83B7;&#x53D6;SSL&#x8BC1;&#x4E66;"><a href="#&#x83B7;&#x53D6;SSL&#x8BC1;&#x4E66;" class="headerlink" title="&#x83B7;&#x53D6;SSL&#x8BC1;&#x4E66;"></a>&#x83B7;&#x53D6;SSL&#x8BC1;&#x4E66;</h1><p>&#x7531;&#x4E8E;&#x6211;&#x7684;&#x57DF;&#x540D;&#x4EE5;&#x53CA;&#x670D;&#x52A1;&#x5668;&#x90FD;&#x662F;&#x5728;&#x963F;&#x91CC;&#x4E91;&#x4E0A;&#x4E70;&#x7684;&#xFF0C;&#x4E8E;&#x662F;&#x6211;&#x5C31;&#x5728;&#x963F;&#x91CC;&#x4E91;&#x4E0A;&#x6CE8;&#x518C;&#x4E86;&#x514D;&#x8D39;&#x7684;SSL&#x8BC1;&#x4E66;&#x3002;</p><p>&#x5177;&#x4F53;&#x8FC7;&#x7A0B;&#xFF1A;</p><ol><li>&#x8FDB;&#x5165;&#x963F;&#x91CC;&#x4E91;SSL&#x8BC1;&#x4E66;&#x754C;&#x9762;&#xFF0C;&#x70B9;&#x51FB;&#x53F3;&#x4E0A;&#x89D2;&#x7684;&#x8D2D;&#x4E70;&#x8BC1;&#x4E66;&#x3002;</li><li>&#x4F9D;&#x6B21;&#x70B9;&#x51FB; Symantec -&gt; &#x514D;&#x8D39;&#x578B;DV SSL -&gt; 1&#x4E2A;&#x57DF;&#x540D; -&gt; &#x4E00;&#x5E74; &#x5373;&#x53EF;&#x8D2D;&#x4E70;&#x514D;&#x8D39;&#x7684;SSL&#x8BC1;&#x4E66;&#x3002;</li><li>&#x6CE8;&#x518C;&#x8BC1;&#x4E66;&#xFF0C;&#x8865;&#x5168;&#x4FE1;&#x606F;&#x7B49;&#x5F85;&#x5BA1;&#x6838;&#x901A;&#x8FC7;&#x5C31;&#x597D;&#x4E86;&#x3002;</li></ol><h1 id="nginx&#x914D;&#x7F6E;"><a href="#nginx&#x914D;&#x7F6E;" class="headerlink" title="nginx&#x914D;&#x7F6E;"></a>nginx&#x914D;&#x7F6E;</h1><ol><li>&#x5BA1;&#x6838;&#x901A;&#x8FC7;&#x540E;&#x70B9;&#x51FB;&#x4E0B;&#x8F7D;&#x8BC1;&#x4E66;for Nginx</li><li>&#x5728;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x5B89;&#x88C5;nginx&#x7684;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;<code>cert</code>&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x6211;&#x7684;&#x8DEF;&#x5F84;&#x4E3A;<code>/etc/nginx/cert</code></li><li>&#x5C06;&#x4E0B;&#x8F7D;&#x7684;&#x8BC1;&#x4E66;&#x89E3;&#x538B;&#x540E;&#x5F97;&#x5230;&#x7684;<code>.pem</code>&#x6587;&#x4EF6;&#x4EE5;&#x53CA;<code>.key</code>&#x6587;&#x4EF6;&#xFF0C;&#x4F20;&#x5230;&#x4E0A;&#x4E00;&#x6B65;&#x65B0;&#x5EFA;&#x7684;<code>cert</code>&#x6587;&#x4EF6;&#x5939;&#x4E0B;</li><li><p>&#x6253;&#x5F00;nginx&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x6211;&#x7684;&#x662F;<code>/etc/nginx/sites-available</code>&#x4E0B;&#x7684;<code>default</code>&#x6587;&#x4EF6;&#xFF0C;&#x6DFB;&#x52A0;&#x4EE5;&#x4E0B;&#x4EE3;&#x7801;&#xFF1A;</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">server {</span><br><span class="line">    listen 443;</span><br><span class="line">    server_name localhost; # &#x8FD9;&#x91CC;&#x53EF;&#x4EE5;&#x6539;&#x6210;&#x4F60;&#x7684;&#x57DF;&#x540D;</span><br><span class="line">    ssl on;</span><br><span class="line">    root html;  # &#x8FD9;&#x91CC;&#x6539;&#x6210;&#x4F60;&#x7684;&#x535A;&#x5BA2;&#x7F51;&#x7AD9;&#x7684;&#x6839;&#x76EE;&#x5F55;</span><br><span class="line">    index index.html index.htm;</span><br><span class="line">    ssl_certificate   cert/*.pem; # &#x6539;&#x6210;&#x4F60;&#x81EA;&#x5DF1;&#x7684;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line">    ssl_certificate_key  cert/*.key; # &#x6539;&#x6210;&#x4F60;&#x81EA;&#x5DF1;&#x7684;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line">    ssl_session_timeout 5m;</span><br><span class="line">    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">    location / {</span><br><span class="line">        root html; # &#x8FD9;&#x91CC;&#x6539;&#x6210;&#x4F60;&#x7684;&#x535A;&#x5BA2;&#x7F51;&#x7AD9;&#x7684;&#x6839;&#x76EE;&#x5F55;</span><br><span class="line">        index index.html index.htm;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li><li><p>&#x91CD;&#x542F;nginx</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service nginx restart</span><br></pre></td></tr></table></figure></li><li><p>&#x914D;&#x7F6E;&#x5B8C;&#x6210;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;HTTPS&#x8BBF;&#x95EE;&#x535A;&#x5BA2;&#x4E86;</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x4ECA;&amp;#x5929;&amp;#x5728;&amp;#x4E86;&amp;#x89E3;&amp;#x5B8C;HTTP&amp;#x548C;HTTPS&amp;#x540E;&amp;#xFF0C;&amp;#x7ACB;&amp;#x9A6C;&amp;#x5C31;&amp;#x5F00;&amp;#x59CB;&amp;#x7740;&amp;#x624B;&amp;#x5C06;&amp;#x6211;&amp;#x7684;&amp;#x5C0F;&amp;#x7834;&amp;#x7AD9;&amp;#x5347;&amp;#x7EA7;&amp;#x4E3A;HTTPS&amp;#x3002;&amp;#x800C;&amp;#x4E14;chrome&amp;#x6D4F;&amp;#x89C8;&amp;#x5668;&amp;#x7F51;&amp;#x5740;&amp;#x680F;&amp;#x91CC;&amp;#x7684;&amp;#x4E0D;&amp;#x5B89;&amp;#x5168;&amp;#x4E09;&amp;#x4E2A;&amp;#x5B57;&amp;#x5F3A;&amp;#x70C8;&amp;#x7684;&amp;#x89E6;&amp;#x53D1;&amp;#x4E86;&amp;#x6211;&amp;#x7684;&amp;#x5F3A;&amp;#x8FEB;&amp;#x75C7;&amp;#xFF0C;&amp;#x6362;&amp;#x6210;&amp;#x4E00;&amp;#x628A;&amp;#x7EFF;&amp;#x9501;&amp;#x4E0D;&amp;#x662F;&amp;#x7F8E;&amp;#x6ECB;&amp;#x6ECB;&amp;#x3002;&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://zhengyujie.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Hexo" scheme="http://zhengyujie.cn/tags/Hexo/"/>
    
      <category term="HTTP" scheme="http://zhengyujie.cn/tags/HTTP/"/>
    
      <category term="HTTPS" scheme="http://zhengyujie.cn/tags/HTTPS/"/>
    
      <category term="小破站记事" scheme="http://zhengyujie.cn/tags/%E5%B0%8F%E7%A0%B4%E7%AB%99%E8%AE%B0%E4%BA%8B/"/>
    
      <category term="阿里云" scheme="http://zhengyujie.cn/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="nginx" scheme="http://zhengyujie.cn/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>HTTP和HTTPS学习笔记</title>
    <link href="http://zhengyujie.cn/2019/08/24/http%E5%92%8Chttps/"/>
    <id>http://zhengyujie.cn/2019/08/24/http和https/</id>
    <published>2019-08-24T01:44:53.000Z</published>
    <updated>2019-08-24T02:25:21.515Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTTP&#x548C;HTTPS"><a href="#HTTP&#x548C;HTTPS" class="headerlink" title="HTTP&#x548C;HTTPS"></a>HTTP&#x548C;HTTPS</h1><h2 id="&#x4EC0;&#x4E48;&#x662F;HTTP"><a href="#&#x4EC0;&#x4E48;&#x662F;HTTP" class="headerlink" title="&#x4EC0;&#x4E48;&#x662F;HTTP"></a>&#x4EC0;&#x4E48;&#x662F;HTTP</h2><p>&#x8D85;&#x6587;&#x672C;&#x4F20;&#x8F93;&#x534F;&#x8BAE;&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x57FA;&#x4E8E;&#x8BF7;&#x6C42;&#x4E0E;&#x54CD;&#x5E94;&#xFF0C;&#x65E0;&#x72B6;&#x6001;&#x7684;&#xFF0C;&#x5E94;&#x7528;&#x5C42;&#x7684;&#x534F;&#x8BAE;&#xFF0C;&#x5E38;&#x57FA;&#x4E8E;TCP/IP&#x534F;&#x8BAE;&#x4F20;&#x8F93;&#x6570;&#x636E;&#xFF0C;&#x4E92;&#x8054;&#x7F51;&#x4E0A;&#x5E94;&#x7528;&#x6700;&#x4E3A;&#x5E7F;&#x6CDB;&#x7684;&#x4E00;&#x79CD;&#x7F51;&#x7EDC;&#x534F;&#x8BAE;,&#x6240;&#x6709;&#x7684;WWW&#x6587;&#x4EF6;&#x90FD;&#x5FC5;&#x987B;&#x9075;&#x5B88;&#x8FD9;&#x4E2A;&#x6807;&#x51C6;&#x3002;&#x8BBE;&#x8BA1;HTTP&#x7684;&#x521D;&#x8877;&#x662F;&#x4E3A;&#x4E86;&#x63D0;&#x4F9B;&#x4E00;&#x79CD;&#x53D1;&#x5E03;&#x548C;&#x63A5;&#x6536;HTML&#x9875;&#x9762;&#x7684;&#x65B9;&#x6CD5;&#x3002;</p><h2 id="&#x4EC0;&#x4E48;&#x662F;HTTPS"><a href="#&#x4EC0;&#x4E48;&#x662F;HTTPS" class="headerlink" title="&#x4EC0;&#x4E48;&#x662F;HTTPS"></a>&#x4EC0;&#x4E48;&#x662F;HTTPS</h2><p>&#x300A;&#x56FE;&#x89E3;HTTP&#x300B;&#x8FD9;&#x672C;&#x4E66;&#x4E2D;&#x66FE;&#x63D0;&#x8FC7;HTTPS&#x662F;&#x8EAB;&#x62AB;SSL&#x5916;&#x58F3;&#x7684;HTTP&#x3002;HTTPS&#x662F;&#x4E00;&#x79CD;&#x901A;&#x8FC7;&#x8BA1;&#x7B97;&#x673A;&#x7F51;&#x7EDC;&#x8FDB;&#x884C;&#x5B89;&#x5168;&#x901A;&#x4FE1;&#x7684;&#x4F20;&#x8F93;&#x534F;&#x8BAE;&#xFF0C;&#x7ECF;&#x7531;HTTP&#x8FDB;&#x884C;&#x901A;&#x4FE1;&#xFF0C;&#x5229;&#x7528;SSL/TLS&#x5EFA;&#x7ACB;&#x5168;&#x4FE1;&#x9053;&#xFF0C;&#x52A0;&#x5BC6;&#x6570;&#x636E;&#x5305;&#x3002;HTTPS&#x4F7F;&#x7528;&#x7684;&#x4E3B;&#x8981;&#x76EE;&#x7684;&#x662F;&#x63D0;&#x4F9B;&#x5BF9;&#x7F51;&#x7AD9;&#x670D;&#x52A1;&#x5668;&#x7684;&#x8EAB;&#x4EFD;&#x8BA4;&#x8BC1;&#xFF0C;&#x540C;&#x65F6;&#x4FDD;&#x62A4;&#x4EA4;&#x6362;&#x6570;&#x636E;&#x7684;&#x9690;&#x79C1;&#x4E0E;&#x5B8C;&#x6574;&#x6027;&#x3002;</p><a id="more"></a><h2 id="&#x4EC0;&#x4E48;&#x662F;SSL-TLS"><a href="#&#x4EC0;&#x4E48;&#x662F;SSL-TLS" class="headerlink" title="&#x4EC0;&#x4E48;&#x662F;SSL/TLS"></a>&#x4EC0;&#x4E48;&#x662F;SSL/TLS</h2><p>SSL &#x662F;&#x201C;Secure Sockets Layer&#x201D;&#x7684;&#x7F29;&#x5199;&#xFF0C;&#x4E2D;&#x6587;&#x53EB;&#x505A;&#x201C;&#x5B89;&#x5168;&#x5957;&#x63A5;&#x5C42;&#x201D;&#x3002;&#x539F;&#x5148;&#x4E92;&#x8054;&#x7F51;&#x4E0A;&#x4F7F;&#x7528;&#x7684; HTTP &#x534F;&#x8BAE;&#x662F;&#x660E;&#x6587;&#x7684;&#xFF0C;&#x5B58;&#x5728;&#x5F88;&#x591A;&#x7F3A;&#x70B9;&#x2014;&#x2014;&#x6BD4;&#x5982;&#x4F20;&#x8F93;&#x5185;&#x5BB9;&#x4F1A;&#x88AB;&#x5077;&#x7AA5;&#xFF08;&#x55C5;&#x63A2;&#xFF09;&#x548C;&#x7BE1;&#x6539;&#x3002;&#x53D1;&#x660E; SSL &#x534F;&#x8BAE;&#xFF0C;&#x5C31;&#x662F;&#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x8FD9;&#x4E9B;&#x95EE;&#x9898;&#x3002;IETF &#x5728;1999&#x5E74;&#x628A; SSL &#x6807;&#x51C6;&#x5316;&#x3002;&#x6807;&#x51C6;&#x5316;&#x4E4B;&#x540E;&#x7684;&#x540D;&#x79F0;&#x6539;&#x4E3A; TLS&#xFF08;&#x662F;&#x201C;Transport Layer Security&#x201D;&#x7684;&#x7F29;&#x5199;&#xFF09;&#xFF0C;&#x4E2D;&#x6587;&#x53EB;&#x505A;&#x201C;&#x4F20;&#x8F93;&#x5C42;&#x5B89;&#x5168;&#x534F;&#x8BAE;&#x201D;&#x3002;&#x6240;&#x4EE5;&#x8FD9;&#x4E24;&#x8005;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x540C;&#x4E00;&#x79CD;&#x534F;&#x8BAE;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x662F;&#x5728;&#x4E0D;&#x540C;&#x9636;&#x6BB5;&#x7684;&#x4E0D;&#x540C;&#x79F0;&#x547C;&#x3002;<br>SSL&#x534F;&#x8BAE;&#x4F4D;&#x4E8E;TCP/IP&#x534F;&#x8BAE;&#x4E0E;&#x5404;&#x79CD;&#x5E94;&#x7528;&#x5C42;&#x534F;&#x8BAE;&#x4E4B;&#x95F4;&#xFF0C;&#x4E3A;&#x6570;&#x636E;&#x901A;&#x8BAF;&#x63D0;&#x4F9B;&#x5B89;&#x5168;&#x652F;&#x6301;&#x3002;SSL&#x534F;&#x8BAE;&#x53EF;&#x5206;&#x4E3A;&#x4E24;&#x5C42;&#xFF1A;</p><ul><li>SSL&#x8BB0;&#x5F55;&#x534F;&#x8BAE;&#xFF08;SSL Record Protocol&#xFF09;&#xFF1A;&#x5B83;&#x5EFA;&#x7ACB;&#x5728;&#x53EF;&#x9760;&#x7684;&#x4F20;&#x8F93;&#x534F;&#x8BAE;&#xFF08;&#x5982;TCP&#xFF09;&#x4E4B;&#x4E0A;&#xFF0C;&#x4E3A;&#x9AD8;&#x5C42;&#x534F;&#x8BAE;&#x63D0;&#x4F9B;&#x6570;&#x636E;&#x5C01;&#x88C5;&#x3001;&#x538B;&#x7F29;&#x3001;&#x52A0;&#x5BC6;&#x7B49;&#x57FA;&#x672C;&#x529F;&#x80FD;&#x7684;&#x652F;&#x6301;&#x3002;</li><li>SSL&#x63E1;&#x624B;&#x534F;&#x8BAE;&#xFF08;SSL Handshake Protocol&#xFF09;&#xFF1A;&#x5B83;&#x5EFA;&#x7ACB;&#x5728;SSL&#x8BB0;&#x5F55;&#x534F;&#x8BAE;&#x4E4B;&#x4E0A;&#xFF0C;&#x7528;&#x4E8E;&#x5728;&#x5B9E;&#x9645;&#x7684;&#x6570;&#x636E;&#x4F20;&#x8F93;&#x5F00;&#x59CB;&#x524D;&#xFF0C;&#x901A;&#x8BAF;&#x53CC;&#x65B9;&#x8FDB;&#x884C;&#x8EAB;&#x4EFD;&#x8BA4;&#x8BC1;&#x3001;&#x534F;&#x5546;&#x52A0;&#x5BC6;&#x7B97;&#x6CD5;&#x3001;&#x4EA4;&#x6362;&#x52A0;&#x5BC6;&#x5BC6;&#x94A5;&#x7B49;&#x3002;</li></ul><h1 id="HTTP-VS-HTTPS"><a href="#HTTP-VS-HTTPS" class="headerlink" title="HTTP VS HTTPS"></a>HTTP VS HTTPS</h1><h2 id="HTTP&#x7684;&#x7279;&#x70B9;"><a href="#HTTP&#x7684;&#x7279;&#x70B9;" class="headerlink" title="HTTP&#x7684;&#x7279;&#x70B9;"></a>HTTP&#x7684;&#x7279;&#x70B9;</h2><ol><li>&#x65E0;&#x72B6;&#x6001;&#xFF1A;&#x534F;&#x8BAE;&#x5BF9;&#x5BA2;&#x6237;&#x7AEF;&#x6CA1;&#x6709;&#x72B6;&#x6001;&#x5B58;&#x50A8;&#xFF0C;&#x5BF9;&#x4E8B;&#x7269;&#x5904;&#x7406;&#x6CA1;&#x6709;&#x201C;&#x8BB0;&#x5FC6;&#x201D;&#x80FD;&#x529B;&#xFF0C;&#x6BD4;&#x5982;&#x8BBF;&#x95EE;&#x4E00;&#x4E2A;&#x7F51;&#x7AD9;&#x9700;&#x8981;&#x53CD;&#x590D;&#x8FDB;&#x884C;&#x767B;&#x5F55;&#x64CD;&#x4F5C;</li><li>&#x65E0;&#x8FDE;&#x63A5;&#xFF1A;HTTP/1.1&#x4E4B;&#x524D;&#xFF0C;&#x7531;&#x4E8E;&#x65E0;&#x72B6;&#x6001;&#x7279;&#x70B9;&#xFF0C;&#x6BCF;&#x6B21;&#x8BF7;&#x6C42;&#x9700;&#x8981;&#x901A;&#x8FC7;TCP&#x4E09;&#x6B21;&#x63E1;&#x624B;&#x56DB;&#x6B21;&#x6325;&#x624B;&#xFF0C;&#x548C;&#x670D;&#x52A1;&#x5668;&#x91CD;&#x65B0;&#x5EFA;&#x7ACB;&#x8FDE;&#x63A5;&#x3002;&#x6BD4;&#x5982;&#x67D0;&#x4E2A;&#x5BA2;&#x6237;&#x673A;&#x5728;&#x77ED;&#x65F6;&#x95F4;&#x591A;&#x6B21;&#x8BF7;&#x6C42;&#x540C;&#x4E00;&#x4E2A;&#x8D44;&#x6E90;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x5E76;&#x4E0D;&#x80FD;&#x533A;&#x522B;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x54CD;&#x5E94;&#x8FC7;&#x7528;&#x6237;&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x6240;&#x4EE5;&#x6BCF;&#x6B21;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x54CD;&#x5E94;&#x8BF7;&#x6C42;&#xFF0C;&#x9700;&#x8981;&#x8017;&#x8D39;&#x4E0D;&#x5FC5;&#x8981;&#x7684;&#x65F6;&#x95F4;&#x548C;&#x6D41;&#x91CF;&#x3002;</li><li>&#x57FA;&#x4E8E;&#x8BF7;&#x6C42;&#x548C;&#x54CD;&#x5E94;&#xFF1A;&#x57FA;&#x672C;&#x7684;&#x7279;&#x6027;&#xFF0C;&#x7531;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x8D77;&#x8BF7;&#x6C42;&#xFF0C;&#x670D;&#x52A1;&#x7AEF;&#x54CD;&#x5E94;</li><li>&#x7B80;&#x5355;&#x5FEB;&#x901F;&#x3001;&#x7075;&#x6D3B;</li><li>&#x901A;&#x4FE1;&#x4F7F;&#x7528;&#x660E;&#x6587;&#x3001;&#x8BF7;&#x6C42;&#x548C;&#x54CD;&#x5E94;&#x4E0D;&#x4F1A;&#x5BF9;&#x901A;&#x4FE1;&#x65B9;&#x8FDB;&#x884C;&#x786E;&#x8BA4;&#x3001;&#x65E0;&#x6CD5;&#x4FDD;&#x62A4;&#x6570;&#x636E;&#x7684;&#x5B8C;&#x6574;&#x6027;</li></ol><h2 id="HTTPS&#x7684;&#x7279;&#x70B9;"><a href="#HTTPS&#x7684;&#x7279;&#x70B9;" class="headerlink" title="HTTPS&#x7684;&#x7279;&#x70B9;"></a>HTTPS&#x7684;&#x7279;&#x70B9;</h2><ol><li>&#x5185;&#x5BB9;&#x52A0;&#x5BC6;&#xFF1A;&#x91C7;&#x7528;&#x6DF7;&#x5408;&#x52A0;&#x5BC6;&#x6280;&#x672F;&#xFF0C;&#x4E2D;&#x95F4;&#x8005;&#x65E0;&#x6CD5;&#x76F4;&#x63A5;&#x67E5;&#x770B;&#x660E;&#x6587;&#x5185;&#x5BB9;</li><li>&#x9A8C;&#x8BC1;&#x8EAB;&#x4EFD;&#xFF1A;&#x901A;&#x8FC7;&#x8BC1;&#x4E66;&#x8BA4;&#x8BC1;&#x5BA2;&#x6237;&#x7AEF;&#x8BBF;&#x95EE;&#x7684;&#x662F;&#x81EA;&#x5DF1;&#x7684;&#x670D;&#x52A1;&#x5668;</li><li>&#x4FDD;&#x62A4;&#x6570;&#x636E;&#x5B8C;&#x6574;&#x6027;&#xFF1A;&#x9632;&#x6B62;&#x4F20;&#x8F93;&#x7684;&#x5185;&#x5BB9;&#x88AB;&#x4E2D;&#x95F4;&#x4EBA;&#x5192;&#x5145;&#x6216;&#x8005;&#x7BE1;&#x6539;</li></ol><h1 id="&#x5173;&#x4E8E;&#x6DF7;&#x5408;&#x52A0;&#x5BC6;&#x6280;&#x672F;"><a href="#&#x5173;&#x4E8E;&#x6DF7;&#x5408;&#x52A0;&#x5BC6;&#x6280;&#x672F;" class="headerlink" title="&#x5173;&#x4E8E;&#x6DF7;&#x5408;&#x52A0;&#x5BC6;&#x6280;&#x672F;"></a>&#x5173;&#x4E8E;&#x6DF7;&#x5408;&#x52A0;&#x5BC6;&#x6280;&#x672F;</h1><p>&#x6DF7;&#x5408;&#x52A0;&#x5BC6;&#x7ED3;&#x5408;&#x975E;&#x5BF9;&#x79F0;&#x52A0;&#x5BC6;&#x548C;&#x5BF9;&#x79F0;&#x52A0;&#x5BC6;&#x6280;&#x672F;&#x3002;</p><ul><li>&#x5BF9;&#x79F0;&#x5BC6;&#x94A5;&#x52A0;&#x5BC6;&#xFF0C;&#x53C8;&#x79F0;&#x79C1;&#x94A5;&#x52A0;&#x5BC6;&#xFF0C;&#x5373;&#x4FE1;&#x606F;&#x7684;&#x53D1;&#x9001;&#x65B9;&#x548C;&#x63A5;&#x6536;&#x65B9;&#x7528;&#x540C;&#x4E00;&#x4E2A;&#x5BC6;&#x94A5;&#x53BB;&#x52A0;&#x5BC6;&#x548C;&#x89E3;&#x5BC6;&#x6570;&#x636E;&#x3002;&#x5B83;&#x7684;&#x6700;&#x5927;&#x4F18;&#x52BF;&#x662F;&#x52A0;/&#x89E3;&#x5BC6;&#x901F;&#x5EA6;&#x5FEB;&#xFF0C;&#x9002;&#x5408;&#x4E8E;&#x5BF9;&#x5927;&#x6570;&#x636E;&#x91CF;&#x8FDB;&#x884C;&#x52A0;&#x5BC6;&#xFF0C;&#x4F46;&#x5BC6;&#x94A5;&#x7BA1;&#x7406;&#x56F0;&#x96BE;&#x3002;</li><li>&#x975E;&#x5BF9;&#x79F0;&#x5BC6;&#x94A5;&#x52A0;&#x5BC6;&#xFF0C;&#x53C8;&#x79F0;&#x516C;&#x94A5;&#x52A0;&#x5BC6;&#xFF0C;&#x5B83;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x4E00;&#x5BF9;&#x5BC6;&#x94A5;&#x6765;&#x5206;&#x522B;&#x5B8C;&#x6210;&#x52A0;&#x5BC6;&#x548C;&#x89E3;&#x5BC6;&#x64CD;&#x4F5C;&#xFF0C;&#x4E00;&#x4E2A;&#x516C;&#x5F00;&#x53D1;&#x5E03;&#xFF0C;&#x5373;&#x516C;&#x5F00;&#x5BC6;&#x94A5;&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x7531;&#x7528;&#x6237;&#x81EA;&#x5DF1;&#x79D8;&#x5BC6;&#x4FDD;&#x5B58;&#xFF0C;&#x5373;&#x79C1;&#x7528;&#x5BC6;&#x94A5;&#x3002;&#x4FE1;&#x606F;&#x53D1;&#x9001;&#x8005;&#x7528;&#x516C;&#x5F00;&#x5BC6;&#x94A5;&#x53BB;&#x52A0;&#x5BC6;&#xFF0C;&#x800C;&#x4FE1;&#x606F;&#x63A5;&#x6536;&#x8005;&#x5219;&#x7528;&#x79C1;&#x7528;&#x5BC6;&#x94A5;&#x53BB;&#x89E3;&#x5BC6;&#x3002;</li></ul><p>&#x5BA2;&#x6237;&#x7AEF;&#x4F7F;&#x7528;&#x5BF9;&#x79F0;&#x52A0;&#x5BC6;&#x751F;&#x6210;&#x5BC6;&#x94A5;&#x5BF9;&#x4F20;&#x8F93;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x52A0;&#x5BC6;&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;&#x975E;&#x5BF9;&#x79F0;&#x52A0;&#x5BC6;&#x7684;&#x516C;&#x94A5;&#x518D;&#x5BF9;&#x79D8;&#x94A5;&#x8FDB;&#x884C;&#x52A0;&#x5BC6;&#xFF0C;&#x6240;&#x4EE5;&#x7F51;&#x7EDC;&#x4E0A;&#x4F20;&#x8F93;&#x7684;&#x6570;&#x636E;&#x662F;&#x88AB;&#x79D8;&#x94A5;&#x52A0;&#x5BC6;&#x7684;&#x5BC6;&#x6587;&#x548C;&#x7528;&#x516C;&#x94A5;&#x52A0;&#x5BC6;&#x540E;&#x7684;&#x79D8;&#x5BC6;&#x79D8;&#x94A5;&#xFF0C;&#x56E0;&#x6B64;&#x5373;&#x4F7F;&#x88AB;&#x9ED1;&#x5BA2;&#x622A;&#x53D6;&#xFF0C;&#x7531;&#x4E8E;&#x6CA1;&#x6709;&#x79C1;&#x94A5;&#xFF0C;&#x65E0;&#x6CD5;&#x83B7;&#x53D6;&#x5230;&#x52A0;&#x5BC6;&#x660E;&#x6587;&#x7684;&#x79D8;&#x94A5;&#xFF0C;&#x4FBF;&#x65E0;&#x6CD5;&#x83B7;&#x53D6;&#x5230;&#x660E;&#x6587;&#x6570;&#x636E;&#x3002;</p><h1 id="SSL-TLS&#x534F;&#x8BAE;&#x57FA;&#x672C;&#x539F;&#x7406;"><a href="#SSL-TLS&#x534F;&#x8BAE;&#x57FA;&#x672C;&#x539F;&#x7406;" class="headerlink" title="SSL/TLS&#x534F;&#x8BAE;&#x57FA;&#x672C;&#x539F;&#x7406;"></a>SSL/TLS&#x534F;&#x8BAE;&#x57FA;&#x672C;&#x539F;&#x7406;</h1><p>SSL/TLS&#x534F;&#x8BAE;&#x7684;&#x57FA;&#x672C;&#x601D;&#x8DEF;&#x662F;&#x91C7;&#x7528;&#x516C;&#x94A5;&#x52A0;&#x5BC6;&#x6CD5;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x5148;&#x5411;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x7D22;&#x8981;&#x516C;&#x94A5;&#xFF0C;&#x7136;&#x540E;&#x7528;&#x516C;&#x94A5;&#x52A0;&#x5BC6;&#x4FE1;&#x606F;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x6536;&#x5230;&#x5BC6;&#x6587;&#x540E;&#xFF0C;&#x7528;&#x81EA;&#x5DF1;&#x7684;&#x79C1;&#x94A5;&#x89E3;&#x5BC6;</p><ul><li>&#x4E3A;&#x4E86;&#x4FDD;&#x8BC1;&#x516C;&#x94A5;&#x4E0D;&#x88AB;&#x7BE1;&#x6539;&#xFF0C;&#x5C06;&#x516C;&#x94A5;&#x653E;&#x5728;&#x6570;&#x5B57;&#x8BC1;&#x4E66;&#x4E2D;&#xFF0C;&#x53EA;&#x8981;&#x8BC1;&#x4E66;&#x662F;&#x53EF;&#x4FE1;&#x7684;&#xFF0C;&#x516C;&#x94A5;&#x5C31;&#x662F;&#x53EF;&#x4FE1;&#x7684;&#x3002;</li><li>&#x4E3A;&#x4E86;&#x51CF;&#x5C11;&#x8FD0;&#x7B97;&#x91CF;&#x91CF;&#xFF0C;&#x6BCF;&#x4E00;&#x6B21;&#x5BF9;&#x8BDD;&#xFF08;session&#xFF09;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x548C;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x90FD;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x201D;&#x5BF9;&#x8BDD;&#x5BC6;&#x94A5;&#x201D;&#xFF08;session key&#xFF09;&#xFF0C;&#x7528;&#x5B83;&#x6765;&#x52A0;&#x5BC6;&#x4FE1;&#x606F;&#x3002;&#x7531;&#x4E8E;&#x201D;&#x5BF9;&#x8BDD;&#x5BC6;&#x94A5;&#x201D;&#x662F;&#x5BF9;&#x79F0;&#x52A0;&#x5BC6;&#xFF0C;&#x6240;&#x4EE5;&#x8FD0;&#x7B97;&#x901F;&#x5EA6;&#x975E;&#x5E38;&#x5FEB;&#xFF0C;&#x800C;&#x670D;&#x52A1;&#x5668;&#x516C;&#x94A5;&#x53EA;&#x7528;&#x4E8E;&#x52A0;&#x5BC6;&#x201D;&#x5BF9;&#x8BDD;&#x5BC6;&#x94A5;&#x201D;&#x672C;&#x8EAB;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x51CF;&#x5C11;&#x4E86;&#x52A0;&#x5BC6;&#x8FD0;&#x7B97;&#x7684;&#x6D88;&#x8017;&#x65F6;&#x95F4;&#x3002;</li></ul><p>&#x56E0;&#x6B64;&#xFF0C;SSL/TLS&#x534F;&#x8BAE;&#x7684;&#x57FA;&#x672C;&#x8FC7;&#x7A0B;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A;</p><ul><li>&#x5BA2;&#x6237;&#x7AEF;&#x5411;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x7D22;&#x8981;&#x5E76;&#x9A8C;&#x8BC1;&#x516C;&#x94A5;&#x3002;</li><li>&#x53CC;&#x65B9;&#x534F;&#x5546;&#x751F;&#x6210;&#x201C;&#x5BF9;&#x8BDD;&#x5BC6;&#x94A5;&#x201D;&#x3002;</li><li>&#x53CC;&#x65B9;&#x91C7;&#x7528;&#x201C;&#x5BF9;&#x8BDD;&#x5BC6;&#x94A5;&#x201D;&#x8FDB;&#x884C;&#x52A0;&#x5BC6;&#x901A;&#x4FE1;&#x3002;</li></ul><h1 id="HTTPS&#x5DE5;&#x4F5C;&#x539F;&#x7406;"><a href="#HTTPS&#x5DE5;&#x4F5C;&#x539F;&#x7406;" class="headerlink" title="HTTPS&#x5DE5;&#x4F5C;&#x539F;&#x7406;"></a>HTTPS&#x5DE5;&#x4F5C;&#x539F;&#x7406;</h1><ol><li>&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x8D77;HTTPS&#x8BF7;&#x6C42;<br> &#x7528;&#x6237;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x91CC;&#x8F93;&#x5165;&#x4E00;&#x4E2A;https&#x7F51;&#x5740;&#xFF0C;&#x7136;&#x540E;&#x8FDE;&#x63A5;&#x5230;server&#x7684;443&#x7AEF;&#x53E3;&#x3002;</li><li>&#x670D;&#x52A1;&#x7AEF;&#x7684;&#x914D;&#x7F6E;<br> &#x91C7;&#x7528;HTTPS&#x534F;&#x8BAE;&#x7684;&#x670D;&#x52A1;&#x5668;&#x5FC5;&#x987B;&#x8981;&#x6709;&#x4E00;&#x5957;&#x6570;&#x5B57;&#x8BC1;&#x4E66;&#xFF0C;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x5236;&#x4F5C;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5411;&#x7EC4;&#x7EC7;&#x7533;&#x8BF7;&#xFF0C;&#x533A;&#x522B;&#x5C31;&#x662F;&#x81EA;&#x5DF1;&#x9881;&#x53D1;&#x7684;&#x8BC1;&#x4E66;&#x9700;&#x8981;&#x5BA2;&#x6237;&#x7AEF;&#x9A8C;&#x8BC1;&#x901A;&#x8FC7;&#xFF0C;&#x624D;&#x53EF;&#x4EE5;&#x7EE7;&#x7EED;&#x8BBF;&#x95EE;&#xFF0C;&#x800C;&#x4F7F;&#x7528;&#x53D7;&#x4FE1;&#x4EFB;&#x7684;&#x516C;&#x53F8;&#x7533;&#x8BF7;&#x7684;&#x8BC1;&#x4E66;&#x5219;&#x4E0D;&#x4F1A;&#x5F39;&#x51FA;&#x63D0;&#x793A;&#x9875;&#x9762;&#x3002;</li><li>&#x4F20;&#x9001;&#x8BC1;&#x4E66;<br> &#x8FD9;&#x4E2A;&#x8BC1;&#x4E66;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x516C;&#x94A5;&#xFF0C;&#x53EA;&#x662F;&#x5305;&#x542B;&#x4E86;&#x5F88;&#x591A;&#x4FE1;&#x606F;&#xFF0C;&#x5982;&#x8BC1;&#x4E66;&#x7684;&#x9881;&#x53D1;&#x673A;&#x6784;&#xFF0C;&#x8FC7;&#x671F;&#x65F6;&#x95F4;&#x7B49;&#x7B49;&#x3002;</li><li>&#x5BA2;&#x6237;&#x7AEF;&#x89E3;&#x6790;&#x8BC1;&#x4E66;<br> &#x8FD9;&#x90E8;&#x5206;&#x5DE5;&#x4F5C;&#x662F;&#x7531;&#x5BA2;&#x6237;&#x7AEF;&#x7684;TLS&#x6765;&#x5B8C;&#x6210;&#x7684;&#xFF0C;&#x9996;&#x5148;&#x4F1A;&#x9A8C;&#x8BC1;&#x516C;&#x94A5;&#x662F;&#x5426;&#x6709;&#x6548;&#xFF0C;&#x6BD4;&#x5982;&#x9881;&#x53D1;&#x673A;&#x6784;&#xFF0C;&#x8FC7;&#x671F;&#x65F6;&#x95F4;&#x7B49;&#x7B49;&#xFF0C;&#x5982;&#x679C;&#x53D1;&#x73B0;&#x5F02;&#x5E38;&#xFF0C;&#x5219;&#x4F1A;&#x5F39;&#x51FA;&#x4E00;&#x4E2A;&#x8B66;&#x544A;&#x6846;&#xFF0C;&#x63D0;&#x793A;&#x8BC1;&#x4E66;&#x5B58;&#x5728;&#x95EE;&#x9898;&#x3002;<ol><li>&#x9996;&#x5148;&#x6D4F;&#x89C8;&#x5668;&#x8BFB;&#x53D6;&#x8BC1;&#x4E66;&#x4E2D;&#x7684;&#x8BC1;&#x4E66;&#x6240;&#x6709;&#x8005;&#x3001;&#x6709;&#x6548;&#x671F;&#x7B49;&#x4FE1;&#x606F;&#x8FDB;&#x884C;&#x4E00;&#x4E00;&#x6821;&#x9A8C;</li><li>&#x6D4F;&#x89C8;&#x5668;&#x5F00;&#x59CB;&#x67E5;&#x627E;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E2D;&#x5DF2;&#x5185;&#x7F6E;&#x7684;&#x53D7;&#x4FE1;&#x4EFB;&#x7684;&#x8BC1;&#x4E66;&#x53D1;&#x5E03;&#x673A;&#x6784;CA&#xFF0C;&#x4E0E;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x6765;&#x7684;&#x8BC1;&#x4E66;&#x4E2D;&#x7684;&#x9881;&#x53D1;&#x8005;CA&#x6BD4;&#x5BF9;&#xFF0C;&#x7528;&#x4E8E;&#x6821;&#x9A8C;&#x8BC1;&#x4E66;&#x662F;&#x5426;&#x4E3A;&#x5408;&#x6CD5;&#x673A;&#x6784;&#x9881;&#x53D1;</li><li>&#x5982;&#x679C;&#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x6D4F;&#x89C8;&#x5668;&#x5C31;&#x4F1A;&#x62A5;&#x9519;&#xFF0C;&#x8BF4;&#x660E;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x6765;&#x7684;&#x8BC1;&#x4E66;&#x662F;&#x4E0D;&#x53EF;&#x4FE1;&#x4EFB;&#x7684;&#x3002;</li><li>&#x5982;&#x679C;&#x627E;&#x5230;&#xFF0C;&#x90A3;&#x4E48;&#x6D4F;&#x89C8;&#x5668;&#x5C31;&#x4F1A;&#x4ECE;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E2D;&#x53D6;&#x51FA;&#x9881;&#x53D1;&#x8005;CA &#x7684;&#x516C;&#x94A5;(&#x591A;&#x6570;&#x6D4F;&#x89C8;&#x5668;&#x5F00;&#x53D1;&#x5546;&#x53D1;&#x5E03;<br>&#x7248;&#x672C;&#x65F6;&#xFF0C;&#x4F1A;&#x4E8B;&#x5148;&#x5728;&#x5185;&#x90E8;&#x690D;&#x5165;&#x5E38;&#x7528;&#x8BA4;&#x8BC1;&#x673A;&#x5173;&#x7684;&#x516C;&#x5F00;&#x5BC6;&#x94A5;)&#xFF0C;&#x7136;&#x540E;&#x5BF9;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x6765;&#x7684;&#x8BC1;&#x4E66;&#x91CC;&#x9762;&#x7684;&#x7B7E;&#x540D;&#x8FDB;&#x884C;&#x89E3;&#x5BC6;</li><li>&#x6D4F;&#x89C8;&#x5668;&#x4F7F;&#x7528;&#x76F8;&#x540C;&#x7684;hash&#x7B97;&#x6CD5;&#x8BA1;&#x7B97;&#x51FA;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x6765;&#x7684;&#x8BC1;&#x4E66;&#x7684;hash&#x503C;&#xFF0C;&#x5C06;&#x8FD9;&#x4E2A;&#x8BA1;&#x7B97;&#x7684;hash&#x503C;&#x4E0E;&#x8BC1;&#x4E66;&#x4E2D;&#x7B7E;&#x540D;&#x505A;&#x5BF9;&#x6BD4;</li><li>&#x5BF9;&#x6BD4;&#x7ED3;&#x679C;&#x4E00;&#x81F4;&#xFF0C;&#x5219;&#x8BC1;&#x660E;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x6765;&#x7684;&#x8BC1;&#x4E66;&#x5408;&#x6CD5;&#xFF0C;&#x6CA1;&#x6709;&#x88AB;&#x5192;&#x5145;</li><li>&#x6B64;&#x65F6;&#x6D4F;&#x89C8;&#x5668;&#x5C31;&#x53EF;&#x4EE5;&#x8BFB;&#x53D6;&#x8BC1;&#x4E66;&#x4E2D;&#x7684;&#x516C;&#x94A5;&#xFF0C;&#x7528;&#x4E8E;&#x540E;&#x7EED;&#x52A0;&#x5BC6;&#x4E86;</li></ol></li><li>&#x4F20;&#x9001;&#x52A0;&#x5BC6;&#x4FE1;&#x606F;<br> &#x8FD9;&#x90E8;&#x5206;&#x4F20;&#x9001;&#x7684;&#x662F;&#x7528;&#x8BC1;&#x4E66;&#x52A0;&#x5BC6;&#x540E;&#x7684;&#x968F;&#x673A;&#x503C;(&#x79C1;&#x94A5;)&#xFF0C;&#x76EE;&#x7684;&#x5C31;&#x662F;&#x8BA9;&#x670D;&#x52A1;&#x7AEF;&#x5F97;&#x5230;&#x8FD9;&#x4E2A;&#x968F;&#x673A;&#x503C;&#xFF0C;&#x4EE5;&#x540E;&#x5BA2;&#x6237;&#x7AEF;&#x548C;&#x670D;&#x52A1;&#x7AEF;&#x7684;&#x901A;&#x4FE1;&#x5C31;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8FD9;&#x4E2A;&#x968F;&#x673A;&#x503C;&#x6765;&#x8FDB;&#x884C;&#x52A0;&#x5BC6;&#x89E3;&#x5BC6;&#x4E86;&#x3002;</li><li>&#x670D;&#x52A1;&#x7AEF;&#x89E3;&#x5BC6;&#x4FE1;&#x606F;<br> &#x670D;&#x52A1;&#x7AEF;&#x7528;&#x79C1;&#x94A5;&#x89E3;&#x5BC6;&#x540E;&#xFF0C;&#x5F97;&#x5230;&#x4E86;&#x5BA2;&#x6237;&#x7AEF;&#x4F20;&#x8FC7;&#x6765;&#x7684;&#x968F;&#x673A;&#x503C;(&#x79C1;&#x94A5;)&#xFF0C;&#x7136;&#x540E;&#x628A;&#x5185;&#x5BB9;&#x901A;&#x8FC7;&#x8BE5;&#x503C;&#x8FDB;&#x884C;&#x5BF9;&#x79F0;&#x52A0;&#x5BC6;</li><li>&#x4F20;&#x8F93;&#x52A0;&#x5BC6;&#x540E;&#x7684;&#x4FE1;&#x606F;<br> &#x8FD9;&#x90E8;&#x5206;&#x4FE1;&#x606F;&#x662F;&#x670D;&#x52A1;&#x7AEF;&#x7528;&#x79C1;&#x94A5;&#x52A0;&#x5BC6;&#x540E;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x5BA2;&#x6237;&#x7AEF;&#x88AB;&#x8FD8;&#x539F;&#x3002;</li><li>&#x5BA2;&#x6237;&#x7AEF;&#x89E3;&#x5BC6;&#x4FE1;&#x606F;<br> &#x5BA2;&#x6237;&#x7AEF;&#x7528;&#x4E4B;&#x524D;&#x751F;&#x6210;&#x7684;&#x79C1;&#x94A5;&#x89E3;&#x5BC6;&#x670D;&#x52A1;&#x7AEF;&#x4F20;&#x8FC7;&#x6765;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x4E8E;&#x662F;&#x83B7;&#x53D6;&#x4E86;&#x89E3;&#x5BC6;&#x540E;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x7B2C;&#x4E09;&#x65B9;&#x5373;&#x4F7F;&#x76D1;&#x542C;&#x5230;&#x4E86;&#x6570;&#x636E;&#xFF0C;&#x4E5F;&#x675F;&#x624B;&#x65E0;&#x7B56;&#x3002;</li></ol><h1 id="&#x603B;&#x7ED3;HTTP&#x548C;HTTPS&#x7684;&#x533A;&#x522B;"><a href="#&#x603B;&#x7ED3;HTTP&#x548C;HTTPS&#x7684;&#x533A;&#x522B;" class="headerlink" title="&#x603B;&#x7ED3;HTTP&#x548C;HTTPS&#x7684;&#x533A;&#x522B;"></a>&#x603B;&#x7ED3;HTTP&#x548C;HTTPS&#x7684;&#x533A;&#x522B;</h1><ol><li>https&#x534F;&#x8BAE;&#x9700;&#x8981;&#x5230;ca&#x7533;&#x8BF7;&#x8BC1;&#x4E66;&#xFF0C;&#x4E00;&#x822C;&#x514D;&#x8D39;&#x8BC1;&#x4E66;&#x8F83;&#x5C11;&#xFF0C;&#x56E0;&#x800C;&#x9700;&#x8981;&#x4E00;&#x5B9A;&#x8D39;&#x7528;&#x3002;</li><li>http&#x662F;&#x8D85;&#x6587;&#x672C;&#x4F20;&#x8F93;&#x534F;&#x8BAE;&#xFF0C;&#x4FE1;&#x606F;&#x662F;&#x660E;&#x6587;&#x4F20;&#x8F93;&#xFF0C;https&#x5219;&#x662F;&#x5177;&#x6709;&#x5B89;&#x5168;&#x6027;&#x7684;ssl&#x52A0;&#x5BC6;&#x4F20;&#x8F93;&#x534F;&#x8BAE;&#x3002;</li><li>http&#x548C;https&#x4F7F;&#x7528;&#x7684;&#x662F;&#x5B8C;&#x5168;&#x4E0D;&#x540C;&#x7684;&#x8FDE;&#x63A5;&#x65B9;&#x5F0F;&#xFF0C;&#x7528;&#x7684;&#x7AEF;&#x53E3;&#x4E5F;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x524D;&#x8005;&#x662F;80&#xFF0C;&#x540E;&#x8005;&#x662F;443&#x3002;</li><li>http&#x7684;&#x8FDE;&#x63A5;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x662F;&#x65E0;&#x72B6;&#x6001;&#x7684;&#xFF1B;HTTPS&#x534F;&#x8BAE;&#x662F;&#x7531;SSL+HTTP&#x534F;&#x8BAE;&#x6784;&#x5EFA;&#x7684;&#x53EF;&#x8FDB;&#x884C;&#x52A0;&#x5BC6;&#x4F20;&#x8F93;&#x3001;&#x8EAB;&#x4EFD;&#x8BA4;&#x8BC1;&#x7684;&#x7F51;&#x7EDC;&#x534F;&#x8BAE;&#xFF0C;&#x6BD4;http&#x534F;&#x8BAE;&#x5B89;&#x5168;&#x3002;</li></ol><blockquote><p>&#x53C2;&#x8003;<br>    <a href="https://blog.csdn.net/xiaoming100001/article/details/81109617" target="_blank" rel="noopener">https://blog.csdn.net/xiaoming100001/article/details/81109617</a><br>    <a href="https://www.cnblogs.com/jesse131/p/9080925.html" target="_blank" rel="noopener">https://www.cnblogs.com/jesse131/p/9080925.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;HTTP&amp;#x548C;HTTPS&quot;&gt;&lt;a href=&quot;#HTTP&amp;#x548C;HTTPS&quot; class=&quot;headerlink&quot; title=&quot;HTTP&amp;#x548C;HTTPS&quot;&gt;&lt;/a&gt;HTTP&amp;#x548C;HTTPS&lt;/h1&gt;&lt;h2 id=&quot;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;HTTP&quot;&gt;&lt;a href=&quot;#&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;HTTP&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;HTTP&quot;&gt;&lt;/a&gt;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;HTTP&lt;/h2&gt;&lt;p&gt;&amp;#x8D85;&amp;#x6587;&amp;#x672C;&amp;#x4F20;&amp;#x8F93;&amp;#x534F;&amp;#x8BAE;&amp;#xFF0C;&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x57FA;&amp;#x4E8E;&amp;#x8BF7;&amp;#x6C42;&amp;#x4E0E;&amp;#x54CD;&amp;#x5E94;&amp;#xFF0C;&amp;#x65E0;&amp;#x72B6;&amp;#x6001;&amp;#x7684;&amp;#xFF0C;&amp;#x5E94;&amp;#x7528;&amp;#x5C42;&amp;#x7684;&amp;#x534F;&amp;#x8BAE;&amp;#xFF0C;&amp;#x5E38;&amp;#x57FA;&amp;#x4E8E;TCP/IP&amp;#x534F;&amp;#x8BAE;&amp;#x4F20;&amp;#x8F93;&amp;#x6570;&amp;#x636E;&amp;#xFF0C;&amp;#x4E92;&amp;#x8054;&amp;#x7F51;&amp;#x4E0A;&amp;#x5E94;&amp;#x7528;&amp;#x6700;&amp;#x4E3A;&amp;#x5E7F;&amp;#x6CDB;&amp;#x7684;&amp;#x4E00;&amp;#x79CD;&amp;#x7F51;&amp;#x7EDC;&amp;#x534F;&amp;#x8BAE;,&amp;#x6240;&amp;#x6709;&amp;#x7684;WWW&amp;#x6587;&amp;#x4EF6;&amp;#x90FD;&amp;#x5FC5;&amp;#x987B;&amp;#x9075;&amp;#x5B88;&amp;#x8FD9;&amp;#x4E2A;&amp;#x6807;&amp;#x51C6;&amp;#x3002;&amp;#x8BBE;&amp;#x8BA1;HTTP&amp;#x7684;&amp;#x521D;&amp;#x8877;&amp;#x662F;&amp;#x4E3A;&amp;#x4E86;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E00;&amp;#x79CD;&amp;#x53D1;&amp;#x5E03;&amp;#x548C;&amp;#x63A5;&amp;#x6536;HTML&amp;#x9875;&amp;#x9762;&amp;#x7684;&amp;#x65B9;&amp;#x6CD5;&amp;#x3002;&lt;/p&gt;
&lt;h2 id=&quot;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;HTTPS&quot;&gt;&lt;a href=&quot;#&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;HTTPS&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;HTTPS&quot;&gt;&lt;/a&gt;&amp;#x4EC0;&amp;#x4E48;&amp;#x662F;HTTPS&lt;/h2&gt;&lt;p&gt;&amp;#x300A;&amp;#x56FE;&amp;#x89E3;HTTP&amp;#x300B;&amp;#x8FD9;&amp;#x672C;&amp;#x4E66;&amp;#x4E2D;&amp;#x66FE;&amp;#x63D0;&amp;#x8FC7;HTTPS&amp;#x662F;&amp;#x8EAB;&amp;#x62AB;SSL&amp;#x5916;&amp;#x58F3;&amp;#x7684;HTTP&amp;#x3002;HTTPS&amp;#x662F;&amp;#x4E00;&amp;#x79CD;&amp;#x901A;&amp;#x8FC7;&amp;#x8BA1;&amp;#x7B97;&amp;#x673A;&amp;#x7F51;&amp;#x7EDC;&amp;#x8FDB;&amp;#x884C;&amp;#x5B89;&amp;#x5168;&amp;#x901A;&amp;#x4FE1;&amp;#x7684;&amp;#x4F20;&amp;#x8F93;&amp;#x534F;&amp;#x8BAE;&amp;#xFF0C;&amp;#x7ECF;&amp;#x7531;HTTP&amp;#x8FDB;&amp;#x884C;&amp;#x901A;&amp;#x4FE1;&amp;#xFF0C;&amp;#x5229;&amp;#x7528;SSL/TLS&amp;#x5EFA;&amp;#x7ACB;&amp;#x5168;&amp;#x4FE1;&amp;#x9053;&amp;#xFF0C;&amp;#x52A0;&amp;#x5BC6;&amp;#x6570;&amp;#x636E;&amp;#x5305;&amp;#x3002;HTTPS&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x4E3B;&amp;#x8981;&amp;#x76EE;&amp;#x7684;&amp;#x662F;&amp;#x63D0;&amp;#x4F9B;&amp;#x5BF9;&amp;#x7F51;&amp;#x7AD9;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x7684;&amp;#x8EAB;&amp;#x4EFD;&amp;#x8BA4;&amp;#x8BC1;&amp;#xFF0C;&amp;#x540C;&amp;#x65F6;&amp;#x4FDD;&amp;#x62A4;&amp;#x4EA4;&amp;#x6362;&amp;#x6570;&amp;#x636E;&amp;#x7684;&amp;#x9690;&amp;#x79C1;&amp;#x4E0E;&amp;#x5B8C;&amp;#x6574;&amp;#x6027;&amp;#x3002;&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="http://zhengyujie.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="HTTP" scheme="http://zhengyujie.cn/tags/HTTP/"/>
    
      <category term="HTTPS" scheme="http://zhengyujie.cn/tags/HTTPS/"/>
    
  </entry>
  
  <entry>
    <title>我的小破站正式上线了</title>
    <link href="http://zhengyujie.cn/2019/08/23/%E6%9D%82%E8%AE%B0/"/>
    <id>http://zhengyujie.cn/2019/08/23/杂记/</id>
    <published>2019-08-23T09:34:17.000Z</published>
    <updated>2019-08-23T09:55:32.308Z</updated>
    
    <content type="html"><![CDATA[<p>&#x521A;&#x521A;&#x4E0D;&#x4E45;&#x524D;&#x6536;&#x5230;&#x963F;&#x91CC;&#x4E91;&#x7684;&#x77ED;&#x4FE1;&#xFF0C;&#x901A;&#x77E5;&#x6211;&#x6211;&#x7684;&#x57DF;&#x540D;&#x7EC8;&#x4E8E;&#x901A;&#x8FC7;&#x5907;&#x6848;&#x5BA1;&#x6838;&#x4E86;&#xFF0C;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x6BD4;&#x6211;&#x60F3;&#x8C61;&#x4E2D;&#x7684;&#x5FEB;&#x4E86;&#x4E0D;&#x5C11;&#x3002;&#x6211;&#x8D76;&#x7D27;&#x7ED9;&#x6211;&#x7684;&#x670D;&#x52A1;&#x5668;&#x7ED1;&#x5B9A;&#x4E86;&#x6211;&#x7684;&#x57DF;&#x540D;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x91CD;&#x65B0;&#x90E8;&#x7F72;&#x5230;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#xFF0C;&#x81F3;&#x6B64;&#x6211;&#x7684;&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;&#x7EC8;&#x4E8E;&#x6B63;&#x5F0F;&#x4E0A;&#x7EBF;&#x4E86;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x8BE5;&#x6298;&#x817E;&#x8BA9;&#x767E;&#x5EA6;&#x548C;&#x8C37;&#x6B4C;&#x6536;&#x5F55;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x4E86;&#x3002;</p><a id="more"></a><p>&#x5F53;&#x7136;&#x8FD8;&#x662F;&#x8981;&#x611F;&#x6168;&#x4E00;&#x4E0B;&#x7684;&#xFF0C;&#x4E0B;&#x9762;&#x662F;&#x6211;&#x7684;&#x5C0F;&#x7834;&#x7AD9;&#x7684;&#x4E00;&#x4E9B;&#x8BB0;&#x4E8B;</p><ul><li>2019&#x5E74;7&#x6708;23&#x65E5;&#x5F00;&#x59CB;&#x6709;&#x4E86;&#x642D;&#x5EFA;&#x4E00;&#x4E2A;&#x535A;&#x5BA2;&#x7684;&#x5FF5;&#x5934;</li><li>2019&#x5E74;7&#x6708;25&#x65E5;&#x5F00;&#x59CB;&#x7740;&#x624B;&#x4F7F;&#x7528;Hexo&#x6846;&#x67B6;&#x642D;&#x5EFA;&#x535A;&#x5BA2;</li><li>2019&#x5E74;7&#x6708;25&#x65E5;&#x4E0B;&#x5348;&#x535A;&#x5BA2;&#x642D;&#x5EFA;&#x5B8C;&#x6210;&#xFF0C;&#x4E0A;&#x4F20;&#x81F3;GitHub&#x6258;&#x7BA1;&#x3002;&#x7F51;&#x5740;&#xFF1A;<a href="http://zhengyujie.github.io" target="_blank" rel="noopener">http://zhengyujie.github.io</a></li><li>2019&#x5E74;7&#x6708;25&#x65E5;&#x665A;&#x4E0A;&#x4E0A;&#x4F20;&#x7B2C;&#x4E00;&#x7BC7;&#x535A;&#x5BA2;</li><li>2019&#x5E74;8&#x6708;13&#x65E5;&#x5C06;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x90E8;&#x7F72;&#x81F3;Coding&#x5E73;&#x53F0;&#xFF0C;&#x7F51;&#x5740;&#xFF1A;<a href="http://zhengyujie.coding.me" target="_blank" rel="noopener">http://zhengyujie.coding.me</a></li><li>2019&#x5E74;8&#x6708;16&#x65E5;&#x5728;&#x963F;&#x91CC;&#x4E91;&#x8D2D;&#x4E70;&#x4E86;&#x57DF;&#x540D;</li><li>2019&#x5E74;8&#x6708;17&#x65E5;&#x8D2D;&#x4E70;&#x4E86;&#x963F;&#x91CC;&#x4E91;&#x5B66;&#x751F;&#x4E3B;&#x673A;</li><li>2019&#x5E74;8&#x6708;17&#x65E5;&#x4E0B;&#x5348;&#x5C06;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x90E8;&#x7F72;&#x81F3;&#x6211;&#x7684;&#x963F;&#x91CC;&#x4E91;&#x4E3B;&#x673A;</li><li>2019&#x5E74;8&#x6708;17&#x65E5;&#x5F00;&#x59CB;&#x8FDB;&#x884C;&#x57DF;&#x540D;&#x5907;&#x6848;</li><li>2019&#x5E74;8&#x6708;23&#x65E5;&#x57DF;&#x540D;&#x5907;&#x6848;&#x5BA1;&#x6838;&#x901A;&#x8FC7;&#xFF0C;&#x5C0F;&#x7834;&#x7AD9;&#x6B63;&#x5F0F;&#x4E0A;&#x7EBF;&#xFF0C;&#x7F51;&#x5740;&#xFF1A;<a href="http://zhengyujie.cn">http://zhengyujie.cn</a></li></ul><p>&#x672A;&#x6765;&#x7814;&#x7A76;&#x751F;&#x4E09;&#x5E74;&#x6211;&#x4F1A;&#x575A;&#x6301;&#x5728;&#x535A;&#x5BA2;&#x4E0A;&#x8BB0;&#x5F55;&#x6211;&#x5B66;&#x4E60;&#x548C;&#x751F;&#x6D3B;&#x7684;&#x70B9;&#x6EF4;,&#x5E0C;&#x671B;&#x6211;&#x548C;&#x5C0F;&#x7834;&#x7AD9;&#x90FD;&#x80FD;&#x53D8;&#x5F97;&#x8D8A;&#x6765;&#x8D8A;&#x4F18;&#x79C0;&#x3002;</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x521A;&amp;#x521A;&amp;#x4E0D;&amp;#x4E45;&amp;#x524D;&amp;#x6536;&amp;#x5230;&amp;#x963F;&amp;#x91CC;&amp;#x4E91;&amp;#x7684;&amp;#x77ED;&amp;#x4FE1;&amp;#xFF0C;&amp;#x901A;&amp;#x77E5;&amp;#x6211;&amp;#x6211;&amp;#x7684;&amp;#x57DF;&amp;#x540D;&amp;#x7EC8;&amp;#x4E8E;&amp;#x901A;&amp;#x8FC7;&amp;#x5907;&amp;#x6848;&amp;#x5BA1;&amp;#x6838;&amp;#x4E86;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x6BD4;&amp;#x6211;&amp;#x60F3;&amp;#x8C61;&amp;#x4E2D;&amp;#x7684;&amp;#x5FEB;&amp;#x4E86;&amp;#x4E0D;&amp;#x5C11;&amp;#x3002;&amp;#x6211;&amp;#x8D76;&amp;#x7D27;&amp;#x7ED9;&amp;#x6211;&amp;#x7684;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x7ED1;&amp;#x5B9A;&amp;#x4E86;&amp;#x6211;&amp;#x7684;&amp;#x57DF;&amp;#x540D;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x5C06;&amp;#x6211;&amp;#x7684;&amp;#x535A;&amp;#x5BA2;&amp;#x91CD;&amp;#x65B0;&amp;#x90E8;&amp;#x7F72;&amp;#x5230;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x4E0A;&amp;#xFF0C;&amp;#x81F3;&amp;#x6B64;&amp;#x6211;&amp;#x7684;&amp;#x4E2A;&amp;#x4EBA;&amp;#x535A;&amp;#x5BA2;&amp;#x7EC8;&amp;#x4E8E;&amp;#x6B63;&amp;#x5F0F;&amp;#x4E0A;&amp;#x7EBF;&amp;#x4E86;&amp;#x3002;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x8BE5;&amp;#x6298;&amp;#x817E;&amp;#x8BA9;&amp;#x767E;&amp;#x5EA6;&amp;#x548C;&amp;#x8C37;&amp;#x6B4C;&amp;#x6536;&amp;#x5F55;&amp;#x6211;&amp;#x7684;&amp;#x535A;&amp;#x5BA2;&amp;#x4E86;&amp;#x3002;&lt;/p&gt;
    
    </summary>
    
      <category term="杂记" scheme="http://zhengyujie.cn/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="小破站记事" scheme="http://zhengyujie.cn/tags/%E5%B0%8F%E7%A0%B4%E7%AB%99%E8%AE%B0%E4%BA%8B/"/>
    
  </entry>
  
  <entry>
    <title>TensorFlow学习笔记12：CIFAR-10数据集图片分类</title>
    <link href="http://zhengyujie.cn/2019/08/23/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B012/"/>
    <id>http://zhengyujie.cn/2019/08/23/tf学习笔记12/</id>
    <published>2019-08-23T02:02:38.000Z</published>
    <updated>2019-08-23T02:31:50.068Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CIFAR-10&#x6570;&#x636E;&#x96C6;&#x7B80;&#x4ECB;"><a href="#CIFAR-10&#x6570;&#x636E;&#x96C6;&#x7B80;&#x4ECB;" class="headerlink" title="CIFAR-10&#x6570;&#x636E;&#x96C6;&#x7B80;&#x4ECB;"></a>CIFAR-10&#x6570;&#x636E;&#x96C6;&#x7B80;&#x4ECB;</h1><blockquote><p>&#x5B98;&#x7F51;&#x94FE;&#x63A5;&#xFF1A;<a href="http://www.cs.toronto.edu/~kriz/cifar.html" target="_blank" rel="noopener">http://www.cs.toronto.edu/~kriz/cifar.html</a></p></blockquote><p> CIFAR-10&#x662F;&#x4E00;&#x4E2A;&#x66F4;&#x63A5;&#x8FD1;&#x666E;&#x9002;&#x7269;&#x4F53;&#x7684;&#x5F69;&#x8272;&#x56FE;&#x50CF;&#x6570;&#x636E;&#x96C6;&#x3002;CIFAR-10 &#x662F;&#x7531;Hinton &#x7684;&#x5B66;&#x751F;Alex Krizhevsky &#x548C;Ilya Sutskever &#x6574;&#x7406;&#x7684;&#x4E00;&#x4E2A;&#x7528;&#x4E8E;&#x8BC6;&#x522B;&#x666E;&#x9002;&#x7269;&#x4F53;&#x7684;&#x5C0F;&#x578B;&#x6570;&#x636E;&#x96C6;&#x3002;&#x4E00;&#x5171;&#x5305;&#x542B;10&#x4E2A;&#x7C7B;&#x522B;&#x7684;RGB&#x5F69;&#x8272;&#x56FE;&#x7247;&#xFF1A;&#x98DE;&#x673A;&#xFF08; airplane &#xFF09;&#x3001;&#x6C7D;&#x8F66;&#xFF08; automobile &#xFF09;&#x3001;&#x9E1F;&#x7C7B;&#xFF08; bird &#xFF09;&#x3001;&#x732B;&#xFF08; cat &#xFF09;&#x3001;&#x9E7F;&#xFF08; deer &#xFF09;&#x3001;&#x72D7;&#xFF08; dog &#xFF09;&#x3001;&#x86D9;&#x7C7B;&#xFF08; frog &#xFF09;&#x3001;&#x9A6C;&#xFF08; horse &#xFF09;&#x3001;&#x8239;&#xFF08; ship &#xFF09;&#x548C;&#x5361;&#x8F66;&#xFF08; truck &#xFF09;&#x3002;&#x6BCF;&#x4E2A;&#x56FE;&#x7247;&#x7684;&#x5C3A;&#x5BF8;&#x4E3A;32 &#xD7; 32 &#xFF0C;&#x6BCF;&#x4E2A;&#x7C7B;&#x522B;&#x6709;6000&#x4E2A;&#x56FE;&#x50CF;&#xFF0C;&#x6570;&#x636E;&#x96C6;&#x4E2D;&#x4E00;&#x5171;&#x6709;50000 &#x5F20;&#x8BAD;&#x7EC3;&#x56FE;&#x7247;&#x548C;10000 &#x5F20;&#x6D4B;&#x8BD5;&#x56FE;&#x7247;&#x3002;</p><a id="more"></a><p><img src="http://pwbhioup3.bkt.clouddn.com/CIFAR-10.png" alt="CIFAR-10"></p><h1 id="TensenFlow&#x5B9E;&#x73B0;"><a href="#TensenFlow&#x5B9E;&#x73B0;" class="headerlink" title="TensenFlow&#x5B9E;&#x73B0;"></a>TensenFlow&#x5B9E;&#x73B0;</h1><h2 id="&#x6570;&#x636E;&#x51C6;&#x5907;"><a href="#&#x6570;&#x636E;&#x51C6;&#x5907;" class="headerlink" title="&#x6570;&#x636E;&#x51C6;&#x5907;"></a>&#x6570;&#x636E;&#x51C6;&#x5907;</h2><p>&#x9996;&#x5148;&#x53BB;&#x5B98;&#x65B9;&#x5E93;&#x4E0B;&#x8F7D;<code>cifar10.py</code>&#x4EE5;&#x53CA;<code>cifar10_input.py</code>&#x6587;&#x4EF6;&#x6765;&#x4E0B;&#x8F7D;CIFAR-10&#x6570;&#x636E;&#x96C6;&#x4E8C;&#x8FDB;&#x5236;&#x6587;&#x4EF6;&#xFF0C;&#x4EE5;&#x53CA;&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x3002;</p><blockquote><p>GitHub&#x5730;&#x5740;&#xFF1A;<a href="https://github.com/tensorflow/models/tree/master/tutorials/image/cifar10" target="_blank" rel="noopener">https://github.com/tensorflow/models/tree/master/tutorials/image/cifar10</a></p></blockquote><p>&#x8FD0;&#x884C;&#x4E0B;&#x8F7D;&#x6570;&#x636E;&#x96C6;&#x51FD;&#x6570;<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> tensorflow.models.tutorials.image.cifar10 <span class="keyword">import</span> cifar10</span><br><span class="line">cifar10.maybe_download_and_extract()</span><br></pre></td></tr></table></figure></p><p>&#x6570;&#x636E;&#x96C6;&#x6587;&#x4EF6;&#x9ED8;&#x8BA4;&#x4E0B;&#x8F7D;&#x5728;<code>./tmp/cifar10_data</code>&#x6587;&#x4EF6;&#x4E0B;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;&#x5176;&#x79FB;&#x52A8;&#x5230;&#x81EA;&#x5DF1;&#x7684;&#x5DE5;&#x7A0B;&#x6587;&#x4EF6;&#x5939;&#x4E0B;</p><h2 id="&#x5B9A;&#x4E49;&#x51FD;&#x6570;"><a href="#&#x5B9A;&#x4E49;&#x51FD;&#x6570;" class="headerlink" title="&#x5B9A;&#x4E49;&#x51FD;&#x6570;"></a>&#x5B9A;&#x4E49;&#x51FD;&#x6570;</h2><p>&#x9996;&#x5148;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x6743;&#x91CD;&#x521D;&#x59CB;&#x5316;&#x51FD;&#x6570;<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">variable_with_weight_loss</span><span class="params">(shape,std,w1)</span>:</span></span><br><span class="line">    var = tf.Variable(tf.truncated_normal(shape,stddev=std),dtype=tf.float32)</span><br><span class="line">    <span class="keyword">if</span> w1 <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        weight_loss = tf.multiply(tf.nn.l2_loss(var),w1,name=<span class="string">&quot;weight_loss&quot;</span>)</span><br><span class="line">        tf.add_to_collection(<span class="string">&quot;losses&quot;</span>,weight_loss)</span><br><span class="line">    <span class="keyword">return</span> var</span><br></pre></td></tr></table></figure></p><p>&#x7136;&#x540E;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x635F;&#x5931;&#x51FD;&#x6570;<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">loss_func</span><span class="params">(logits,labels)</span>:</span></span><br><span class="line">    labels = tf.cast(labels,tf.int32)</span><br><span class="line">    cross_entropy = tf.nn.sparse_softmax_cross_entropy_with_logits(logits=logits,</span><br><span class="line">                           labels=labels,name=<span class="string">&quot;cross_entropy_per_example&quot;</span>)</span><br><span class="line">    cross_entropy_mean = tf.reduce_mean(tf.reduce_sum(cross_entropy))</span><br><span class="line">    tf.add_to_collection(<span class="string">&quot;losses&quot;</span>,cross_entropy_mean)</span><br><span class="line">    <span class="keyword">return</span> tf.add_n(tf.get_collection(<span class="string">&quot;losses&quot;</span>),name=<span class="string">&quot;total_loss&quot;</span>)</span><br></pre></td></tr></table></figure></p><h2 id="&#x8BFB;&#x53D6;&#x6570;&#x636E;"><a href="#&#x8BFB;&#x53D6;&#x6570;&#x636E;" class="headerlink" title="&#x8BFB;&#x53D6;&#x6570;&#x636E;"></a>&#x8BFB;&#x53D6;&#x6570;&#x636E;</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x8BBE;&#x7F6E;&#x6BCF;&#x6B21;&#x8BAD;&#x7EC3;&#x7684;&#x6570;&#x636E;&#x5927;&#x5C0F;</span></span><br><span class="line">batch_size = <span class="number">128</span></span><br><span class="line"><span class="comment">#&#x4E0B;&#x8F7D;&#x89E3;&#x538B;&#x6570;&#x636E;</span></span><br><span class="line"><span class="comment"># cifar10.maybe_download_and_extract()</span></span><br><span class="line"><span class="comment"># &#x8BBE;&#x7F6E;&#x6570;&#x636E;&#x7684;&#x5B58;&#x653E;&#x76EE;&#x5F55;</span></span><br><span class="line">cifar10_dir = <span class="string">&quot;cifar10_data/cifar-10-batches-bin&quot;</span></span><br><span class="line"><span class="comment">#&#x83B7;&#x53D6;&#x6570;&#x636E;&#x589E;&#x5F3A;&#x540E;&#x7684;&#x8BAD;&#x7EC3;&#x96C6;&#x6570;&#x636E;</span></span><br><span class="line">images_train,labels_train = cifar10_input.distorted_inputs(cifar10_dir,batch_size)</span><br><span class="line"><span class="comment">#&#x83B7;&#x53D6;&#x88C1;&#x526A;&#x540E;&#x7684;&#x6D4B;&#x8BD5;&#x6570;&#x636E;</span></span><br><span class="line">images_test,labels_test = cifar10_input.inputs(eval_data=<span class="literal">True</span>,data_dir=cifar10_dir,                     </span><br><span class="line">                                               batch_size=batch_size)</span><br></pre></td></tr></table></figure><h2 id="&#x7F51;&#x7EDC;&#x7ED3;&#x6784;"><a href="#&#x7F51;&#x7EDC;&#x7ED3;&#x6784;" class="headerlink" title="&#x7F51;&#x7EDC;&#x7ED3;&#x6784;"></a>&#x7F51;&#x7EDC;&#x7ED3;&#x6784;</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">#&#x5B9A;&#x4E49;&#x6A21;&#x578B;&#x7684;&#x8F93;&#x5165;&#x548C;&#x8F93;&#x51FA;&#x6570;&#x636E;</span></span><br><span class="line">image_holder = tf.placeholder(dtype=tf.float32,shape=[batch_size,<span class="number">24</span>,<span class="number">24</span>,<span class="number">3</span>])</span><br><span class="line">label_holder = tf.placeholder(dtype=tf.int32,shape=[batch_size])</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x8BBE;&#x8BA1;&#x7B2C;&#x4E00;&#x5C42;&#x5377;&#x79EF;</span></span><br><span class="line">weight1 = variable_with_weight_loss(shape=[<span class="number">5</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">64</span>],std=<span class="number">5e-2</span>,w1=<span class="number">0</span>)</span><br><span class="line">kernel1 = tf.nn.conv2d(image_holder,weight1,[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">bais1 = tf.Variable(tf.constant(<span class="number">0.0</span>,dtype=tf.float32,shape=[<span class="number">64</span>]))</span><br><span class="line">conv1 = tf.nn.relu(tf.nn.bias_add(kernel1,bais1))</span><br><span class="line">pool1 = tf.nn.max_pool(conv1,[<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">norm1 = tf.nn.lrn(pool1,<span class="number">4</span>,bias=<span class="number">1.0</span>,alpha=<span class="number">0.001</span> / <span class="number">9</span>,beta=<span class="number">0.75</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x8BBE;&#x8BA1;&#x7B2C;&#x4E8C;&#x5C42;&#x5377;&#x79EF;</span></span><br><span class="line">weight2 = variable_with_weight_loss(shape=[<span class="number">5</span>,<span class="number">5</span>,<span class="number">64</span>,<span class="number">64</span>],std=<span class="number">5e-2</span>,w1=<span class="number">0</span>)</span><br><span class="line">kernel2 = tf.nn.conv2d(norm1,weight2,[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">bais2 = tf.Variable(tf.constant(<span class="number">0.1</span>,dtype=tf.float32,shape=[<span class="number">64</span>]))</span><br><span class="line">conv2 = tf.nn.relu(tf.nn.bias_add(kernel2,bais2))</span><br><span class="line">norm2 = tf.nn.lrn(conv2,<span class="number">4</span>,bias=<span class="number">1.0</span>,alpha=<span class="number">0.01</span> / <span class="number">9</span>,beta=<span class="number">0.75</span>)</span><br><span class="line">pool2 = tf.nn.max_pool(norm2,[<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x7B2C;&#x4E00;&#x5C42;&#x5168;&#x8FDE;&#x63A5;&#x5C42;</span></span><br><span class="line">reshape = tf.reshape(pool2,[batch_size,<span class="number">-1</span>])</span><br><span class="line">dim = reshape.get_shape()[<span class="number">1</span>].value</span><br><span class="line">weight3 = variable_with_weight_loss([dim,<span class="number">384</span>],std=<span class="number">0.04</span>,w1=<span class="number">0.004</span>)</span><br><span class="line">bais3 = tf.Variable(tf.constant(<span class="number">0.1</span>,shape=[<span class="number">384</span>],dtype=tf.float32))</span><br><span class="line">local3 = tf.nn.relu(tf.matmul(reshape,weight3)+bais3)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x7B2C;&#x4E8C;&#x5C42;&#x5168;&#x8FDE;&#x63A5;&#x5C42;</span></span><br><span class="line">weight4 = variable_with_weight_loss([<span class="number">384</span>,<span class="number">192</span>],std=<span class="number">0.04</span>,w1=<span class="number">0.004</span>)</span><br><span class="line">bais4 = tf.Variable(tf.constant(<span class="number">0.1</span>,shape=[<span class="number">192</span>],dtype=tf.float32))</span><br><span class="line">local4 = tf.nn.relu(tf.matmul(local3,weight4)+bais4)</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x6700;&#x540E;&#x4E00;&#x5C42;</span></span><br><span class="line">weight5 = variable_with_weight_loss([<span class="number">192</span>,<span class="number">10</span>],std=<span class="number">1</span>/<span class="number">192.0</span>,w1=<span class="number">0</span>)</span><br><span class="line">bais5 = tf.Variable(tf.constant(<span class="number">0.0</span>,shape=[<span class="number">10</span>],dtype=tf.float32))</span><br><span class="line">logits = tf.add(tf.matmul(local4,weight5),bais5)</span><br></pre></td></tr></table></figure><h2 id="&#x8BAD;&#x7EC3;&#x548C;&#x4F18;&#x5316;"><a href="#&#x8BAD;&#x7EC3;&#x548C;&#x4F18;&#x5316;" class="headerlink" title="&#x8BAD;&#x7EC3;&#x548C;&#x4F18;&#x5316;"></a>&#x8BAD;&#x7EC3;&#x548C;&#x4F18;&#x5316;</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x8BBE;&#x7F6E;&#x6700;&#x5927;&#x8FED;&#x4EE3;&#x6B21;&#x6570;</span></span><br><span class="line">max_steps = <span class="number">10000</span></span><br><span class="line"><span class="comment">#&#x83B7;&#x53D6;&#x635F;&#x5931;&#x51FD;&#x6570;</span></span><br><span class="line">loss = loss_func(logits,label_holder)</span><br><span class="line"><span class="comment">#&#x8BBE;&#x7F6E;&#x4F18;&#x5316;&#x7B97;&#x6CD5;&#x4F7F;&#x5F97;&#x6210;&#x672C;&#x6700;&#x5C0F;</span></span><br><span class="line">train_step = tf.train.AdamOptimizer(<span class="number">1e-3</span>).minimize(loss)</span><br><span class="line"><span class="comment">#&#x83B7;&#x53D6;&#x6700;&#x9AD8;&#x7C7B;&#x7684;&#x5206;&#x7C7B;&#x51C6;&#x786E;&#x7387;&#xFF0C;&#x53D6;top1&#x4F5C;&#x4E3A;&#x8861;&#x91CF;&#x6807;&#x51C6;</span></span><br><span class="line">top_k_op = tf.nn.in_top_k(logits,label_holder,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;"><a href="#&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;" class="headerlink" title="&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;"></a>&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x5F00;&#x59CB;&#x8BAD;&#x7EC3;</span></span><br><span class="line"><span class="keyword">for</span> step <span class="keyword">in</span> range(max_steps):</span><br><span class="line">    start_time = time.time()</span><br><span class="line">    images_batch,labels_batch = sess.run([images_train,labels_train])</span><br><span class="line">    _,loss_value = sess.run([train_step,loss],feed_dict={image_holder:images_batch,</span><br><span class="line">                                                            label_holder:labels_batch})</span><br><span class="line">    <span class="comment">#&#x83B7;&#x53D6;&#x8BA1;&#x7B97;&#x65F6;&#x95F4;</span></span><br><span class="line">    duration = time.time() - start_time</span><br><span class="line">    <span class="keyword">if</span> step % <span class="number">1000</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="comment">#&#x8BA1;&#x7B97;&#x6BCF;&#x79D2;&#x5904;&#x7406;&#x591A;&#x5C11;&#x5F20;&#x56FE;&#x7247;</span></span><br><span class="line">        per_images_second = batch_size / duration</span><br><span class="line">        <span class="comment">#&#x83B7;&#x53D6;&#x65F6;&#x95F4;</span></span><br><span class="line">        sec_per_batch = float(duration)</span><br><span class="line">        print(<span class="string">&quot;step:%d,duration:%.3f,per_images_second:%.2f,loss:%.3f&quot;</span>%(step,duration</span><br><span class="line">              ,per_images_second,loss_value))</span><br></pre></td></tr></table></figure><h2 id="&#x6D4B;&#x8BD5;&#x8FC7;&#x7A0B;"><a href="#&#x6D4B;&#x8BD5;&#x8FC7;&#x7A0B;" class="headerlink" title="&#x6D4B;&#x8BD5;&#x8FC7;&#x7A0B;"></a>&#x6D4B;&#x8BD5;&#x8FC7;&#x7A0B;</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x8BA1;&#x7B97;&#x6D4B;&#x8BD5;&#x96C6;&#x4E0A;&#x7684;&#x51C6;&#x786E;&#x7387;</span></span><br><span class="line">num_examples = <span class="number">10000</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line">num_iter = int(math.ceil(num_examples / batch_size))</span><br><span class="line">true_count = <span class="number">0</span></span><br><span class="line">total_sample_count = num_iter * batch_size</span><br><span class="line">step = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> step &lt; num_iter:</span><br><span class="line">    images_batch,labels_batch = sess.run([images_test,labels_test])</span><br><span class="line">    pred = sess.run([top_k_op],feed_dict={image_holder:images_batch,label_holder:labels_batch})</span><br><span class="line">    true_count += np.sum(pred)</span><br><span class="line">    step += <span class="number">1</span></span><br><span class="line"><span class="comment">#&#x8BA1;&#x7B97;&#x6D4B;&#x8BD5;&#x96C6;&#x7684;&#x51C6;&#x786E;&#x7387;</span></span><br><span class="line">precision = true_count / total_sample_count</span><br><span class="line">print(<span class="string">&quot;test accuracy:%.3f&quot;</span>%precision)</span><br></pre></td></tr></table></figure><h2 id="&#x8BAD;&#x7EC3;&#x7ED3;&#x679C;"><a href="#&#x8BAD;&#x7EC3;&#x7ED3;&#x679C;" class="headerlink" title="&#x8BAD;&#x7EC3;&#x7ED3;&#x679C;"></a>&#x8BAD;&#x7EC3;&#x7ED3;&#x679C;</h2><p><img src="http://pwbhioup3.bkt.clouddn.com/%E5%AE%9E%E9%AA%8C%E7%BB%93%E6%9E%9C1.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;CIFAR-10&amp;#x6570;&amp;#x636E;&amp;#x96C6;&amp;#x7B80;&amp;#x4ECB;&quot;&gt;&lt;a href=&quot;#CIFAR-10&amp;#x6570;&amp;#x636E;&amp;#x96C6;&amp;#x7B80;&amp;#x4ECB;&quot; class=&quot;headerlink&quot; title=&quot;CIFAR-10&amp;#x6570;&amp;#x636E;&amp;#x96C6;&amp;#x7B80;&amp;#x4ECB;&quot;&gt;&lt;/a&gt;CIFAR-10&amp;#x6570;&amp;#x636E;&amp;#x96C6;&amp;#x7B80;&amp;#x4ECB;&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&amp;#x5B98;&amp;#x7F51;&amp;#x94FE;&amp;#x63A5;&amp;#xFF1A;&lt;a href=&quot;http://www.cs.toronto.edu/~kriz/cifar.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.cs.toronto.edu/~kriz/cifar.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt; CIFAR-10&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x66F4;&amp;#x63A5;&amp;#x8FD1;&amp;#x666E;&amp;#x9002;&amp;#x7269;&amp;#x4F53;&amp;#x7684;&amp;#x5F69;&amp;#x8272;&amp;#x56FE;&amp;#x50CF;&amp;#x6570;&amp;#x636E;&amp;#x96C6;&amp;#x3002;CIFAR-10 &amp;#x662F;&amp;#x7531;Hinton &amp;#x7684;&amp;#x5B66;&amp;#x751F;Alex Krizhevsky &amp;#x548C;Ilya Sutskever &amp;#x6574;&amp;#x7406;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x7528;&amp;#x4E8E;&amp;#x8BC6;&amp;#x522B;&amp;#x666E;&amp;#x9002;&amp;#x7269;&amp;#x4F53;&amp;#x7684;&amp;#x5C0F;&amp;#x578B;&amp;#x6570;&amp;#x636E;&amp;#x96C6;&amp;#x3002;&amp;#x4E00;&amp;#x5171;&amp;#x5305;&amp;#x542B;10&amp;#x4E2A;&amp;#x7C7B;&amp;#x522B;&amp;#x7684;RGB&amp;#x5F69;&amp;#x8272;&amp;#x56FE;&amp;#x7247;&amp;#xFF1A;&amp;#x98DE;&amp;#x673A;&amp;#xFF08; airplane &amp;#xFF09;&amp;#x3001;&amp;#x6C7D;&amp;#x8F66;&amp;#xFF08; automobile &amp;#xFF09;&amp;#x3001;&amp;#x9E1F;&amp;#x7C7B;&amp;#xFF08; bird &amp;#xFF09;&amp;#x3001;&amp;#x732B;&amp;#xFF08; cat &amp;#xFF09;&amp;#x3001;&amp;#x9E7F;&amp;#xFF08; deer &amp;#xFF09;&amp;#x3001;&amp;#x72D7;&amp;#xFF08; dog &amp;#xFF09;&amp;#x3001;&amp;#x86D9;&amp;#x7C7B;&amp;#xFF08; frog &amp;#xFF09;&amp;#x3001;&amp;#x9A6C;&amp;#xFF08; horse &amp;#xFF09;&amp;#x3001;&amp;#x8239;&amp;#xFF08; ship &amp;#xFF09;&amp;#x548C;&amp;#x5361;&amp;#x8F66;&amp;#xFF08; truck &amp;#xFF09;&amp;#x3002;&amp;#x6BCF;&amp;#x4E2A;&amp;#x56FE;&amp;#x7247;&amp;#x7684;&amp;#x5C3A;&amp;#x5BF8;&amp;#x4E3A;32 &amp;#xD7; 32 &amp;#xFF0C;&amp;#x6BCF;&amp;#x4E2A;&amp;#x7C7B;&amp;#x522B;&amp;#x6709;6000&amp;#x4E2A;&amp;#x56FE;&amp;#x50CF;&amp;#xFF0C;&amp;#x6570;&amp;#x636E;&amp;#x96C6;&amp;#x4E2D;&amp;#x4E00;&amp;#x5171;&amp;#x6709;50000 &amp;#x5F20;&amp;#x8BAD;&amp;#x7EC3;&amp;#x56FE;&amp;#x7247;&amp;#x548C;10000 &amp;#x5F20;&amp;#x6D4B;&amp;#x8BD5;&amp;#x56FE;&amp;#x7247;&amp;#x3002;&lt;/p&gt;
    
    </summary>
    
      <category term="深度学习" scheme="http://zhengyujie.cn/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Python" scheme="http://zhengyujie.cn/categories/Python/"/>
    
    
      <category term="卷积网络" scheme="http://zhengyujie.cn/tags/%E5%8D%B7%E7%A7%AF%E7%BD%91%E7%BB%9C/"/>
    
      <category term="TensorFlow" scheme="http://zhengyujie.cn/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 16.04安装Pycharm</title>
    <link href="http://zhengyujie.cn/2019/08/22/ubuntu%E5%AE%89%E8%A3%85pycharm/"/>
    <id>http://zhengyujie.cn/2019/08/22/ubuntu安装pycharm/</id>
    <published>2019-08-22T07:28:22.000Z</published>
    <updated>2019-08-22T07:42:24.666Z</updated>
    
    <content type="html"><![CDATA[<p>&#x8BB0;&#x5F55;Ubuntu 16.04&#x4E0B;Pycharm&#x7684;&#x5B89;&#x88C5;&#x6B65;&#x9AA4;</p><a id="more"></a><p>&#x9996;&#x5148;&#x53BB;&#x5B98;&#x7F51;&#x4E0B;&#x8F7D;&#x6700;&#x65B0;&#x7684;Pycharm&#x5B89;&#x88C5;&#x5305;&#xFF0C;&#x5B98;&#x7F51;&#x5730;&#x5740;&#xFF1A;<a href="http://www.jetbrains.com/pycharm/" target="_blank" rel="noopener">http://www.jetbrains.com/pycharm/</a><br>&#x8FD9;&#x91CC;&#x6211;&#x4E0B;&#x8F7D;&#x4E86;&#x793E;&#x533A;&#x7248;(Community)</p><p>&#x4E0B;&#x8F7D;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x53F3;&#x952E;&#x538B;&#x7F29;&#x5305;&#xFF0C;&#x9009;&#x62E9;&#x63D0;&#x53D6;&#x5230;&#x6B64;&#x5904;</p><p>&#x7136;&#x540E;<code>cd</code>&#x8FDB;&#x5165;Pychram&#x5B89;&#x88C5;&#x5305;&#x4E0B;&#x7684;<code>bin</code>&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x6709;&#x4E00;&#x4E2A;&#x540D;&#x53EB;<code>pychram.sh</code>&#x7684;&#x6587;&#x4EF6;&#x3002;<br>&#x5728;&#x7EC8;&#x7AEF;&#x8F93;&#x5165;&#x547D;&#x4EE4;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./pycharm.sh</span><br></pre></td></tr></table></figure></p><p>&#x7531;&#x4E8E;&#x6211;&#x4E4B;&#x524D;&#x6CA1;&#x6709;&#x5B89;&#x88C5;&#x8FC7;Pycharm&#xFF0C;&#x6240;&#x4EE5;&#x76F4;&#x63A5;&#x9009;&#x62E9;<code>Do not import settings</code>&#x5373;&#x53EF;&#xFF0C;&#x7136;&#x540E;&#x70B9;&#x51FB;<code>OK</code>&#x8FDB;&#x5165;&#x4E0B;&#x4E00;&#x6B65;&#x64CD;&#x4F5C;&#x3002;&#x6839;&#x636E;&#x63D0;&#x793A;&#x7684;&#x5185;&#x5BB9;&#x8FDB;&#x884C;&#x52FE;&#x9009;&#x540C;&#x610F;&#x534F;&#x8BAE;&#xFF0C;&#x7136;&#x540E;&#x70B9;&#x51FB;continue&#x8FDB;&#x5165;&#x4E0B;&#x4E00;&#x6B65;&#xFF0C;&#x5927;&#x5BB6;&#x53EF;&#x4EE5;&#x70B9;&#x51FB;don&#x2019;t send&#x8FDB;&#x5165;&#x4E0B;&#x4E00;&#x6B65;&#xFF0C;&#x9009;&#x62E9;&#x559C;&#x6B22;&#x7684;&#x754C;&#x9762;&#x98CE;&#x683C;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x6B21;&#x70B9;&#x51FB;next&#x8FDB;&#x5165;&#x4E0B;&#x4E00;&#x6B65;&#xFF0C;&#x76F4;&#x5230;&#x63D0;&#x793A;start&#x542F;&#x52A8;&#x7A0B;&#x5E8F;&#x3002;&#x5373;&#x53EF;&#x5B8C;&#x6210;Pycharm&#x7684;&#x5B89;&#x88C5;&#x3002;</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;#x8BB0;&amp;#x5F55;Ubuntu 16.04&amp;#x4E0B;Pycharm&amp;#x7684;&amp;#x5B89;&amp;#x88C5;&amp;#x6B65;&amp;#x9AA4;&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://zhengyujie.cn/categories/Python/"/>
    
      <category term="Ubuntu" scheme="http://zhengyujie.cn/categories/Ubuntu/"/>
    
    
      <category term="Pycharm" scheme="http://zhengyujie.cn/tags/Pycharm/"/>
    
      <category term="软件安装" scheme="http://zhengyujie.cn/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>Hexo折腾日记之侧栏篇</title>
    <link href="http://zhengyujie.cn/2019/08/22/hexo%E8%AE%BE%E7%BD%AE%E4%BE%A7%E6%A0%8F/"/>
    <id>http://zhengyujie.cn/2019/08/22/hexo设置侧栏/</id>
    <published>2019-08-22T06:11:16.000Z</published>
    <updated>2019-08-22T07:09:10.976Z</updated>
    
    <content type="html"><![CDATA[<h1 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h1><p>&#x73B0;&#x5728;&#x6211;&#x76F8;&#x4FE1;&#x5174;&#x8DA3;&#x662F;&#x6700;&#x597D;&#x7684;&#x5B66;&#x4E60;&#x52A8;&#x529B;&#x4E86;&#x3002;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x5BF9;&#x524D;&#x6BB5;&#x5B8C;&#x5168;&#x63D0;&#x4E0D;&#x8D77;&#x5174;&#x8DA3;&#x7684;&#x4EBA;&#xFF0C;&#x5728;&#x89C1;&#x8BC6;&#x5230;&#x522B;&#x4EBA;&#x7684;&#x535A;&#x5BA2;&#x6709;&#x591A;&#x597D;&#x770B;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x5C45;&#x7136;&#x5BF9;&#x7F8E;&#x5316;&#x535A;&#x5BA2;&#x4EA7;&#x751F;&#x4E86;&#x5F3A;&#x70C8;&#x7684;&#x5174;&#x8DA3;&#x3002;&#x4EE5;&#x81F3;&#x4E8E;&#x5728;&#x6298;&#x817E;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x6D51;&#x7136;&#x4E0D;&#x77E5;&#x65F6;&#x95F4;&#x7684;&#x6D41;&#x901D;&#xFF0C;&#x6709;&#x65F6;&#x5019;&#x660E;&#x660E;&#x5DF2;&#x7ECF;&#x9965;&#x80A0;&#x8F98;&#x8F98;&#x4E86;&#x5374;&#x4F9D;&#x7136;&#x4E50;&#x4E4B;&#x4E0D;&#x75B2;&#xFF0C;&#x8FDE;&#x6211;&#x81EA;&#x5DF1;&#x90FD;&#x5728;&#x6000;&#x7591;&#x81EA;&#x5DF1;&#x662F;&#x4E0D;&#x662F;&#x7740;&#x4E86;&#x9B54;&#x3002;&#x5728;&#x9AD8;&#x5F3A;&#x5EA6;&#x6298;&#x817E;&#x4E86;&#x5C06;&#x8FD1;&#x4E00;&#x5929;&#x540E;&#xFF0C;&#x6211;&#x7EC8;&#x4E8E;&#x5C06;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x4FA7;&#x680F;&#x6253;&#x9020;&#x6210;&#x4E86;&#x6211;&#x6EE1;&#x610F;&#x7684;&#x6837;&#x5B50;&#x3002;&#x5BF9;&#x4E8E;&#x6211;&#x8FD9;&#x79CD;&#x6BEB;&#x65E0;&#x4EFB;&#x4F55;HTML&#xFF0C;CSS&#x7B49;&#x57FA;&#x7840;&#x7684;&#x4EBA;&#xFF0C;&#x5728;&#x6298;&#x817E;&#x8FC7;&#x7A0B;&#x4E2D;&#x9047;&#x5230;&#x4E86;&#x96BE;&#x4EE5;&#x8BA1;&#x6570;&#x7684;bug&#xFF0C;&#x6240;&#x4EE5;&#x80FD;&#x6709;&#x8FD9;&#x6837;&#x7684;&#x6210;&#x679C;&#x5DF2;&#x7ECF;&#x662F;&#x76F8;&#x5F53;&#x6EE1;&#x8DB3;&#x4E86;&#x3002;&#x8FD9;&#x7BC7;&#x535A;&#x5BA2;&#x8BB0;&#x5F55;&#x6211;&#x5BF9;&#x4FA7;&#x680F;&#x8FDB;&#x884C;&#x9B54;&#x6539;&#x7684;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x3002;</p><a id="more"></a><h1 id="&#x6298;&#x817E;&#x8FC7;&#x7A0B;"><a href="#&#x6298;&#x817E;&#x8FC7;&#x7A0B;" class="headerlink" title="&#x6298;&#x817E;&#x8FC7;&#x7A0B;"></a>&#x6298;&#x817E;&#x8FC7;&#x7A0B;</h1><h2 id="&#x6539;&#x9020;&#x601D;&#x8DEF;"><a href="#&#x6539;&#x9020;&#x601D;&#x8DEF;" class="headerlink" title="&#x6539;&#x9020;&#x601D;&#x8DEF;"></a>&#x6539;&#x9020;&#x601D;&#x8DEF;</h2><p>&#x6211;&#x5E0C;&#x671B;&#x4E3B;&#x9875;&#x7684;&#x4FA7;&#x680F;&#x4EE5;&#x53CA;&#x6D4F;&#x89C8;&#x6587;&#x7AE0;&#x65F6;&#x7684;&#x4FA7;&#x680F;&#x663E;&#x793A;&#x7684;&#x5185;&#x5BB9;&#x662F;&#x4E0D;&#x540C;&#x7684;&#x3002;</p><ul><li>&#x5728;&#x4E3B;&#x9875;&#x65F6;&#xFF0C;&#x535A;&#x5BA2;&#x4FA7;&#x680F;&#x8981;&#x5C3D;&#x53EF;&#x80FD;&#x591A;&#x5730;&#x663E;&#x793A;&#x548C;&#x6211;&#x535A;&#x5BA2;&#x6709;&#x5173;&#x7684;&#x5404;&#x79CD;&#x4FE1;&#x606F;&#xFF0C;&#x6BD4;&#x5982;&#x535A;&#x4E3B;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x6587;&#x7AE0;&#x5206;&#x7C7B;&#x4FE1;&#x606F;&#xFF0C;&#x6587;&#x7AE0;&#x6807;&#x7B7E;&#x4FE1;&#x606F;&#x7B49;&#x7B49;&#x3002;</li><li>&#x5728;&#x6D4F;&#x89C8;&#x6587;&#x7AE0;&#x65F6;&#xFF0C;&#x4FA7;&#x680F;&#x7684;&#x4FE1;&#x606F;&#x8981;&#x52A0;&#x4EE5;&#x7CBE;&#x7B80;&#xFF0C;&#x4EC5;&#x4EC5;&#x4FDD;&#x7559;&#x535A;&#x4E3B;&#x4FE1;&#x606F;&#x4EE5;&#x53CA;&#x6587;&#x7AE0;&#x76EE;&#x5F55;&#xFF0C;&#x540C;&#x65F6;&#x5728;&#x6EDA;&#x52A8;&#x9875;&#x9762;&#x65F6;&#x4FA7;&#x680F;&#x8981;&#x56FA;&#x5B9A;&#x5728;&#x5934;&#x90E8;&#x3002;</li></ul><p>&#x7531;&#x4E8E;NexT&#x4E3B;&#x9898;&#x9ED8;&#x8BA4;&#x5728;&#x4EFB;&#x4F55;&#x9875;&#x9762;&#x4FA7;&#x680F;&#x5728;&#x6EDA;&#x52A8;&#x5230;&#x9875;&#x9762;&#x9876;&#x90E8;&#x65F6;&#x90FD;&#x56FA;&#x5B9A;&#x4E0D;&#x52A8;&#x3002;&#x4F46;&#x6211;&#x60F3;&#x5728;&#x4E3B;&#x9875;&#x9762;&#x65F6;&#x4FA7;&#x680F;&#x80FD;&#x591F;&#x663E;&#x793A;&#x66F4;&#x591A;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x4E8E;&#x662F;&#x6211;&#x7684;&#x60F3;&#x6CD5;&#x5C31;&#x662F;&#x5199;&#x4E00;&#x4E2A;<code>if</code>&#x8BED;&#x53E5;&#x5224;&#x65AD;&#x5F53;&#x524D;&#x9875;&#x9762;&#x662F;&#x5426;&#x4E3A;&#x6D4F;&#x89C8;&#x6587;&#x7AE0;&#x9875;&#x9762;&#xFF0C;&#x82E5;&#x4E0D;&#x662F;&#xFF0C;&#x5219;&#x4FA7;&#x680F;&#x968F;&#x9875;&#x9762;&#x6EDA;&#x52A8;&#xFF0C;&#x5E76;&#x4E14;&#x5C3D;&#x53EF;&#x80FD;&#x591A;&#x7684;&#x663E;&#x793A;&#x4FE1;&#x606F;&#x3002;&#x82E5;&#x662F;&#xFF0C;&#x5219;&#x4EC5;&#x4EC5;&#x663E;&#x793A;&#x535A;&#x4E3B;&#x4FE1;&#x606F;&#x4EE5;&#x53CA;&#x6587;&#x7AE0;&#x76EE;&#x5F55;&#x3002;</p><h2 id="&#x5177;&#x4F53;&#x5B9E;&#x73B0;"><a href="#&#x5177;&#x4F53;&#x5B9E;&#x73B0;" class="headerlink" title="&#x5177;&#x4F53;&#x5B9E;&#x73B0;"></a>&#x5177;&#x4F53;&#x5B9E;&#x73B0;</h2><p>&#x9996;&#x5148;&#x6253;&#x5F00;<code>/next/layout/_macro</code>&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x7684;<code>sidebar.swig</code>&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x535A;&#x5BA2;&#x4FA7;&#x680F;&#x7684;&#x6E90;&#x4EE3;&#x7801;&#x4E86;&#xFF0C;&#x6211;&#x4EEC;&#x5F00;&#x59CB;&#x8FDB;&#x884C;&#x9B54;&#x6539;</p><p>&#x9996;&#x5148;&#x5F00;&#x5934;&#x7B2C;&#x4E00;&#x6BB5;<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sidebar-toggle&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;sidebar-toggle-line-wrap&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sidebar-toggle-line sidebar-toggle-line-first&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sidebar-toggle-line sidebar-toggle-line-middle&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sidebar-toggle-line sidebar-toggle-line-last&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>&#x6211;&#x4EEC;&#x4FDD;&#x6301;&#x4E0D;&#x52A8;&#xFF0C;&#x7136;&#x540E;&#x63A5;&#x4E0B;&#x6765;<code>aside</code>&#x6807;&#x7B7E;&#x4E0B;&#x7684;&#x5185;&#x5BB9;&#x5168;&#x90E8;&#x5220;&#x9664;&#xFF0C;&#x662F;&#x7684;&#x4F60;&#x6CA1;&#x542C;&#x9519;&#xFF0C;&#x5168;&#x90E8;&#x5220;&#x9664;&#xFF0C;&#x6211;&#x4EEC;&#x91CD;&#x65B0;&#x5B9E;&#x73B0;&#x3002;<br>&#x9996;&#x5148;&#x5148;&#x5199;&#x4E2A;<code>if</code>&#x8BED;&#x53E5;&#x6765;&#x5224;&#x65AD;&#x5F53;&#x524D;&#x7684;&#x9875;&#x9762;<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">{%- <span class="keyword">set</span> display_toc = theme.toc.enable and display_toc %}</span><br><span class="line">{%- <span class="keyword">if</span> not display_toc or toc(page.content).length &lt;= <span class="number">1</span> %}</span><br><span class="line">...</span><br><span class="line">{%- endif %}</span><br></pre></td></tr></table></figure></p><p>&#x63A5;&#x7740;&#x6211;&#x4EEC;&#x5728;if&#x8BED;&#x53E5;&#x5185;&#x90E8;&#x534F;&#x5546;&#x6211;&#x4EEC;&#x60F3;&#x5728;&#x4E3B;&#x9875;&#x9762;&#x4FA7;&#x680F;&#x73B0;&#x5B9E;&#x7684;&#x5185;&#x5BB9;</p><ol><li><p>&#x535A;&#x4E3B;&#x4FE1;&#x606F;&#x3002;&#x5305;&#x62EC;&#x5934;&#x50CF;&#xFF0C;&#x81EA;&#x6211;&#x4ECB;&#x7ECD;&#x4EE5;&#x53CA;&#x9644;&#x52A0;&#x535A;&#x5BA2;&#x7684;&#x6587;&#x7AE0;&#x6570;&#xFF0C;&#x7C7B;&#x522B;&#x6570;&#x4EE5;&#x53CA;&#x6807;&#x7B7E;&#x6570;&#x3002;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x5728;<code>next/layout/_partials/sidebar/</code>&#x7684;<code>site-overview.swig</code>&#x6587;&#x4EF6;&#x5185;&#x6709;&#x73B0;&#x6210;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x8981;&#x4FDD;&#x7559;&#x6211;&#x4EEC;&#x60F3;&#x663E;&#x793A;&#x7684;&#x90E8;&#x5206;&#x5C31;&#x597D;&#x4E86;</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;author-overview&quot;</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;site-author motion-element&quot;</span> itemprop=<span class="string">&quot;author&quot;</span> itemscope itemtype=<span class="string">&quot;http://schema.org/Person&quot;</span>&gt;</span><br><span class="line">        {%- <span class="keyword">if</span> theme.avatar.url %}</span><br><span class="line">        &lt;img <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;site-author-image&quot;</span> itemprop=<span class="string">&quot;image&quot;</span></span><br><span class="line">            src=<span class="string">&quot;{{ url_for( theme.avatar.url | default(theme.images + &apos;/avatar.gif&apos;) ) }}&quot;</span></span><br><span class="line">            alt=<span class="string">&quot;{{ author }}&quot;</span>&gt;</span><br><span class="line">        {%- endif %}</span><br><span class="line">        &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;site-author-name&quot;</span> itemprop=<span class="string">&quot;name&quot;</span>&gt;{{ author }}&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div class=&quot;site-description motion-element&quot; itemprop=&quot;description&quot;&gt;{{ description }}&lt;/</span>div&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    {%- if theme.site_state %}</span></span><br><span class="line"><span class="regexp">        &lt;nav class=&quot;site-state motion-element&quot;&gt;</span></span><br><span class="line"><span class="regexp">        {%- if config.archive_dir != &apos;/</span><span class="string">&apos; and site.posts.length &gt; 0 %}</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;site-state-item site-state-posts&quot;&gt;</span></span><br><span class="line"><span class="string">            {%- if theme.menu.archives %}</span></span><br><span class="line"><span class="string">                &lt;a href=&quot;{{ url_for(theme.menu.archives).split(&apos;</span>||<span class="string">&apos;)[0] | trim }}&quot;&gt;</span></span><br><span class="line"><span class="string">            {% else %}</span></span><br><span class="line"><span class="string">                &lt;a href=&quot;{{ url_for(config.archive_dir) }}&quot;&gt;</span></span><br><span class="line"><span class="string">            {%- endif %}</span></span><br><span class="line"><span class="string">                &lt;span class=&quot;site-state-item-count&quot;&gt;{{ site.posts.length }}&lt;/span&gt;</span></span><br><span class="line"><span class="string">                &lt;span class=&quot;site-state-item-name&quot;&gt;{{ __(&apos;</span>state.posts<span class="string">&apos;) }}&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;/a&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        {%- if site.categories.length &gt; 0 %}</span></span><br><span class="line"><span class="string">            {%- set categoriesPageQuery = site.pages.find({type: &apos;</span>categories<span class="string">&apos;}, {lean: true}) %}</span></span><br><span class="line"><span class="string">            {%- set hasCategoriesPage = categoriesPageQuery.length &gt; 0 %}</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;site-state-item site-state-categories&quot;&gt;</span></span><br><span class="line"><span class="string">            {%- if hasCategoriesPage %}</span></span><br><span class="line"><span class="string">                {%- if theme.menu.categories %}</span></span><br><span class="line"><span class="string">                &lt;a href=&quot;{{ url_for(theme.menu.categories).split(&apos;</span>||<span class="string">&apos;)[0] | trim }}&quot;&gt;</span></span><br><span class="line"><span class="string">                {% else %}</span></span><br><span class="line"><span class="string">                &lt;a href=&quot;{{ url_for(config.category_dir) + &apos;</span>/<span class="string">&apos; }}&quot;&gt;</span></span><br><span class="line"><span class="string">                {%- endif %}</span></span><br><span class="line"><span class="string">            {%- endif %}</span></span><br><span class="line"><span class="string">            {%- set visibleCategories = 0 %}</span></span><br><span class="line"><span class="string">            {%- for cat in site.categories %}</span></span><br><span class="line"><span class="string">                {%- if cat.length %}{%- set visibleCategories += 1 %}{%- endif %}</span></span><br><span class="line"><span class="string">            {%- endfor %}</span></span><br><span class="line"><span class="string">            &lt;span class=&quot;site-state-item-count&quot;&gt;{{ visibleCategories }}&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;span class=&quot;site-state-item-name&quot;&gt;{{ __(&apos;</span>state.categories<span class="string">&apos;) }}&lt;/span&gt;</span></span><br><span class="line"><span class="string">            {%- if hasCategoriesPage %}&lt;/a&gt;{%- endif %}</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        {%- if site.tags.length &gt; 0 %}</span></span><br><span class="line"><span class="string">            {%- set tagsPageQuery = site.pages.find({type: &apos;</span>tags<span class="string">&apos;}, {lean: true}) %}</span></span><br><span class="line"><span class="string">            {%- set hasTagsPage = tagsPageQuery.length &gt; 0 %}</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;site-state-item site-state-tags&quot;&gt;</span></span><br><span class="line"><span class="string">            {%- if hasTagsPage %}</span></span><br><span class="line"><span class="string">                {%- if theme.menu.tags %}</span></span><br><span class="line"><span class="string">                &lt;a href=&quot;{{ url_for(theme.menu.tags).split(&apos;</span>||<span class="string">&apos;)[0] | trim }}&quot;&gt;</span></span><br><span class="line"><span class="string">                {% else %}</span></span><br><span class="line"><span class="string">                &lt;a href=&quot;{{ url_for(config.tag_dir) + &apos;</span>/<span class="string">&apos; }}&quot;&gt;</span></span><br><span class="line"><span class="string">                {%- endif %}</span></span><br><span class="line"><span class="string">            {%- endif %}</span></span><br><span class="line"><span class="string">            {%- set visibleTags = 0 %}</span></span><br><span class="line"><span class="string">            {%- for tag in site.tags %}</span></span><br><span class="line"><span class="string">                {%- if tag.length %}{%- set visibleTags += 1 %}{%- endif %}</span></span><br><span class="line"><span class="string">            {%- endfor %}</span></span><br><span class="line"><span class="string">            &lt;span class=&quot;site-state-item-count&quot;&gt;{{ visibleTags }}&lt;/span&gt;</span></span><br><span class="line"><span class="string">            &lt;span class=&quot;site-state-item-name&quot;&gt;{{ __(&apos;</span>state.tags<span class="string">&apos;) }}&lt;/span&gt;</span></span><br><span class="line"><span class="string">            {%- if hasTagsPage %}&lt;/a&gt;{%- endif %}</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string">        &lt;/nav&gt;</span></span><br><span class="line"><span class="string">    {%- endif %}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    {%- if theme.social %}</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;links-of-author motion-element&quot;&gt;</span></span><br><span class="line"><span class="string">        {%- for name, link in theme.social %}</span></span><br><span class="line"><span class="string">            &lt;span class=&quot;links-of-author-item&quot;&gt;</span></span><br><span class="line"><span class="string">            {%- set sidebarURL = link.split(&apos;</span>||<span class="string">&apos;)[0] | trim %}</span></span><br><span class="line"><span class="string">            {%- if not (theme.social_icons.enable) or (not theme.social_icons.icons_only) %}</span></span><br><span class="line"><span class="string">            {%- set sidebarText = name %}</span></span><br><span class="line"><span class="string">            {%- endif %}</span></span><br><span class="line"><span class="string">            {%- if theme.social_icons.enable %}</span></span><br><span class="line"><span class="string">            {%- set sidebarIcon = &apos;</span>&lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;fa fa-fw fa-&apos; + link.split(&apos;||&apos;)[1] | trim | default(&apos;globe&apos;) + &apos;&quot;</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><span class="string">&apos; %}</span></span><br><span class="line"><span class="string">            {%- endif %}</span></span><br><span class="line"><span class="string">            {{ next_url(sidebarURL, sidebarIcon + sidebarText, {title: name + &apos;</span> &amp;rarr; <span class="string">&apos; + sidebarURL}) }}</span></span><br><span class="line"><span class="string">            &lt;/span&gt;</span></span><br><span class="line"><span class="string">        {%- endfor %}</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    {%- endif %}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    {%- if theme.rss %}</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;feed-link motion-element&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;a href=&quot;{{ url_for(theme.rss) }}&quot; rel=&quot;alternate&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;i class=&quot;fa fa-rss&quot;&gt;&lt;/i&gt;RSS</span></span><br><span class="line"><span class="string">        &lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    {%- endif %}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    {%- if theme.chat.enable and theme.chat.service !== &apos;</span><span class="string">&apos; %}</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;chat motion-element&quot;&gt;</span></span><br><span class="line"><span class="string">        {%- if theme.chat.service == &apos;</span>chatra<span class="string">&apos; and theme.chatra.enable %}</span></span><br><span class="line"><span class="string">        &lt;a onclick=&quot;Chatra(&apos;</span>openChat<span class="string">&apos;, true)&quot;&gt;</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string">        {%- if theme.chat.service == &apos;</span>tidio<span class="string">&apos; and theme.tidio.enable %}</span></span><br><span class="line"><span class="string">        &lt;a onclick=&quot;tidioChatApi.open();&quot;&gt;</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string">        {%- if theme.chat.icon %}&lt;i class=&quot;fa fa-{{ theme.chat.icon }}&quot;&gt;&lt;/i&gt;{%- endif %}</span></span><br><span class="line"><span class="string">        {{ theme.chat.text }}</span></span><br><span class="line"><span class="string">        &lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    {%- endif %}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    {%- if theme.creative_commons.license and theme.creative_commons.sidebar %}</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;cc-license motion-element&quot; itemprop=&quot;license&quot;&gt;</span></span><br><span class="line"><span class="string">        {%- set ccLanguage = theme.creative_commons.language %}</span></span><br><span class="line"><span class="string">        {%- if theme.creative_commons.license === &apos;</span>zero<span class="string">&apos; %}</span></span><br><span class="line"><span class="string">        {%- set ccType = &apos;</span>publicdomain/zero/<span class="number">1.0</span>/<span class="string">&apos; + ccLanguage %}</span></span><br><span class="line"><span class="string">        {% else %}</span></span><br><span class="line"><span class="string">        {%- set ccType = &apos;</span>licenses/<span class="string">&apos; + theme.creative_commons.license + &apos;</span>/<span class="number">4.0</span>/<span class="string">&apos; + ccLanguage %}</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string">        {%- set ccURL = &apos;</span>https:<span class="comment">//creativecommons.org/&apos; + ccType %}</span></span><br><span class="line">        {%- <span class="keyword">set</span> ccImage = &apos;&lt;img src=&quot;&apos; + url_for(theme.images + &apos;/cc-&apos; + theme.creative_commons.license + &apos;.svg&apos;) + &apos;&quot; alt=&quot;Creative Commons&quot;&gt;&apos; %}</span><br><span class="line">        {{ next_url(ccURL, ccImage, {<span class="attr">class</span>: <span class="string">&apos;cc-opacity&apos;</span>}) }}</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    {%- endif %}</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure></li><li><p>&#x535A;&#x5BA2;&#x516C;&#x544A;&#x3002;&#x5185;&#x5BB9;&#x5C31;&#x81EA;&#x7531;&#x53D1;&#x6325;&#x4E86;&#x3002;</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;card-announcement&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;card-content&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;item_headline&quot;&gt;</span><br><span class="line">        &lt;i class=&quot;fa fa-bullhorn card-announcement-animation&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;</span><br><span class="line">        &lt;span&gt;&#x516C;&#x544A;&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;announcement_content&quot;&gt;</span><br><span class="line">        &#x8C22;&#x8C22;&#x4F60;&#x8FD9;&#x4E48;&#x5E05;&#xFF0C;&#x8FD9;&#x4E48;&#x6F02;&#x4EAE;&#x8FD8;&#x6765;&#x770B;&#x6211;&#x7684;&#x535A;&#x5BA2;&#xFF0C;&#x5982;&#x679C;&#x559C;&#x6B22;&#x7684;&#x8BDD;&#x8BB0;&#x5F97;&#x6536;&#x85CF;&#x54E6;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></li><li><p>&#x535A;&#x5BA2;&#x4FE1;&#x606F;&#x3002;&#x6211;&#x4E3B;&#x8981;&#x5C31;&#x663E;&#x793A;&#x6587;&#x7AE0;&#x6570;&#x91CF;&#xFF0C;&#x535A;&#x5BA2;&#x8FD0;&#x884C;&#x5929;&#x6570;&#xFF0C;&#x8BBF;&#x95EE;&#x4EBA;&#x6570;&#x4EE5;&#x53CA;&#x70B9;&#x51FB;&#x91CF;&#x56DB;&#x6761;&#x4FE1;&#x606F;&#x3002;</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;blog-overview&quot;</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;item_headline&quot;</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-line-chart&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#x7F51;&#x7AD9;&#x8D44;&#x8BAF;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;blog-info&quot;</span>&gt;</span><br><span class="line">        &lt;script{{ pjax }} <span class="keyword">async</span> src=<span class="string">&quot;https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;blog-info-list&quot;</span>&gt;</span><br><span class="line">        &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;blog-info-name&quot;</span>&gt;&#x6587;&#x7AE0;&#x6570;&#x76EE;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">        &lt;span class=&quot;blogs-count&quot;&gt;{{ site.posts.length }}&lt;/</span>span&gt;</span><br><span class="line">        &lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li class=&quot;blog-info-list&quot;&gt;</span></span><br><span class="line"><span class="regexp">        &lt;span class=&quot;blog-info-name&quot;&gt;&#x8FD0;&#x884C;&#x5929;&#x6570;&lt;/</span>span&gt;</span><br><span class="line">        &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;days-count&quot;</span> id=<span class="string">&quot;sitedays&quot;</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">        &lt;script language=javascript&gt;</span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">siteTime</span>(<span class="params"></span>)</span>{</span><br><span class="line">                <span class="built_in">window</span>.setTimeout(<span class="string">&quot;siteTime()&quot;</span>, <span class="number">1000</span>);</span><br><span class="line">                <span class="keyword">var</span> seconds = <span class="number">1000</span>;</span><br><span class="line">                <span class="keyword">var</span> minutes = seconds * <span class="number">60</span>;</span><br><span class="line">                <span class="keyword">var</span> hours = minutes * <span class="number">60</span>;</span><br><span class="line">                <span class="keyword">var</span> days = hours * <span class="number">24</span>;</span><br><span class="line">                <span class="keyword">var</span> years = days * <span class="number">365</span>;</span><br><span class="line">                <span class="keyword">var</span> today = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">                <span class="keyword">var</span> todayYear = today.getFullYear();</span><br><span class="line">                <span class="keyword">var</span> todayMonth = today.getMonth()+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">var</span> todayDate = today.getDate();</span><br><span class="line">                <span class="keyword">var</span> todayHour = today.getHours();</span><br><span class="line">                <span class="keyword">var</span> todayMinute = today.getMinutes();</span><br><span class="line">                <span class="keyword">var</span> todaySecond = today.getSeconds();</span><br><span class="line">                <span class="keyword">var</span> t1 = <span class="built_in">Date</span>.UTC(<span class="number">2019</span>,<span class="number">07</span>,<span class="number">26</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span>); <span class="comment">//&#x5317;&#x4EAC;&#x65F6;&#x95F4;2018-2-13 00:00:00</span></span><br><span class="line">                <span class="keyword">var</span> t2 = <span class="built_in">Date</span>.UTC(todayYear,todayMonth,todayDate,todayHour,todayMinute,todaySecond);</span><br><span class="line">                <span class="keyword">var</span> diff = t2-t1;</span><br><span class="line">                <span class="keyword">var</span> diffYears = <span class="built_in">Math</span>.floor(diff/years);</span><br><span class="line">                <span class="keyword">var</span> diffDays = <span class="built_in">Math</span>.floor((diff/days)-diffYears*<span class="number">365</span>);</span><br><span class="line">                <span class="built_in">document</span>.getElementById(<span class="string">&quot;sitedays&quot;</span>).innerHTML=diffDays+<span class="string">&quot; &#x5929; &quot;</span>;</span><br><span class="line">            }</span><br><span class="line">            siteTime();</span><br><span class="line">        &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>li&gt;</span><br><span class="line">        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;blog-info-list&quot;</span>&gt;</span><br><span class="line">        &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;blog-info-list&quot;</span>&gt;&#x8BBF;&#x95EE;&#x6570;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">        &lt;span class=&quot;site-uv&quot; title=&quot;{{ __(&apos;footer.total_visitors&apos;) }}&quot;&gt;</span></span><br><span class="line"><span class="regexp">            &lt;span class=&quot;busuanzi-value&quot; id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/</span>span&gt;</span><br><span class="line">        &lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>li&gt;</span><br><span class="line">        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;blog-info-list&quot;</span>&gt;</span><br><span class="line">        &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;blog-info-name&quot;</span>&gt;&#x70B9;&#x51FB;&#x91CF;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">        &lt;span class=&quot;site-pv&quot; title=&quot;{{ __(&apos;footer.total_views&apos;) }}&quot;&gt;</span></span><br><span class="line"><span class="regexp">            &lt;span class=&quot;busuanzi-value&quot; id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/</span>span&gt;</span><br><span class="line">        &lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>li&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure></li><li><p>&#x5206;&#x7C7B;&#x4FE1;&#x606F;&#x3002;</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;sidebar-categoreus&quot;</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;item_headline&quot;</span>&gt;</span><br><span class="line">    &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;fa fa-folder-open&quot;</span> aria-hidden=<span class="string">&quot;true&quot;</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">    &lt;span&gt;&#x5206;&#x7C7B;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">    {{ list_categories() }} </span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure></li><li><p>&#x6807;&#x7B7E;&#x4E91;&#x3002;GitHub&#x5730;&#x5740;&#xFF1A;<a href="https://github.com/MikeCoder/hexo-tag-cloud" target="_blank" rel="noopener">https://github.com/MikeCoder/hexo-tag-cloud</a></p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;sidebar-tags&quot;</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;item_headline&quot;</span>&gt;</span><br><span class="line">    &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;fa fa-tags&quot;</span> aria-hidden=<span class="string">&quot;true&quot;</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">    &lt;span&gt;&#x6807;&#x7B7E;&#x4E91;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">    {% <span class="keyword">if</span> site.tags.length &gt; <span class="number">1</span> %}</span><br><span class="line">    &lt;script type=<span class="string">&quot;text/javascript&quot;</span> charset=<span class="string">&quot;utf-8&quot;</span> src=<span class="string">&quot;{{ url_for(&apos;/js/tagcloud.js&apos;) }}&quot;</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">    &lt;script type=<span class="string">&quot;text/javascript&quot;</span> charset=<span class="string">&quot;utf-8&quot;</span> src=<span class="string">&quot;{{ url_for(&apos;/js/tagcanvas.js&apos;) }}&quot;</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;widget-wrap&quot;</span>&gt;</span><br><span class="line">        &lt;div id=<span class="string">&quot;myCanvasContainer&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;widget tagcloud&quot;</span>&gt;</span><br><span class="line">        &lt;canvas width=<span class="string">&quot;250&quot;</span> height=<span class="string">&quot;250&quot;</span> id=<span class="string">&quot;resCanvas&quot;</span> style=<span class="string">&quot;width=100%&quot;</span>&gt;</span><br><span class="line">            {{ list_tags() }}</span><br><span class="line">        &lt;<span class="regexp">/canvas&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>div&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    {% endif %}</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure></li><li><p>&#x53CB;&#x60C5;&#x94FE;&#x63A5;</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;link-of-blogroll&quot;</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;item_headline&quot;</span>&gt;</span><br><span class="line">    &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;fa fa-handshake-o&quot;</span> aria-hidden=<span class="string">&quot;true&quot;</span>&gt;</span><br><span class="line">    &lt;<span class="regexp">/i&gt;&lt;span&gt;&#x53CB;&#x60C5;&#x94FE;&#x63A5;&lt;/</span>span&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    {%- if theme.links %}</span></span><br><span class="line"><span class="regexp">    &lt;div class=&quot;links-of-blogroll motion-element {{ &quot;links-of-blogroll-&quot; + theme.links_layout | default(&apos;inline&apos;) }}&quot;&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div class=&quot;links-of-blogroll-title&quot;&gt;</span></span><br><span class="line"><span class="regexp">        &lt;i class=&quot;fa  fa-fw fa-{{ theme.links_icon | default(&apos;globe&apos;) | lower }}&quot;&gt;&lt;/i</span>&gt;</span><br><span class="line">        {{ theme.links_title }}</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        &lt;ul class=&quot;links-of-blogroll-list&quot;&gt;</span></span><br><span class="line"><span class="regexp">        {%- for blogrollText, blogrollURL in theme.links %}</span></span><br><span class="line"><span class="regexp">            &lt;li class=&quot;links-of-blogroll-item&quot;&gt;</span></span><br><span class="line"><span class="regexp">            {{ next_url(blogrollURL, blogrollText, {title: blogrollURL}) }}</span></span><br><span class="line"><span class="regexp">            &lt;/</span>li&gt;</span><br><span class="line">        {%- endfor %}</span><br><span class="line">        &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">    {%- endif %}</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>&#x4E3B;&#x9875;&#x7684;&#x4FA7;&#x680F;&#x5C31;&#x8BBE;&#x7F6E;&#x5B8C;&#x6210;&#x4E86;&#x3002;</p><p>&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x662F;&#x6D4F;&#x89C8;&#x6587;&#x7AE0;&#x65F6;&#x7684;&#x4FA7;&#x680F;&#x7684;&#x8BBE;&#x8BA1;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x76F4;&#x63A5;&#x4E0A;&#x6211;&#x7684;&#x4EE3;&#x7801;&#x4E86;<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;sidebar-inner&quot;</span>&gt; </span><br><span class="line">    {%- <span class="keyword">if</span> display_toc and toc(page.content).length &gt; <span class="number">1</span> %}</span><br><span class="line">    &lt;!--noindex--&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;author-overview&quot;</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;site-author motion-element&quot;</span> itemprop=<span class="string">&quot;author&quot;</span> itemscope itemtype=<span class="string">&quot;http://schema.org/Person&quot;</span>&gt;</span><br><span class="line">            {%- <span class="keyword">if</span> theme.avatar.url %}</span><br><span class="line">            &lt;img <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;site-author-image&quot;</span> itemprop=<span class="string">&quot;image&quot;</span></span><br><span class="line">                src=<span class="string">&quot;{{ url_for( theme.avatar.url | default(theme.images + &apos;/avatar.gif&apos;) ) }}&quot;</span></span><br><span class="line">                alt=<span class="string">&quot;{{ author }}&quot;</span>&gt;</span><br><span class="line">            {%- endif %}</span><br><span class="line">            &lt;p <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;site-author-name&quot;</span> itemprop=<span class="string">&quot;name&quot;</span>&gt;{{ author }}&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">            &lt;div class=&quot;site-description motion-element&quot; itemprop=&quot;description&quot;&gt;{{ description }}&lt;/</span>div&gt;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        {%- if theme.site_state %}</span></span><br><span class="line"><span class="regexp">        &lt;nav class=&quot;site-state motion-element&quot;&gt;</span></span><br><span class="line"><span class="regexp">            {%- if config.archive_dir != &apos;/</span><span class="string">&apos; and site.posts.length &gt; 0 %}</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;site-state-item site-state-posts&quot;&gt;</span></span><br><span class="line"><span class="string">                {%- if theme.menu.archives %}</span></span><br><span class="line"><span class="string">                &lt;a href=&quot;{{ url_for(theme.menu.archives).split(&apos;</span>||<span class="string">&apos;)[0] | trim }}&quot;&gt;</span></span><br><span class="line"><span class="string">                {% else %}</span></span><br><span class="line"><span class="string">                &lt;a href=&quot;{{ url_for(config.archive_dir) }}&quot;&gt;</span></span><br><span class="line"><span class="string">                {%- endif %}</span></span><br><span class="line"><span class="string">                &lt;span class=&quot;site-state-item-count&quot;&gt;{{ site.posts.length }}&lt;/span&gt;</span></span><br><span class="line"><span class="string">                &lt;span class=&quot;site-state-item-name&quot;&gt;{{ __(&apos;</span>state.posts<span class="string">&apos;) }}&lt;/span&gt;</span></span><br><span class="line"><span class="string">                &lt;/a&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            {%- endif %}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            {%- if site.categories.length &gt; 0 %}</span></span><br><span class="line"><span class="string">            {%- set categoriesPageQuery = site.pages.find({type: &apos;</span>categories<span class="string">&apos;}, {lean: true}) %}</span></span><br><span class="line"><span class="string">            {%- set hasCategoriesPage = categoriesPageQuery.length &gt; 0 %}</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;site-state-item site-state-categories&quot;&gt;</span></span><br><span class="line"><span class="string">                {%- if hasCategoriesPage %}</span></span><br><span class="line"><span class="string">                {%- if theme.menu.categories %}</span></span><br><span class="line"><span class="string">                    &lt;a href=&quot;{{ url_for(theme.menu.categories).split(&apos;</span>||<span class="string">&apos;)[0] | trim }}&quot;&gt;</span></span><br><span class="line"><span class="string">                {% else %}</span></span><br><span class="line"><span class="string">                    &lt;a href=&quot;{{ url_for(config.category_dir) + &apos;</span>/<span class="string">&apos; }}&quot;&gt;</span></span><br><span class="line"><span class="string">                {%- endif %}</span></span><br><span class="line"><span class="string">                {%- endif %}</span></span><br><span class="line"><span class="string">                {%- set visibleCategories = 0 %}</span></span><br><span class="line"><span class="string">                {%- for cat in site.categories %}</span></span><br><span class="line"><span class="string">                {%- if cat.length %}{%- set visibleCategories += 1 %}{%- endif %}</span></span><br><span class="line"><span class="string">                {%- endfor %}</span></span><br><span class="line"><span class="string">                &lt;span class=&quot;site-state-item-count&quot;&gt;{{ visibleCategories }}&lt;/span&gt;</span></span><br><span class="line"><span class="string">                &lt;span class=&quot;site-state-item-name&quot;&gt;{{ __(&apos;</span>state.categories<span class="string">&apos;) }}&lt;/span&gt;</span></span><br><span class="line"><span class="string">                {%- if hasCategoriesPage %}&lt;/a&gt;{%- endif %}</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            {%- endif %}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            {%- if site.tags.length &gt; 0 %}</span></span><br><span class="line"><span class="string">            {%- set tagsPageQuery = site.pages.find({type: &apos;</span>tags<span class="string">&apos;}, {lean: true}) %}</span></span><br><span class="line"><span class="string">            {%- set hasTagsPage = tagsPageQuery.length &gt; 0 %}</span></span><br><span class="line"><span class="string">            &lt;div class=&quot;site-state-item site-state-tags&quot;&gt;</span></span><br><span class="line"><span class="string">                {%- if hasTagsPage %}</span></span><br><span class="line"><span class="string">                {%- if theme.menu.tags %}</span></span><br><span class="line"><span class="string">                    &lt;a href=&quot;{{ url_for(theme.menu.tags).split(&apos;</span>||<span class="string">&apos;)[0] | trim }}&quot;&gt;</span></span><br><span class="line"><span class="string">                {% else %}</span></span><br><span class="line"><span class="string">                    &lt;a href=&quot;{{ url_for(config.tag_dir) + &apos;</span>/<span class="string">&apos; }}&quot;&gt;</span></span><br><span class="line"><span class="string">                {%- endif %}</span></span><br><span class="line"><span class="string">                {%- endif %}</span></span><br><span class="line"><span class="string">                {%- set visibleTags = 0 %}</span></span><br><span class="line"><span class="string">                {%- for tag in site.tags %}</span></span><br><span class="line"><span class="string">                {%- if tag.length %}{%- set visibleTags += 1 %}{%- endif %}</span></span><br><span class="line"><span class="string">                {%- endfor %}</span></span><br><span class="line"><span class="string">                &lt;span class=&quot;site-state-item-count&quot;&gt;{{ visibleTags }}&lt;/span&gt;</span></span><br><span class="line"><span class="string">                &lt;span class=&quot;site-state-item-name&quot;&gt;{{ __(&apos;</span>state.tags<span class="string">&apos;) }}&lt;/span&gt;</span></span><br><span class="line"><span class="string">                {%- if hasTagsPage %}&lt;/a&gt;{%- endif %}</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            {%- endif %}</span></span><br><span class="line"><span class="string">        &lt;/nav&gt;</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        {%- if theme.social %}</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;links-of-author motion-element&quot;&gt;</span></span><br><span class="line"><span class="string">            {%- for name, link in theme.social %}</span></span><br><span class="line"><span class="string">            &lt;span class=&quot;links-of-author-item&quot;&gt;</span></span><br><span class="line"><span class="string">            {%- set sidebarURL = link.split(&apos;</span>||<span class="string">&apos;)[0] | trim %}</span></span><br><span class="line"><span class="string">            {%- if not (theme.social_icons.enable) or (not theme.social_icons.icons_only) %}</span></span><br><span class="line"><span class="string">                {%- set sidebarText = name %}</span></span><br><span class="line"><span class="string">            {%- endif %}</span></span><br><span class="line"><span class="string">            {%- if theme.social_icons.enable %}</span></span><br><span class="line"><span class="string">                {%- set sidebarIcon = &apos;</span>&lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;fa fa-fw fa-&apos; + link.split(&apos;||&apos;)[1] | trim | default(&apos;globe&apos;) + &apos;&quot;</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><span class="string">&apos; %}</span></span><br><span class="line"><span class="string">            {%- endif %}</span></span><br><span class="line"><span class="string">                {{ next_url(sidebarURL, sidebarIcon + sidebarText, {title: name + &apos;</span> &amp;rarr; <span class="string">&apos; + sidebarURL}) }}</span></span><br><span class="line"><span class="string">            &lt;/span&gt;</span></span><br><span class="line"><span class="string">            {%- endfor %}</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        {%- if theme.rss %}</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;feed-link motion-element&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;a href=&quot;{{ url_for(theme.rss) }}&quot; rel=&quot;alternate&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;i class=&quot;fa fa-rss&quot;&gt;&lt;/i&gt;RSS</span></span><br><span class="line"><span class="string">            &lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        {%- if theme.chat.enable and theme.chat.service !== &apos;</span><span class="string">&apos; %}</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;chat motion-element&quot;&gt;</span></span><br><span class="line"><span class="string">        {%- if theme.chat.service == &apos;</span>chatra<span class="string">&apos; and theme.chatra.enable %}</span></span><br><span class="line"><span class="string">            &lt;a onclick=&quot;Chatra(&apos;</span>openChat<span class="string">&apos;, true)&quot;&gt;</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string">        {%- if theme.chat.service == &apos;</span>tidio<span class="string">&apos; and theme.tidio.enable %}</span></span><br><span class="line"><span class="string">            &lt;a onclick=&quot;tidioChatApi.open();&quot;&gt;</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string">        {%- if theme.chat.icon %}&lt;i class=&quot;fa fa-{{ theme.chat.icon }}&quot;&gt;&lt;/i&gt;{%- endif %}</span></span><br><span class="line"><span class="string">            {{ theme.chat.text }}</span></span><br><span class="line"><span class="string">        &lt;/a&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        {%- if theme.creative_commons.license and theme.creative_commons.sidebar %}</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;cc-license motion-element&quot; itemprop=&quot;license&quot;&gt;</span></span><br><span class="line"><span class="string">        {%- set ccLanguage = theme.creative_commons.language %}</span></span><br><span class="line"><span class="string">        {%- if theme.creative_commons.license === &apos;</span>zero<span class="string">&apos; %}</span></span><br><span class="line"><span class="string">            {%- set ccType = &apos;</span>publicdomain/zero/<span class="number">1.0</span>/<span class="string">&apos; + ccLanguage %}</span></span><br><span class="line"><span class="string">        {% else %}</span></span><br><span class="line"><span class="string">            {%- set ccType = &apos;</span>licenses/<span class="string">&apos; + theme.creative_commons.license + &apos;</span>/<span class="number">4.0</span>/<span class="string">&apos; + ccLanguage %}</span></span><br><span class="line"><span class="string">        {%- endif %}</span></span><br><span class="line"><span class="string">        {%- set ccURL = &apos;</span>https:<span class="comment">//creativecommons.org/&apos; + ccType %}</span></span><br><span class="line">        {%- <span class="keyword">set</span> ccImage = &apos;&lt;img src=&quot;&apos; + url_for(theme.images + &apos;/cc-&apos; + theme.creative_commons.license + &apos;.svg&apos;) + &apos;&quot; alt=&quot;Creative Commons&quot;&gt;&apos; %}</span><br><span class="line">            {{ next_url(ccURL, ccImage, {<span class="attr">class</span>: <span class="string">&apos;cc-opacity&apos;</span>}) }}</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        {%- endif %}</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;post-toc-wrap motion-element sidebar-panel sidebar-panel-active&quot;</span> id=<span class="string">&quot;post-toc-wrap&quot;</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;item_headline&quot;</span>&gt;</span><br><span class="line">        &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;fa fa-list&quot;</span> aria-hidden=<span class="string">&quot;true&quot;</span>&gt;</span><br><span class="line">        &lt;<span class="regexp">/i&gt;&lt;span&gt;&#x76EE;&#x5F55;&lt;/</span>span&gt;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div class=&quot;post-toc&quot;&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        {%- set next_toc_number = theme.toc.number %}</span></span><br><span class="line"><span class="regexp">        {%- if page.toc_number !== undefined %}</span></span><br><span class="line"><span class="regexp">            {%- set next_toc_number = page.toc_number %}</span></span><br><span class="line"><span class="regexp">        {%- endif %}</span></span><br><span class="line"><span class="regexp">        {%- set next_toc_max_depth = page.toc_max_depth|default(theme.toc.max_depth)|default(6) %}</span></span><br><span class="line"><span class="regexp">        {%- set toc = toc(page.content, { &quot;class&quot;: &quot;nav&quot;, list_number: next_toc_number, max_depth: next_toc_max_depth }) %}</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">        {%- if toc.length &lt;= 1 %}</span></span><br><span class="line"><span class="regexp">            &lt;p class=&quot;post-toc-empty&quot;&gt;{{ __(&apos;post.toc_empty&apos;) }}&lt;/</span>p&gt;</span><br><span class="line">        {% <span class="keyword">else</span> %}</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;post-toc-content&quot;</span>&gt;{{ toc }}&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        {%- endif %}</span></span><br><span class="line"><span class="regexp">        &lt;/</span>div&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;!--/</span>noindex--&gt;</span><br><span class="line">    {%- endif %}</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure></p><p>&#x4E4B;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x81EA;&#x7531;&#x53D1;&#x6325;&#x6DFB;&#x52A0;CSS&#x6837;&#x5F0F;&#x4E86;&#x3002;</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;&amp;#x524D;&amp;#x8A00;&quot;&gt;&lt;a href=&quot;#&amp;#x524D;&amp;#x8A00;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x524D;&amp;#x8A00;&quot;&gt;&lt;/a&gt;&amp;#x524D;&amp;#x8A00;&lt;/h1&gt;&lt;p&gt;&amp;#x73B0;&amp;#x5728;&amp;#x6211;&amp;#x76F8;&amp;#x4FE1;&amp;#x5174;&amp;#x8DA3;&amp;#x662F;&amp;#x6700;&amp;#x597D;&amp;#x7684;&amp;#x5B66;&amp;#x4E60;&amp;#x52A8;&amp;#x529B;&amp;#x4E86;&amp;#x3002;&amp;#x4F5C;&amp;#x4E3A;&amp;#x4E00;&amp;#x4E2A;&amp;#x5BF9;&amp;#x524D;&amp;#x6BB5;&amp;#x5B8C;&amp;#x5168;&amp;#x63D0;&amp;#x4E0D;&amp;#x8D77;&amp;#x5174;&amp;#x8DA3;&amp;#x7684;&amp;#x4EBA;&amp;#xFF0C;&amp;#x5728;&amp;#x89C1;&amp;#x8BC6;&amp;#x5230;&amp;#x522B;&amp;#x4EBA;&amp;#x7684;&amp;#x535A;&amp;#x5BA2;&amp;#x6709;&amp;#x591A;&amp;#x597D;&amp;#x770B;&amp;#x4E4B;&amp;#x540E;&amp;#xFF0C;&amp;#x6211;&amp;#x5C45;&amp;#x7136;&amp;#x5BF9;&amp;#x7F8E;&amp;#x5316;&amp;#x535A;&amp;#x5BA2;&amp;#x4EA7;&amp;#x751F;&amp;#x4E86;&amp;#x5F3A;&amp;#x70C8;&amp;#x7684;&amp;#x5174;&amp;#x8DA3;&amp;#x3002;&amp;#x4EE5;&amp;#x81F3;&amp;#x4E8E;&amp;#x5728;&amp;#x6298;&amp;#x817E;&amp;#x7684;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;&amp;#x6D51;&amp;#x7136;&amp;#x4E0D;&amp;#x77E5;&amp;#x65F6;&amp;#x95F4;&amp;#x7684;&amp;#x6D41;&amp;#x901D;&amp;#xFF0C;&amp;#x6709;&amp;#x65F6;&amp;#x5019;&amp;#x660E;&amp;#x660E;&amp;#x5DF2;&amp;#x7ECF;&amp;#x9965;&amp;#x80A0;&amp;#x8F98;&amp;#x8F98;&amp;#x4E86;&amp;#x5374;&amp;#x4F9D;&amp;#x7136;&amp;#x4E50;&amp;#x4E4B;&amp;#x4E0D;&amp;#x75B2;&amp;#xFF0C;&amp;#x8FDE;&amp;#x6211;&amp;#x81EA;&amp;#x5DF1;&amp;#x90FD;&amp;#x5728;&amp;#x6000;&amp;#x7591;&amp;#x81EA;&amp;#x5DF1;&amp;#x662F;&amp;#x4E0D;&amp;#x662F;&amp;#x7740;&amp;#x4E86;&amp;#x9B54;&amp;#x3002;&amp;#x5728;&amp;#x9AD8;&amp;#x5F3A;&amp;#x5EA6;&amp;#x6298;&amp;#x817E;&amp;#x4E86;&amp;#x5C06;&amp;#x8FD1;&amp;#x4E00;&amp;#x5929;&amp;#x540E;&amp;#xFF0C;&amp;#x6211;&amp;#x7EC8;&amp;#x4E8E;&amp;#x5C06;&amp;#x6211;&amp;#x7684;&amp;#x535A;&amp;#x5BA2;&amp;#x4FA7;&amp;#x680F;&amp;#x6253;&amp;#x9020;&amp;#x6210;&amp;#x4E86;&amp;#x6211;&amp;#x6EE1;&amp;#x610F;&amp;#x7684;&amp;#x6837;&amp;#x5B50;&amp;#x3002;&amp;#x5BF9;&amp;#x4E8E;&amp;#x6211;&amp;#x8FD9;&amp;#x79CD;&amp;#x6BEB;&amp;#x65E0;&amp;#x4EFB;&amp;#x4F55;HTML&amp;#xFF0C;CSS&amp;#x7B49;&amp;#x57FA;&amp;#x7840;&amp;#x7684;&amp;#x4EBA;&amp;#xFF0C;&amp;#x5728;&amp;#x6298;&amp;#x817E;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;&amp;#x9047;&amp;#x5230;&amp;#x4E86;&amp;#x96BE;&amp;#x4EE5;&amp;#x8BA1;&amp;#x6570;&amp;#x7684;bug&amp;#xFF0C;&amp;#x6240;&amp;#x4EE5;&amp;#x80FD;&amp;#x6709;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x6210;&amp;#x679C;&amp;#x5DF2;&amp;#x7ECF;&amp;#x662F;&amp;#x76F8;&amp;#x5F53;&amp;#x6EE1;&amp;#x8DB3;&amp;#x4E86;&amp;#x3002;&amp;#x8FD9;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#x8BB0;&amp;#x5F55;&amp;#x6211;&amp;#x5BF9;&amp;#x4FA7;&amp;#x680F;&amp;#x8FDB;&amp;#x884C;&amp;#x9B54;&amp;#x6539;&amp;#x7684;&amp;#x6574;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo框架" scheme="http://zhengyujie.cn/categories/Hexo%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Hexo" scheme="http://zhengyujie.cn/tags/Hexo/"/>
    
      <category term="NexT" scheme="http://zhengyujie.cn/tags/NexT/"/>
    
      <category term="JavaScript" scheme="http://zhengyujie.cn/tags/JavaScript/"/>
    
      <category term="Django" scheme="http://zhengyujie.cn/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Hexo折腾日记之标签篇</title>
    <link href="http://zhengyujie.cn/2019/08/20/hexo%E5%BD%A9%E8%89%B2%E6%A0%87%E7%AD%BE/"/>
    <id>http://zhengyujie.cn/2019/08/20/hexo彩色标签/</id>
    <published>2019-08-20T05:24:27.000Z</published>
    <updated>2019-08-22T06:12:28.165Z</updated>
    
    <content type="html"><![CDATA[<h1 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h1><p>&#x4ECA;&#x5929;&#x53C8;&#x8017;&#x8D39;&#x4E00;&#x4E2A;&#x4E0A;&#x5348;&#x7ED9;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x6298;&#x817E;&#x51FA;&#x4E86;&#x5F69;&#x8272;&#x6807;&#x7B7E;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x8BB0;&#x5F55;&#x6211;&#x7684;&#x8BBE;&#x7F6E;&#x8FC7;&#x7A0B;</p><a id="more"></a><h1 id="page-swig&#x6587;&#x4EF6;&#x8BBE;&#x7F6E;"><a href="#page-swig&#x6587;&#x4EF6;&#x8BBE;&#x7F6E;" class="headerlink" title="page.swig&#x6587;&#x4EF6;&#x8BBE;&#x7F6E;"></a>page.swig&#x6587;&#x4EF6;&#x8BBE;&#x7F6E;</h1><p>&#x9996;&#x5148;&#x5148;&#x6253;&#x5F00;<code>/next/layout</code>&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x7684;page.swig&#x6587;&#x4EF6;&#xFF0C;&#x5728;&#x6587;&#x4EF6;&#x4E2D;&#x627E;&#x5230;&#x4EE5;&#x4E0B;&#x5185;&#x5BB9;<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;tag-cloud&quot;</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;tag-cloud-title&quot;</span>&gt;</span><br><span class="line">        {%- <span class="keyword">set</span> visibleTags = 0 %}</span><br><span class="line">        {%- <span class="keyword">for</span> tag <span class="keyword">in</span> site.tags %}</span><br><span class="line">        {%- <span class="keyword">if</span> tag.length %}</span><br><span class="line">            {%- <span class="keyword">set</span> visibleTags += 1 %}</span><br><span class="line">        {%- endif %}</span><br><span class="line">        {%- endfor %}</span><br><span class="line">        {{ _p(<span class="string">&apos;counter.tag_cloud&apos;</span>, visibleTags) }}</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure></p><p>&#x63A5;&#x4E0B;&#x6765;&#x7684;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x6807;&#x7B7E;&#x9875;&#x9762;&#x7684;&#x4E3B;&#x8981;&#x4EE3;&#x7801;<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;tag-cloud-tags&quot;</span> id=<span class="string">&quot;tags&quot;</span>&gt;</span><br><span class="line">        {%- <span class="keyword">if</span> not theme.tagcloud %}</span><br><span class="line">        {{ tagcloud({<span class="attr">min_font</span>: <span class="number">12</span>, <span class="attr">max_font</span>: <span class="number">30</span>, <span class="attr">amount</span>: <span class="number">200</span>, <span class="attr">color</span>: <span class="literal">true</span>, <span class="attr">start_color</span>: <span class="string">&apos;#fff&apos;</span>, <span class="attr">end_color</span>: <span class="string">&apos;#fff&apos;</span>}) }}</span><br><span class="line">        {% <span class="keyword">else</span> %}</span><br><span class="line">        {{ tagcloud({<span class="attr">min_font</span>: theme.tagcloud.min, <span class="attr">max_font</span>: theme.tagcloud.max, <span class="attr">amount</span>: theme.tagcloud.amount, <span class="attr">color</span>: <span class="literal">true</span>, <span class="attr">start_color</span>: theme.tagcloud.start, <span class="attr">end_color</span>: theme.tagcloud.end}) }}</span><br><span class="line">        {%- endif %}             </span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure></p><p>&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x5C06;&#x8D77;&#x59CB;&#x989C;&#x8272;&#x548C;&#x7EC8;&#x6B62;&#x989C;&#x8272;&#x90FD;&#x6362;&#x6210;&#x4E86;<code>#fff</code>&#x5373;&#x7EAF;&#x767D;&#x8272;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x5C31;&#x5F00;&#x59CB;&#x968F;&#x673A;&#x8BBE;&#x7F6E;&#x6BCF;&#x4E2A;&#x6807;&#x7B7E;&#x7684;&#x80CC;&#x666F;&#x989C;&#x8272;&#x3002;<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    <span class="keyword">var</span> alltags=<span class="built_in">document</span>.getElementById(<span class="string">&apos;tags&apos;</span>);</span><br><span class="line">    <span class="keyword">var</span> tags=alltags.getElementsByTagName(<span class="string">&apos;a&apos;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = tags.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) {</span><br><span class="line">        <span class="keyword">var</span> r=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">75</span>+<span class="number">130</span>);</span><br><span class="line">        <span class="keyword">var</span> g=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">75</span>+<span class="number">100</span>);</span><br><span class="line">        <span class="keyword">var</span> b=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">75</span>+<span class="number">80</span>);</span><br><span class="line">        tags[i].style.background = <span class="string">&quot;rgb(&quot;</span>+r+<span class="string">&quot;,&quot;</span>+g+<span class="string">&quot;,&quot;</span>+b+<span class="string">&quot;)&quot;</span>;</span><br><span class="line">    }</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></p><p>&#x7136;&#x540E;&#x6211;&#x4EEC;&#x518D;&#x8C03;&#x6574;&#x6807;&#x7B7E;&#x7684;CSS&#x6837;&#x5F0F;&#x5373;&#x53EF;&#xFF0C;&#x8FD9;&#x91CC;&#x9644;&#x4E0A;&#x6211;&#x7684;CSS&#x6837;&#x5F0F;<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.tag-cloud</span> <span class="selector-tag">a</span> {</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p><h1 id="post-swig&#x6587;&#x4EF6;&#x8BBE;&#x7F6E;"><a href="#post-swig&#x6587;&#x4EF6;&#x8BBE;&#x7F6E;" class="headerlink" title="post.swig&#x6587;&#x4EF6;&#x8BBE;&#x7F6E;"></a>post.swig&#x6587;&#x4EF6;&#x8BBE;&#x7F6E;</h1><p>&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x8BBE;&#x7F6E;&#x4E3B;&#x9875;&#x7684;&#x6807;&#x7B7E;&#xFF0C;&#x9996;&#x5148;NexT&#x4E3B;&#x9898;&#x9996;&#x9875;&#x7684;&#x6587;&#x7AE0;&#x9884;&#x89C8;&#x91CC;&#x6CA1;&#x6709;&#x6807;&#x7B7E;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x8981;&#x5148;&#x5728;&#x6587;&#x7AE0;&#x9884;&#x89C8;&#x91CC;&#x6DFB;&#x52A0;&#x6807;&#x7B7E;&#x3002;&#x6253;&#x5F00;<code>/home/zyj/blog/themes/next/layout/_macro</code>&#x4E0B;&#x7684;post.swig&#x6587;&#x4EF6;&#xFF0C;&#x627E;&#x5230;<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">{% elif post.excerpt %}</span><br><span class="line">    {{ post.excerpt }}</span><br></pre></td></tr></table></figure></p><p>&#x5728;&#x5176;&#x540E;&#x9762;&#x6DFB;&#x52A0;<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">{%- <span class="keyword">if</span> post.tags and post.tags.length %}</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;home-post-tags&quot;</span>&gt;</span><br><span class="line">    {%- <span class="keyword">for</span> tag <span class="keyword">in</span> post.tags %}</span><br><span class="line">    &lt;a href=<span class="string">&quot;{{ url_for(tag.path) }}&quot;</span> rel=<span class="string">&quot;tag&quot;</span>&gt;{{ tag.name }}&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">    {%- endfor %}</span></span><br><span class="line"><span class="regexp">    &lt;script type=&quot;text/</span>javascript<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">    var tagsall=document.getElementsByClassName(&quot;</span>home-post-tags<span class="string">&quot;)</span></span><br><span class="line"><span class="string">    for (var i = tagsall.length - 1; i &gt;= 0; i--){</span></span><br><span class="line"><span class="string">        var tags=tagsall[i].getElementsByTagName(&quot;</span>a<span class="string">&quot;);</span></span><br><span class="line"><span class="string">        for (var j = tags.length - 1; j &gt;= 0; j--) {</span></span><br><span class="line"><span class="string">            var r=Math.floor(Math.random()*255);</span></span><br><span class="line"><span class="string">            var g=Math.floor(Math.random()*255);</span></span><br><span class="line"><span class="string">            var b=Math.floor(Math.random()*255);</span></span><br><span class="line"><span class="string">            tags[j].style.background = &quot;</span>rgb(<span class="string">&quot;+r+&quot;</span>,<span class="string">&quot;+g+&quot;</span>,<span class="string">&quot;+b+&quot;</span>)<span class="string">&quot;;</span></span><br><span class="line"><span class="string">        }</span></span><br><span class="line"><span class="string">    }</span></span><br><span class="line"><span class="string">    &lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">{%- endif %}</span></span><br></pre></td></tr></table></figure></p><p>&#x5373;&#x53EF;&#x5728;&#x6587;&#x7AE0;&#x9884;&#x89C8;&#x4E2D;&#x6DFB;&#x52A0;&#x5F69;&#x8272;&#x6807;&#x7B7E;</p><p>&#x63A5;&#x4E0B;&#x6765;&#x5C06;&#x6587;&#x7AE0;&#x4E3B;&#x9875;&#x9762;&#x672B;&#x5C3E;&#x7684;&#x6807;&#x7B7E;&#x6362;&#x6210;&#x5F69;&#x8272;&#x6807;&#x7B7E;&#xFF0C;&#x540C;&#x6837;&#x5728;post.swig&#x4E2D;&#x627E;&#x5230;&#xFF1A;<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;post-tags&quot;</span> id=<span class="string">&quot;post-tags&quot;</span>&gt;</span><br><span class="line">{%- <span class="keyword">for</span> tag <span class="keyword">in</span> post.tags %}</span><br><span class="line">    &lt;a href=<span class="string">&quot;{{ url_for(tag.path) }}&quot;</span> rel=<span class="string">&quot;tag&quot;</span>&gt;{{ tag_indicate }} {{ tag.name }}&lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">{%- endfor %}</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure></p><p>&#x5728;&#x5176;&#x540E;&#x6DFB;&#x52A0;<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"><span class="keyword">var</span> tagsall=<span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;post-tags&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = tagsall.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--){</span><br><span class="line">    <span class="keyword">var</span> tags=tagsall[i].getElementsByTagName(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> j = tags.length - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--) {</span><br><span class="line">        <span class="keyword">var</span> r=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">75</span>+<span class="number">130</span>);</span><br><span class="line">        <span class="keyword">var</span> g=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">75</span>+<span class="number">100</span>);</span><br><span class="line">        <span class="keyword">var</span> b=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">75</span>+<span class="number">80</span>);</span><br><span class="line">        tags[j].style.background = <span class="string">&quot;rgb(&quot;</span>+r+<span class="string">&quot;,&quot;</span>+g+<span class="string">&quot;,&quot;</span>+b+<span class="string">&quot;)&quot;</span>;</span><br><span class="line">    }</span><br><span class="line">}                        </span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;&amp;#x524D;&amp;#x8A00;&quot;&gt;&lt;a href=&quot;#&amp;#x524D;&amp;#x8A00;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x524D;&amp;#x8A00;&quot;&gt;&lt;/a&gt;&amp;#x524D;&amp;#x8A00;&lt;/h1&gt;&lt;p&gt;&amp;#x4ECA;&amp;#x5929;&amp;#x53C8;&amp;#x8017;&amp;#x8D39;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E0A;&amp;#x5348;&amp;#x7ED9;&amp;#x6211;&amp;#x7684;&amp;#x535A;&amp;#x5BA2;&amp;#x6298;&amp;#x817E;&amp;#x51FA;&amp;#x4E86;&amp;#x5F69;&amp;#x8272;&amp;#x6807;&amp;#x7B7E;&amp;#xFF0C;&amp;#x63A5;&amp;#x4E0B;&amp;#x6765;&amp;#x8BB0;&amp;#x5F55;&amp;#x6211;&amp;#x7684;&amp;#x8BBE;&amp;#x7F6E;&amp;#x8FC7;&amp;#x7A0B;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo框架" scheme="http://zhengyujie.cn/categories/Hexo%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Hexo" scheme="http://zhengyujie.cn/tags/Hexo/"/>
    
      <category term="NexT" scheme="http://zhengyujie.cn/tags/NexT/"/>
    
      <category term="JavaScript" scheme="http://zhengyujie.cn/tags/JavaScript/"/>
    
      <category term="HTML" scheme="http://zhengyujie.cn/tags/HTML/"/>
    
      <category term="CSS" scheme="http://zhengyujie.cn/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Hexo添加Valine评论功能</title>
    <link href="http://zhengyujie.cn/2019/08/18/valine%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"/>
    <id>http://zhengyujie.cn/2019/08/18/valine评论系统/</id>
    <published>2019-08-18T02:41:28.000Z</published>
    <updated>2019-08-18T03:42:26.436Z</updated>
    
    <content type="html"><![CDATA[<h1 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h1><p>&#x4E00;&#x76F4;&#x60F3;&#x7ED9;&#x81EA;&#x5DF1;&#x7684;&#x535A;&#x5BA2;&#x6DFB;&#x52A0;&#x8BC4;&#x8BBA;&#x529F;&#x80FD;&#xFF0C;&#x6BD4;&#x8F83;&#x9760;&#x8C31;&#x7684;&#x8BC4;&#x8BBA;&#x7CFB;&#x7EDF;&#x6709;GitHub&#x4E0A;&#x7684;gitment&#xFF0C;gitalk&#xFF0C;gitter&#xFF0C;&#x6765;&#x5FC5;&#x529B;(&#x6709;&#x70B9;&#x513F;&#x82B1;&#x54E8;)&#xFF0C;&#x4EE5;&#x53CA;&#x4E00;&#x4E9B;&#x56FD;&#x5916;&#x7684;&#x8BC4;&#x8BBA;&#x7CFB;&#x7EDF;(&#x9700;&#x8981;&#x7FFB;&#x5899;)&#x3002;&#x5076;&#x7136;&#x95F4;&#x4E86;&#x89E3;&#x5230;&#x4E00;&#x6B3E;&#x56FD;&#x4EBA;&#x5F00;&#x53D1;&#x7684;&#x8BC4;&#x8BBA;&#x7CFB;&#x7EDF;&#x53EB;Valine&#x7528;&#x7684;&#x662F;LeanCloud&#x4F5C;&#x4E3A;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x6D01;&#x9762;&#x5F88;&#x7B80;&#x6D01;&#xFF0C;&#x4E0D;&#x50CF;&#x6765;&#x5FC5;&#x529B;&#x90A3;&#x6837;&#x82B1;&#x54E8;&#x53EA;&#x662F;&#x5355;&#x7EAF;&#x7684;&#x8BC4;&#x8BBA;&#xFF0C;&#x7B80;&#x6D01;&#x5230;&#x6CA1;&#x6709;&#x540E;&#x53F0;&#xFF0C;&#x5220;&#x9664;&#x548C;&#x7BA1;&#x7406;&#x8BC4;&#x8BBA;&#x76F4;&#x63A5;&#x64CD;&#x4F5C;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x4E8E;&#x662F;&#x51B3;&#x5B9A;&#x5C31;&#x662F;&#x4F60;&#x4E86;&#x3002;&#x672C;&#x7247;&#x535A;&#x5BA2;&#x7528;&#x4E8E;&#x8BB0;&#x5F55;&#x6DFB;&#x52A0;Valine&#x8BC4;&#x8BBA;&#x529F;&#x80FD;&#x7684;&#x5B8C;&#x6574;&#x8FC7;&#x7A0B;&#x3002;</p><a id="more"></a><h1 id="&#x6DFB;&#x52A0;Valine&#x8BC4;&#x8BBA;"><a href="#&#x6DFB;&#x52A0;Valine&#x8BC4;&#x8BBA;" class="headerlink" title="&#x6DFB;&#x52A0;Valine&#x8BC4;&#x8BBA;"></a>&#x6DFB;&#x52A0;Valine&#x8BC4;&#x8BBA;</h1><ol><li><p>&#x6CE8;&#x518C;LeanCloud</p></li><li><p>&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5F00;&#x53D1;&#x7248;&#x5E94;&#x7528;</p></li><li><p>&#x521B;&#x5EFA; Class<br> &#x5728;LeanCloud -&gt; &#x5B58;&#x50A8; -&gt; &#x521B;&#x5EFA;Class -&gt; &#x65E0;&#x9650;&#x5236;&#x7684;Class</p></li><li>&#x5173;&#x95ED;&#x670D;&#x52A1;&#x5F00;&#x5173;<br> &#x5728;LeanCloud -&gt; &#x8BBE;&#x7F6E; -&gt; &#x5B89;&#x5168;&#x4E2D;&#x5FC3; -&gt; &#x670D;&#x52A1;&#x5F00;&#x5173;&#xFF0C;&#x628A;&#x9664;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x5176;&#x4ED6;&#x9009;&#x9879;&#x90FD;&#x5173;&#x95ED;&#x3002;</li><li>&#x6DFB;&#x52A0;&#x57DF;&#x540D;<br> &#x5728;LeanCloud -&gt; &#x8BBE;&#x7F6E; -&gt; &#x5B89;&#x5168;&#x4E2D;&#x5FC3; -&gt; Wwb&#x5B89;&#x5168;&#x57DF;&#x540D;&#xFF0C;&#x6CE8;&#x610F;&#x683C;&#x5F0F;</li><li><p>&#x4FEE;&#x6539;&#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x6587;&#x4EF6;<br> &#x6253;&#x5F00;&#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x6587;&#x4EF6;<code>_config.yml</code>&#xFF0C;&#x641C;&#x7D22;&#x627E;&#x5230;<code>Valine</code>&#x90E8;&#x5206;&#xFF0C;&#x586B;&#x5199;appid&#x4EE5;&#x53CA;appkey</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Valine</span></span><br><span class="line"><span class="comment"># You can get your appid and appkey from https://leancloud.cn</span></span><br><span class="line"><span class="comment"># For more information: https://valine.js.org, https://github.com/xCss/Valine</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line"><span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># When enable is set to be true, leancloud_visitors is recommended to be closed for the re-initialization problem within different leancloud adk version</span></span><br><span class="line"><span class="attr">appid:</span> <span class="comment"># your appid</span></span><br><span class="line"><span class="attr">appkey:</span> <span class="comment"># your appkey</span></span><br><span class="line"><span class="attr">notify:</span> <span class="literal">true</span> <span class="comment"># Mail notifier. See: https://github.com/xCss/Valine/wiki</span></span><br><span class="line"><span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># Verification code</span></span><br><span class="line"><span class="attr">placeholder:</span> <span class="string">Just</span> <span class="string">go</span> <span class="string">go</span> <span class="comment"># Comment box placeholder</span></span><br><span class="line"><span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># Gravatar style</span></span><br><span class="line"><span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># Custom comment header</span></span><br><span class="line"><span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># Pagination size</span></span><br><span class="line"><span class="attr">language:</span> <span class="comment"># Language, available values: en, zh-cn</span></span><br><span class="line"><span class="attr">visitor:</span> <span class="literal">false</span> <span class="comment"># leancloud-counter-security is not supported for now. When visitor is set to be true, appid and appkey are recommended to be the same as leancloud_visitors&apos; for counter compatibility. Article reading statistic https://valine.js.org/visitor.html</span></span><br><span class="line"><span class="attr">comment_count:</span> <span class="literal">true</span> <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br></pre></td></tr></table></figure></li><li><p>&#x5F00;&#x542F;email&#x901A;&#x77E5;<br> &#x82E5;&#x8981;&#x5F00;&#x542F;&#x90AE;&#x4EF6;&#x901A;&#x77E5;&#xFF0C;&#x9996;&#x5148;&#x4FEE;&#x6539;&#x4E3B;&#x9898;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF1A;</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">notify: true # Mail notifier. See: https://github.com/xCss/Valine/wiki</span><br></pre></td></tr></table></figure><p> &#x7136;&#x540E;&#x5728;LeanCloud -&gt; &#x8BBE;&#x7F6E; -&gt; &#x90AE;&#x4EF6;&#x6A21;&#x677F;<br> &#x7528;&#x4E8E;&#x91CD;&#x7F6E;&#x5BC6;&#x7801;&#x7684;&#x90AE;&#x4EF6;&#x4E3B;&#x9898;&#x4FEE;&#x6539;&#x4E3A;&#xFF1A;</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x4F60;&#x5728;{{appname}} &#x7684;&#x8BC4;&#x8BBA;&#x6536;&#x5230;&#x4E86;&#x65B0;&#x7684;&#x56DE;&#x590D;</span><br></pre></td></tr></table></figure><p> &#x5185;&#x5BB9;&#x4FEE;&#x6539;&#x4E3A;&#xFF1A;</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hi, {{username}}<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">&#x4F60;&#x5728; {{appname}} &#x7684;&#x8BC4;&#x8BBA;&#x6536;&#x5230;&#x4E86;&#x65B0;&#x7684;&#x56DE;&#x590D;&#xFF0C;&#x8BF7;&#x70B9;&#x51FB;&#x67E5;&#x770B;&#xFF1A;</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#x4F60;&#x7684;&#x7F51;&#x5740;&#x9996;&#x9875;&#x94FE;&#x63A5;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;display: inline-block; padding: 10px 20px; border-radius: 4px; background-color: #3090e4; color: #fff; text-decoration: none;&quot;</span>&gt;</span>&#x9A6C;&#x4E0A;&#x67E5;&#x770B;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>&#x6700;&#x540E;&#x6B22;&#x8FCE;&#x5927;&#x5BB6;&#x5728;&#x4E0B;&#x65B9;&#x8BC4;&#x8BBA;&#x533A;&#x6D4B;&#x8BD5;&#x8BC4;&#x8BBA;</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;&amp;#x524D;&amp;#x8A00;&quot;&gt;&lt;a href=&quot;#&amp;#x524D;&amp;#x8A00;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x524D;&amp;#x8A00;&quot;&gt;&lt;/a&gt;&amp;#x524D;&amp;#x8A00;&lt;/h1&gt;&lt;p&gt;&amp;#x4E00;&amp;#x76F4;&amp;#x60F3;&amp;#x7ED9;&amp;#x81EA;&amp;#x5DF1;&amp;#x7684;&amp;#x535A;&amp;#x5BA2;&amp;#x6DFB;&amp;#x52A0;&amp;#x8BC4;&amp;#x8BBA;&amp;#x529F;&amp;#x80FD;&amp;#xFF0C;&amp;#x6BD4;&amp;#x8F83;&amp;#x9760;&amp;#x8C31;&amp;#x7684;&amp;#x8BC4;&amp;#x8BBA;&amp;#x7CFB;&amp;#x7EDF;&amp;#x6709;GitHub&amp;#x4E0A;&amp;#x7684;gitment&amp;#xFF0C;gitalk&amp;#xFF0C;gitter&amp;#xFF0C;&amp;#x6765;&amp;#x5FC5;&amp;#x529B;(&amp;#x6709;&amp;#x70B9;&amp;#x513F;&amp;#x82B1;&amp;#x54E8;)&amp;#xFF0C;&amp;#x4EE5;&amp;#x53CA;&amp;#x4E00;&amp;#x4E9B;&amp;#x56FD;&amp;#x5916;&amp;#x7684;&amp;#x8BC4;&amp;#x8BBA;&amp;#x7CFB;&amp;#x7EDF;(&amp;#x9700;&amp;#x8981;&amp;#x7FFB;&amp;#x5899;)&amp;#x3002;&amp;#x5076;&amp;#x7136;&amp;#x95F4;&amp;#x4E86;&amp;#x89E3;&amp;#x5230;&amp;#x4E00;&amp;#x6B3E;&amp;#x56FD;&amp;#x4EBA;&amp;#x5F00;&amp;#x53D1;&amp;#x7684;&amp;#x8BC4;&amp;#x8BBA;&amp;#x7CFB;&amp;#x7EDF;&amp;#x53EB;Valine&amp;#x7528;&amp;#x7684;&amp;#x662F;LeanCloud&amp;#x4F5C;&amp;#x4E3A;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#xFF0C;&amp;#x6D01;&amp;#x9762;&amp;#x5F88;&amp;#x7B80;&amp;#x6D01;&amp;#xFF0C;&amp;#x4E0D;&amp;#x50CF;&amp;#x6765;&amp;#x5FC5;&amp;#x529B;&amp;#x90A3;&amp;#x6837;&amp;#x82B1;&amp;#x54E8;&amp;#x53EA;&amp;#x662F;&amp;#x5355;&amp;#x7EAF;&amp;#x7684;&amp;#x8BC4;&amp;#x8BBA;&amp;#xFF0C;&amp;#x7B80;&amp;#x6D01;&amp;#x5230;&amp;#x6CA1;&amp;#x6709;&amp;#x540E;&amp;#x53F0;&amp;#xFF0C;&amp;#x5220;&amp;#x9664;&amp;#x548C;&amp;#x7BA1;&amp;#x7406;&amp;#x8BC4;&amp;#x8BBA;&amp;#x76F4;&amp;#x63A5;&amp;#x64CD;&amp;#x4F5C;&amp;#x6570;&amp;#x636E;&amp;#x5E93;&amp;#xFF0C;&amp;#x4E8E;&amp;#x662F;&amp;#x51B3;&amp;#x5B9A;&amp;#x5C31;&amp;#x662F;&amp;#x4F60;&amp;#x4E86;&amp;#x3002;&amp;#x672C;&amp;#x7247;&amp;#x535A;&amp;#x5BA2;&amp;#x7528;&amp;#x4E8E;&amp;#x8BB0;&amp;#x5F55;&amp;#x6DFB;&amp;#x52A0;Valine&amp;#x8BC4;&amp;#x8BBA;&amp;#x529F;&amp;#x80FD;&amp;#x7684;&amp;#x5B8C;&amp;#x6574;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo框架" scheme="http://zhengyujie.cn/categories/Hexo%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Hexo" scheme="http://zhengyujie.cn/tags/Hexo/"/>
    
      <category term="NexT" scheme="http://zhengyujie.cn/tags/NexT/"/>
    
      <category term="Valine" scheme="http://zhengyujie.cn/tags/Valine/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客部署到阿里云服务器</title>
    <link href="http://zhengyujie.cn/2019/08/17/%E9%83%A8%E7%BD%B2%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://zhengyujie.cn/2019/08/17/部署到阿里云服务器/</id>
    <published>2019-08-17T10:30:42.000Z</published>
    <updated>2019-08-19T08:11:43.453Z</updated>
    
    <content type="html"><![CDATA[<h1 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h1><p>&#x8FD9;&#x51E0;&#x5929;&#x4E00;&#x6298;&#x817E;&#x8D77;&#x6765;&#x5C31;&#x53D1;&#x73B0;&#x5B8C;&#x5168;&#x505C;&#x4E0D;&#x4E0B;&#x6765;&#x4E86;&#xFF0C;&#x524D;&#x51E0;&#x5929;&#x6211;&#x628A;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x90E8;&#x7F72;&#x5230;&#x4E86;Coding&#x5E73;&#x53F0;&#xFF0C;&#x524D;&#x5929;&#x53C8;&#x624B;&#x75D2;&#x5728;&#x963F;&#x91CC;&#x4E91;&#x4E0A;&#x8D2D;&#x4E70;&#x4E86;&#x4E00;&#x4E2A;&#x57DF;&#x540D;&#x3002;&#x4ECA;&#x65E9;&#x53C8;&#x6CA1;&#x5FCD;&#x4F4F;&#x8D2D;&#x4E70;&#x4E86;&#x963F;&#x91CC;&#x4E91;&#x7684;&#x5B66;&#x751F;&#x670D;&#x52A1;&#x5668;&#x3002;&#x4E8E;&#x662F;&#x6211;&#x6700;&#x7EC8;&#x51B3;&#x5B9A;&#x628A;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x90E8;&#x7F72;&#x5230;&#x963F;&#x91CC;&#x4E91;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x3002;&#x5728;&#x6298;&#x817E;&#x4E86;&#x4E00;&#x4E2A;&#x4E0A;&#x5348;&#x540E;&#xFF0C;&#x6211;&#x7EC8;&#x4E8E;&#x6210;&#x529F;&#x7684;&#x5B8C;&#x6210;&#x4E86;&#x535A;&#x5BA2;&#x7684;&#x90E8;&#x7F72;&#xFF0C;&#x8FD9;&#x7BC7;&#x535A;&#x5BA2;&#x8BB0;&#x5F55;&#x4E0B;&#x6211;&#x7684;&#x6574;&#x4E2A;&#x90E8;&#x7F72;&#x6D41;&#x7A0B;&#x3002;</p><a id="more"></a><h1 id="&#x670D;&#x52A1;&#x5668;&#x73AF;&#x5883;&#x642D;&#x5EFA;"><a href="#&#x670D;&#x52A1;&#x5668;&#x73AF;&#x5883;&#x642D;&#x5EFA;" class="headerlink" title="&#x670D;&#x52A1;&#x5668;&#x73AF;&#x5883;&#x642D;&#x5EFA;"></a>&#x670D;&#x52A1;&#x5668;&#x73AF;&#x5883;&#x642D;&#x5EFA;</h1><h2 id="&#x5B89;&#x88C5;Git"><a href="#&#x5B89;&#x88C5;Git" class="headerlink" title="&#x5B89;&#x88C5;Git"></a>&#x5B89;&#x88C5;Git</h2><p>&#x8FD9;&#x6CA1;&#x5565;&#x597D;&#x8BF4;&#x7684;&#xFF1A;</p><pre><code>apt-get install git</code></pre><h2 id="&#x914D;&#x7F6E;Nginx"><a href="#&#x914D;&#x7F6E;Nginx" class="headerlink" title="&#x914D;&#x7F6E;Nginx"></a>&#x914D;&#x7F6E;Nginx</h2><ul><li><p>&#x5B89;&#x88C5;nginx</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install nginx</span><br></pre></td></tr></table></figure></li><li><p>nginx</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service start nginx</span><br></pre></td></tr></table></figure><p>  &#x7136;&#x540E;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x8F93;&#x5165;&#x670D;&#x52A1;&#x5668;&#x7684;&#x516C;&#x7F51;&#x5730;&#x5740;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x89C1;nginx&#x7684;&#x9ED8;&#x8BA4;&#x9875;&#x9762;&#x3002;</p><p>  <strong>&#x6CE8;&#x610F;:</strong> &#x8FD9;&#x91CC;&#x6709;&#x4E2A;&#x8D85;&#x7EA7;&#x5927;&#x5751;&#xFF0C;&#x4E00;&#x5B9A;&#x8981;&#x5728;&#x670D;&#x52A1;&#x5668;&#x7684;&#x5B89;&#x5168;&#x7EC4;&#x89C4;&#x5219;&#x4E2D;&#x6DFB;&#x52A0;80&#x7AEF;&#x53E3;&#xFF0C;&#x5426;&#x5219;&#x4E0D;&#x4F1A;&#x6709;&#x4EFB;&#x4F55;&#x8F93;&#x51FA;&#x3002;&#x8FD9;&#x91CC;&#x8017;&#x8D39;&#x4E86;&#x6211;&#x4E00;&#x4E2A;&#x591A;&#x5C0F;&#x65F6;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x8BF4;&#x591A;&#x4E86;&#x90FD;&#x662F;&#x6CEA;&#x3002;</p></li><li><p>&#x9ED8;&#x8BA4;&#x914D;&#x7F6E;<br>  <code>cd</code>&#x8FDB;&#x5165;nginx&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;<code>vim</code>&#x6253;&#x5F00;&#x6587;&#x4EF6;</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/nginx/sites-available</span><br><span class="line">sudo vim default</span><br></pre></td></tr></table></figure><p>  &#x5176;&#x4E2D;<code>server_name</code>&#x4FEE;&#x6539;&#x4E3A;&#x81EA;&#x5DF1;&#x7684;&#x57DF;&#x540D;&#xFF0C;&#x6CA1;&#x6709;&#x57DF;&#x540D;&#x5219;&#x65E0;&#x9700;&#x4FEE;&#x6539;&#x3002;<br>  <code>root</code>&#x4FEE;&#x6539;&#x4E3A;<code>/var/www/html/blog</code>&#xFF0C;&#x8FD9;&#x662F;&#x6211;&#x4EEC;&#x535A;&#x5BA2;&#x7F51;&#x7AD9;&#x7684;&#x6839;&#x76EE;&#x5F55;&#x3002;</p></li></ul><h2 id="&#x521B;&#x5EFA;git&#x7528;&#x6237;"><a href="#&#x521B;&#x5EFA;git&#x7528;&#x6237;" class="headerlink" title="&#x521B;&#x5EFA;git&#x7528;&#x6237;"></a>&#x521B;&#x5EFA;git&#x7528;&#x6237;</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">adduser git</span><br><span class="line">chmod 740 /etc/sudoers</span><br><span class="line">vim /etc/sudoers</span><br></pre></td></tr></table></figure><p>&#x627E;&#x5230;&#x4EE5;&#x4E0B;&#x5185;&#x5BB9;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## Allow root to run any commands anywhere</span><br><span class="line">root    ALL=(ALL)    ALL</span><br></pre></td></tr></table></figure></p><p>&#x5728;&#x4E0B;&#x9762;&#x6DFB;&#x52A0;&#x4E00;&#x884C;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git ALL=(ALL) ALL</span><br></pre></td></tr></table></figure></p><p>&#x83B7;&#x5F97;root&#x6743;&#x9650;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd git</span><br></pre></td></tr></table></figure></p><h2 id="&#x8BBE;&#x7F6E;SSH"><a href="#&#x8BBE;&#x7F6E;SSH" class="headerlink" title="&#x8BBE;&#x7F6E;SSH"></a>&#x8BBE;&#x7F6E;SSH</h2><p>&#x5207;&#x6362;&#x4E3A;git&#x7528;&#x6237;&#xFF0C;&#x521B;&#x5EFA; ~/.ssh &#x6587;&#x4EF6;&#x5939;&#x548C; ~/.ssh/authorized_keys &#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x8D4B;&#x4E88;&#x76F8;&#x5E94;&#x7684;&#x6743;&#x9650;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su git</span><br><span class="line">mkdir ~/.ssh</span><br><span class="line">vim ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></p><p>&#x7136;&#x540E;&#x5C06;&#x5BA2;&#x6237;&#x7AEF;<code>.ssh</code>&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x7684;<code>id_rsa.pub</code>&#x6587;&#x4EF6;&#x91CC;&#x7684;&#x5185;&#x5BB9;&#x590D;&#x5236;&#x5230;<code>authorized_keys</code>&#x4E2D;&#xFF0C;&#x63A5;&#x7740;&#x8D4B;&#x4E88;&#x76F8;&#x5E94;&#x7684;&#x6743;&#x9650;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 ~/.ssh/authorzied_keys</span><br><span class="line">chmod 700 ~/.ssh</span><br></pre></td></tr></table></figure></p><p>&#x7136;&#x540E;&#x6211;&#x4EEC;&#x5728;&#x5BA2;&#x6237;&#x7AEF;&#x7EC8;&#x7AEF;&#x4E0A;&#x8F93;&#x5165;<code>ssh -v git@ip&#x5730;&#x5740;</code>&#x5C31;&#x53EF;&#x4EE5;&#x514D;&#x5BC6;&#x767B;&#x5F55;&#x4E86;</p><h2 id="git&#x4ED3;&#x5E93;&#x8BBE;&#x7F6E;"><a href="#git&#x4ED3;&#x5E93;&#x8BBE;&#x7F6E;" class="headerlink" title="git&#x4ED3;&#x5E93;&#x8BBE;&#x7F6E;"></a>git&#x4ED3;&#x5E93;&#x8BBE;&#x7F6E;</h2><p>&#x5207;&#x6362;&#x5230;git&#x7528;&#x6237;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E2A;git&#x88F8;&#x5E93;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su git</span><br><span class="line">cd ~</span><br><span class="line">git init --bare blog.git</span><br></pre></td></tr></table></figure></p><p>&#x63A5;&#x7740;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;post-receive&#x6587;&#x4EF6;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure></p><p>&#x5728;&#x6587;&#x4EF6;&#x4E2D;&#x8F93;&#x5165;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#&#xFF01;/bin/sh</span><br><span class="line">git --work-tree=/var/www/html/blog --git-dir=/home/git/blog.git checkout -f</span><br></pre></td></tr></table></figure></p><p>&#x4FDD;&#x5B58;&#x9000;&#x51FA;&#x540E;&#x518D;&#x8D4B;&#x4E88;&#x8BE5;&#x6587;&#x4EF6;&#x6267;&#x884C;&#x6743;&#x9650;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x ~/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure></p><h1 id="&#x672C;&#x5730;&#x8BBE;&#x7F6E;"><a href="#&#x672C;&#x5730;&#x8BBE;&#x7F6E;" class="headerlink" title="&#x672C;&#x5730;&#x8BBE;&#x7F6E;"></a>&#x672C;&#x5730;&#x8BBE;&#x7F6E;</h1><p>&#x8FD9;&#x91CC;nodejs,npm,git,hexo&#x7B49;&#x7684;&#x5B89;&#x88C5;&#x5C31;&#x4E0D;&#x518D;&#x53D9;&#x8FF0;&#x4E86;&#x3002;&#x672C;&#x5730;&#x7684;&#x8BBE;&#x7F6E;&#x5C31;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x535A;&#x5BA2;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x5373;&#x53EF;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo:</span><br><span class="line">    aliyun: git@ip&#x5730;&#x5740;:/home/git/blog.git,master</span><br></pre></td></tr></table></figure></p><p>&#x7136;&#x540E;&#x6211;&#x4EEC;&#x5728;&#x7EC8;&#x7AEF;&#x6267;&#x884C;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><p>&#x535A;&#x5BA2;&#x6587;&#x4EF6;&#x5C31;&#x4F1A;&#x4E0A;&#x4F20;&#x5230;&#x6211;&#x4EEC;&#x5728;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x7684;git&#x4ED3;&#x5E93;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x90E8;&#x7F72;&#x5230;&#x6211;&#x4EEC;&#x521B;&#x5EFA;&#x7684;&#x535A;&#x5BA2;&#x6839;&#x76EE;&#x5F55;&#x3002;&#x6211;&#x4EEC;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x8BBF;&#x95EE;&#x670D;&#x52A1;&#x5668;&#x5730;&#x5740;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x6211;&#x4EEC;&#x7684;&#x535A;&#x5BA2;&#x4E86;&#x3002;</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;&amp;#x524D;&amp;#x8A00;&quot;&gt;&lt;a href=&quot;#&amp;#x524D;&amp;#x8A00;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x524D;&amp;#x8A00;&quot;&gt;&lt;/a&gt;&amp;#x524D;&amp;#x8A00;&lt;/h1&gt;&lt;p&gt;&amp;#x8FD9;&amp;#x51E0;&amp;#x5929;&amp;#x4E00;&amp;#x6298;&amp;#x817E;&amp;#x8D77;&amp;#x6765;&amp;#x5C31;&amp;#x53D1;&amp;#x73B0;&amp;#x5B8C;&amp;#x5168;&amp;#x505C;&amp;#x4E0D;&amp;#x4E0B;&amp;#x6765;&amp;#x4E86;&amp;#xFF0C;&amp;#x524D;&amp;#x51E0;&amp;#x5929;&amp;#x6211;&amp;#x628A;&amp;#x6211;&amp;#x7684;&amp;#x535A;&amp;#x5BA2;&amp;#x90E8;&amp;#x7F72;&amp;#x5230;&amp;#x4E86;Coding&amp;#x5E73;&amp;#x53F0;&amp;#xFF0C;&amp;#x524D;&amp;#x5929;&amp;#x53C8;&amp;#x624B;&amp;#x75D2;&amp;#x5728;&amp;#x963F;&amp;#x91CC;&amp;#x4E91;&amp;#x4E0A;&amp;#x8D2D;&amp;#x4E70;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x57DF;&amp;#x540D;&amp;#x3002;&amp;#x4ECA;&amp;#x65E9;&amp;#x53C8;&amp;#x6CA1;&amp;#x5FCD;&amp;#x4F4F;&amp;#x8D2D;&amp;#x4E70;&amp;#x4E86;&amp;#x963F;&amp;#x91CC;&amp;#x4E91;&amp;#x7684;&amp;#x5B66;&amp;#x751F;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x3002;&amp;#x4E8E;&amp;#x662F;&amp;#x6211;&amp;#x6700;&amp;#x7EC8;&amp;#x51B3;&amp;#x5B9A;&amp;#x628A;&amp;#x6211;&amp;#x7684;&amp;#x535A;&amp;#x5BA2;&amp;#x90E8;&amp;#x7F72;&amp;#x5230;&amp;#x963F;&amp;#x91CC;&amp;#x4E91;&amp;#x670D;&amp;#x52A1;&amp;#x5668;&amp;#x4E0A;&amp;#x3002;&amp;#x5728;&amp;#x6298;&amp;#x817E;&amp;#x4E86;&amp;#x4E00;&amp;#x4E2A;&amp;#x4E0A;&amp;#x5348;&amp;#x540E;&amp;#xFF0C;&amp;#x6211;&amp;#x7EC8;&amp;#x4E8E;&amp;#x6210;&amp;#x529F;&amp;#x7684;&amp;#x5B8C;&amp;#x6210;&amp;#x4E86;&amp;#x535A;&amp;#x5BA2;&amp;#x7684;&amp;#x90E8;&amp;#x7F72;&amp;#xFF0C;&amp;#x8FD9;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#x8BB0;&amp;#x5F55;&amp;#x4E0B;&amp;#x6211;&amp;#x7684;&amp;#x6574;&amp;#x4E2A;&amp;#x90E8;&amp;#x7F72;&amp;#x6D41;&amp;#x7A0B;&amp;#x3002;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo框架" scheme="http://zhengyujie.cn/categories/Hexo%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Ubuntu" scheme="http://zhengyujie.cn/categories/Ubuntu/"/>
    
    
      <category term="Hexo" scheme="http://zhengyujie.cn/tags/Hexo/"/>
    
      <category term="Ubuntu" scheme="http://zhengyujie.cn/tags/Ubuntu/"/>
    
      <category term="阿里云" scheme="http://zhengyujie.cn/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="SSH" scheme="http://zhengyujie.cn/tags/SSH/"/>
    
      <category term="Git" scheme="http://zhengyujie.cn/tags/Git/"/>
    
      <category term="Nginx" scheme="http://zhengyujie.cn/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu深度学习环境搭建</title>
    <link href="http://zhengyujie.cn/2019/08/16/ubuntu%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%8E%AF%E5%A2%83/"/>
    <id>http://zhengyujie.cn/2019/08/16/ubuntu深度学习环境/</id>
    <published>2019-08-16T02:15:48.000Z</published>
    <updated>2019-08-24T03:07:16.288Z</updated>
    
    <content type="html"><![CDATA[<h1 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h1><p>&#x4E0A;&#x6B21;&#x642D;&#x5EFA;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x73AF;&#x5883;&#x5DF2;&#x7ECF;&#x662F;&#x5F88;&#x4E45;&#x4EE5;&#x524D;&#x4E86;&#xFF0C;&#x4F46;&#x6211;&#x8FD8;&#x8BB0;&#x5F97;&#x88AB;&#x5176;&#x652F;&#x914D;&#x7684;&#x6050;&#x60E7;&#xFF0C;&#x5404;&#x79CD;&#x51FA;&#x9519;&#xFF0C;&#x5404;&#x79CD;&#x7248;&#x672C;&#x5BF9;&#x5E94;&#x4E0D;&#x4E0A;&#xFF0C;&#x641E;&#x5F97;&#x6211;&#x5934;&#x76AE;&#x53D1;&#x9EBB;&#x3002;&#x8FD9;&#x6B21;&#x56E0;&#x4E3A;&#x7CFB;&#x7EDF;&#x5954;&#x6E83;&#x9700;&#x8981;&#x91CD;&#x88C5;&#x7CFB;&#x7EDF;&#xFF0C;&#x4E5F;&#x5C31;&#x610F;&#x5473;&#x7740;&#x6211;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x642D;&#x5EFA;Ubuntu&#x7684;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x73AF;&#x5883;&#xFF0C;&#x6211;&#x5FC3;&#x91CC;&#x662F;&#x4E00;&#x767E;&#x4E2A;&#x4E0D;&#x613F;&#x610F;&#x7684;&#x3002;&#x4F46;&#x4E5F;&#x6CA1;&#x6709;&#x529E;&#x6CD5;&#xFF0C;&#x53EA;&#x80FD;&#x786C;&#x7740;&#x5934;&#x76AE;&#x4E0A;&#x3002;&#x4F46;&#x51FA;&#x4E4E;&#x610F;&#x6599;&#xFF0C;&#x8FD9;&#x6B21;&#x642D;&#x5EFA;&#x8FC7;&#x7A0B;&#x8FD8;&#x7B97;&#x987A;&#x5229;&#xFF0C;&#x53EA;&#x6709;&#x5728;tensorflow&#x8FD0;&#x884C;&#x51FA;&#x4E86;&#x70B9;&#x5C0F;&#x72B6;&#x51B5;(&#x540E;&#x9762;&#x4F1A;&#x63D0;&#x5230;)&#x3002;&#x672C;&#x7BC7;&#x535A;&#x5BA2;&#x4F1A;&#x8BE6;&#x7EC6;&#x8BB0;&#x5F55;&#x6211;&#x7684;&#x6574;&#x4E2A;&#x642D;&#x5EFA;&#x8FC7;&#x7A0B;&#xFF0C;&#x8BF4;&#x4E0D;&#x5B9A;&#x90A3;&#x5929;&#x6211;&#x7684;&#x7CFB;&#x7EDF;&#x53C8;&#x88AB;&#x6211;&#x73A9;&#x5D29;&#x6E83;&#x4E86;&#x3002;&#x5148;&#x9644;&#x4E0A;&#x6211;&#x7684;&#x6DF1;&#x5EA6;&#x5B66;&#x4E60;&#x73AF;&#x5883;&#x57FA;&#x672C;&#x4FE1;&#x606F;&#xFF1A;</p><ul><li>Ubuntu: 16.04</li><li>NVIDIA: GeForce GTX 1080TI</li><li>Driver Version: 430.40</li><li>CUDA: 10.0</li><li>cuDNN: 7.5.1</li><li>TensorFlow: 1.13.1</li></ul><a id="more"></a><h1 id="&#x5B89;&#x88C5;&#x663E;&#x5361;&#x9A71;&#x52A8;"><a href="#&#x5B89;&#x88C5;&#x663E;&#x5361;&#x9A71;&#x52A8;" class="headerlink" title="&#x5B89;&#x88C5;&#x663E;&#x5361;&#x9A71;&#x52A8;"></a>&#x5B89;&#x88C5;&#x663E;&#x5361;&#x9A71;&#x52A8;</h1><h2 id="&#x7981;&#x7528;nouveau"><a href="#&#x7981;&#x7528;nouveau" class="headerlink" title="&#x7981;&#x7528;nouveau"></a>&#x7981;&#x7528;nouveau</h2><p>&#x6253;&#x5F00;&#x7EC8;&#x7AEF;&#x8F93;&#x5165;&#xFF1A;</p><pre><code>sudo vim /etc/modprobe.d/blacklist.conf</code></pre><p>&#x5728;&#x6587;&#x4EF6;&#x6700;&#x540E;&#x52A0;&#x4E0A;&#xFF1A;</p><pre><code>blacklist nouveauoptions nouveau modeset=0</code></pre><p>&#x4FDD;&#x5B58;&#x9000;&#x51FA;&#x540E;&#x8F93;&#x5165;&#x547D;&#x4EE4;&#xFF1A;</p><pre><code>sudo update-initramfs -u</code></pre><p>&#x7136;&#x540E;&#x91CD;&#x542F;&#x7535;&#x8111;&#xFF0C;&#x63A5;&#x7740;&#x8F93;&#x5165;&#x547D;&#x4EE4;&#xFF1A;</p><pre><code>lsmod | grep nouveau</code></pre><p>&#x82E5;&#x6CA1;&#x6709;&#x8F93;&#x51FA;&#x4FE1;&#x606F;&#xFF0C;&#x8BF4;&#x660E;&#x7981;&#x7528;&#x6210;&#x529F;</p><h2 id="&#x5B89;&#x88C5;&#x9A71;&#x52A8;"><a href="#&#x5B89;&#x88C5;&#x9A71;&#x52A8;" class="headerlink" title="&#x5B89;&#x88C5;&#x9A71;&#x52A8;"></a>&#x5B89;&#x88C5;&#x9A71;&#x52A8;</h2><p>&#x9996;&#x5148;&#x53BB;NVIDIA&#x5B98;&#x7F51;&#x4E0A;&#x4E0B;&#x8F7D;&#x5BF9;&#x5E94;&#x7684;Linux&#x7248;&#x672C;&#x7684;&#x663E;&#x5361;&#x9A71;&#x52A8;&#x3002;</p><p>&#x7136;&#x540E;&#x6309;Ctrl+Alt+F1&#x8FDB;&#x5165;&#x547D;&#x4EE4;&#x884C;&#x6A21;&#x5F0F;&#xFF0C;&#x8F93;&#x5165;&#x7528;&#x6237;&#x540D;&#x548C;&#x5BC6;&#x7801;</p><p>&#x63A5;&#x7740;&#x5173;&#x95ED;&#x56FE;&#x5F62;&#x754C;&#x9762;&#xFF1A;</p><pre><code>sudo service lightdm stop</code></pre><p>&#x7136;&#x540E;<code>cd</code>&#x8FDB;&#x53BB;&#x9A71;&#x52A8;&#x6240;&#x5728;&#x7684;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x83B7;&#x53D6;&#x6743;&#x9650;&#xFF1A;</p><pre><code>sudo chmod a+x NVIDIA-Linux-x86_64-xxx.run</code></pre><p>&#x5B89;&#x88C5;&#x9A71;&#x52A8;&#xFF1A;</p><pre><code>sudo ./NVIDIA-Linux-x86_64-410.78.run &#x2013;no-x-check &#x2013;no-nouveau-check &#x2013;no-opengl-files</code></pre><ul><li>&#x2013;no-x-check &#x5B89;&#x88C5;&#x9A71;&#x52A8;&#x65F6;&#x5173;&#x95ED;X&#x670D;&#x52A1;</li><li>&#x2013;no-nouveau-check &#x5B89;&#x88C5;&#x9A71;&#x52A8;&#x65F6;&#x7981;&#x7528;nouveau</li><li>&#x2013;no-opengl-files &#x53EA;&#x5B89;&#x88C5;&#x9A71;&#x52A8;&#x6587;&#x4EF6;&#xFF0C;&#x4E0D;&#x5B89;&#x88C5;OpenGL&#x6587;&#x4EF6;&#xFF1B;&#x5B89;&#x88C5;&#x4E86;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x53CC;&#x663E;&#x5361;&#x7684;&#x8BDD;&#xFF0C;&#x4F1A;&#x51FA;&#x73B0;&#x91CD;&#x590D;&#x767B;&#x5F55;&#x7684;&#x95EE;&#x9898;</li></ul><p>&#x5B8C;&#x6210;&#x5B89;&#x88C5;&#x540E;&#x542F;&#x52A8;&#x56FE;&#x5F62;&#x754C;&#x9762;&#xFF1A;</p><pre><code>sudo service lightdm start</code></pre><p>&#x6700;&#x540E;&#x5728;&#x7EC8;&#x7AEF;&#x8F93;&#x5165;&#xFF1A;</p><pre><code>nvidia-smi</code></pre><p>&#x82E5;&#x6709;&#x8F93;&#x51FA;&#x663E;&#x5361;&#x4FE1;&#x606F;&#xFF0C;&#x8BF4;&#x660E;&#x9A71;&#x52A8;&#x5B89;&#x88C5;&#x6210;&#x529F;</p><h2 id="&#x5B89;&#x88C5;CUDA"><a href="#&#x5B89;&#x88C5;CUDA" class="headerlink" title="&#x5B89;&#x88C5;CUDA"></a>&#x5B89;&#x88C5;CUDA</h2><p>&#x4E0B;&#x8F7D;CUDA10.0&#xFF0C;&#x4E0B;&#x8F7D;&#x5730;&#x5740;&#xFF1A;<a href="https://developer.nvidia.com/cuda-toolkit-archive" target="_blank" rel="noopener">https://developer.nvidia.com/cuda-toolkit-archive</a></p><p><code>cd</code>&#x8FDB;&#x5165;CUDA&#x6240;&#x5728;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x8D4B;&#x4E88;&#x6587;&#x4EF6;&#x6267;&#x884C;&#x6743;&#x9650;&#x540E;&#x5B89;&#x88C5;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod +x cuda_10.0.130_410.48_linux.run</span><br><span class="line">sudo ./cuda_10.0.130_410.48_linux.run</span><br></pre></td></tr></table></figure></p><p>&#x5F00;&#x59CB;&#x5B89;&#x88C5;&#x540E;&#x9700;&#x8981;&#x6309;&#x7A7A;&#x683C;&#x952E;&#x9605;&#x8BFB;&#x6761;&#x6B3E;&#xFF0C;&#x65F6;&#x95F4;&#x6BD4;&#x8F83;&#x957F;&#xFF0C;&#x7B49;&#x4E0D;&#x53CA;&#x7684;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;Ctrl+C&#x8DF3;&#x8FC7;&#x3002;&#x9605;&#x8BFB;&#x5B8C;&#x4F7F;&#x7528;&#x6761;&#x6B3E;&#x540E;&#x5F00;&#x59CB;&#x914D;&#x7F6E;&#xFF0C;&#x4E00;&#x6B65;&#x4E00;&#x6B65;&#x6162;&#x6162;&#x6765;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">accept/decline/quit: accept</span><br><span class="line"></span><br><span class="line">Install NVIDIA Accelerated Graphics Driver for Linux-x86_64 410.48?</span><br><span class="line">(y)es/(n)o/(q)uit: n&#xFF08;&#x8FD9;&#x91CC;&#x4E0D;&#x8981;&#x518D;&#x5B89;&#x88C5;&#x9A71;&#x52A8;&#x4E86;&#xFF01;&#xFF01;&#xFF01;&#xFF09;</span><br><span class="line"></span><br><span class="line">Install the CUDA 10.0 Toolkit?&#xFF08;&#x662F;&#x5426;&#x5B89;&#x88C5;CUDA 10 &#xFF0C;&#x8FD9;&#x91CC;&#x5FC5;&#x987B;&#x8981;&#x5B89;&#x88C5;&#xFF09;</span><br><span class="line">(y)es/(n)o/(q)uit: y</span><br><span class="line"></span><br><span class="line">Enter Toolkit Location&#xFF08;&#x5B89;&#x88C5;&#x8DEF;&#x5F84;&#xFF0C;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#xFF0C;&#x76F4;&#x63A5;&#x56DE;&#x8F66;&#x5C31;&#x884C;&#xFF09;</span><br><span class="line"> [ default is /usr/local/cuda-10.0 ]:  </span><br><span class="line"></span><br><span class="line">Do you want to install a symbolic link at /usr/local/cuda?&#xFF08;&#x540C;&#x610F;&#x521B;&#x5EFA;&#x8F6F;&#x94FE;&#x63A5;&#xFF09;</span><br><span class="line">(y)es/(n)o/(q)uit: y</span><br><span class="line"></span><br><span class="line">Install the CUDA 10.0 Samples?</span><br><span class="line">(y)es/(n)o/(q)uit: y</span><br><span class="line"></span><br><span class="line">Installing the CUDA Toolkit in /usr/local/cuda-10.0 ...&#xFF08;&#x5F00;&#x59CB;&#x5B89;&#x88C5;&#xFF09;</span><br></pre></td></tr></table></figure></p><p>&#x5B89;&#x88C5;&#x5B8C;&#x6210;&#x540E;&#x52A0;&#x5165;&#x73AF;&#x5883;&#x53D8;&#x91CF;</p><pre><code>sudo gedit ~/.bashrc</code></pre><p>&#x6700;&#x540E;&#x4E00;&#x884C;&#x52A0;&#x5165;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export CUDA_HOME=/usr/local/cuda</span><br><span class="line">export PATH=$PATH:$CUDA_HOME/bin</span><br><span class="line">export LD_LIBRARY_PATH=/usr/local/cuda-10.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}</span><br></pre></td></tr></table></figure></p><p>&#x4FDD;&#x5B58;&#x9000;&#x51FA;&#x540E;&#x8F93;&#x5165;&#xFF1A;</p><pre><code>source .bashrc</code></pre><p>&#x6700;&#x540E;&#x7EC8;&#x7AEF;&#x8F93;&#x5165;&#xFF1A;</p><pre><code>nvcc --version</code></pre><p>&#x82E5;&#x8F93;&#x51FA;CUDA&#x7248;&#x672C;&#x4FE1;&#x606F;&#x8BF4;&#x660E;&#x5B89;&#x88C5;&#x6210;&#x529F;</p><h2 id="&#x5B89;&#x88C5;cuDNN"><a href="#&#x5B89;&#x88C5;cuDNN" class="headerlink" title="&#x5B89;&#x88C5;cuDNN"></a>&#x5B89;&#x88C5;cuDNN</h2><p>&#x4ECE; <a href="https://developer.nvidia.com/cudnn" target="_blank" rel="noopener">https://developer.nvidia.com/cudnn</a> &#x4E0A;&#x4E0B;&#x8F7D;cudnn&#x76F8;&#x5E94;&#x7248;&#x672C;&#x7684;&#x538B;&#x7F29;&#x5305;&#xFF08;&#x9700;&#x8981;&#x6CE8;&#x518C;&#x6216;&#x767B;&#x5F55;&#xFF09;&#x3002;</p><p>&#x89E3;&#x538B;&#x5F53;&#x524D;&#x7684;.tgz&#x683C;&#x5F0F;&#x7684;&#x8F6F;&#x4EF6;&#x5305;</p><pre><code>tar -xzvf cudnn-10.0-linux-x64-v7.5.1.10.tgz</code></pre><p>&#x89E3;&#x538B;&#x540E;&#x7684;&#x6587;&#x4EF6;&#x5939;&#x540D;&#x4E3A;cuda&#xFF0C;&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#x5305;&#x542B;&#x4E24;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#xFF1A;&#x4E00;&#x4E2A;&#x4E3A;include&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x4E3A;lib64&#x3002;&#x6700;&#x597D;&#x628A;&#x8FD9;&#x4E2A;cuda&#x6587;&#x4EF6;&#x5939;&#x653E;&#x5728;home&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x65B9;&#x4FBF;&#x64CD;&#x4F5C;&#x3002;</p><p>&#x5C06;&#x89E3;&#x538B;&#x540E;&#x7684;lib64&#x6587;&#x4EF6;&#x5939;&#x5173;&#x8054;&#x5230;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x4E2D;&#xFF1A;</p><pre><code>sudo gedit ~/.bashrc</code></pre><p>&#x6700;&#x540E;&#x4E00;&#x884C;&#x52A0;&#x5165;&#xFF1A;</p><pre><code>export LD_LIBRARY_PATH=/home/cuda/lib64:$LD_LIBRARY_PATH</code></pre><p>&#x4FDD;&#x5B58;&#x9000;&#x51FA;&#x540E;&#x8F93;&#x5165;&#xFF1A;</p><pre><code>source .bashrc</code></pre><p>&#x6700;&#x540E;&#x4E00;&#x6B65;&#x5C31;&#x662F;&#x5C06;&#x89E3;&#x538B;&#x540E;&#x7684;/home/cuda/include&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x4E00;&#x4E9B;&#x6587;&#x4EF6;&#x62F7;&#x8D1D;&#x5230;/usr/local/cuda/include&#x4E2D;&#x3002;&#x7531;&#x4E8E;&#x8FDB;&#x5165;&#x4E86;&#x7CFB;&#x7EDF;&#x8DEF;&#x5F84;&#xFF0C;&#x56E0;&#x6B64;&#x6267;&#x884C;&#x8BE5;&#x64CD;&#x4F5C;&#x65F6;&#x9700;&#x8981;&#x83B7;&#x53D6;&#x7BA1;&#x7406;&#x5458;&#x6743;&#x9650;&#xFF1A;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo cp cuda/include/cudnn.h /usr/local/cuda/include</span><br><span class="line">sudo cp cuda/lib64/libcudnn* /usr/local/cuda/lib64</span><br><span class="line">sudo chmod a+r /usr/local/cuda/include/cudnn.h</span><br><span class="line">sudo chmod a+r /usr/local/cuda/lib64/libcudnn*</span><br></pre></td></tr></table></figure></p><p>&#x5B8C;&#x6210;cuDNN&#x7684;&#x914D;&#x7F6E;</p><h2 id="&#x5B89;&#x88C5;TensorFlow"><a href="#&#x5B89;&#x88C5;TensorFlow" class="headerlink" title="&#x5B89;&#x88C5;TensorFlow"></a>&#x5B89;&#x88C5;TensorFlow</h2><p>&#x8FD9;&#x6B65;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x76F4;&#x63A5;&#x4F7F;&#x7528;pip&#x547D;&#x4EE4;&#x5B89;&#x88C5;&#x5373;&#x53EF;(&#x6211;&#x5B89;&#x88C5;&#x7684;&#x662F;1.13.1&#x7248;&#x672C;)&#xFF1A;</p><pre><code>pip install tensorflow-gpu==1.13.1</code></pre><p>&#x7136;&#x540E;&#x8FDB;&#x5165;&#x4EA4;&#x4E92;&#x5F0F;&#x547D;&#x4EE4;&#x884C;&#x770B;&#x770B;&#x662F;&#x5426;&#x5B89;&#x88C5;&#x6210;&#x529F;&#xFF1A;</p><pre><code>import tensorflow as tf</code></pre><p>&#x63A5;&#x7740;&#x5C31;&#x7A81;&#x7136;&#x51FA;&#x73B0;&#x4E86;FutureWarning&#x8B66;&#x544A;&#x4FE1;&#x606F;&#xFF0C;&#x5413;&#x51FA;&#x6211;&#x4E00;&#x8EAB;&#x51B7;&#x6C57;&#x3002;&#x6211;&#x8D76;&#x7D27;&#x53BB;&#x7F51;&#x4E0A;&#x67E5;&#x9605;&#x76F8;&#x5173;&#x8D44;&#x6599;&#xFF0C;&#x770B;&#x5230;&#x6709;&#x4EBA;&#x8BF4;&#x662F;&#x56E0;&#x4E3A;numpy&#x7684;&#x7248;&#x672C;&#x662F;1.17&#x592A;&#x9AD8;&#x4E86;&#x3002;&#x6211;&#x8D76;&#x7D27;&#x67E5;&#x770B;&#x4E86;&#x6211;&#x5B89;&#x88C5;&#x7684;numpy&#x7684;&#x7248;&#x672C;&#xFF0C;&#x679C;&#x7136;&#x662F;1.17&#x3002;&#x4E8E;&#x662F;&#x6211;&#x8FDB;&#x884C;&#x4E86;&#x964D;&#x7EA7;&#x5B89;&#x88C5;&#xFF0C;&#x5B89;&#x88C5;&#x4E86;1.16.4&#x7248;&#x672C;&#x7684;numpy&#xFF0C;&#x6700;&#x7EC8;&#x95EE;&#x9898;&#x5F97;&#x4EE5;&#x5B8C;&#x7F8E;&#x89E3;&#x51B3;&#x3002;</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;&amp;#x524D;&amp;#x8A00;&quot;&gt;&lt;a href=&quot;#&amp;#x524D;&amp;#x8A00;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x524D;&amp;#x8A00;&quot;&gt;&lt;/a&gt;&amp;#x524D;&amp;#x8A00;&lt;/h1&gt;&lt;p&gt;&amp;#x4E0A;&amp;#x6B21;&amp;#x642D;&amp;#x5EFA;&amp;#x6DF1;&amp;#x5EA6;&amp;#x5B66;&amp;#x4E60;&amp;#x73AF;&amp;#x5883;&amp;#x5DF2;&amp;#x7ECF;&amp;#x662F;&amp;#x5F88;&amp;#x4E45;&amp;#x4EE5;&amp;#x524D;&amp;#x4E86;&amp;#xFF0C;&amp;#x4F46;&amp;#x6211;&amp;#x8FD8;&amp;#x8BB0;&amp;#x5F97;&amp;#x88AB;&amp;#x5176;&amp;#x652F;&amp;#x914D;&amp;#x7684;&amp;#x6050;&amp;#x60E7;&amp;#xFF0C;&amp;#x5404;&amp;#x79CD;&amp;#x51FA;&amp;#x9519;&amp;#xFF0C;&amp;#x5404;&amp;#x79CD;&amp;#x7248;&amp;#x672C;&amp;#x5BF9;&amp;#x5E94;&amp;#x4E0D;&amp;#x4E0A;&amp;#xFF0C;&amp;#x641E;&amp;#x5F97;&amp;#x6211;&amp;#x5934;&amp;#x76AE;&amp;#x53D1;&amp;#x9EBB;&amp;#x3002;&amp;#x8FD9;&amp;#x6B21;&amp;#x56E0;&amp;#x4E3A;&amp;#x7CFB;&amp;#x7EDF;&amp;#x5954;&amp;#x6E83;&amp;#x9700;&amp;#x8981;&amp;#x91CD;&amp;#x88C5;&amp;#x7CFB;&amp;#x7EDF;&amp;#xFF0C;&amp;#x4E5F;&amp;#x5C31;&amp;#x610F;&amp;#x5473;&amp;#x7740;&amp;#x6211;&amp;#x9700;&amp;#x8981;&amp;#x91CD;&amp;#x65B0;&amp;#x642D;&amp;#x5EFA;Ubuntu&amp;#x7684;&amp;#x6DF1;&amp;#x5EA6;&amp;#x5B66;&amp;#x4E60;&amp;#x73AF;&amp;#x5883;&amp;#xFF0C;&amp;#x6211;&amp;#x5FC3;&amp;#x91CC;&amp;#x662F;&amp;#x4E00;&amp;#x767E;&amp;#x4E2A;&amp;#x4E0D;&amp;#x613F;&amp;#x610F;&amp;#x7684;&amp;#x3002;&amp;#x4F46;&amp;#x4E5F;&amp;#x6CA1;&amp;#x6709;&amp;#x529E;&amp;#x6CD5;&amp;#xFF0C;&amp;#x53EA;&amp;#x80FD;&amp;#x786C;&amp;#x7740;&amp;#x5934;&amp;#x76AE;&amp;#x4E0A;&amp;#x3002;&amp;#x4F46;&amp;#x51FA;&amp;#x4E4E;&amp;#x610F;&amp;#x6599;&amp;#xFF0C;&amp;#x8FD9;&amp;#x6B21;&amp;#x642D;&amp;#x5EFA;&amp;#x8FC7;&amp;#x7A0B;&amp;#x8FD8;&amp;#x7B97;&amp;#x987A;&amp;#x5229;&amp;#xFF0C;&amp;#x53EA;&amp;#x6709;&amp;#x5728;tensorflow&amp;#x8FD0;&amp;#x884C;&amp;#x51FA;&amp;#x4E86;&amp;#x70B9;&amp;#x5C0F;&amp;#x72B6;&amp;#x51B5;(&amp;#x540E;&amp;#x9762;&amp;#x4F1A;&amp;#x63D0;&amp;#x5230;)&amp;#x3002;&amp;#x672C;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#x4F1A;&amp;#x8BE6;&amp;#x7EC6;&amp;#x8BB0;&amp;#x5F55;&amp;#x6211;&amp;#x7684;&amp;#x6574;&amp;#x4E2A;&amp;#x642D;&amp;#x5EFA;&amp;#x8FC7;&amp;#x7A0B;&amp;#xFF0C;&amp;#x8BF4;&amp;#x4E0D;&amp;#x5B9A;&amp;#x90A3;&amp;#x5929;&amp;#x6211;&amp;#x7684;&amp;#x7CFB;&amp;#x7EDF;&amp;#x53C8;&amp;#x88AB;&amp;#x6211;&amp;#x73A9;&amp;#x5D29;&amp;#x6E83;&amp;#x4E86;&amp;#x3002;&amp;#x5148;&amp;#x9644;&amp;#x4E0A;&amp;#x6211;&amp;#x7684;&amp;#x6DF1;&amp;#x5EA6;&amp;#x5B66;&amp;#x4E60;&amp;#x73AF;&amp;#x5883;&amp;#x57FA;&amp;#x672C;&amp;#x4FE1;&amp;#x606F;&amp;#xFF1A;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu: 16.04&lt;/li&gt;
&lt;li&gt;NVIDIA: GeForce GTX 1080TI&lt;/li&gt;
&lt;li&gt;Driver Version: 430.40&lt;/li&gt;
&lt;li&gt;CUDA: 10.0&lt;/li&gt;
&lt;li&gt;cuDNN: 7.5.1&lt;/li&gt;
&lt;li&gt;TensorFlow: 1.13.1&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="深度学习" scheme="http://zhengyujie.cn/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Ubuntu" scheme="http://zhengyujie.cn/categories/Ubuntu/"/>
    
    
      <category term="TensorFlow" scheme="http://zhengyujie.cn/tags/TensorFlow/"/>
    
      <category term="Ubuntu" scheme="http://zhengyujie.cn/tags/Ubuntu/"/>
    
      <category term="CUDA" scheme="http://zhengyujie.cn/tags/CUDA/"/>
    
      <category term="cuDNN" scheme="http://zhengyujie.cn/tags/cuDNN/"/>
    
  </entry>
  
  <entry>
    <title>Windows下安装Ubuntu16.04双系统</title>
    <link href="http://zhengyujie.cn/2019/08/16/%E5%AE%89%E8%A3%85Ubuntu%E7%B3%BB%E7%BB%9F/"/>
    <id>http://zhengyujie.cn/2019/08/16/安装Ubuntu系统/</id>
    <published>2019-08-16T01:00:55.000Z</published>
    <updated>2019-08-16T01:32:46.360Z</updated>
    
    <content type="html"><![CDATA[<h1 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h1><p>&#x6628;&#x5929;&#x5728;&#x66F4;&#x65B0;tensorflow&#x65F6;&#x6211;&#x7684;Ubuntu&#x7CFB;&#x7EDF;&#x7A81;&#x7136;&#x5D29;&#x6E83;&#x4E86;&#xFF0C;&#x65E0;&#x5948;&#x53EA;&#x80FD;&#x91CD;&#x88C5;&#x7CFB;&#x7EDF;&#x3002;&#x4F46;&#x8DDD;&#x79BB;&#x4E0A;&#x6B21;&#x5B89;&#x88C5;Ubuntu&#x7CFB;&#x7EDF;&#x5DF2;&#x7ECF;&#x8FC7;&#x53BB;&#x8BB8;&#x4E45;&#xFF0C;&#x53EA;&#x80FD;&#x53BB;&#x7F51;&#x4E0A;&#x641C;&#x6559;&#x7A0B;&#x6298;&#x817E;&#xFF0C;&#x597D;&#x5728;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x5F02;&#x5E38;&#x987A;&#x5229;&#xFF0C;&#x4E8E;&#x662F;&#x7528;&#x672C;&#x535A;&#x5BA2;&#x8BB0;&#x5F55;&#x4E0B;&#x6211;&#x7684;&#x6574;&#x4E2A;&#x5B89;&#x88C5;&#x6B65;&#x9AA4;&#x3002;</p><a id="more"></a><h1 id="&#x5B8C;&#x6574;&#x6B65;&#x9AA4;"><a href="#&#x5B8C;&#x6574;&#x6B65;&#x9AA4;" class="headerlink" title="&#x5B8C;&#x6574;&#x6B65;&#x9AA4;"></a>&#x5B8C;&#x6574;&#x6B65;&#x9AA4;</h1><ol><li><p><strong>&#x7A7A;&#x95F4;&#x51C6;&#x5907;</strong></p><p> &#x5728;Windows 10&#x4E2D;&#x6253;&#x5F00;&#x201C;&#x78C1;&#x76D8;&#x7BA1;&#x7406;&#x5668;&#x201D;&#xFF0C;&#x627E;&#x4E00;&#x4E2A;&#x7A7A;&#x95F2;&#x7684;&#x78C1;&#x76D8;&#x5206;&#x533A;&#xFF0C;&#x538B;&#x7F29;&#x51FA;&#x6765;&#x4E00;&#x90E8;&#x5206;&#x7A7A;&#x95F4;&#x7ED9;Ubuntu&#x4F7F;&#x7528;&#xFF0C;&#x538B;&#x7F29;&#x51FA;&#x6765;&#x7684;&#x786C;&#x76D8;&#x5E94;&#x5904;&#x4E8E;&#x672A;&#x5206;&#x914D;&#x72B6;&#x6001;&#x3002;&#x6216;&#x8005;&#x901A;&#x8FC7;&#x5220;&#x9664;&#x67D0;&#x4E2A;&#x4E0D;&#x4F7F;&#x7528;&#x7684;&#x672C;&#x5730;&#x78C1;&#x76D8;&#x4F7F;&#x5176;&#x5904;&#x4E8E;&#x672A;&#x5206;&#x914D;&#x72B6;&#x6001;&#x3002;&#x8FD9;&#x91CC;&#x6211;&#x7ED9;Ubuntu&#x7CFB;&#x7EDF;&#x5206;&#x914D;&#x4E86;100G&#x7A7A;&#x95F4;</p></li><li><p><strong>&#x5236;&#x4F5C;&#x542F;&#x52A8;&#x76D8;</strong></p><ol><li>&#x63D2;&#x5165;&#x7528;&#x6765;&#x5236;&#x4F5C;&#x542F;&#x52A8;&#x76D8;&#x7684;U&#x76D8;&#xFF08;&#x4F1A;&#x88AB;&#x683C;&#x5F0F;&#x5316;&#xFF0C;&#x8BF7;&#x5907;&#x4EFD;&#x597D;&#x91CD;&#x8981;&#x6587;&#x4EF6;&#xFF09;&#xFF0C;&#x6253;&#x5F00;UltraISO&#x523B;&#x5F55;&#x8F6F;&#x4EF6;&#xFF08;&#x514D;&#x8D39;&#x65E0;&#x9650;&#x671F;&#x8BD5;&#x7528;&#xFF09;&#x3002;</li><li>&#x9009;&#x62E9;&#x201C;&#x6587;&#x4EF6;(F)&#x201D;-&gt;&#x201C;&#x6253;&#x5F00;&#x201D;&#xFF0C;&#x627E;&#x5230;&#x201C;Ubuntu-16.04-desktop-amd64.iso&#x201D;&#x955C;&#x50CF;&#x6587;&#x4EF6;&#xFF0C;&#x7136;&#x540E;&#x70B9;&#x51FB;&#x201C;&#x6253;&#x5F00;&#x201D;&#x3002;</li><li>&#x9009;&#x62E9;&#x201C;&#x542F;&#x52A8;(B)&#x201D;-&gt;&#x201C;&#x5199;&#x5165;&#x786C;&#x76D8;&#x6620;&#x50CF;&#x201D;&#xFF0C;&#x6253;&#x5F00;&#x542F;&#x52A8;&#x76D8;&#x5236;&#x4F5C;&#x754C;&#x9762;&#x3002;</li><li>&#x7136;&#x540E;&#x70B9;&#x51FB;&#x4E0B;&#x65B9;&#x7684;&#x201C;&#x5199;&#x5165;&#x201D;&#xFF0C;&#x4F1A;&#x5F39;&#x51FA;&#x8B66;&#x544A;&#x63D0;&#x793A;&#xFF0C;&#x786E;&#x5B9A;&#x540E;&#xFF0C;&#x5C31;&#x4F1A;&#x5F00;&#x59CB;&#x5236;&#x4F5C;&#x542F;&#x52A8;&#x76D8;&#x3002;&#x5199;&#x5165;&#x5B8C;&#x6210;&#x540E;&#x5173;&#x95ED;UltraISO&#x8F6F;&#x4EF6;&#x5373;&#x53EF;&#x3002;</li></ol></li><li><p><strong>BIOS&#x8BBE;&#x7F6E;</strong></p><p> &#x6211;&#x7684;&#x4E3B;&#x677F;&#x4E3A;&#x5FAE;&#x661F;&#x4E3B;&#x677F;&#xFF0C;&#x91CD;&#x542F;&#x7535;&#x8111;&#x731B;&#x6309;DEL&#x952E;&#x5373;&#x53EF;&#x8FDB;&#x5165;BIOS&#x754C;&#x9762;&#xFF0C;&#x7136;&#x540E;&#x8BBE;&#x7F6E;U&#x76D8;&#x4E3A;&#x7B2C;&#x4E00;&#x542F;&#x52A8;&#x9879;&#x3002;&#x6700;&#x540E;&#x6309;F10&#x4FDD;&#x5B58;&#x8BBE;&#x7F6E;&#x5E76;&#x91CD;&#x542F;&#x3002;</p></li><li><p><strong>&#x5B89;&#x88C5;Ubuntu&#x7CFB;&#x7EDF;</strong></p><ol><li>&#x91CD;&#x542F;&#x540E;&#x4FBF;&#x8FDB;&#x5165;&#x5B89;&#x88C5;&#x754C;&#x9762;&#xFF0C;&#x901A;&#x8FC7;&#x4E0A;&#x4E0B;&#x952E;&#x9009;&#x62E9;&#x5219;&#x7B2C;&#x4E8C;&#x9879;&#xFF1A;<code>Install Ubuntu</code></li><li>&#x9009;&#x62E9;&#x8BED;&#x8A00;</li><li><strong>&#x4E0D;&#x8981;</strong>&#x9009;&#x62E9;&#x4E3A;&#x56FE;&#x5F62;&#x6216;&#x8005;&#x65E0;&#x7EBF;&#x786C;&#x4EF6;&#xFF0C;&#x4EE5;&#x53CA;Mp3&#x548C;&#x5176;&#x4ED6;&#x5A92;&#x4F53;&#x5B89;&#x88C5;&#x7B2C;&#x4E09;&#x65B9;&#x8F6F;&#x4EF6;&#x3002;</li><li>&#x9009;&#x62E9;&#x6700;&#x540E;&#x4E00;&#x9879;&#xFF1A;&#x5176;&#x5B83;&#x9009;&#x9879;</li><li>&#x9009;&#x4E2D;&#x6211;&#x4EEC;&#x9884;&#x7559;&#x597D;&#x7684;100G&#x7A7A;&#x95F4;&#xFF0C;&#x7136;&#x540E;&#x70B9;&#x51FB;+&#x53F7;&#x65B0;&#x5EFA;&#x5206;&#x533A;</li><li>&#x65B0;&#x5EFA;&#x5206;&#x533A;&#xFF1A;<ol><li>&#x5927;&#x5C0F;&#x4E00;&#x822C;&#x4E3A;8G</li><li>&#x65B0;&#x5206;&#x533A;&#x7C7B;&#x578B;&#x4E3A;&#x4E3B;&#x5206;&#x533A;</li><li>&#x65B0;&#x5206;&#x533A;&#x4F4D;&#x7F6E;&#x4E3A;&#x7A7A;&#x95F4;&#x8D77;&#x59CB;&#x4F4D;&#x7F6E;</li><li>&#x7528;&#x4E8E;&#x4EA4;&#x6362;&#x7A7A;&#x95F4;</li><li>&#x6302;&#x8F7D;&#x70B9;/swap</li></ol></li><li>&#x65B0;&#x5EFA;&#x5206;&#x533A;&#xFF1A;<ol><li>&#x5269;&#x4F59;&#x7A7A;&#x95F4;&#x7684;&#x4E00;&#x534A;&#x5206;&#x7ED9;&#x5B83;&#xFF0C;&#x6211;&#x5206;&#x4E86;50G</li><li>&#x65B0;&#x5206;&#x533A;&#x7C7B;&#x578B;&#x4E3A;&#x4E3B;&#x5206;&#x533A;</li><li>&#x65B0;&#x5206;&#x533A;&#x4F4D;&#x7F6E;&#x4E3A;&#x7A7A;&#x95F4;&#x8D77;&#x59CB;&#x4F4D;&#x7F6E;</li><li>&#x7528;&#x4E8E;EXT4&#x65E5;&#x5FD7;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;</li><li>&#x6302;&#x8F7D;&#x70B9;/home</li></ol></li><li>&#x65B0;&#x5EFA;&#x5206;&#x533A;&#xFF1A;<ol><li>&#x5927;&#x5C0F;&#x5269;&#x4E0B;&#x7684;&#x7A7A;&#x95F4;&#x90FD;&#x7ED9;&#x5B83;</li><li>&#x65B0;&#x5206;&#x533A;&#x7C7B;&#x578B;&#x4E3A;&#x4E3B;&#x5206;&#x533A;</li><li>&#x65B0;&#x5206;&#x533A;&#x4F4D;&#x7F6E;&#x4E3A;&#x7A7A;&#x95F4;&#x8D77;&#x59CB;&#x4F4D;&#x7F6E;</li><li>&#x7528;&#x4E8E;EXT4&#x65E5;&#x5FD7;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;</li><li>&#x6302;&#x8F7D;&#x70B9;/</li></ol></li><li>&#x8BBE;&#x7F6E;&#x5B89;&#x88C5;&#x5F15;&#x5BFC;&#x7684;&#x542F;&#x52A8;&#x8BBE;&#x7F6E;&#xFF0C;&#x5728;&#x4E0B;&#x62C9;&#x4E2D;&#x9009;&#x62E9;Windows Boot Manager&#x6240;&#x5728;&#x7684;&#x6574;&#x5757;&#x786C;&#x76D8;&#xFF08;&#x4E0D;&#x5E26;&#x6570;&#x5B57;&#x6807;&#x53F7;&#xFF09;</li><li>&#x70B9;&#x51FB;&#x7EE7;&#x7EED;</li><li>&#x9009;&#x62E9;Shanghai&#xFF0C;&#x5B9A;&#x4F4D;&#x65F6;&#x533A;</li><li>&#x952E;&#x76D8;&#x5E03;&#x5C40;&#x4E2D;&#x82F1;&#x90FD;&#x884C;&#xFF0C;&#x4EE5;&#x540E;&#x53EF;&#x4EE5;&#x6539;</li><li>&#x8BBE;&#x7F6E;&#x7528;&#x6237;&#x540D;&#x4EE5;&#x53CA;&#x5BC6;&#x7801;</li><li>&#x7B49;&#x5F85;&#x8FDB;&#x5EA6;&#x6761;&#x7ED3;&#x675F;&#x5373;&#x53EF;&#x5B8C;&#x6210;&#x5B89;&#x88C5;</li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;&amp;#x524D;&amp;#x8A00;&quot;&gt;&lt;a href=&quot;#&amp;#x524D;&amp;#x8A00;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x524D;&amp;#x8A00;&quot;&gt;&lt;/a&gt;&amp;#x524D;&amp;#x8A00;&lt;/h1&gt;&lt;p&gt;&amp;#x6628;&amp;#x5929;&amp;#x5728;&amp;#x66F4;&amp;#x65B0;tensorflow&amp;#x65F6;&amp;#x6211;&amp;#x7684;Ubuntu&amp;#x7CFB;&amp;#x7EDF;&amp;#x7A81;&amp;#x7136;&amp;#x5D29;&amp;#x6E83;&amp;#x4E86;&amp;#xFF0C;&amp;#x65E0;&amp;#x5948;&amp;#x53EA;&amp;#x80FD;&amp;#x91CD;&amp;#x88C5;&amp;#x7CFB;&amp;#x7EDF;&amp;#x3002;&amp;#x4F46;&amp;#x8DDD;&amp;#x79BB;&amp;#x4E0A;&amp;#x6B21;&amp;#x5B89;&amp;#x88C5;Ubuntu&amp;#x7CFB;&amp;#x7EDF;&amp;#x5DF2;&amp;#x7ECF;&amp;#x8FC7;&amp;#x53BB;&amp;#x8BB8;&amp;#x4E45;&amp;#xFF0C;&amp;#x53EA;&amp;#x80FD;&amp;#x53BB;&amp;#x7F51;&amp;#x4E0A;&amp;#x641C;&amp;#x6559;&amp;#x7A0B;&amp;#x6298;&amp;#x817E;&amp;#xFF0C;&amp;#x597D;&amp;#x5728;&amp;#x6574;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x5F02;&amp;#x5E38;&amp;#x987A;&amp;#x5229;&amp;#xFF0C;&amp;#x4E8E;&amp;#x662F;&amp;#x7528;&amp;#x672C;&amp;#x535A;&amp;#x5BA2;&amp;#x8BB0;&amp;#x5F55;&amp;#x4E0B;&amp;#x6211;&amp;#x7684;&amp;#x6574;&amp;#x4E2A;&amp;#x5B89;&amp;#x88C5;&amp;#x6B65;&amp;#x9AA4;&amp;#x3002;&lt;/p&gt;
    
    </summary>
    
      <category term="Ubuntu" scheme="http://zhengyujie.cn/categories/Ubuntu/"/>
    
    
      <category term="Ubuntu" scheme="http://zhengyujie.cn/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Hexo部署博客到Coding</title>
    <link href="http://zhengyujie.cn/2019/08/13/%E9%83%A8%E7%BD%B2%E5%88%B0coding/"/>
    <id>http://zhengyujie.cn/2019/08/13/部署到coding/</id>
    <published>2019-08-13T11:07:46.000Z</published>
    <updated>2019-08-13T16:01:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h1><p>&#x4E4B;&#x524D;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x90E8;&#x7F72;&#x5728;GitHub&#x4E0A;&#xFF0C;&#x8BBF;&#x95EE;&#x901F;&#x5EA6;&#x6709;&#x70B9;&#x63EA;&#x5FC3;&#xFF0C;&#x4E8E;&#x662F;&#x840C;&#x751F;&#x4E86;&#x628A;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x90E8;&#x7F72;&#x5728;Coding&#x4E0A;&#x7684;&#x60F3;&#x6CD5;&#x3002;&#x6B63;&#x597D;&#x4ECA;&#x5929;&#x4E0B;&#x5348;&#x60F3;&#x5077;&#x4E2A;&#x61D2;&#xFF0C;&#x4E8E;&#x662F;&#x9A6C;&#x4E0A;&#x67E5;&#x8D44;&#x6599;&#x5F00;&#x59CB;&#x6363;&#x9F13;&#x3002;&#x5728;&#x8017;&#x8D39;&#x4E86;&#x6211;&#x5FEB;&#x4E00;&#x4E2A;&#x534A;&#x5C0F;&#x65F6;&#x7684;&#x65F6;&#x95F4;&#x540E;&#xFF0C;&#x7EC8;&#x4E8E;&#x6210;&#x529F;&#x7684;&#x5C06;&#x6211;&#x7684;&#x535A;&#x5BA2;&#x90E8;&#x7F72;&#x5728;Coding&#x4E0A;&#x3002;&#x7528;&#x8FD9;&#x7BC7;&#x535A;&#x5BA2;&#x8BB0;&#x5F55;&#x4E0B;&#x6211;&#x6574;&#x4E2A;&#x6298;&#x817E;&#x8FC7;&#x7A0B;&#x3002;</p><a id="more"></a><h1 id="Coding&#x5E73;&#x53F0;&#x4ECB;&#x7ECD;"><a href="#Coding&#x5E73;&#x53F0;&#x4ECB;&#x7ECD;" class="headerlink" title="Coding&#x5E73;&#x53F0;&#x4ECB;&#x7ECD;"></a>Coding&#x5E73;&#x53F0;&#x4ECB;&#x7ECD;</h1><p>Coding &#x662F;&#x57FA;&#x4E8E;&#x4E91;&#x8BA1;&#x7B97;&#x6280;&#x672F;&#x7684;&#x8F6F;&#x4EF6;&#x5F00;&#x53D1;&#x5E73;&#x53F0;&#xFF0C;&#x96C6;&#x9879;&#x76EE;&#x7BA1;&#x7406;&#x3001;&#x4EE3;&#x7801;&#x6258;&#x7BA1;&#x3001;&#x8FD0;&#x884C;&#x7A7A;&#x95F4;&#x3001;&#x8D28;&#x91CF;&#x63A7;&#x5236;&#x4E3A;&#x4E00;&#x4F53;&#x3002;&#x5728;&#x4E91;&#x8BA1;&#x7B97;&#x65F6;&#x4EE3;&#xFF0C;Coding&#x63A8;&#x52A8;&#x8F6F;&#x4EF6;&#x5F00;&#x53D1;&#x7684;&#x4E91;&#x7AEF;&#x5316;&#xFF0C;&#x4F7F;&#x5F00;&#x53D1;&#x8005;&#x80FD;&#x7528;&#x4E00;&#x4E2A;&#x6D4F;&#x89C8;&#x5668;&#x5B8C;&#x6210;&#x5F00;&#x53D1;&#x7684;&#x5404;&#x4E2A;&#x73AF;&#x8282;&#x3002;&#x5F00;&#x53D1;&#x4EBA;&#x5458;&#x53EF;&#x4EE5;&#x4E13;&#x5FC3;&#x6784;&#x5EFA;&#x4E1A;&#x52A1;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x800C;&#x975E;&#x7BA1;&#x7406;&#x8FD0;&#x8425;&#x6216;&#x53D1;&#x5E03;&#x5806;&#x6808;&#xFF0C;&#x786E;&#x4FDD;&#x5E94;&#x7528;&#x6EE1;&#x8DB3;&#x4EA7;&#x54C1;&#x5C42;&#x76EE;&#x6807;&#x670D;&#x52A1;&#x7B49;&#x7EA7;&#xFF0C;&#x540C;&#x65F6;&#x66F4;&#x4E3A;&#x4F01;&#x4E1A;&#x5C42;&#x7EA7;&#x7684;&#x9879;&#x76EE;&#x5E94;&#x7528;&#x63D0;&#x4F9B;&#x4E86;&#x4EE3;&#x7801;&#x8D28;&#x91CF;&#x68C0;&#x9A8C;&#x4EE5;&#x53CA;&#x9879;&#x76EE;&#x8D28;&#x91CF;&#x628A;&#x63A7;&#x7684;&#x6E20;&#x9053;&#x548C;&#x6807;&#x51C6;&#x3002;&#x5728;&#x4FDD;&#x8BC1;&#x79C1;&#x6709;&#x9879;&#x76EE;&#x7684;&#x6570;&#x636E;&#x5B89;&#x5168;&#x548C;&#x7A33;&#x5B9A;&#x7684;&#x540C;&#x65F6;&#xFF0C;Coding &#x8FD8;&#x7ED3;&#x5408;&#x4E86;&#x5192;&#x6CE1;&#x53CA;&#x8BC4;&#x8BBA;&#x3001;&#x516C;&#x5F00;&#x9879;&#x76EE;&#x53D1;&#x5E03;&#x4E0E;&#x8BA8;&#x8BBA;&#x7B49;&#x4E00;&#x7CFB;&#x5217;&#x793E;&#x4EA4;&#x5316;&#x534F;&#x4F5C;&#x529F;&#x80FD;&#xFF0C;&#x6253;&#x9020;&#x5177;&#x6709;&#x6280;&#x672F;&#x652F;&#x6491;&#x7684;&#x5F00;&#x53D1;&#x8005;&#x793E;&#x533A;&#x3002;&#x2014;&#x2014;&#x6458;&#x81EA;&#x767E;&#x5EA6;&#x767E;&#x79D1;</p><h1 id="&#x5177;&#x4F53;&#x6B65;&#x9AA4;"><a href="#&#x5177;&#x4F53;&#x6B65;&#x9AA4;" class="headerlink" title="&#x5177;&#x4F53;&#x6B65;&#x9AA4;"></a>&#x5177;&#x4F53;&#x6B65;&#x9AA4;</h1><p>&#x5173;&#x4E8E;git,node.js,hexo&#x7B49;&#x5B89;&#x88C5;&#x6B65;&#x9AA4;&#x8FD9;&#x91CC;&#x4E0D;&#x518D;&#x8D58;&#x8FF0;&#x3002;</p><h2 id="Coding&#x5E73;&#x53F0;&#x8BBE;&#x7F6E;"><a href="#Coding&#x5E73;&#x53F0;&#x8BBE;&#x7F6E;" class="headerlink" title="Coding&#x5E73;&#x53F0;&#x8BBE;&#x7F6E;"></a>Coding&#x5E73;&#x53F0;&#x8BBE;&#x7F6E;</h2><ol><li>&#x6CE8;&#x518C;Coding<br> <strong>&#x6CE8;&#x610F;&#xFF1A;</strong> &#x4E00;&#x5B9A;&#x8981;&#x6CE8;&#x518C;Coding&#x4E2A;&#x4EBA;&#x7248;&#xFF0C;&#x800C;&#x4E0D;&#x8981;&#x6CE8;&#x518C;Coding&#x4F01;&#x4E1A;&#x7248;&#xFF0C;&#x8BF4;&#x591A;&#x4E86;&#x90FD;&#x662F;&#x6CEA;&#x3002;</li><li><p>&#x65B0;&#x5EFA;&#x9879;&#x76EE;<br> &#x9879;&#x76EE;&#x540D;&#x79F0;&#x586B;</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yourname.coding.me</span><br></pre></td></tr></table></figure><p> &#x8FD9;&#x91CC;&#x7684;yourname&#x6700;&#x597D;&#x662F;&#x4F60;&#x6CE8;&#x518C;Coding&#x65F6;&#x7684;username<br> &#x5EFA;&#x8BAE;&#x52FE;&#x9009;&#x542F;&#x7528;README.MD&#x6587;&#x4EF6;&#x521D;&#x59CB;&#x5316;&#x9879;&#x76EE;</p></li><li>&#x5F00;&#x542F;Pages&#x670D;&#x52A1;<br> &#x5728;&#x5F00;&#x542F;&#x540E;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x7528;&#x6237;&#x540D;+&#x7F51;&#x7AD9;&#x540E;&#x7F00;&#x6765;&#x8BBF;&#x95EE;&#x535A;&#x5BA2;&#xFF0C;&#x800C;&#x4E14;&#x8FD8;&#x53EF;&#x4EE5;&#x7ED1;&#x5B9A;&#x57DF;&#x540D;&#x901A;&#x8FC7;&#x56FA;&#x5B9A;&#x57DF;&#x540D;&#x6765;&#x8BBF;&#x95EE;&#x3002;</li></ol><h2 id="SSH&#x8BBE;&#x7F6E;"><a href="#SSH&#x8BBE;&#x7F6E;" class="headerlink" title="SSH&#x8BBE;&#x7F6E;"></a>SSH&#x8BBE;&#x7F6E;</h2><ol><li><p>&#x68C0;&#x67E5;&#x7535;&#x8111;&#x662F;&#x5426;&#x5DF2;&#x751F;&#x6210;SSH Key:</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br><span class="line">ls</span><br></pre></td></tr></table></figure><p> &#x82E5;&#x5728;&#x76EE;&#x5F55;&#x4E0B;&#x5B58;&#x5728;id_rsa.pub&#x6216;&#x8005;id_dsa.pub&#x6587;&#x4EF6;&#xFF0C;&#x90A3;&#x4E48;&#x76F4;&#x63A5;&#x5230;&#x7B2C;&#x4E09;&#x6B65;</p></li><li><p>&#x521B;&#x5EFA;SSH Key:</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;&#x4F60;&#x7684;&#x90AE;&#x7BB1;&quot;</span><br></pre></td></tr></table></figure><p> &#x53C2;&#x6570;&#x542B;&#x4E49;&#xFF1A;</p><ul><li>-t &#x6307;&#x5B9A;&#x5BC6;&#x94A5;&#x7C7B;&#x578B;&#xFF0C;&#x9ED8;&#x8BA4;&#x662F;rsa</li><li><p>-C &#x8BBE;&#x7F6E;&#x6CE8;&#x91CA;&#x6587;&#x5B57;&#xFF0C;&#x6BD4;&#x5982;&#x7528;&#x6237;&#x540D;</p><p>&#x6B64;&#x5904;&#x6211;&#x4EEC;&#x76F4;&#x63A5;&#x6309;&#x4E0B;&#x56DE;&#x8F66;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x6587;&#x4EF6;&#x540D;&#x521B;&#x5EFA;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x4F1A;&#x751F;&#x6210;id_rsa&#x548C;id_rsa.pub&#x4E24;&#x4E2A;&#x79D8;&#x94A5;&#x6587;&#x4EF6;&#x3002;&#x63A5;&#x7740;&#x53C8;&#x4F1A;&#x63D0;&#x793A;&#x4F60;&#x8F93;&#x5165;&#x4E24;&#x6B21;&#x5BC6;&#x7801;&#xFF08;&#x8BE5;&#x5BC6;&#x7801;&#x662F;&#x4F60;push&#x6587;&#x4EF6;&#x7684;&#x65F6;&#x5019;&#x8981;&#x8F93;&#x5165;&#x7684;&#x5BC6;&#x7801;&#xFF0C;&#x800C;&#x4E0D;&#x662F;Coding&#x7BA1;&#x7406;&#x8005;&#x7684;&#x5BC6;&#x7801;&#xFF09;&#xFF0C;&#x5F53;&#x7136;&#xFF0C;&#x4F60;&#x4E5F;&#x53EF;&#x4EE5;&#x4E0D;&#x8F93;&#x5165;&#x5BC6;&#x7801;&#xFF0C;&#x6211;&#x76F4;&#x63A5;&#x6309;&#x56DE;&#x8F66;&#x3002;&#x90A3;&#x4E48;push&#x7684;&#x65F6;&#x5019;&#x5C31;&#x4E0D;&#x9700;&#x8981;&#x8F93;&#x5165;&#x5BC6;&#x7801;&#xFF0C;&#x76F4;&#x63A5;&#x63D0;&#x4EA4;&#x5230;Git&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x4E86;</p></li></ul></li><li><p>&#x5728;Coding&#x4E2D;&#x914D;&#x7F6E;SSH<br> &#x70B9;&#x51FB;&#x4E2A;&#x4EBA;&#x8BBE;&#x7F6E;&#xFF0C;&#x518D;&#x9009;&#x62E9;SSH&#x516C;&#x94A5;&#x3002;&#x7136;&#x540E;&#x70B9;&#x51FB;&#x65B0;&#x586B;&#x516C;&#x94A5;&#xFF0C;&#x7528;&#x8BB0;&#x4E8B;&#x672C;&#x6253;&#x5F00;id_rsa.pub&#x6587;&#x4EF6;&#xFF0C;&#x5C06;&#x91CC;&#x9762;&#x7684;&#x5185;&#x5BB9;&#x5168;&#x90E8;&#x590D;&#x5236;&#x5230;&#x516C;&#x94A5;&#x5185;&#x5BB9;&#x4E2D;&#xFF0C;&#x516C;&#x7EA6;&#x540D;&#x79F0;&#x53EF;&#x4EE5;&#x4E0D;&#x586B;&#x3002;&#x6700;&#x540E;&#x70B9;&#x51FB;&#x6DFB;&#x52A0;&#x5373;&#x53EF;&#x3002;</p></li><li><p>SSH&#x6D4B;&#x8BD5;</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@git.coding.net</span><br></pre></td></tr></table></figure><p> &#x82E5;&#x51FA;&#x73B0;&#x4EE5;&#x4E0B;&#x8BF4;&#x660E;&#x5219;&#x8BF4;&#x660E;SSH&#x914D;&#x7F6E;&#x6210;&#x529F;</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello username You&apos;ve connected to Coding.net by SSH successfully!</span><br></pre></td></tr></table></figure></li></ol><h2 id="&#x90E8;&#x7F72;&#x535A;&#x5BA2;"><a href="#&#x90E8;&#x7F72;&#x535A;&#x5BA2;" class="headerlink" title="&#x90E8;&#x7F72;&#x535A;&#x5BA2;"></a>&#x90E8;&#x7F72;&#x535A;&#x5BA2;</h2><ol><li><p>&#x4FEE;&#x6539;&#x914D;&#x7F6E;&#x6587;&#x4EF6;<br> &#x6253;&#x5F00;&#x535A;&#x5BA2;&#x6839;&#x76EE;&#x5F55;&#x914D;&#x7F6E;&#x6587;&#x4EF6;_config.yml&#xFF0C;&#x627E;&#x5230;<code>deploy</code>&#xFF0C;&#x586B;&#x5199;&#x4EE5;&#x4E0B;&#x5185;&#x5BB9;</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repo:</span><br><span class="line">    github: git@github.com:yourname/yourname.github.io.git,master</span><br><span class="line">    coding: git@git.coding.net:yourname/yourname.git,master</span><br></pre></td></tr></table></figure></li><li><p>&#x90E8;&#x7F72;&#x535A;&#x5BA2;<br> <code>cd</code>&#x8FDB;&#x535A;&#x5BA2;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x8F93;&#x5165;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g #&#x751F;&#x6210;&#x9759;&#x6001;&#x7F51;&#x9875;</span><br><span class="line">hexo d #&#x90E8;&#x7F72;&#x535A;&#x5BA2;</span><br></pre></td></tr></table></figure><p> &#x6700;&#x540E;&#x6253;&#x5F00; <a href="http://yourname.coding.me" target="_blank" rel="noopener">http://yourname.coding.me</a> &#x5373;&#x53EF;&#x770B;&#x5230;&#x4F60;&#x7684;&#x535A;&#x5BA2;&#x4E3B;&#x9875;</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;&amp;#x524D;&amp;#x8A00;&quot;&gt;&lt;a href=&quot;#&amp;#x524D;&amp;#x8A00;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x524D;&amp;#x8A00;&quot;&gt;&lt;/a&gt;&amp;#x524D;&amp;#x8A00;&lt;/h1&gt;&lt;p&gt;&amp;#x4E4B;&amp;#x524D;&amp;#x6211;&amp;#x7684;&amp;#x535A;&amp;#x5BA2;&amp;#x90E8;&amp;#x7F72;&amp;#x5728;GitHub&amp;#x4E0A;&amp;#xFF0C;&amp;#x8BBF;&amp;#x95EE;&amp;#x901F;&amp;#x5EA6;&amp;#x6709;&amp;#x70B9;&amp;#x63EA;&amp;#x5FC3;&amp;#xFF0C;&amp;#x4E8E;&amp;#x662F;&amp;#x840C;&amp;#x751F;&amp;#x4E86;&amp;#x628A;&amp;#x6211;&amp;#x7684;&amp;#x535A;&amp;#x5BA2;&amp;#x90E8;&amp;#x7F72;&amp;#x5728;Coding&amp;#x4E0A;&amp;#x7684;&amp;#x60F3;&amp;#x6CD5;&amp;#x3002;&amp;#x6B63;&amp;#x597D;&amp;#x4ECA;&amp;#x5929;&amp;#x4E0B;&amp;#x5348;&amp;#x60F3;&amp;#x5077;&amp;#x4E2A;&amp;#x61D2;&amp;#xFF0C;&amp;#x4E8E;&amp;#x662F;&amp;#x9A6C;&amp;#x4E0A;&amp;#x67E5;&amp;#x8D44;&amp;#x6599;&amp;#x5F00;&amp;#x59CB;&amp;#x6363;&amp;#x9F13;&amp;#x3002;&amp;#x5728;&amp;#x8017;&amp;#x8D39;&amp;#x4E86;&amp;#x6211;&amp;#x5FEB;&amp;#x4E00;&amp;#x4E2A;&amp;#x534A;&amp;#x5C0F;&amp;#x65F6;&amp;#x7684;&amp;#x65F6;&amp;#x95F4;&amp;#x540E;&amp;#xFF0C;&amp;#x7EC8;&amp;#x4E8E;&amp;#x6210;&amp;#x529F;&amp;#x7684;&amp;#x5C06;&amp;#x6211;&amp;#x7684;&amp;#x535A;&amp;#x5BA2;&amp;#x90E8;&amp;#x7F72;&amp;#x5728;Coding&amp;#x4E0A;&amp;#x3002;&amp;#x7528;&amp;#x8FD9;&amp;#x7BC7;&amp;#x535A;&amp;#x5BA2;&amp;#x8BB0;&amp;#x5F55;&amp;#x4E0B;&amp;#x6211;&amp;#x6574;&amp;#x4E2A;&amp;#x6298;&amp;#x817E;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3002;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo框架" scheme="http://zhengyujie.cn/categories/Hexo%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Hexo" scheme="http://zhengyujie.cn/tags/Hexo/"/>
    
      <category term="Coding" scheme="http://zhengyujie.cn/tags/Coding/"/>
    
      <category term="git" scheme="http://zhengyujie.cn/tags/git/"/>
    
      <category term="SSH" scheme="http://zhengyujie.cn/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>Non-local PyTorch部分源码解读</title>
    <link href="http://zhengyujie.cn/2019/08/13/non-local%E7%9A%84pytorch%E6%BA%90%E7%A0%81/"/>
    <id>http://zhengyujie.cn/2019/08/13/non-local的pytorch源码/</id>
    <published>2019-08-13T07:16:47.000Z</published>
    <updated>2019-08-13T05:20:52.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>&#x4EE3;&#x7801;&#x5730;&#x5740;&#xFF1A;<a href="https://github.com/AlexHex7/Non-local_pytorch" target="_blank" rel="noopener">https://github.com/AlexHex7/Non-local_pytorch</a></p></blockquote><h1 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h1><p>&#x6211;&#x53EA;&#x770B;&#x4E86;non-local_embedded_gaussian.py&#x6587;&#x4EF6;&#x4E0B;&#x7684;&#x6E90;&#x7801;&#xFF0C;&#x4EE5;&#x4E0B;&#x4E3A;&#x6211;&#x7684;&#x89E3;&#x8BFB;</p><a id="more"></a><h1 id="&#x7ED3;&#x6784;&#x56FE;&#x793A;"><a href="#&#x7ED3;&#x6784;&#x56FE;&#x793A;" class="headerlink" title="&#x7ED3;&#x6784;&#x56FE;&#x793A;"></a>&#x7ED3;&#x6784;&#x56FE;&#x793A;</h1><p><img src="/2019/08/13/non-local&#x7684;pytorch&#x6E90;&#x7801;/1.png" alt></p><h1 id="&#x90E8;&#x5206;&#x4EE3;&#x7801;&#x89E3;&#x8BFB;"><a href="#&#x90E8;&#x5206;&#x4EE3;&#x7801;&#x89E3;&#x8BFB;" class="headerlink" title="&#x90E8;&#x5206;&#x4EE3;&#x7801;&#x89E3;&#x8BFB;"></a>&#x90E8;&#x5206;&#x4EE3;&#x7801;&#x89E3;&#x8BFB;</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_NonLocalBlockND</span><span class="params">(nn.Module)</span>:</span></span><br><span class="line">    <span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">    in_channels&#x4E3A;&#x8F93;&#x5165;&#x7684;&#x901A;&#x9053;&#x6570;</span></span><br><span class="line"><span class="string">    inter_channels&#x4E3A;&#x4E2D;&#x95F4;&#x8FC7;&#x7A0B;&#x7684;&#x901A;&#x9053;&#x6570;</span></span><br><span class="line"><span class="string">    dimension&#x4E3A;&#x7EF4;&#x5EA6;&#x6570;</span></span><br><span class="line"><span class="string">    sub_sample&#x6807;&#x5FD7;&#x662F;&#x5426;&#x8FDB;&#x884C;&#x4E0B;&#x91C7;&#x6837;(subsampled)</span></span><br><span class="line"><span class="string">    bn_layer&#x6807;&#x793A;&#x662F;&#x5426;&#x8FDB;&#x884C;Batch Norm</span></span><br><span class="line"><span class="string">    &apos;&apos;&apos;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, in_channels, inter_channels=None, dimension=<span class="number">3</span>, sub_sample=True, bn_layer=True)</span>:</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># assert&#x7528;&#x6765;&#x68C0;&#x67E5;&#x6761;&#x4EF6;&#xFF0C;&#x4E0D;&#x7B26;&#x5408;&#x5C31;&#x7EC8;&#x6B62;</span></span><br><span class="line">        <span class="comment"># &#x53EA;&#x80FD;&#x5904;&#x7406;&#x4E00;&#x7EF4;&#xFF0C;&#x4E8C;&#x7EF4;&#x4EE5;&#x53CA;&#x4E09;&#x7EF4;&#x7684;&#x8F93;&#x5165;&#x6570;&#x636E;</span></span><br><span class="line">        <span class="keyword">assert</span> dimension <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">        self.dimension = dimension</span><br><span class="line">        self.sub_sample = sub_sample</span><br><span class="line"></span><br><span class="line">        self.in_channels = in_channels</span><br><span class="line">        self.inter_channels = inter_channels</span><br><span class="line"></span><br><span class="line">        <span class="comment"># &#x82E5;&#x6CA1;&#x6709;&#x6307;&#x5B9A;&#x4E2D;&#x95F4;&#x8FC7;&#x7A0B;&#x7684;&#x901A;&#x9053;&#x6570;&#xFF0C;&#x5219;&#x6307;&#x5B9A;&#x4E3A;&#x8F93;&#x5165;&#x901A;&#x9053;&#x6570;&#x7684;&#x4E00;&#x534A;</span></span><br><span class="line">        <span class="keyword">if</span> self.inter_channels <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            self.inter_channels = in_channels // <span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> self.inter_channels == <span class="number">0</span>:</span><br><span class="line">                self.inter_channels = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># &#x6839;&#x636E;&#x8F93;&#x5165;&#x7684;&#x7EF4;&#x6570;&#x6765;&#x6307;&#x5B9A;&#x5BF9;&#x5E94;&#x7684;&#x5377;&#x79EF;&#x51FD;&#x6570;&#xFF0C;&#x6C60;&#x5316;&#x51FD;&#x6570;&#x4EE5;&#x53CA;&#x5F52;&#x4E00;&#x5316;&#x51FD;&#x6570;</span></span><br><span class="line">        <span class="keyword">if</span> dimension == <span class="number">3</span>:</span><br><span class="line">            conv_nd = nn.Conv3d</span><br><span class="line">            max_pool_layer = nn.MaxPool3d(kernel_size=(<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>))</span><br><span class="line">            bn = nn.BatchNorm3d</span><br><span class="line">        <span class="keyword">elif</span> dimension == <span class="number">2</span>:</span><br><span class="line">            conv_nd = nn.Conv2d</span><br><span class="line">            max_pool_layer = nn.MaxPool2d(kernel_size=(<span class="number">2</span>, <span class="number">2</span>))</span><br><span class="line">            bn = nn.BatchNorm2d</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            conv_nd = nn.Conv1d</span><br><span class="line">            max_pool_layer = nn.MaxPool1d(kernel_size=(<span class="number">2</span>))</span><br><span class="line">            bn = nn.BatchNorm1d</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># &#x6307;&#x5B9A;g&#x51FD;&#x6570;</span></span><br><span class="line">        self.g = conv_nd(in_channels=self.in_channels, out_channels=self.inter_channels,</span><br><span class="line">                         kernel_size=<span class="number">1</span>, stride=<span class="number">1</span>, padding=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># &#x5224;&#x65AD;&#x662F;&#x5426;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x5F52;&#x4E00;&#x5316;&#x64CD;&#x4F5C;</span></span><br><span class="line">        <span class="keyword">if</span> bn_layer:</span><br><span class="line">            self.W = nn.Sequential(</span><br><span class="line">                conv_nd(in_channels=self.inter_channels, out_channels=self.in_channels,</span><br><span class="line">                        kernel_size=<span class="number">1</span>, stride=<span class="number">1</span>, padding=<span class="number">0</span>),</span><br><span class="line">                bn(self.in_channels)</span><br><span class="line">            )</span><br><span class="line">            nn.init.constant(self.W[<span class="number">1</span>].weight, <span class="number">0</span>)</span><br><span class="line">            nn.init.constant(self.W[<span class="number">1</span>].bias, <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.W = conv_nd(in_channels=self.inter_channels, out_channels=self.in_channels,</span><br><span class="line">                             kernel_size=<span class="number">1</span>, stride=<span class="number">1</span>, padding=<span class="number">0</span>)</span><br><span class="line">            <span class="comment"># &#x521D;&#x59CB;&#x5316;&#x4E3A;0</span></span><br><span class="line">            nn.init.constant(self.W.weight, <span class="number">0</span>)</span><br><span class="line">            nn.init.constant(self.W.bias, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        self.theta = conv_nd(in_channels=self.in_channels, out_channels=self.inter_channels,</span><br><span class="line">                             kernel_size=<span class="number">1</span>, stride=<span class="number">1</span>, padding=<span class="number">0</span>)</span><br><span class="line">        self.phi = conv_nd(in_channels=self.in_channels, out_channels=self.inter_channels,</span><br><span class="line">                           kernel_size=<span class="number">1</span>, stride=<span class="number">1</span>, padding=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># &#x5224;&#x65AD;&#x662F;&#x5426;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x4E0B;&#x91C7;&#x6837;</span></span><br><span class="line">        <span class="keyword">if</span> sub_sample:</span><br><span class="line">            self.g = nn.Sequential(self.g, max_pool_layer)</span><br><span class="line">            self.phi = nn.Sequential(self.phi, max_pool_layer)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">forward</span><span class="params">(self, x)</span>:</span></span><br><span class="line">        <span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">        :param x: (b, c, t, h, w)</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &apos;&apos;&apos;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># &#x83B7;&#x5F97;batch&#x7684;&#x5927;&#x5C0F;</span></span><br><span class="line">        batch_size = x.size(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># g(x)&#x7684;size&#x4E3A;batch_size*inter_channels*W*H</span></span><br><span class="line">        <span class="comment"># view&#x7C7B;&#x4F3C;&#x4E8E;resize&#xFF0C;&#x4F7F;&#x5F97;&#x4E2A;g_x&#x7684;size&#x4E3A;batch_size*inter_channels*(W*H)</span></span><br><span class="line">        g_x = self.g(x).view(batch_size, self.inter_channels, <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># &#x7EF4;&#x5EA6;&#x6362;&#x4F4D;&#xFF0C;g_x&#x7684;size&#x53D8;&#x6210;batch_size*(W*H)*inter_channels</span></span><br><span class="line">        g_x = g_x.permute(<span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># theta_x&#x7684;size&#x4E3A;batch_size*inter_channels*(W*H)</span></span><br><span class="line">        theta_x = self.theta(x).view(batch_size, self.inter_channels, <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># theta_x&#x7684;size&#x4E3A;batch_size*(W*H)*inter_channels</span></span><br><span class="line">        theta_x = theta_x.permute(<span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># phi_x&#x7684;size&#x4E3A;batch_size*inter_channels*(W*H)</span></span><br><span class="line">        phi_x = self.phi(x).view(batch_size, self.inter_channels, <span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># f&#x7684;size&#x4E3A;batch_size*(W*H)*(W*H)</span></span><br><span class="line">        f = torch.matmul(theta_x, phi_x)</span><br><span class="line"></span><br><span class="line">        f_div_C = F.softmax(f, dim=<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># y&#x7684;size&#x4E3A;batch_size*(H*W)*inter_channels</span></span><br><span class="line">        y = torch.matmul(f_div_C, g_x)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># view&#x53EA;&#x80FD;&#x7528;&#x5728;contiguous&#x7684;variable&#x4E0A;&#x3002;&#x5982;&#x679C;&#x5728;view&#x4E4B;&#x524D;&#x7528;&#x4E86;transpose, permute&#x7B49;&#xFF0C;</span></span><br><span class="line">        <span class="comment"># &#x9700;&#x8981;&#x7528;contiguous()&#x6765;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;contiguous copy&#x3002;</span></span><br><span class="line">        <span class="comment"># y&#x7684;size&#x4E3A;batch_size*inter_channels*(H*W)</span></span><br><span class="line">        y = y.permute(<span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>).contiguous()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># y&#x7684;size&#x4E3A;batch_size*inter_channels*H*W</span></span><br><span class="line">        y = y.view(batch_size, self.inter_channels, *x.size()[<span class="number">2</span>:])</span><br><span class="line"></span><br><span class="line">        <span class="comment"># W_y&#x7684;size&#x4E3A;batch_size*out_channels*W*H</span></span><br><span class="line">        W_y = self.W(y)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># &#x5F97;&#x5230;&#x6700;&#x7EC8;&#x8F93;&#x51FA;</span></span><br><span class="line">        z = W_y + x</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> z</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&amp;#x4EE3;&amp;#x7801;&amp;#x5730;&amp;#x5740;&amp;#xFF1A;&lt;a href=&quot;https://github.com/AlexHex7/Non-local_pytorch&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/AlexHex7/Non-local_pytorch&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;&amp;#x524D;&amp;#x8A00;&quot;&gt;&lt;a href=&quot;#&amp;#x524D;&amp;#x8A00;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x524D;&amp;#x8A00;&quot;&gt;&lt;/a&gt;&amp;#x524D;&amp;#x8A00;&lt;/h1&gt;&lt;p&gt;&amp;#x6211;&amp;#x53EA;&amp;#x770B;&amp;#x4E86;non-local_embedded_gaussian.py&amp;#x6587;&amp;#x4EF6;&amp;#x4E0B;&amp;#x7684;&amp;#x6E90;&amp;#x7801;&amp;#xFF0C;&amp;#x4EE5;&amp;#x4E0B;&amp;#x4E3A;&amp;#x6211;&amp;#x7684;&amp;#x89E3;&amp;#x8BFB;&lt;/p&gt;
    
    </summary>
    
      <category term="深度学习" scheme="http://zhengyujie.cn/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Python" scheme="http://zhengyujie.cn/categories/Python/"/>
    
    
      <category term="卷积网络" scheme="http://zhengyujie.cn/tags/%E5%8D%B7%E7%A7%AF%E7%BD%91%E7%BB%9C/"/>
    
      <category term="PyTorch" scheme="http://zhengyujie.cn/tags/PyTorch/"/>
    
  </entry>
  
  <entry>
    <title>空洞卷积(Dilated Convolution)学习笔记</title>
    <link href="http://zhengyujie.cn/2019/08/13/dilated_conv/"/>
    <id>http://zhengyujie.cn/2019/08/13/dilated_conv/</id>
    <published>2019-08-13T06:24:15.000Z</published>
    <updated>2019-08-12T23:13:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h1><p>&#x5F15;&#x5165;&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x4E0D;&#x5F97;&#x4E0D;&#x63D0;&#x7684;&#x662F;&#x611F;&#x53D7;&#x91CE;&#xFF0C;&#x611F;&#x53D7;&#x91CE;&#x5C31;&#x662F;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x6BCF;&#x4E00;&#x5C42;&#x8F93;&#x51FA;&#x7684;&#x7279;&#x5F81;&#x56FE;(feature map)&#x4E0A;&#x7684;&#x50CF;&#x7D20;&#x70B9;&#x5728;&#x539F;&#x56FE;&#x50CF;&#x4E0A;&#x6620;&#x5C04;&#x7684;&#x533A;&#x57DF;&#x5927;&#x5C0F;&#x3002;&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x4E3B;&#x8981;&#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x56FE;&#x50CF;&#x5206;&#x5272;&#x4E2D;&#x7684;&#x4E00;&#x4E9B;&#x95EE;&#x9898;&#x800C;&#x63D0;&#x51FA;&#x7684;&#xFF0C;&#x5728;FCN&#x4E2D;&#x901A;&#x8FC7;pooling&#x589E;&#x5927;&#x611F;&#x53D7;&#x91CE;&#x7F29;&#x5C0F;&#x56FE;&#x50CF;&#x5C3A;&#x5BF8;&#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7;upsampling&#x8FD8;&#x539F;&#x56FE;&#x50CF;&#x5C3A;&#x5BF8;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x4E2D;&#x9020;&#x6210;&#x4E86;&#x7CBE;&#x5EA6;&#x7684;&#x635F;&#x5931;&#xFF0C;&#x90A3;&#x4E48;&#x4E3A;&#x4E86;&#x51CF;&#x5C0F;&#x8FD9;&#x79CD;&#x635F;&#x5931;&#x7406;&#x6240;&#x5F53;&#x7136;&#x60F3;&#x5230;&#x7684;&#x662F;&#x53BB;&#x6389;pooling&#x5C42;&#xFF0C;&#x7136;&#x800C;&#x8FD9;&#x6837;&#x5C31;&#x5BFC;&#x81F4;&#x7279;&#x5F81;&#x56FE;&#x611F;&#x53D7;&#x91CE;&#x592A;&#x5C0F;&#xFF0C;&#x56E0;&#x6B64;&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x5E94;&#x8FD0;&#x800C;&#x751F;&#x3002;</p><a id="more"></a><h1 id="&#x7A7A;&#x6D1E;&#x5377;&#x79EF;"><a href="#&#x7A7A;&#x6D1E;&#x5377;&#x79EF;" class="headerlink" title="&#x7A7A;&#x6D1E;&#x5377;&#x79EF;"></a>&#x7A7A;&#x6D1E;&#x5377;&#x79EF;</h1><h2 id="&#x6982;&#x8981;"><a href="#&#x6982;&#x8981;" class="headerlink" title="&#x6982;&#x8981;"></a>&#x6982;&#x8981;</h2><p>Dilated Convolutions&#xFF0C;&#x7FFB;&#x8BD1;&#x4E3A;&#x6269;&#x5F20;&#x5377;&#x79EF;&#x6216;&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x3002;&#x6269;&#x5F20;&#x5377;&#x79EF;&#x4E0E;&#x666E;&#x901A;&#x7684;&#x5377;&#x79EF;&#x76F8;&#x6BD4;&#xFF0C;&#x9664;&#x4E86;&#x5377;&#x79EF;&#x6838;&#x7684;&#x5927;&#x5C0F;&#x4EE5;&#x5916;&#xFF0C;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x6269;&#x5F20;&#x7387;(dilation rate)&#x53C2;&#x6570;&#xFF0C;&#x4E3B;&#x8981;&#x7528;&#x6765;&#x8868;&#x793A;&#x6269;&#x5F20;&#x7684;&#x5927;&#x5C0F;&#x3002;&#x6269;&#x5F20;&#x5377;&#x79EF;&#x4E0E;&#x666E;&#x901A;&#x5377;&#x79EF;&#x7684;&#x76F8;&#x540C;&#x70B9;&#x5728;&#x4E8E;&#xFF0C;&#x5377;&#x79EF;&#x6838;&#x7684;&#x5927;&#x5C0F;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x5728;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#x5373;&#x53C2;&#x6570;&#x6570;&#x91CF;&#x4E0D;&#x53D8;&#xFF0C;&#x533A;&#x522B;&#x5728;&#x4E8E;&#x6269;&#x5F20;&#x5377;&#x79EF;&#x5177;&#x6709;&#x66F4;&#x5927;&#x7684;&#x611F;&#x53D7;&#x91CE;&#x3002;</p><h2 id="&#x793A;&#x610F;&#x56FE;"><a href="#&#x793A;&#x610F;&#x56FE;" class="headerlink" title="&#x793A;&#x610F;&#x56FE;"></a>&#x793A;&#x610F;&#x56FE;</h2><p><img src="/2019/08/13/dilated_conv/1.png" alt="&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x793A;&#x610F;&#x56FE;"></p><ul><li>&#x56FE;(a)&#x4E3A;1-dilated conv&#xFF0C;&#x611F;&#x53D7;&#x91CE;&#x4E3A;3&#xD7;3</li><li>&#x56FE;(b)&#x4E3A;2-dilated conv&#xFF0C;&#x8DDF;&#x5728;1-dilated conv&#x540E;&#x9762;&#xFF0C;&#x611F;&#x53D7;&#x91CE;&#x6269;&#x5927;&#x4E3A;&#x4E3A;7&#xD7;7</li><li>&#x56FE;(c)&#x4E3A;4-dilated conv&#xFF0C;&#x540C;&#x6837;&#x8DDF;&#x5728;1-dilated conv&#x4EE5;&#x53CA;1-dilated conv&#x540E;&#x9762;&#xFF0C;&#x611F;&#x53D7;&#x91CE;&#x6269;&#x5927;&#x4E3A;&#x4E3A;15&#xD7;15</li><li>&#x76F8;&#x6BD4;&#x4E4B;&#x4E0B;&#xFF0C;&#x4F7F;&#x7528;stride&#x4E3A;1&#x7684;&#x666E;&#x901A;&#x5377;&#x79EF;&#xFF0C;&#x4E09;&#x5C42;&#x540E;&#x7684;&#x611F;&#x53D7;&#x91CE;&#x4EC5;&#x4E3A;7&#xD7;7</li></ul><h2 id="&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x7684;&#x4F5C;&#x7528;"><a href="#&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x7684;&#x4F5C;&#x7528;" class="headerlink" title="&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x7684;&#x4F5C;&#x7528;"></a>&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x7684;&#x4F5C;&#x7528;</h2><ul><li><p><strong>&#x6269;&#x5927;&#x611F;&#x53D7;&#x91CE;</strong><br>  &#x5728;deep net&#x4E2D;&#x4E3A;&#x4E86;&#x589E;&#x52A0;&#x611F;&#x53D7;&#x91CE;&#x4E14;&#x964D;&#x4F4E;&#x8BA1;&#x7B97;&#x91CF;&#xFF0C;&#x603B;&#x8981;&#x8FDB;&#x884C;&#x964D;&#x91C7;&#x6837;(pooling&#x6216;s2/conv)&#xFF0C;&#x8FD9;&#x6837;&#x867D;&#x7136;&#x53EF;&#x4EE5;&#x589E;&#x52A0;&#x611F;&#x53D7;&#x91CE;&#xFF0C;&#x4F46;&#x7A7A;&#x95F4;&#x5206;&#x8FA8;&#x7387;&#x964D;&#x4F4E;&#x4E86;&#x3002;&#x4E3A;&#x4E86;&#x80FD;&#x4E0D;&#x4E22;&#x5931;&#x5206;&#x8FA8;&#x7387;&#xFF0C;&#x4E14;&#x4ECD;&#x7136;&#x6269;&#x5927;&#x611F;&#x53D7;&#x91CE;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x3002;&#x8FD9;&#x5728;&#x68C0;&#x6D4B;&#xFF0C;&#x5206;&#x5272;&#x4EFB;&#x52A1;&#x4E2D;&#x5341;&#x5206;&#x6709;&#x7528;&#x3002;&#x4E00;&#x65B9;&#x9762;&#x611F;&#x53D7;&#x91CE;&#x5927;&#x4E86;&#x53EF;&#x4EE5;&#x68C0;&#x6D4B;&#x5206;&#x5272;&#x5927;&#x76EE;&#x6807;&#xFF0C;&#x53E6;&#x4E00;&#x65B9;&#x9762;&#x5206;&#x8FA8;&#x7387;&#x9AD8;&#x4E86;&#x53EF;&#x4EE5;&#x7CBE;&#x786E;&#x5B9A;&#x4F4D;&#x76EE;&#x6807;&#x3002;</p></li><li><p><strong>&#x6355;&#x83B7;&#x591A;&#x5C3A;&#x5EA6;&#x4E0A;&#x4E0B;&#x6587;&#x4FE1;&#x606F;</strong><br>  &#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x6709;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;dilation rate&#xFF0C;&#x5177;&#x4F53;&#x542B;&#x4E49;&#x5C31;&#x662F;&#x5728;&#x5377;&#x79EF;&#x6838;&#x4E2D;&#x586B;&#x5145;dilation rate-1&#x4E2A;0&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x5F53;&#x8BBE;&#x7F6E;&#x4E0D;&#x540C;dilation rate&#x65F6;&#xFF0C;&#x611F;&#x53D7;&#x91CE;&#x5C31;&#x4F1A;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x4E5F;&#x5373;&#x83B7;&#x53D6;&#x4E86;&#x591A;&#x5C3A;&#x5EA6;&#x4FE1;&#x606F;&#x3002;</p></li></ul><h2 id="&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x5B58;&#x5728;&#x7684;&#x95EE;&#x9898;"><a href="#&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x5B58;&#x5728;&#x7684;&#x95EE;&#x9898;" class="headerlink" title="&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x5B58;&#x5728;&#x7684;&#x95EE;&#x9898;"></a>&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x5B58;&#x5728;&#x7684;&#x95EE;&#x9898;</h2><ul><li><p><strong>The Gridding Effect</strong><br>  &#x5047;&#x8BBE;&#x6211;&#x4EEC;&#x4EC5;&#x4EC5;&#x591A;&#x6B21;&#x53E0;&#x52A0; dilation rate 2 &#x7684; 3 x 3 kernel &#x7684;&#x8BDD;&#xFF0C;&#x5219;&#x4F1A;&#x51FA;&#x73B0;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF1A;</p><p>  <img src="/2019/08/13/dilated_conv/2.png" alt></p><p>  &#x5F88;&#x660E;&#x663E;&#xFF0C;&#x611F;&#x53D7;&#x91CE;&#x4E0D;&#x8FDE;&#x7EED;&#xFF08;&#x6211;&#x4EEC;&#x4E0A;&#x4E00;&#x5C0F;&#x7ED3;&#x7684;&#x4F8B;&#x5B50;&#x5C31;&#x6CA1;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x6240;&#x4EE5;&#x7A7A;&#x6D1E;&#x5377;&#x79EF;&#x4F9D;&#x8D56;&#x7F51;&#x7EDC;&#x8BBE;&#x8BA1;&#xFF09;&#x3002;</p></li><li><p><strong>Long-ranged information might be not relevant</strong><br>  &#x6211;&#x4EEC;&#x4ECE; dilated convolution &#x7684;&#x8BBE;&#x8BA1;&#x80CC;&#x666F;&#x6765;&#x770B;&#x5C31;&#x80FD;&#x63A8;&#x6D4B;&#x51FA;&#x8FD9;&#x6837;&#x7684;&#x8BBE;&#x8BA1;&#x662F;&#x7528;&#x6765;&#x83B7;&#x53D6; long-ranged information&#x3002;&#x7136;&#x800C;&#x5149;&#x91C7;&#x7528;&#x5927; dilation rate &#x7684;&#x4FE1;&#x606F;&#x6216;&#x8BB8;&#x53EA;&#x5BF9;&#x4E00;&#x4E9B;&#x5927;&#x7269;&#x4F53;&#x5206;&#x5272;&#x6709;&#x6548;&#x679C;&#xFF0C;&#x800C;&#x5BF9;&#x5C0F;&#x7269;&#x4F53;&#x6765;&#x8BF4;&#x53EF;&#x80FD;&#x5219;&#x6709;&#x5F0A;&#x65E0;&#x5229;&#x4E86;&#x3002;&#x5982;&#x4F55;&#x540C;&#x65F6;&#x5904;&#x7406;&#x4E0D;&#x540C;&#x5927;&#x5C0F;&#x7684;&#x7269;&#x4F53;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x5219;&#x662F;&#x8BBE;&#x8BA1;&#x597D; dilated convolution &#x7F51;&#x7EDC;&#x7684;&#x5173;&#x952E;&#x3002;</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;&amp;#x524D;&amp;#x8A00;&quot;&gt;&lt;a href=&quot;#&amp;#x524D;&amp;#x8A00;&quot; class=&quot;headerlink&quot; title=&quot;&amp;#x524D;&amp;#x8A00;&quot;&gt;&lt;/a&gt;&amp;#x524D;&amp;#x8A00;&lt;/h1&gt;&lt;p&gt;&amp;#x5F15;&amp;#x5165;&amp;#x7A7A;&amp;#x6D1E;&amp;#x5377;&amp;#x79EF;&amp;#x4E0D;&amp;#x5F97;&amp;#x4E0D;&amp;#x63D0;&amp;#x7684;&amp;#x662F;&amp;#x611F;&amp;#x53D7;&amp;#x91CE;&amp;#xFF0C;&amp;#x611F;&amp;#x53D7;&amp;#x91CE;&amp;#x5C31;&amp;#x662F;&amp;#x5377;&amp;#x79EF;&amp;#x795E;&amp;#x7ECF;&amp;#x7F51;&amp;#x7EDC;&amp;#x7684;&amp;#x6BCF;&amp;#x4E00;&amp;#x5C42;&amp;#x8F93;&amp;#x51FA;&amp;#x7684;&amp;#x7279;&amp;#x5F81;&amp;#x56FE;(feature map)&amp;#x4E0A;&amp;#x7684;&amp;#x50CF;&amp;#x7D20;&amp;#x70B9;&amp;#x5728;&amp;#x539F;&amp;#x56FE;&amp;#x50CF;&amp;#x4E0A;&amp;#x6620;&amp;#x5C04;&amp;#x7684;&amp;#x533A;&amp;#x57DF;&amp;#x5927;&amp;#x5C0F;&amp;#x3002;&amp;#x7A7A;&amp;#x6D1E;&amp;#x5377;&amp;#x79EF;&amp;#x4E3B;&amp;#x8981;&amp;#x4E3A;&amp;#x4E86;&amp;#x89E3;&amp;#x51B3;&amp;#x56FE;&amp;#x50CF;&amp;#x5206;&amp;#x5272;&amp;#x4E2D;&amp;#x7684;&amp;#x4E00;&amp;#x4E9B;&amp;#x95EE;&amp;#x9898;&amp;#x800C;&amp;#x63D0;&amp;#x51FA;&amp;#x7684;&amp;#xFF0C;&amp;#x5728;FCN&amp;#x4E2D;&amp;#x901A;&amp;#x8FC7;pooling&amp;#x589E;&amp;#x5927;&amp;#x611F;&amp;#x53D7;&amp;#x91CE;&amp;#x7F29;&amp;#x5C0F;&amp;#x56FE;&amp;#x50CF;&amp;#x5C3A;&amp;#x5BF8;&amp;#xFF0C;&amp;#x7136;&amp;#x540E;&amp;#x901A;&amp;#x8FC7;upsampling&amp;#x8FD8;&amp;#x539F;&amp;#x56FE;&amp;#x50CF;&amp;#x5C3A;&amp;#x5BF8;&amp;#xFF0C;&amp;#x4F46;&amp;#x662F;&amp;#x8FD9;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x4E2D;&amp;#x9020;&amp;#x6210;&amp;#x4E86;&amp;#x7CBE;&amp;#x5EA6;&amp;#x7684;&amp;#x635F;&amp;#x5931;&amp;#xFF0C;&amp;#x90A3;&amp;#x4E48;&amp;#x4E3A;&amp;#x4E86;&amp;#x51CF;&amp;#x5C0F;&amp;#x8FD9;&amp;#x79CD;&amp;#x635F;&amp;#x5931;&amp;#x7406;&amp;#x6240;&amp;#x5F53;&amp;#x7136;&amp;#x60F3;&amp;#x5230;&amp;#x7684;&amp;#x662F;&amp;#x53BB;&amp;#x6389;pooling&amp;#x5C42;&amp;#xFF0C;&amp;#x7136;&amp;#x800C;&amp;#x8FD9;&amp;#x6837;&amp;#x5C31;&amp;#x5BFC;&amp;#x81F4;&amp;#x7279;&amp;#x5F81;&amp;#x56FE;&amp;#x611F;&amp;#x53D7;&amp;#x91CE;&amp;#x592A;&amp;#x5C0F;&amp;#xFF0C;&amp;#x56E0;&amp;#x6B64;&amp;#x7A7A;&amp;#x6D1E;&amp;#x5377;&amp;#x79EF;&amp;#x5E94;&amp;#x8FD0;&amp;#x800C;&amp;#x751F;&amp;#x3002;&lt;/p&gt;
    
    </summary>
    
      <category term="深度学习" scheme="http://zhengyujie.cn/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="卷积网络" scheme="http://zhengyujie.cn/tags/%E5%8D%B7%E7%A7%AF%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>TensorFlow学习笔记11：ResNet</title>
    <link href="http://zhengyujie.cn/2019/08/12/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B011/"/>
    <id>http://zhengyujie.cn/2019/08/12/tf学习笔记11/</id>
    <published>2019-08-12T11:24:47.000Z</published>
    <updated>2019-08-12T05:14:20.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ResNet"><a href="#ResNet" class="headerlink" title="ResNet"></a>ResNet</h1><p>ResNet&#x662F;&#x7531;Kaiming He&#x7B49;4&#x540D;&#x534E;&#x4EBA;&#x63D0;&#x51FA;&#xFF0C;&#x901A;&#x8FC7;&#x4F7F;&#x7528;Residual Unit&#x6210;&#x529F;&#x8BAD;&#x7EC3;&#x4E86;152&#x5C42;&#x7684;&#x6DF1;&#x5EA6;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x5728;ILSVRC 2015&#x6BD4;&#x8D5B;&#x4E2D;&#x83B7;&#x5F97;&#x51A0;&#x519B;&#xFF0C;&#x53D6;&#x5F97;&#x4E86;3.57%&#x7684;top-5&#x9519;&#x8BEF;&#x7387;&#xFF0C;&#x540C;&#x65F6;&#x53C2;&#x6570;&#x5374;&#x6BD4;VGGNet&#x5C11;&#x3002;ResNet&#x7684;&#x7ED3;&#x6784;&#x53EF;&#x4EE5;&#x6781;&#x5FEB;&#x7684;&#x52A0;&#x901F;&#x8D85;&#x6DF1;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x8BAD;&#x7EC3;&#xFF0C;&#x6A21;&#x578B;&#x7684;&#x51C6;&#x786E;&#x7387;&#x4E5F;&#x6709;&#x8F83;&#x5927;&#x7684;&#x63D0;&#x5347;&#x3002;&#x4E4B;&#x540E;&#x5F88;&#x591A;&#x65B9;&#x6CD5;&#x90FD;&#x5EFA;&#x7ACB;&#x5728;ResNet&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x5B8C;&#x6210;&#x7684;&#xFF0C;&#x4F8B;&#x5982;&#x68C0;&#x6D4B;&#xFF0C;&#x5206;&#x5272;&#xFF0C;&#x8BC6;&#x522B;&#x7B49;&#x9886;&#x57DF;&#x90FD;&#x7EB7;&#x7EB7;&#x4F7F;&#x7528;ResNet&#x3002;&#x5728;ResNet&#x63A8;&#x51FA;&#x4E0D;&#x4E45;&#xFF0C;Google&#x5C31;&#x501F;&#x9274;&#x4E86;ResNet&#x7684;&#x7CBE;&#x9AD3;&#xFF0C;&#x63D0;&#x51FA;&#x4E86;Inception V4&#x548C;Inception-ResNet-V2&#xFF0C;&#x5E76;&#x901A;&#x8FC7;&#x878D;&#x5408;&#x8FD9;&#x4E24;&#x4E2A;&#x6A21;&#x578B;&#xFF0C;&#x5728;ILSVRC&#x6570;&#x636E;&#x96C6;&#x4E0A;&#x53D6;&#x5F97;&#x4E86;&#x60CA;&#x4EBA;&#x7684;3.08%&#x7684;&#x9519;&#x8BEF;&#x7387;&#x3002;&#x6240;&#x4EE5;&#x53EF;&#x89C1;ResNet&#x786E;&#x5B9E;&#x5F88;&#x597D;&#x7528;&#x3002;</p><a id="more"></a><h1 id="&#x7F51;&#x7EDC;&#x7ED3;&#x6784;"><a href="#&#x7F51;&#x7EDC;&#x7ED3;&#x6784;" class="headerlink" title="&#x7F51;&#x7EDC;&#x7ED3;&#x6784;"></a>&#x7F51;&#x7EDC;&#x7ED3;&#x6784;</h1><p><img src="/2019/08/12/tf&#x5B66;&#x4E60;&#x7B14;&#x8BB0;11/1.png" alt></p><h1 id="TensorFlow&#x5B9E;&#x73B0;"><a href="#TensorFlow&#x5B9E;&#x73B0;" class="headerlink" title="TensorFlow&#x5B9E;&#x73B0;"></a>TensorFlow&#x5B9E;&#x73B0;</h1><h2 id="&#x5BFC;&#x5165;&#x5305;&#x5E76;&#x8BBE;&#x8BA1;Block&#x6A21;&#x5757;&#x7EC4;"><a href="#&#x5BFC;&#x5165;&#x5305;&#x5E76;&#x8BBE;&#x8BA1;Block&#x6A21;&#x5757;&#x7EC4;" class="headerlink" title="&#x5BFC;&#x5165;&#x5305;&#x5E76;&#x8BBE;&#x8BA1;Block&#x6A21;&#x5757;&#x7EC4;"></a>&#x5BFC;&#x5165;&#x5305;&#x5E76;&#x8BBE;&#x8BA1;Block&#x6A21;&#x5757;&#x7EC4;</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line">slim = tf.contrib.slim</span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x4F7F;&#x7528;collections.namedtuple&#x8BBE;&#x8BA1;ResNet&#x57FA;&#x672C;Block&#x6A21;&#x5757;&#x7EC4;&#x7684;named tuple<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">scope&#x4E3A;&#x751F;&#x6210;&#x7684;Block&#x7684;&#x540D;&#x79F0;</span></span><br><span class="line"><span class="string">unit_fn&#x4E3A;&#x6B8B;&#x5DEE;&#x5B66;&#x4E60;&#x5143;&#x751F;&#x6210;&#x51FD;&#x6570;</span></span><br><span class="line"><span class="string">args&#x662F;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x7B49;&#x4E8E;Block&#x4E2D;&#x5355;&#x5143;&#x6570;&#x76EE;&#x7684;&#x5E8F;&#x5217;&#xFF0C;&#x5E8F;&#x5217;&#x4E2D;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;</span></span><br><span class="line"><span class="string">&#x5305;&#x542B;&#x7B2C;&#x4E09;&#x5C42;&#x901A;&#x9053;&#x6570;&#xFF0C;&#x524D;&#x4E24;&#x5C42;&#x901A;&#x9053;&#x6570;&#x4EE5;&#x53CA;&#x4E2D;&#x95F4;&#x5C42;&#x6B65;&#x957F;(depth,depth_bottleneck,stride)</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Block</span><span class="params">(collections.namedtuple<span class="params">(<span class="string">&apos;Block&apos;</span>,[<span class="string">&apos;scope&apos;</span>,<span class="string">&apos;unit_fn&apos;</span>,<span class="string">&apos;args&apos;</span>])</span>)</span>:</span></span><br><span class="line">    <span class="string">&apos;A named tuple describing a ResNet block&apos;</span></span><br></pre></td></tr></table></figure></p><p>&#x4EE5;&#x4E0B;&#x9762;Block(&#x2018;block1&#x2019;, bottleneck, [(256, 64, 1)] * 2 + [(256, 64, 2)])&#x4E3A;&#x4F8B;</p><ul><li>block1: &#x662F;&#x8FD9;&#x4E2A;Block&#x7684;&#x540D;&#x79F0;</li><li>bottleneck: &#x524D;&#x9762;&#x5B9A;&#x4E49;&#x7684;&#x6B8B;&#x5DEE;&#x5B66;&#x4E60;&#x5355;&#x5143;&#xFF08;&#x6709;&#x4E09;&#x5C42;&#xFF09;</li><li>[(256, 64, 1)] * 2 + [(256, 64, 2)]: &#x662F;&#x4E00;&#x4E2A;&#x5217;&#x8868;&#xFF0C;&#x5176;&#x4E2D;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x90FD;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;bottleneck&#x6B8B;&#x5DEE;&#x5B66;&#x4E60;&#x5355;&#x5143;&#xFF0C;&#x524D;&#x9762;&#x4E24;&#x4E2A;&#x5143;&#x7D20;&#x90FD;&#x662F;(256, 64, 1),&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x662F;(256, 64, 2)&#x3002;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x90FD;&#x65F6;&#x4E00;&#x4E2A;3&#x5143;&#x7EC4;&#xFF0C;&#x5373;&#xFF08;depth, depth_bottleneck, stride&#xFF09;,&#x4EE3;&#x8868;&#x6784;&#x5EFA;&#x7684;bottleneck&#x6B8B;&#x5DEE;&#x5B66;&#x4E60;&#x5355;&#x5143;&#x4E2D;&#xFF0C;&#x7B2C;&#x4E09;&#x5C42;&#x7684;&#x8F93;&#x51FA;&#x901A;&#x9053;&#x4E3A;256&#xFF08;depth&#xFF09;&#xFF0C;&#x524D;&#x4E24;&#x5C42;&#x7684;&#x8F93;&#x51FA;&#x901A;&#x9053;&#x6570;&#x4E3A;64&#xFF08;depth_bottleneck&#xFF09;&#x4E14;&#x4E2D;&#x95F4;&#x90A3;&#x5C42;&#x7684;&#x6B65;&#x957F;stride&#x4E3A;1&#xFF08;stride&#xFF09;</li></ul><h2 id="&#x5B9A;&#x4E49;&#x90E8;&#x5206;&#x65B9;&#x6CD5;"><a href="#&#x5B9A;&#x4E49;&#x90E8;&#x5206;&#x65B9;&#x6CD5;" class="headerlink" title="&#x5B9A;&#x4E49;&#x90E8;&#x5206;&#x65B9;&#x6CD5;"></a>&#x5B9A;&#x4E49;&#x90E8;&#x5206;&#x65B9;&#x6CD5;</h2><ul><li><p>&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x964D;&#x91C7;&#x6837;subsample&#x7684;&#x65B9;&#x6CD5;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">&#x964D;&#x91C7;&#x6837;&#x51FD;&#x6570;   </span></span><br><span class="line"><span class="string">input&#x4E3A;&#x8F93;&#x5165;</span></span><br><span class="line"><span class="string">factor&#x4E3A;&#x91C7;&#x6837;&#x56E0;&#x5B50;</span></span><br><span class="line"><span class="string">&#x4F7F;&#x7528;slim.max_pool2d&#x6765;&#x5B9E;&#x73B0;</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span>    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">subsample</span><span class="params">(inputs,factor,scope=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> factor==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> inputs</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> slim.max_pool2d(inputs,[<span class="number">1</span>,<span class="number">1</span>],stride=factor,scope=scope)</span><br></pre></td></tr></table></figure></li><li><p>&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;conv2d_same&#x51FD;&#x6570;&#x521B;&#x5EFA;&#x5377;&#x79EF;&#x5C42;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">conv2d_same</span><span class="params">(inputs,num_outputs,kernel_size,stride,scope=None)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> stride==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> slim.conv2d(inputs,num_outputs,kernel_size,stride=<span class="number">1</span>,padding=<span class="string">&apos;SAME&apos;</span>,scope=scope)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># &#x663E;&#x5F0F;&#x5730;pad zero</span></span><br><span class="line">        pad_total=kernel_size - <span class="number">1</span></span><br><span class="line">        pad_beg=pad_total // <span class="number">2</span></span><br><span class="line">        pad_end=pad_total-pad_beg</span><br><span class="line">        <span class="comment">#&#x4F7F;&#x7528;tf.pad&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x586B;&#x5145;</span></span><br><span class="line">        inputs = tf.pad(inputs, [[<span class="number">0</span>, <span class="number">0</span>], [pad_beg, pad_end], [pad_beg, pad_end], [<span class="number">0</span>, <span class="number">0</span>]])</span><br><span class="line">        <span class="keyword">return</span> slim.conv2d(inputs, num_outputs, kernel_size, stride=stride,</span><br><span class="line">                        padding=<span class="string">&apos;VALID&apos;</span>, scope=scope)</span><br></pre></td></tr></table></figure></li><li><p>&#x5B9A;&#x4E49;&#x5806;&#x53E0;Blocks&#x7684;&#x51FD;&#x6570;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">net&#x4E3A;&#x8F93;&#x5165;</span></span><br><span class="line"><span class="string">blocks&#x4E3A;&#x5B9A;&#x4E49;&#x7684;Block&#x7684;class&#x7684;&#x5217;&#x8868;</span></span><br><span class="line"><span class="string">outputs_collections&#x662F;&#x7528;&#x6765;&#x6536;&#x96C6;&#x5404;&#x4E2A;end_points&#x7684;collections</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="meta">@slim.add_arg_scope</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">stack_blocks_dense</span><span class="params">(net,blocks,outputs_collections=None)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> block <span class="keyword">in</span> blocks:</span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(block.scope,<span class="string">&apos;block&apos;</span>,[net])<span class="keyword">as</span> sc:</span><br><span class="line">            <span class="comment"># &#x62FF;&#x5230;&#x6BCF;&#x4E2A;&#x6B8B;&#x5DEE;&#x5B66;&#x4E60;&#x5355;&#x5143;&#x7684;args</span></span><br><span class="line">            <span class="keyword">for</span> i,unit <span class="keyword">in</span> enumerate(block.args):</span><br><span class="line">                <span class="keyword">with</span> tf.variable_scope(<span class="string">&apos;unit_%d&apos;</span>%(i+<span class="number">1</span>),values=[net]):</span><br><span class="line">                    <span class="comment">#&#x83B7;&#x53D6;&#x6BCF;&#x4E2A;Block&#x4E2D;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x5305;&#x62EC;&#x7B2C;&#x4E09;&#x5C42;&#x901A;&#x9053;&#x6570;&#xFF0C;&#x524D;&#x4E24;&#x5C42;&#x901A;&#x9053;&#x6570;&#x4EE5;&#x53CA;&#x4E2D;&#x95F4;&#x5C42;&#x6B65;&#x957F;</span></span><br><span class="line">                    unit_depth,unit_depth_bottleneck,unit_stride=unit    </span><br><span class="line">                    <span class="comment">#unit_fn&#x662F;Block&#x7C7B;&#x7684;&#x6B8B;&#x5DEE;&#x795E;&#x7ECF;&#x5143;&#x751F;&#x6210;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x6309;&#x987A;&#x5E8F;&#x521B;&#x5EFA;&#x6B8B;&#x5DEE;&#x5B66;&#x4E60;&#x5143;&#x5E76;&#x8FDB;&#x884C;&#x8FDE;&#x63A5;</span></span><br><span class="line">                    net=block.unit_fn(net,</span><br><span class="line">                                    depth=unit_depth,</span><br><span class="line">                                    depth_bottleneck=unit_depth_bottleneck,</span><br><span class="line">                                    stride=unit_stride)</span><br><span class="line">            <span class="comment"># &#x5C06;&#x8F93;&#x51FA;&#x7684;net&#x6DFB;&#x52A0;&#x5230;collection&#x4E2D;</span></span><br><span class="line">            net=slim.utils.collect_named_outputs(outputs_collections,sc.name,net)</span><br><span class="line">    <span class="keyword">return</span> net</span><br></pre></td></tr></table></figure></li><li><p>&#x521B;&#x5EFA;ResNet&#x901A;&#x7528;&#x7684;arg_scope</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">resnet_arg_scope</span><span class="params">(is_training=True,</span></span></span><br><span class="line"><span class="function"><span class="params">                    weight_decay=<span class="number">0.0001</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                    batch_norm_decay=<span class="number">0.997</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                    batch_norm_epsilon=<span class="number">1e-5</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                    batch_norm_scale=True)</span>:</span></span><br><span class="line">    batch_norm_params = {</span><br><span class="line">    <span class="string">&apos;decay&apos;</span>: batch_norm_decay,</span><br><span class="line">    <span class="string">&apos;epsilon&apos;</span>: batch_norm_epsilon,</span><br><span class="line">    <span class="string">&apos;scale&apos;</span>: batch_norm_scale,</span><br><span class="line">    <span class="string">&apos;updates_collections&apos;</span>: tf.GraphKeys.UPDATE_OPS,</span><br><span class="line">    <span class="string">&apos;fused&apos;</span>: <span class="literal">None</span>,  <span class="comment"># Use fused batch norm if possible.</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment"># &#x8BBE;&#x7F6E;slim.conv2d&#x51FD;&#x6570;&#x7684;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;</span></span><br><span class="line">    <span class="keyword">with</span> slim.arg_scope(</span><br><span class="line">    [slim.conv2d],</span><br><span class="line">    weights_regularizer=slim.l2_regularizer(weight_decay),</span><br><span class="line">    weights_initializer=slim.variance_scaling_initializer(),</span><br><span class="line">    activation_fn=tf.nn.relu,</span><br><span class="line">    normalizer_fn=slim.batch_norm,</span><br><span class="line">    normalizer_params=batch_norm_params):</span><br><span class="line">        <span class="keyword">with</span> slim.arg_scope([slim.batch_norm], **batch_norm_params):</span><br><span class="line">            <span class="keyword">with</span> slim.arg_scope([slim.max_pool2d], padding=<span class="string">&apos;SAME&apos;</span>) <span class="keyword">as</span> arg_sc:</span><br><span class="line">                <span class="keyword">return</span> arg_sc</span><br></pre></td></tr></table></figure></li><li><p>&#x5B9A;&#x4E49;&#x6838;&#x5FC3;&#x7684;bottleneck&#x6B8B;&#x5DEE;&#x5B66;&#x4E60;&#x5355;&#x5143;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x5229;&#x7528;add_arg_scope&#x4F7F;bottleneck&#x51FD;&#x6570;&#x80FD;&#x591F;&#x76F4;&#x63A5;&#x4F7F;&#x7528;slim.arg_scope&#x8BBE;&#x7F6E;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;</span></span><br><span class="line"><span class="meta">@slim.add_arg_scope</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bottleneck</span><span class="params">(inputs,depth,depth_bottleneck,stride,</span></span></span><br><span class="line"><span class="function"><span class="params">            outputs_collections=None,scope=None)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(scope,<span class="string">&apos;bottleneck_v2&apos;</span>,[inputs])<span class="keyword">as</span> sc:</span><br><span class="line">        <span class="comment"># &#x83B7;&#x53D6;&#x8F93;&#x5165;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x7EF4;&#x5EA6;&#xFF0C;&#x5373;&#x8F93;&#x5165;&#x7684;&#x901A;&#x9053;&#x6570;&#x76EE;</span></span><br><span class="line">        <span class="comment"># &#x53C2;&#x6570;min_rank=4&#x53EF;&#x4EE5;&#x9650;&#x5B9A;&#x6700;&#x5C11;&#x4E3A;4&#x4E2A;&#x7EF4;&#x5EA6;</span></span><br><span class="line">        depth_in=slim.utils.last_dimension(inputs.get_shape(),min_rank=<span class="number">4</span>)</span><br><span class="line">        <span class="comment"># &#x5148;&#x5BF9;&#x8F93;&#x5165;&#x8FDB;&#x884C;Batch Normalization&#xFF0C;&#x518D;&#x8FDB;&#x884C;&#x975E;&#x7EBF;&#x6027;&#x6FC0;&#x6D3B;</span></span><br><span class="line">        preact=slim.batch_norm(inputs,activation_fn=tf.nn.relu,scope=<span class="string">&apos;preact&apos;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># &#x5982;&#x679C;&#x6B8B;&#x5DEE;&#x795E;&#x7ECF;&#x5143;&#x7684;&#x8F93;&#x51FA;&#x901A;&#x9053;&#x6570;&#x76EE;&#x548C;&#x8F93;&#x5165;&#x7684;&#x901A;&#x9053;&#x6570;&#x76EE;&#x76F8;&#x540C;&#xFF0C;&#x90A3;&#x4E48;&#x76F4;&#x63A5;&#x5BF9;&#x56FE;&#x50CF;&#x8FDB;&#x884C;&#x964D;&#x91C7;&#x6837;&#xFF0C;&#x4EE5;&#x4FDD;&#x8BC1;shortcut&#x5C3A;&#x5BF8;&#x548C;&#x7ECF;&#x5386;&#x4E09;&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#x540E;&#x7684;&#x8F93;&#x51FA;&#x7684;&#x6B64;&#x5B58;&#x76F8;&#x540C;        </span></span><br><span class="line">        <span class="keyword">if</span> depth==depth_in:</span><br><span class="line">            shortcut=subsample(inputs,stride,<span class="string">&apos;shortcut&apos;</span>)</span><br><span class="line">        <span class="comment"># &#x5982;&#x679C;&#x6B8B;&#x5DEE;&#x795E;&#x7ECF;&#x5143;&#x7684;&#x8F93;&#x51FA;&#x901A;&#x9053;&#x6570;&#x76EE;&#x548C;&#x8F93;&#x5165;&#x7684;&#x901A;&#x9053;&#x6570;&#x76EE;&#x4E0D;&#x540C;&#xFF0C;&#x5229;&#x7528;&#x5C3A;&#x5BF8;&#x4E3A;1x1&#x7684;&#x5377;&#x79EF;&#x6838;&#x5BF9;&#x8F93;&#x5165;&#x8FDB;&#x884C;&#x5377;&#x79EF;&#xFF0C;&#x4F7F;&#x8F93;&#x5165;&#x901A;&#x9053;&#x6570;&#x76F8;&#x540C;&#xFF1B;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            shortcut=slim.conv2d(preact,depth,[<span class="number">1</span>,<span class="number">1</span>],stride=stride,normalizer_fn=<span class="literal">None</span>,</span><br><span class="line">                                activation_fn=<span class="literal">None</span>,scope=<span class="string">&apos;shortcut&apos;</span>)</span><br><span class="line">        <span class="comment"># &#x7136;&#x540E;&#xFF0C;&#x5B9A;&#x4E49;&#x6B8B;&#x5DEE;&#xFF0C;&#x5373;&#x4E09;&#x4E2A;&#x5377;&#x79EF;&#x5C42;           </span></span><br><span class="line">        residual=slim.conv2d(preact,depth_bottleneck,[<span class="number">1</span>,<span class="number">1</span>],stride=<span class="number">1</span>,scope=<span class="string">&apos;conv1&apos;</span>)</span><br><span class="line">        residual=conv2d_same(residual,depth_bottleneck,<span class="number">3</span>,stride,scope=<span class="string">&apos;conv2&apos;</span>)</span><br><span class="line">        residual=slim.conv2d(residual,depth,[<span class="number">1</span>,<span class="number">1</span>],stride=<span class="number">1</span>,normalizer_fn=<span class="literal">None</span>,activation_fn=<span class="literal">None</span>,scope=<span class="string">&apos;conv3&apos;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># &#x5C06;shortcut&#x548C;residual&#x76F8;&#x52A0;&#xFF0C;&#x4F5C;&#x4E3A;&#x8F93;&#x51FA;        </span></span><br><span class="line">        output=shortcut+residual</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> slim.utils.collect_named_outputs(outputs_collections,sc.name,output)</span><br></pre></td></tr></table></figure></li></ul><h2 id="&#x5B9A;&#x4E49;&#x751F;&#x6210;ResNet-V2&#x7684;&#x4E3B;&#x51FD;&#x6570;"><a href="#&#x5B9A;&#x4E49;&#x751F;&#x6210;ResNet-V2&#x7684;&#x4E3B;&#x51FD;&#x6570;" class="headerlink" title="&#x5B9A;&#x4E49;&#x751F;&#x6210;ResNet V2&#x7684;&#x4E3B;&#x51FD;&#x6570;"></a>&#x5B9A;&#x4E49;&#x751F;&#x6210;ResNet V2&#x7684;&#x4E3B;&#x51FD;&#x6570;</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">input&#x662F;&#x8F93;&#x5165;</span></span><br><span class="line"><span class="string">blocks&#x5305;&#x542B;&#x6B8B;&#x5DEE;&#x5B66;&#x4E60;&#x5143;&#x7684;&#x53C2;&#x6570;</span></span><br><span class="line"><span class="string">num_classes&#x662F;&#x8F93;&#x51FA;&#x5206;&#x7C7B;&#x6570;</span></span><br><span class="line"><span class="string">global_pool&#x6807;&#x5FD7;&#x662F;&#x5426;&#x52A0;&#x4E0A;&#x6700;&#x540E;&#x4E00;&#x5C42;&#x5168;&#x5C40;&#x5E73;&#x5747;&#x5E74;&#x6C60;&#x5316;</span></span><br><span class="line"><span class="string">include_root_block&#x6807;&#x5FD7;&#x662F;&#x5426;&#x52A0;&#x4E0A;ResNet&#x7F51;&#x7EDC;&#x6700;&#x524D;&#x9762;&#x901A;&#x5E38;&#x4F7F;&#x7528;&#x7684;7&#xD7;7&#x5377;&#x79EF;&#x548C;&#x6700;&#x5927;&#x6C60;&#x5316;</span></span><br><span class="line"><span class="string">reuse&#x6807;&#x5FD7;&#x662F;&#x5426;&#x91CD;&#x7528;</span></span><br><span class="line"><span class="string">scope&#x662F;&#x6574;&#x4E2A;&#x7F51;&#x7EDC;&#x7684;&#x540D;&#x79F0; </span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span>     </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">resnet_v2</span><span class="params">(inputs,</span></span></span><br><span class="line"><span class="function"><span class="params">              blocks,</span></span></span><br><span class="line"><span class="function"><span class="params">              num_classes=None,</span></span></span><br><span class="line"><span class="function"><span class="params">              global_pool=True,</span></span></span><br><span class="line"><span class="function"><span class="params">              include_root_block=True,</span></span></span><br><span class="line"><span class="function"><span class="params">              reuse=None,</span></span></span><br><span class="line"><span class="function"><span class="params">              scope=None)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(scope,<span class="string">&apos;resnet_v2&apos;</span>,[inputs],reuse=reuse) <span class="keyword">as</span> sc:</span><br><span class="line">        end_points_collection=sc.original_name_scope+<span class="string">&apos;_end_points&apos;</span></span><br><span class="line">        <span class="keyword">with</span> slim.arg_scope([slim.conv2d,bottleneck,stack_blocks_dense],</span><br><span class="line">                            outputs_collections=end_points_collection):</span><br><span class="line">            net=inputs</span><br><span class="line">            <span class="keyword">if</span> include_root_block:</span><br><span class="line">                <span class="keyword">with</span> slim.arg_scope([slim.conv2d],activation_fn=<span class="literal">None</span>,normalizer_fn=<span class="literal">None</span>):</span><br><span class="line">                    <span class="comment">#&#x5377;&#x79EF;&#x6838;&#x4E3A;7x7&#x6B65;&#x957F;&#x4E3A;2&#x7684;&#x5377;&#x79EF;&#x5C42;</span></span><br><span class="line">                    net=conv2d_same(net,<span class="number">64</span>,<span class="number">7</span>,stride=<span class="number">2</span>,scope=<span class="string">&apos;conv1&apos;</span>)</span><br><span class="line">                <span class="comment">#&#x6700;&#x5927;&#x503C;&#x6C60;&#x5316;</span></span><br><span class="line">                net=slim.max_pool2d(net,[<span class="number">3</span>,<span class="number">3</span>],stride=<span class="number">2</span>,scope=<span class="string">&apos;pool1&apos;</span>)</span><br><span class="line">            <span class="comment">#&#x8C03;&#x7528;stack_blocks_dense&#x5806;&#x53E0;&#x6B8B;&#x5DEE;&#x5B66;&#x4E60;&#x5143;&#xFF0C;&#x6BCF;&#x4E2A;&#x6709;&#x4E09;&#x4E2A;&#x5377;&#x79EF;&#x5C42;</span></span><br><span class="line">            net=stack_blocks_dense(net,blocks)</span><br><span class="line">            <span class="comment">#&#x5148;&#x505A;batch norm&#x7136;&#x540E;&#x4F7F;&#x7528;relu&#x6FC0;&#x6D3B;</span></span><br><span class="line">            net=slim.batch_norm(net,activation_fn=tf.nn.relu,scope=<span class="string">&apos;postnorm&apos;</span>)</span><br><span class="line">            <span class="keyword">if</span> global_pool:     </span><br><span class="line">                <span class="comment">#&#x8FDB;&#x884C;&#x5168;&#x5C40;&#x5E73;&#x5747;&#x6C60;&#x5316;</span></span><br><span class="line">                net=tf.reduce_mean(net,[<span class="number">1</span>,<span class="number">2</span>],name=<span class="string">&apos;pool5&apos;</span>,keep_dims=<span class="literal">True</span>)</span><br><span class="line">            <span class="comment">#&#x4E00;&#x4E2A;&#x8F93;&#x51FA;&#x4E3A;num_classes&#x7684;&#x5377;&#x79EF;&#x5C42;&#xFF0C;&#x4E0D;&#x8FDB;&#x884C;&#x6FC0;&#x6D3B;&#x4E5F;&#x4E0D;&#x5F52;&#x4E00;&#x6B63;&#x5219;&#x5316;&#x3002;</span></span><br><span class="line">            <span class="keyword">if</span> num_classes <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                net=slim.conv2d(net,num_classes,[<span class="number">1</span>,<span class="number">1</span>],activation_fn=<span class="literal">None</span>,normalizer_fn=<span class="literal">None</span>,scope=<span class="string">&apos;logits&apos;</span>)</span><br><span class="line">            <span class="comment"># &#x5C06;collection&#x8F6C;&#x5316;&#x4E3A;Python&#x7684;dict</span></span><br><span class="line">            end_points=slim.utils.convert_collection_to_dict(end_points_collection)</span><br><span class="line"></span><br><span class="line">            <span class="comment">#&#x4F7F;&#x7528;softmax&#x8FDB;&#x884C;&#x5206;&#x7C7B;         </span></span><br><span class="line">            <span class="keyword">if</span> num_classes <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                end_points[<span class="string">&apos;predictions&apos;</span>]=slim.softmax(net,scope=<span class="string">&apos;predictions&apos;</span>)</span><br><span class="line">            <span class="keyword">return</span> net,end_points</span><br></pre></td></tr></table></figure><h2 id="&#x5B9A;&#x4E49;&#x4E0D;&#x540C;&#x6DF1;&#x5EA6;&#x7684;ResNet&#x7F51;&#x7EDC;&#x7ED3;&#x6784;"><a href="#&#x5B9A;&#x4E49;&#x4E0D;&#x540C;&#x6DF1;&#x5EA6;&#x7684;ResNet&#x7F51;&#x7EDC;&#x7ED3;&#x6784;" class="headerlink" title="&#x5B9A;&#x4E49;&#x4E0D;&#x540C;&#x6DF1;&#x5EA6;&#x7684;ResNet&#x7F51;&#x7EDC;&#x7ED3;&#x6784;"></a>&#x5B9A;&#x4E49;&#x4E0D;&#x540C;&#x6DF1;&#x5EA6;&#x7684;ResNet&#x7F51;&#x7EDC;&#x7ED3;&#x6784;</h2><ul><li><p>50&#x5C42;&#x6DF1;&#x5EA6;&#x7684;ResNet</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 50&#x5C42;&#x6DF1;&#x5EA6;&#x7684;ResNet&#x7F51;&#x7EDC;&#x914D;&#x7F6E;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">resnet_v2_50</span><span class="params">(inputs, num_classes = None,</span></span></span><br><span class="line"><span class="function"><span class="params">                global_pool = True,</span></span></span><br><span class="line"><span class="function"><span class="params">                reuse = None,</span></span></span><br><span class="line"><span class="function"><span class="params">                scope = <span class="string">&apos;resnet_v2_50&apos;</span>)</span>:</span></span><br><span class="line">    blocks = [</span><br><span class="line">        Block(<span class="string">&apos;block1&apos;</span>, bottleneck, [(<span class="number">256</span>, <span class="number">64</span>, <span class="number">1</span>)] * <span class="number">2</span> + [(<span class="number">256</span>, <span class="number">64</span>, <span class="number">2</span>)]),</span><br><span class="line">        Block(<span class="string">&apos;block2&apos;</span>, bottleneck, [(<span class="number">512</span>, <span class="number">128</span>, <span class="number">1</span>)] * <span class="number">3</span> + [(<span class="number">512</span>, <span class="number">128</span>, <span class="number">2</span>)]),</span><br><span class="line">        Block(<span class="string">&apos;block3&apos;</span>, bottleneck, [(<span class="number">1024</span>, <span class="number">256</span>, <span class="number">1</span>)] * <span class="number">5</span> + [(<span class="number">1024</span>, <span class="number">256</span>, <span class="number">2</span>)]),</span><br><span class="line">        Block(<span class="string">&apos;block4&apos;</span>, bottleneck, [(<span class="number">2048</span>, <span class="number">512</span>, <span class="number">1</span>)] * <span class="number">3</span>)]</span><br><span class="line">    <span class="keyword">return</span> resnet_v2(inputs, blocks, num_classes, global_pool,</span><br><span class="line">                    include_root_block = <span class="literal">True</span>, reuse = reuse,</span><br><span class="line">                    scope = scope)</span><br></pre></td></tr></table></figure></li><li><p>101&#x5C42;&#x6DF1;&#x5EA6;&#x7684;ResNet</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 101&#x5C42;&#x6DF1;&#x5EA6;&#x7684;ResNet&#x7F51;&#x7EDC;&#x914D;&#x7F6E;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">resnet_v2_101</span><span class="params">(inputs, num_classes = None,</span></span></span><br><span class="line"><span class="function"><span class="params">                global_pool = True,</span></span></span><br><span class="line"><span class="function"><span class="params">                reuse = None,</span></span></span><br><span class="line"><span class="function"><span class="params">                scope = <span class="string">&apos;resnet_v2_101&apos;</span>)</span>:</span></span><br><span class="line">    blocks = [</span><br><span class="line">        Block(<span class="string">&apos;block1&apos;</span>, bottleneck, [(<span class="number">256</span>, <span class="number">64</span>, <span class="number">1</span>)] * <span class="number">2</span>+ [(<span class="number">256</span>, <span class="number">64</span>, <span class="number">2</span>)]),</span><br><span class="line">        Block(<span class="string">&apos;block2&apos;</span>, bottleneck, [(<span class="number">512</span>, <span class="number">128</span>, <span class="number">1</span>)] * <span class="number">3</span> + [(<span class="number">512</span>, <span class="number">128</span>, <span class="number">2</span>)]),</span><br><span class="line">        Block(<span class="string">&apos;block3&apos;</span>, bottleneck, [(<span class="number">1024</span>, <span class="number">256</span>, <span class="number">1</span>)] * <span class="number">22</span> + [(<span class="number">1024</span>, <span class="number">256</span>, <span class="number">2</span>)]),</span><br><span class="line">        Block(<span class="string">&apos;block4&apos;</span>, bottleneck, [(<span class="number">2048</span>, <span class="number">512</span>, <span class="number">1</span>)] * <span class="number">3</span>)]</span><br><span class="line">    <span class="keyword">return</span> resnet_v2(inputs, blocks, num_classes, global_pool,</span><br><span class="line">                    include_root_block = <span class="literal">True</span>, reuse = reuse,</span><br><span class="line">                    scope = scope)</span><br></pre></td></tr></table></figure></li><li><p>152&#x5C42;&#x6DF1;&#x5EA6;&#x7684;ResNet</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 152&#x5C42;&#x6DF1;&#x5EA6;&#x7684;ResNet&#x7F51;&#x7EDC;&#x914D;&#x7F6E;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">resnet_v2_152</span><span class="params">(inputs, num_classes = None,</span></span></span><br><span class="line"><span class="function"><span class="params">                global_pool = True,</span></span></span><br><span class="line"><span class="function"><span class="params">                reuse = None,</span></span></span><br><span class="line"><span class="function"><span class="params">                scope = <span class="string">&apos;resnet_v2_152&apos;</span>)</span>:</span></span><br><span class="line">    blocks = [</span><br><span class="line">        Block(<span class="string">&apos;block1&apos;</span>, bottleneck, [(<span class="number">256</span>, <span class="number">64</span>, <span class="number">1</span>)] * <span class="number">2</span> + [(<span class="number">256</span>, <span class="number">64</span>, <span class="number">2</span>)]),</span><br><span class="line">        Block(<span class="string">&apos;block2&apos;</span>, bottleneck, [(<span class="number">512</span>, <span class="number">128</span>, <span class="number">1</span>)] * <span class="number">7</span> + [(<span class="number">512</span>, <span class="number">128</span>, <span class="number">2</span>)]),</span><br><span class="line">        Block(<span class="string">&apos;block3&apos;</span>, bottleneck, [(<span class="number">1024</span>, <span class="number">256</span>, <span class="number">1</span>)] * <span class="number">35</span> + [(<span class="number">1024</span>, <span class="number">256</span>, <span class="number">2</span>)]),</span><br><span class="line">        Block(<span class="string">&apos;block4&apos;</span>, bottleneck, [(<span class="number">2048</span>, <span class="number">512</span>, <span class="number">1</span>)] * <span class="number">3</span>)]</span><br><span class="line">    <span class="keyword">return</span> resnet_v2(inputs, blocks, num_classes, global_pool,</span><br><span class="line">                    include_root_block = <span class="literal">True</span>, reuse = reuse,</span><br><span class="line">                    scope = scope)</span><br></pre></td></tr></table></figure></li><li><p>200&#x5C42;&#x6DF1;&#x5EA6;&#x7684;ResNet</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 200&#x5C42;&#x6DF1;&#x5EA6;&#x7684;ResNet&#x7F51;&#x7EDC;&#x914D;&#x7F6E;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">resnet_v2_200</span><span class="params">(inputs, num_classes = None,</span></span></span><br><span class="line"><span class="function"><span class="params">                global_pool = True,</span></span></span><br><span class="line"><span class="function"><span class="params">                reuse = None,</span></span></span><br><span class="line"><span class="function"><span class="params">                scope = <span class="string">&apos;resnet_v2_200&apos;</span>)</span>:</span></span><br><span class="line">    blocks = [</span><br><span class="line">        Block(<span class="string">&apos;block1&apos;</span>, bottleneck, [(<span class="number">256</span>, <span class="number">64</span>, <span class="number">1</span>)] * <span class="number">2</span> + [(<span class="number">256</span>, <span class="number">64</span>, <span class="number">2</span>)]),</span><br><span class="line">        Block(<span class="string">&apos;block2&apos;</span>, bottleneck, [(<span class="number">512</span>, <span class="number">128</span>, <span class="number">1</span>)] * <span class="number">23</span> + [(<span class="number">512</span>, <span class="number">128</span>, <span class="number">2</span>)]),</span><br><span class="line">        Block(<span class="string">&apos;block3&apos;</span>, bottleneck, [(<span class="number">1024</span>, <span class="number">256</span>, <span class="number">1</span>)] * <span class="number">35</span> + [(<span class="number">1024</span>, <span class="number">256</span>, <span class="number">2</span>)]),</span><br><span class="line">        Block(<span class="string">&apos;block4&apos;</span>, bottleneck, [(<span class="number">2048</span>, <span class="number">512</span>, <span class="number">1</span>)] * <span class="number">3</span>)]</span><br><span class="line">    <span class="keyword">return</span> resnet_v2(inputs, blocks, num_classes, global_pool,</span><br><span class="line">                    include_root_block = <span class="literal">True</span>, reuse = reuse,</span><br><span class="line">                    scope = scope)</span><br></pre></td></tr></table></figure></li></ul><h2 id="&#x8017;&#x65F6;&#x6D4B;&#x8BD5;"><a href="#&#x8017;&#x65F6;&#x6D4B;&#x8BD5;" class="headerlink" title="&#x8017;&#x65F6;&#x6D4B;&#x8BD5;"></a>&#x8017;&#x65F6;&#x6D4B;&#x8BD5;</h2><ul><li><p>&#x5B9A;&#x4E49;&#x6D4B;&#x8BD5;&#x8017;&#x65F6;&#x51FD;&#x6570;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">time_tensorflow_run</span><span class="params">(session, target, info_string)</span>:</span></span><br><span class="line">    num_steps_burn_in = <span class="number">10</span>  <span class="comment"># &#x6253;&#x5370;&#x9608;&#x503C;</span></span><br><span class="line">    total_duration = <span class="number">0.0</span>    <span class="comment"># &#x6BCF;&#x4E00;&#x8F6E;&#x6240;&#x9700;&#x8981;&#x7684;&#x8FED;&#x4EE3;&#x65F6;&#x95F4;</span></span><br><span class="line">    total_duration_aquared = <span class="number">0.0</span>  <span class="comment"># &#x6BCF;&#x4E00;&#x8F6E;&#x6240;&#x9700;&#x8981;&#x7684;&#x8FED;&#x4EE3;&#x65F6;&#x95F4;&#x7684;&#x5E73;&#x65B9;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num_batches + num_steps_burn_in):</span><br><span class="line">        start_time = time.time()</span><br><span class="line">        _ = session.run(target)</span><br><span class="line">        duration = time.time() - start_time    <span class="comment"># &#x8BA1;&#x7B97;&#x8017;&#x65F6;</span></span><br><span class="line">        <span class="keyword">if</span> i &gt;= num_steps_burn_in:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> i % <span class="number">10</span>:</span><br><span class="line">                print(<span class="string">&quot;%s : step %d, duration = %.3f&quot;</span> % (datetime.now(), i - num_steps_burn_in, duration))</span><br><span class="line">            total_duration += duration</span><br><span class="line">            total_duration_aquared += duration * duration</span><br><span class="line">    mn = total_duration / num_batches   <span class="comment"># &#x8BA1;&#x7B97;&#x5747;&#x503C;</span></span><br><span class="line">    vr = total_duration_aquared / num_batches - mn * mn  <span class="comment"># &#x8BA1;&#x7B97;&#x65B9;&#x5DEE;</span></span><br><span class="line">    sd = math.sqrt(vr) <span class="comment"># &#x8BA1;&#x7B97;&#x6807;&#x51C6;&#x5DEE;</span></span><br><span class="line">    print(<span class="string">&quot;%s : %s across %d steps, %.3f +/- %.3f sec/batch&quot;</span> % (datetime.now(), info_string, num_batches, mn, sd))</span><br></pre></td></tr></table></figure></li><li><p>&#x8017;&#x65F6;&#x6D4B;&#x8BD5;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">batch_size = <span class="number">32</span></span><br><span class="line">height, width = <span class="number">224</span>, <span class="number">224</span></span><br><span class="line">inputs = tf.random_uniform((batch_size, height, width, <span class="number">3</span>))</span><br><span class="line"><span class="keyword">with</span> slim.arg_scope(resnet_arg_scope(is_training = <span class="literal">False</span>)):</span><br><span class="line">    net, end_points = resnet_v2_152(inputs, <span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.Session() <span class="keyword">as</span> sess:</span><br><span class="line">    init = tf.global_variables_initializer()</span><br><span class="line">    sess.run(init)</span><br><span class="line">    num_batches = <span class="number">100</span></span><br><span class="line">    time_tensorflow_run(sess, net, <span class="string">&quot;Forward&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">2019-01-26 08:10:51.879413 : step 0, duration = 0.486</span><br><span class="line">2019-01-26 08:10:56.748640 : step 10, duration = 0.487</span><br><span class="line">2019-01-26 08:11:01.628659 : step 20, duration = 0.489</span><br><span class="line">2019-01-26 08:11:06.511324 : step 30, duration = 0.489</span><br><span class="line">2019-01-26 08:11:11.410210 : step 40, duration = 0.490</span><br><span class="line">2019-01-26 08:11:16.311633 : step 50, duration = 0.491</span><br><span class="line">2019-01-26 08:11:21.219118 : step 60, duration = 0.493</span><br><span class="line">2019-01-26 08:11:26.133231 : step 70, duration = 0.492</span><br><span class="line">2019-01-26 08:11:31.054586 : step 80, duration = 0.493</span><br><span class="line">2019-01-26 08:11:35.984226 : step 90, duration = 0.494</span><br><span class="line">2019-01-26 08:11:40.435636 : Forward across 100 steps, 0.490 +/- 0.002 sec/batch</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ResNet&quot;&gt;&lt;a href=&quot;#ResNet&quot; class=&quot;headerlink&quot; title=&quot;ResNet&quot;&gt;&lt;/a&gt;ResNet&lt;/h1&gt;&lt;p&gt;ResNet&amp;#x662F;&amp;#x7531;Kaiming He&amp;#x7B49;4&amp;#x540D;&amp;#x534E;&amp;#x4EBA;&amp;#x63D0;&amp;#x51FA;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7;&amp;#x4F7F;&amp;#x7528;Residual Unit&amp;#x6210;&amp;#x529F;&amp;#x8BAD;&amp;#x7EC3;&amp;#x4E86;152&amp;#x5C42;&amp;#x7684;&amp;#x6DF1;&amp;#x5EA6;&amp;#x795E;&amp;#x7ECF;&amp;#x7F51;&amp;#x7EDC;&amp;#xFF0C;&amp;#x5728;ILSVRC 2015&amp;#x6BD4;&amp;#x8D5B;&amp;#x4E2D;&amp;#x83B7;&amp;#x5F97;&amp;#x51A0;&amp;#x519B;&amp;#xFF0C;&amp;#x53D6;&amp;#x5F97;&amp;#x4E86;3.57%&amp;#x7684;top-5&amp;#x9519;&amp;#x8BEF;&amp;#x7387;&amp;#xFF0C;&amp;#x540C;&amp;#x65F6;&amp;#x53C2;&amp;#x6570;&amp;#x5374;&amp;#x6BD4;VGGNet&amp;#x5C11;&amp;#x3002;ResNet&amp;#x7684;&amp;#x7ED3;&amp;#x6784;&amp;#x53EF;&amp;#x4EE5;&amp;#x6781;&amp;#x5FEB;&amp;#x7684;&amp;#x52A0;&amp;#x901F;&amp;#x8D85;&amp;#x6DF1;&amp;#x795E;&amp;#x7ECF;&amp;#x7F51;&amp;#x7EDC;&amp;#x7684;&amp;#x8BAD;&amp;#x7EC3;&amp;#xFF0C;&amp;#x6A21;&amp;#x578B;&amp;#x7684;&amp;#x51C6;&amp;#x786E;&amp;#x7387;&amp;#x4E5F;&amp;#x6709;&amp;#x8F83;&amp;#x5927;&amp;#x7684;&amp;#x63D0;&amp;#x5347;&amp;#x3002;&amp;#x4E4B;&amp;#x540E;&amp;#x5F88;&amp;#x591A;&amp;#x65B9;&amp;#x6CD5;&amp;#x90FD;&amp;#x5EFA;&amp;#x7ACB;&amp;#x5728;ResNet&amp;#x7684;&amp;#x57FA;&amp;#x7840;&amp;#x4E0A;&amp;#x5B8C;&amp;#x6210;&amp;#x7684;&amp;#xFF0C;&amp;#x4F8B;&amp;#x5982;&amp;#x68C0;&amp;#x6D4B;&amp;#xFF0C;&amp;#x5206;&amp;#x5272;&amp;#xFF0C;&amp;#x8BC6;&amp;#x522B;&amp;#x7B49;&amp;#x9886;&amp;#x57DF;&amp;#x90FD;&amp;#x7EB7;&amp;#x7EB7;&amp;#x4F7F;&amp;#x7528;ResNet&amp;#x3002;&amp;#x5728;ResNet&amp;#x63A8;&amp;#x51FA;&amp;#x4E0D;&amp;#x4E45;&amp;#xFF0C;Google&amp;#x5C31;&amp;#x501F;&amp;#x9274;&amp;#x4E86;ResNet&amp;#x7684;&amp;#x7CBE;&amp;#x9AD3;&amp;#xFF0C;&amp;#x63D0;&amp;#x51FA;&amp;#x4E86;Inception V4&amp;#x548C;Inception-ResNet-V2&amp;#xFF0C;&amp;#x5E76;&amp;#x901A;&amp;#x8FC7;&amp;#x878D;&amp;#x5408;&amp;#x8FD9;&amp;#x4E24;&amp;#x4E2A;&amp;#x6A21;&amp;#x578B;&amp;#xFF0C;&amp;#x5728;ILSVRC&amp;#x6570;&amp;#x636E;&amp;#x96C6;&amp;#x4E0A;&amp;#x53D6;&amp;#x5F97;&amp;#x4E86;&amp;#x60CA;&amp;#x4EBA;&amp;#x7684;3.08%&amp;#x7684;&amp;#x9519;&amp;#x8BEF;&amp;#x7387;&amp;#x3002;&amp;#x6240;&amp;#x4EE5;&amp;#x53EF;&amp;#x89C1;ResNet&amp;#x786E;&amp;#x5B9E;&amp;#x5F88;&amp;#x597D;&amp;#x7528;&amp;#x3002;&lt;/p&gt;
    
    </summary>
    
      <category term="深度学习" scheme="http://zhengyujie.cn/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Python" scheme="http://zhengyujie.cn/categories/Python/"/>
    
    
      <category term="卷积网络" scheme="http://zhengyujie.cn/tags/%E5%8D%B7%E7%A7%AF%E7%BD%91%E7%BB%9C/"/>
    
      <category term="TensorFlow" scheme="http://zhengyujie.cn/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>TensorFlow学习笔记10：Inception V3</title>
    <link href="http://zhengyujie.cn/2019/08/12/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B010/"/>
    <id>http://zhengyujie.cn/2019/08/12/tf学习笔记10/</id>
    <published>2019-08-12T10:38:17.000Z</published>
    <updated>2019-08-24T03:16:11.362Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Inception-V3&#x7ED3;&#x6784;"><a href="#Inception-V3&#x7ED3;&#x6784;" class="headerlink" title="Inception V3&#x7ED3;&#x6784;"></a>Inception V3&#x7ED3;&#x6784;</h1><p><img src="/2019/08/12/tf&#x5B66;&#x4E60;&#x7B14;&#x8BB0;10/1.png" alt></p><a id="more"></a><p>&#x503C;&#x5F97;&#x501F;&#x9274;&#x7684;&#x8BBE;&#x8BA1;CNN&#x7684;&#x601D;&#x60F3;&#x548C;Trick&#xFF1A;</p><ul><li>Factorization into small convolutions&#x5F88;&#x6709;&#x6548;&#xFF0C;&#x53EF;&#x4EE5;&#x964D;&#x4F4E;&#x53C2;&#x6570;&#x91CF;&#xFF0C;&#x51CF;&#x8F7B;&#x8FC7;&#x62DF;&#x5408;&#xFF0C;&#x589E;&#x52A0;&#x7F51;&#x7EDC;&#x975E;&#x7EBF;&#x6027;&#x7684;&#x8868;&#x8FBE;&#x80FD;&#x529B;&#x3002;</li><li>&#x5377;&#x79EF;&#x7F51;&#x7EDC;&#x4ECE;&#x8F93;&#x5165;&#x5230;&#x8F93;&#x51FA;&#xFF0C;&#x5E94;&#x8BE5;&#x8BA9;&#x56FE;&#x7247;&#x5C3A;&#x5BF8;&#x9010;&#x6E10;&#x51CF;&#x5C11;&#xFF0C;&#x8F93;&#x51FA;&#x901A;&#x9053;&#x9010;&#x6E10;&#x589E;&#x52A0;&#xFF0C;&#x5373;&#x8BA9;&#x7A7A;&#x95F4;&#x7ED3;&#x6784;&#x7B80;&#x5316;&#xFF0C;&#x5C06;&#x7A7A;&#x95F4;&#x4FE1;&#x606F;&#x8F6C;&#x5316;&#x4E3A;&#x9AD8;&#x9636;&#x62BD;&#x8C61;&#x7684;&#x7279;&#x5F81;&#x4FE1;&#x606F;&#x3002;</li><li>Inception Module&#x7528;&#x591A;&#x4E2A;&#x5206;&#x652F;&#x63D0;&#x53D6;&#x4E0D;&#x540C;&#x62BD;&#x8C61;&#x7A0B;&#x5EA6;&#x7684;&#x9AD8;&#x9636;&#x7279;&#x5F81;&#x7684;&#x601D;&#x8DEF;&#x5F88;&#x6709;&#x6548;&#xFF0C;&#x53EF;&#x4EE5;&#x4E30;&#x5BCC;&#x7F51;&#x7EDC;&#x7684;&#x8868;&#x8FBE;&#x80FD;&#x529B;&#x3002;</li></ul><h1 id="TensorFlow&#x5B9E;&#x73B0;"><a href="#TensorFlow&#x5B9E;&#x73B0;" class="headerlink" title="TensorFlow&#x5B9E;&#x73B0;"></a>TensorFlow&#x5B9E;&#x73B0;</h1><h2 id="&#x5B9A;&#x4E49;&#x51FD;&#x6570;-inception-v3-arg-scope"><a href="#&#x5B9A;&#x4E49;&#x51FD;&#x6570;-inception-v3-arg-scope" class="headerlink" title="&#x5B9A;&#x4E49;&#x51FD;&#x6570; inception_v3_arg_scope"></a>&#x5B9A;&#x4E49;&#x51FD;&#x6570; inception_v3_arg_scope</h2><p>&#x51FD;&#x6570; inception_v3_arg_scope &#x7528;&#x6765;&#x751F;&#x6210;&#x7F51;&#x7EDC;&#x4E2D;&#x7ECF;&#x5E38;&#x7528;&#x5230;&#x7684;&#x51FD;&#x6570;&#x7684;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;&#xFF0C;&#x6BD4;&#x5982;&#x5377;&#x8BB0;&#x7684;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#xFF0C;&#x6743;&#x91CD;&#x521D;&#x59CB;&#x5316;&#x65B9;&#x5F0F;&#xFF0C;&#x6807;&#x51C6;&#x5316;&#x5668;&#x7B49;&#x7B49;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x5D4C;&#x5957;&#x4E00;&#x4E2A;<code>slim.arg_scope</code>&#xFF0C;&#x5BF9;&#x5377;&#x79EF;&#x5C42;&#x751F;&#x6210;&#x51FD;&#x6570;<code>slim.conv2d</code>&#x7684;&#x51E0;&#x4E2A;&#x4EBA;&#x53C2;&#x6570;&#x8D4B;&#x4E88;&#x9ED8;&#x8BA4;&#x503C;&#x3002;&#x6700;&#x540E;&#x8FD4;&#x56DE;&#x5B9A;&#x4E49;&#x597D;&#x7684;scope&#x3002;<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">import</span> tensorflow.contrib.slim <span class="keyword">as</span> slim</span><br><span class="line"><span class="comment">#&#x5B9A;&#x4E49;&#x7B80;&#x5355;&#x7684;&#x51FD;&#x6570;&#x4EA7;&#x751F;&#x622A;&#x65AD;&#x7684;&#x6B63;&#x6001;&#x5206;&#x5E03;</span></span><br><span class="line">trunc_normal = <span class="keyword">lambda</span> stddev:tf.truncated_normal_initializer(<span class="number">0.0</span>,stddev)</span><br><span class="line"></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">&#x5B9A;&#x4E49;&#x51FD;&#x6570; inception_v3_arg_scope &#x7528;&#x6765;&#x751F;&#x6210;&#x7F51;&#x7EDC;&#x4E2D;&#x7ECF;&#x5E38;&#x7528;&#x5230;&#x7684;&#x51FD;&#x6570;&#x7684;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;</span></span><br><span class="line"><span class="string">L2&#x6B63;&#x5219;&#x7684;Weight_decay&#x9ED8;&#x8BA4;&#x503C;&#x4E3A;0.0004</span></span><br><span class="line"><span class="string">&#x6807;&#x51C6;&#x5DEE;stddev&#x9ED8;&#x8BA4;&#x503C;&#x4E3A;0.1</span></span><br><span class="line"><span class="string">&#x53C2;&#x6570;batch_norm_var_collection&#x9ED8;&#x8BA4;&#x503C;&#x4E3A;moving_vars</span></span><br><span class="line"><span class="string">batch normalization&#x53C2;&#x6570;&#x5B57;&#x5178;&#xFF1A;</span></span><br><span class="line"><span class="string">    &#x8870;&#x51CF;&#x7CFB;&#x6570;decay&#x4E3A;0.9997</span></span><br><span class="line"><span class="string">    epsilon&#x4E3A;0.001</span></span><br><span class="line"><span class="string">    updates_collections&#x4E3A;tf.GraphKeys.UPDATE_OPS</span></span><br><span class="line"><span class="string">    &#x5B57;&#x5178;variables_collections:</span></span><br><span class="line"><span class="string">        beta&#x548C;gamma&#x8BBE;&#x7F6E;&#x4E3A;None</span></span><br><span class="line"><span class="string">        moving_mean&#x548C;moving_variance&#x8BBE;&#x7F6E;&#x4E3A;batch_norm_var_collection</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inception_v3_arg_scope</span><span class="params">(weight_decay=<span class="number">0.00004</span>,stddev=<span class="number">0.1</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                        batch_norm_var_collection=<span class="string">&quot;moving_vars&quot;</span>)</span>:</span></span><br><span class="line">    batch_norm_params = {</span><br><span class="line">        <span class="string">&quot;decay&quot;</span>:<span class="number">0.9997</span>,<span class="string">&quot;epsilon&quot;</span>:<span class="number">0.001</span>,<span class="string">&quot;updates_collections&quot;</span>:tf.GraphKeys.UPDATE_OPS,</span><br><span class="line">        <span class="string">&quot;variables_collections&quot;</span>:{</span><br><span class="line">            <span class="string">&quot;beta&quot;</span>:<span class="literal">None</span>,<span class="string">&quot;gamma&quot;</span>:<span class="literal">None</span>,<span class="string">&quot;moving_mean&quot;</span>:[batch_norm_var_collection],</span><br><span class="line">            <span class="string">&quot;moving_variance&quot;</span>:[batch_norm_var_collection]</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">    &#x5D4C;&#x5957;slim.arg_scope</span></span><br><span class="line"><span class="string">    &#x6743;&#x91CD;&#x521D;&#x59CB;&#x5316;&#x5668;weight_initializer&#x8BBE;&#x7F6E;&#x4E3A;trunc_normal(stddev)</span></span><br><span class="line"><span class="string">    &#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x8BBE;&#x7F6E;&#x4E3A;ReLU</span></span><br><span class="line"><span class="string">    &#x6807;&#x51C6;&#x5316;&#x5668;&#x8BBE;&#x7F6E;&#x4E3A;slim.batch_norm</span></span><br><span class="line"><span class="string">    &#x6807;&#x51C6;&#x5316;&#x5668;&#x7684;&#x53C2;&#x6570;&#x8BBE;&#x7F6E;&#x4E3A;batch_norm_patams</span></span><br><span class="line"><span class="string">    &apos;&apos;&apos;</span></span><br><span class="line">    <span class="keyword">with</span> slim.arg_scope([slim.conv2d,slim.fully_connected],</span><br><span class="line">                        weights_regularizer=slim.l2_regularizer(weight_decay)):</span><br><span class="line">        <span class="comment">#&#x5BF9;&#x5377;&#x79EF;&#x5C42;&#x751F;&#x6210;&#x51FD;&#x6570;&#x7684;&#x51E0;&#x4E2A;&#x53C2;&#x6570;&#x8D4B;&#x4E88;&#x9ED8;&#x8BA4;&#x503C;</span></span><br><span class="line">        <span class="keyword">with</span> slim.arg_scope([slim.conv2d],</span><br><span class="line">                            weights_regularizer = tf.truncated_normal_initializer(stddev=stddev),</span><br><span class="line">                            activation_fc = tf.nn.relu,</span><br><span class="line">                            normalizer_fc = slim.batch_norm,</span><br><span class="line">                            normalizer_params = batch_norm_params) <span class="keyword">as</span> scope:</span><br><span class="line">            <span class="keyword">return</span> scope</span><br></pre></td></tr></table></figure></p><h2 id="&#x5B9A;&#x4E49;Inception-V3&#x7684;&#x5377;&#x79EF;&#x90E8;&#x5206;"><a href="#&#x5B9A;&#x4E49;Inception-V3&#x7684;&#x5377;&#x79EF;&#x90E8;&#x5206;" class="headerlink" title="&#x5B9A;&#x4E49;Inception V3&#x7684;&#x5377;&#x79EF;&#x90E8;&#x5206;"></a>&#x5B9A;&#x4E49;Inception V3&#x7684;&#x5377;&#x79EF;&#x90E8;&#x5206;</h2><p>&#x5B83;&#x53EF;&#x4EE5;&#x751F;&#x6210;Inception V3&#x7F51;&#x7EDC;&#x7684;&#x5377;&#x79EF;&#x90E8;&#x5206;&#x3002;<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">&#x5B9A;&#x4E49;Inception V3&#x7684;&#x5377;&#x79EF;&#x90E8;&#x5206;</span></span><br><span class="line"><span class="string">inputs&#x4E3A;&#x8F93;&#x5165;&#x56FE;&#x7247;&#x6570;&#x636E;&#x7684;tensor</span></span><br><span class="line"><span class="string">scope&#x4E3A;&#x5305;&#x542B;&#x4E86;&#x51FD;&#x6570;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;&#x7684;&#x73AF;&#x5883;</span></span><br><span class="line"><span class="string">&#x7528;&#x5B57;&#x5178;&#x8868;end_points&#x6765;&#x4FDD;&#x5B58;&#x67D0;&#x4E9B;&#x5173;&#x952E;&#x8282;&#x70B9;&#x4F9B;&#x4E4B;&#x540E;&#x4F7F;&#x7528;</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inception_v3_base</span><span class="params">(inputs,scope=None)</span>:</span></span><br><span class="line">    end_points = {}</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(scope,<span class="string">&quot;InceptionV3&quot;</span>,[inputs]):</span><br><span class="line">        <span class="comment">#&#x5BF9;slim.conv2d,slim.max_pool2d,slim.avg_pool2d&#x4E09;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#x8BBE;&#x7F6E;&#x9ED8;&#x8BA4;&#x503C;</span></span><br><span class="line">        <span class="keyword">with</span> slim.arg_scope([slim.conv2d,slim.max_pool2d,slim.avg_pool2d],stride = <span class="number">1</span>,padding = <span class="string">&quot;VALID&quot;</span>):                               </span><br><span class="line">            <span class="comment">#&#x5404;&#x53C2;&#x6570;&#x5206;&#x522B;&#x4E3A;&#x8F93;&#x5165;&#x7684;tensor,&#x8F93;&#x51FA;&#x7684;&#x901A;&#x9053;,&#x5377;&#x79EF;&#x6838;&#x5C3A;&#x5BF8;,&#x6B65;&#x957F;stride&#xFF0C;padding&#x6A21;&#x5F0F;</span></span><br><span class="line">            net = slim.conv2d(inputs,num_outputs=<span class="number">32</span>,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],stride=<span class="number">2</span>,scope=<span class="string">&quot;Conv2d_1a_3x3&quot;</span>)</span><br><span class="line">            net = slim.conv2d(net,num_outputs=<span class="number">32</span>,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],scope=<span class="string">&quot;Conv2d_2a_3x3&quot;</span>)</span><br><span class="line">            net = slim.conv2d(net,num_outputs=<span class="number">64</span>,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],padding=<span class="string">&quot;SAME&quot;</span>,scope=<span class="string">&quot;Conv2d_2b_3x3&quot;</span>)</span><br><span class="line">            net = slim.max_pool2d(net,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],stride=<span class="number">2</span>,scope=<span class="string">&quot;MaxPool_3a_3x3&quot;</span>)</span><br><span class="line">            net = slim.conv2d(net,num_outputs=<span class="number">80</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_3b_1x1&quot;</span>)</span><br><span class="line">            net = slim.conv2d(net,num_outputs=<span class="number">192</span>,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],scope=<span class="string">&quot;Conv2d_4a_3x3&quot;</span>)</span><br><span class="line">            net = slim.max_pool2d(net,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],stride=<span class="number">2</span>,scope=<span class="string">&quot;MaxPool_5a_3x3&quot;</span>)</span><br></pre></td></tr></table></figure></p><h3 id="&#x5B9A;&#x4E49;&#x7B2C;&#x4E00;&#x4E2A;Inception&#x6A21;&#x5757;"><a href="#&#x5B9A;&#x4E49;&#x7B2C;&#x4E00;&#x4E2A;Inception&#x6A21;&#x5757;" class="headerlink" title="&#x5B9A;&#x4E49;&#x7B2C;&#x4E00;&#x4E2A;Inception&#x6A21;&#x5757;"></a>&#x5B9A;&#x4E49;&#x7B2C;&#x4E00;&#x4E2A;Inception&#x6A21;&#x5757;</h3><ul><li><p><strong>&#x7B2C;&#x4E00;&#x4E2A;Inception Module</strong><br>  &#x7B2C;&#x4E00;&#x4E2A;Inception Module&#x540D;&#x79F0;&#x4E3A;Mixed_5b&#x3002;&#x8FD9;&#x4E2A;Inception Module&#x4E2D;&#x6709;4&#x4E2A;&#x5206;&#x652F;&#xFF1A;</p><ol><li>&#x7B2C;&#x4E00;&#x4E2A;&#x5206;&#x652F;&#x6709;64&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;</li><li>&#x7B2C;&#x4E8C;&#x4E2A;&#x5206;&#x652F;&#x6709;48&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;&#x8FDE;&#x63A5;&#x6709;64&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;5&#xD7;5&#x5377;&#x79EF;</li><li>&#x7B2C;&#x4E09;&#x4E2A;&#x5206;&#x652F;&#x6709;64&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;&#x518D;&#x8FDE;&#x7EED;&#x8FDE;&#x63A5;&#x4E24;&#x4E2A;&#x6709;96&#x901A;&#x9053;&#x7684;3&#xD7;3&#x5377;&#x79EF;</li><li><p>&#x7B2C;&#x56DB;&#x4E2A;&#x5206;&#x652F;&#x6709;&#x4E3A;3&#xD7;3&#x7684;&#x5E73;&#x5747;&#x6C60;&#x5316;&#xFF0C;&#x8FDE;&#x63A5;&#x6709;32&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;</p><p>&#x6700;&#x540E;&#x4F7F;&#x7528;<code>tf.concat</code>&#x5C06;&#x56DB;&#x4E2A;&#x5206;&#x652F;&#x7684;&#x8F93;&#x51FA;&#x5408;&#x5E76;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x751F;&#x6210;&#x8FD9;&#x4E2A;Inception Module&#x7684;&#x6700;&#x7EC8;&#x8F93;&#x51FA;&#x3002;4&#x4E2A;&#x5206;&#x652F;&#x7684;&#x8F93;&#x51FA;&#x901A;&#x9053;&#x6570;&#x4E4B;&#x548C;&#x4E3A;64+64+96+32=256&#xFF0C;&#x5373;&#x6700;&#x7EC8;&#x8F93;&#x51FA;&#x7684;&#x56FE;&#x7247;&#x5C3A;&#x5BF8;&#x4E3A;35&#xD7;35&#xD7;256&#x3002;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x5B9A;&#x4E49;&#x7B2C;&#x4E00;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;</span></span><br><span class="line"><span class="keyword">with</span> slim.arg_scope([slim.conv2d,slim.max_pool2d,slim.avg_pool2d],</span><br><span class="line">                    stride = <span class="number">1</span>,padding = <span class="string">&quot;SAME&quot;</span>):</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Mixed_5b&quot;</span>):</span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_0&quot;</span>):</span><br><span class="line">            batch_0 = slim.conv2d(net,num_outputs=<span class="number">64</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_1&quot;</span>):</span><br><span class="line">            batch_1 = slim.conv2d(net,num_outputs=<span class="number">48</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">            batch_1 = slim.conv2d(batch_1,num_outputs=<span class="number">64</span>,kernel_size=[<span class="number">5</span>,<span class="number">5</span>],scope=<span class="string">&quot;Conv2d_0b_5x5&quot;</span>)</span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_2&quot;</span>):</span><br><span class="line">            batch_2 = slim.conv2d(net,num_outputs=<span class="number">64</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">            batch_2 = slim.conv2d(batch_2,num_outputs=<span class="number">96</span>,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],scope=<span class="string">&quot;Conv2d_0b_3x3&quot;</span>)</span><br><span class="line">            batch_2 = slim.conv2d(batch_2,num_outputs=<span class="number">96</span>,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],scope=<span class="string">&quot;Conv2d_0c_3x3&quot;</span>)</span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_3&quot;</span>):</span><br><span class="line">            batch_3 = slim.avg_pool2d(net,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],scope=<span class="string">&quot;AvgPool_0a_3x3&quot;</span>)</span><br><span class="line">            batch_3 = slim.conv2d(batch_3,num_outputs=<span class="number">32</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0b_1x1&quot;</span>)</span><br><span class="line"> </span><br><span class="line">        net = tf.concat([batch_0,batch_1,batch_2,batch_3],<span class="number">3</span>)</span><br></pre></td></tr></table></figure></li></ol></li><li><p><strong>&#x7B2C;&#x4E8C;&#x4E2A;Inception Module</strong><br>  &#x7B2C;&#x4E8C;&#x4E2A;Inception Module&#x7684;&#x540D;&#x79F0;&#x4E3A;Mixed_5c&#x3002;&#x5B83;&#x540C;&#x6837;&#x4E5F;&#x6709;&#x56DB;&#x4E2A;&#x5206;&#x652F;&#xFF0C;&#x552F;&#x4E00;&#x4E0D;&#x540C;&#x7684;&#x662F;&#x7B2C;&#x56DB;&#x4E2A;&#x5206;&#x652F;&#x6700;&#x540E;&#x63A5;&#x7684;&#x662F;64&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#x3002;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x8F93;&#x51FA;&#x7684;tensor&#x7684;&#x6700;&#x7EC8;&#x5C3A;&#x5BF8;&#x4E3A;35&#xD7;5&#xD7;288&#x3002;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;</span></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Mixed_5c&quot;</span>):</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_0&quot;</span>):</span><br><span class="line">        batch_0 = slim.conv2d(net, num_outputs=<span class="number">64</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_1&quot;</span>):</span><br><span class="line">        batch_1 = slim.conv2d(net, num_outputs=<span class="number">48</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0b_1x1&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">64</span>, kernel_size=[<span class="number">5</span>, <span class="number">5</span>], scope=<span class="string">&quot;Conv2d_0c_5x5&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_2&quot;</span>):</span><br><span class="line">        batch_2 = slim.conv2d(net, num_outputs=<span class="number">64</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">96</span>, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&quot;Conv2d_0b_3x3&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">96</span>, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&quot;Conv2d_0c_3x3&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_3&quot;</span>):</span><br><span class="line">        batch_3 = slim.avg_pool2d(net, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&quot;AvgPool_0a_3x3&quot;</span>)</span><br><span class="line">        batch_3 = slim.conv2d(batch_3, num_outputs=<span class="number">64</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0b_1x1&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    net = tf.concat([batch_0, batch_1, batch_2, batch_3], <span class="number">3</span>)</span><br></pre></td></tr></table></figure></li><li><p><strong>&#x7B2C;&#x4E09;&#x4E2A;Inception Module</strong><br>  &#x7B2C;&#x4E09;&#x4E2A;Inception Module&#x7684;&#x540D;&#x79F0;&#x4E3A;Mixed_5d&#xFF0C;&#x548C;&#x4E0A;&#x4E00;&#x4E2A;Inception Module&#x5B8C;&#x5168;&#x76F8;&#x540C;&#x3002;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x7B2C;&#x4E09;&#x4E2A;Inception&#x6A21;&#x5757;</span></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Mixed_5d&quot;</span>):</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_0&quot;</span>):</span><br><span class="line">        batch_0 = slim.conv2d(net, num_outputs=<span class="number">64</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_1&quot;</span>):</span><br><span class="line">        batch_1 = slim.conv2d(net, num_outputs=<span class="number">48</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0b_1x1&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">64</span>, kernel_size=[<span class="number">5</span>, <span class="number">5</span>], scope=<span class="string">&quot;Conv2d_0c_5x5&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_2&quot;</span>):</span><br><span class="line">        batch_2 = slim.conv2d(net, num_outputs=<span class="number">64</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">96</span>, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&quot;Conv2d_0b_3x3&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">96</span>, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&quot;Conv2d_0c_3x3&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_3&quot;</span>):</span><br><span class="line">        batch_3 = slim.avg_pool2d(net, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&quot;AvgPool_0a_3x3&quot;</span>)</span><br><span class="line">        batch_3 = slim.conv2d(batch_3, num_outputs=<span class="number">64</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0b_1x1&quot;</span>)</span><br><span class="line"></span><br><span class="line">    net = tf.concat([batch_0, batch_1, batch_2, batch_3], <span class="number">3</span>)</span><br></pre></td></tr></table></figure></li></ul><h3 id="&#x5B9A;&#x4E49;&#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;"><a href="#&#x5B9A;&#x4E49;&#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;" class="headerlink" title="&#x5B9A;&#x4E49;&#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;"></a>&#x5B9A;&#x4E49;&#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;</h3><p>&#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;&#x662F;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x5927;&#x7684;&#x6A21;&#x5757;&#x7EC4;&#xFF0C;&#x5305;&#x542B;&#x4E86;5&#x4E2A;Inception Module&#x3002;&#x5176;&#x4E2D;&#x7B2C;&#x4E8C;&#x4E2A;&#x5230;&#x7B2C;&#x4E94;&#x4E2A;Inception Module&#x7684;&#x7ED3;&#x6784;&#x975E;&#x5E38;&#x76F8;&#x4F3C;&#x3002;</p><ul><li><p><strong>&#x7B2C;&#x4E00;&#x4E2A;Inception Module</strong><br>  &#x7B2C;&#x4E00;&#x4E2A;Inception Module&#x7684;&#x540D;&#x79F0;&#x4E3A;Mixed_6a&#xFF0C;&#x5305;&#x542B;&#x4E09;&#x4E2A;&#x5206;&#x652F;&#xFF1A;</p><ol><li>&#x7B2C;&#x4E00;&#x4E2A;&#x5206;&#x652F;&#x4E3A;384&#x901A;&#x9053;&#x7684;3&#xD7;3&#x5377;&#x79EF;&#xFF0C;&#x6B65;&#x957F;&#x4E3A;2</li><li>&#x7B2C;&#x4E8C;&#x4E2A;&#x5206;&#x652F;&#x6709;&#x4E09;&#x5C42;&#xFF0C;&#x5206;&#x522B;&#x4E3A;64&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;&#x548C;&#x4E24;&#x4E2A;96&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;3&#xD7;3&#x5377;&#x79EF;&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x5C42;&#x7684;&#x6B65;&#x957F;&#x4E3A;2&#x3002;</li><li>&#x7B2C;&#x4E09;&#x4E2A;&#x5206;&#x652F;&#x4E3A;3&#xD7;3&#x7684;&#x6C60;&#x5316;&#x5C42;&#xFF0C;&#x6B65;&#x957F;&#x4E3A;2<br>&#x6700;&#x540E;&#x7528;<code>tf.concat</code>&#x5C06;&#x4E09;&#x4E2A;&#x5206;&#x652F;&#x5728;&#x8F93;&#x51FA;&#x901A;&#x9053;&#x4E0A;&#x5408;&#x5E76;&#xFF0C;&#x6700;&#x540E;&#x7684;&#x8F93;&#x51FA;&#x5C3A;&#x5BF8;&#x4E3A;17&#xD7;17&#xD7;(384+96+256)=17&#xD7;17&#xD7;768<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x5B9A;&#x4E49;&#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;,&#x7B2C;&#x4E00;&#x4E2A;Inception&#x6A21;&#x5757;</span></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Mixed_6a&quot;</span>):</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_0&quot;</span>):</span><br><span class="line">        batch_0 = slim.conv2d(net, num_outputs=<span class="number">384</span>, kernel_size=[<span class="number">3</span>,<span class="number">3</span>],</span><br><span class="line">                                stride=<span class="number">2</span>, padding=<span class="string">&quot;VALID&quot;</span>,scope=<span class="string">&quot;Conv2d_1a_1x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_1&quot;</span>):</span><br><span class="line">        batch_1 = slim.conv2d(net, num_outputs=<span class="number">64</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">96</span>, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&quot;Conv2d_0b_3x3&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">96</span>, kernel_size=[<span class="number">3</span>, <span class="number">3</span>],</span><br><span class="line">                                stride=<span class="number">2</span>, padding=<span class="string">&quot;VALID&quot;</span>,scope=<span class="string">&quot;Conv2d_1a_1x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_2&quot;</span>):</span><br><span class="line">        batch_2 = slim.max_pool2d(net,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],stride=<span class="number">2</span>,padding=<span class="string">&quot;VALID&quot;</span>,</span><br><span class="line">                                    scope=<span class="string">&quot;MaxPool_1a_3x3&quot;</span>)</span><br><span class="line"></span><br><span class="line">    net = tf.concat([batch_0, batch_1, batch_2], <span class="number">3</span>)</span><br></pre></td></tr></table></figure></li></ol></li><li><p><strong>&#x7B2C;&#x4E8C;&#x4E2A;Inception Module</strong><br>  &#x540D;&#x79F0;&#x4E3A;Mixed_6b&#xFF0C;&#x5B83;&#x6709;&#x56DB;&#x4E2A;&#x5206;&#x652F;&#xFF1A;</p><ol><li>&#x7B2C;&#x4E00;&#x4E2A;&#x5206;&#x652F;&#x4E3A;193&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;</li><li>&#x7B2C;&#x4E8C;&#x4E2A;&#x5206;&#x652F;&#x6709;&#x4E09;&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#xFF0C;&#x5206;&#x522B;&#x4E3A;128&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;128&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;7&#x5377;&#x79EF;&#xFF0C;&#x4EE5;&#x53CA;192&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;7&#xD7;1&#x5377;&#x79EF;&#xFF0C;&#x8FD9;&#x91CC;&#x7528;&#x5230;&#x4E86;Factorization into small convolutions&#x601D;&#x60F3;&#xFF0C;&#x4E32;&#x8054;&#x7684;1&#xD7;7&#x5377;&#x79EF;&#x548C;7&#xD7;1&#x5377;&#x79EF;&#x76F8;&#x5F53;&#x4E8E;&#x5408;&#x6210;&#x4E00;&#x4E2A;7&#xD7;7&#x5377;&#x79EF;&#x3002;&#x5927;&#x5927;&#x51CF;&#x5C11;&#x4E86;&#x53C2;&#x6570;&#xFF0C;&#x51CF;&#x8F7B;&#x4E86;&#x8FC7;&#x62DF;&#x5408;&#xFF0C;&#x540C;&#x4E8B;&#x591A;&#x4E86;&#x4E00;&#x4E2A;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x589E;&#x52A0;&#x4E86;&#x975E;&#x7EBF;&#x6027;&#x7279;&#x5F81;&#x53D8;&#x6362;&#x3002;</li><li>&#x7B2C;&#x4E09;&#x4E2A;&#x5206;&#x652F;&#x6709;&#x4E94;&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#xFF0C;&#x5206;&#x522B;&#x4E3A;128&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;128&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;7&#xD7;1&#x5377;&#x79EF;&#xFF0C;128&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;128&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;7&#x5377;&#x79EF;&#xFF0C;128&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;7&#xD7;1&#x5377;&#x79EF;&#x548C;192&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;7&#x5377;&#x79EF;</li><li>&#x7B2C;&#x56DB;&#x4E2A;&#x5206;&#x652F;&#x4E3A;3&#xD7;3&#x7684;&#x5E73;&#x5747;&#x6C60;&#x5316;&#x5C42;&#xFF0C;&#x518D;&#x8FDE;&#x63A5;192&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#x3002;<br>&#x6700;&#x540E;&#x56DB;&#x4E2A;&#x5206;&#x652F;&#x5408;&#x5E76;&#xFF0C;&#x8F93;&#x51FA;&#x7684;tensor&#x5C3A;&#x5BF8;&#x4E3A;17&#xD7;17&#xD7;(192+192+192+192)=17&#xD7;17&#xD7;768<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x5B9A;&#x4E49;&#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;,&#x7B2C;&#x4E00;&#x4E2A;Inception&#x6A21;&#x5757;</span></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Mixed_6b&quot;</span>):</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_0&quot;</span>):</span><br><span class="line">        batch_0 = slim.conv2d(net,num_outputs=<span class="number">192</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_1&quot;</span>):</span><br><span class="line">        batch_1 = slim.conv2d(net, num_outputs=<span class="number">128</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">128</span>, kernel_size=[<span class="number">1</span>,<span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0b_1x7&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0c_7x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_2&quot;</span>):</span><br><span class="line">        batch_2 = slim.conv2d(net, num_outputs=<span class="number">128</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">128</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0b_7x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">128</span>, kernel_size=[<span class="number">1</span>, <span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0c_1x7&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">128</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0d_7x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">1</span>, <span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0e_1x7&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_3&quot;</span>):</span><br><span class="line">        batch_3 = slim.avg_pool2d(net, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&quot;AvgPool_0a_3x3&quot;</span>)</span><br><span class="line">        batch_3 = slim.conv2d(batch_3, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0b_1x1&quot;</span>)</span><br><span class="line"></span><br><span class="line">    net = tf.concat([batch_0, batch_1, batch_2,batch_3], <span class="number">3</span>)</span><br></pre></td></tr></table></figure></li></ol></li><li><p><strong>&#x7B2C;&#x4E09;&#x4E2A;Inception Module</strong><br>  &#x540D;&#x79F0;&#x4E3A;Mixed_6c&#xFF0C;&#x548C;&#x524D;&#x4E00;&#x4E2A;Inception Module&#x975E;&#x5E38;&#x76F8;&#x4F3C;&#xFF0C;&#x552F;&#x4E00;&#x4E0D;&#x540C;&#x7684;&#x5730;&#x65B9;&#x5C31;&#x662F;&#x7B2C;&#x4E8C;&#x548C;&#x7B2C;&#x4E09;&#x5206;&#x652F;&#x4E2D;&#x524D;&#x51E0;&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#x7684;&#x8F93;&#x51FA;&#x901A;&#x9053;&#x4ECE;128&#x53D8;&#x6210;&#x4E86;160&#x3002;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x5B9A;&#x4E49;&#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;,&#x7B2C;&#x4E09;&#x4E2A;Inception&#x6A21;&#x5757;</span></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Mixed_6c&quot;</span>):</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_0&quot;</span>):</span><br><span class="line">        batch_0 = slim.conv2d(net,num_outputs=<span class="number">192</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_1&quot;</span>):</span><br><span class="line">        batch_1 = slim.conv2d(net, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">1</span>,<span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0b_1x7&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0c_7x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_2&quot;</span>):</span><br><span class="line">        batch_2 = slim.conv2d(net, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0b_7x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">1</span>, <span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0c_1x7&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0d_7x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">1</span>, <span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0e_1x7&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_3&quot;</span>):</span><br><span class="line">        batch_3 = slim.avg_pool2d(net, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&quot;AvgPool_0a_3x3&quot;</span>)</span><br><span class="line">        batch_3 = slim.conv2d(batch_3, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0b_1x1&quot;</span>)</span><br><span class="line"></span><br><span class="line">    net = tf.concat([batch_0, batch_1, batch_2,batch_3], <span class="number">3</span>)</span><br></pre></td></tr></table></figure></li><li><p><strong>&#x7B2C;&#x56DB;&#x4E2A;Inception Module</strong><br>  &#x540D;&#x79F0;&#x4E3A;Mixed_d&#xFF0C;&#x548C;Mixed_6c&#x5B8C;&#x5168;&#x4E00;&#x81F4;&#x3002;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x5B9A;&#x4E49;&#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;,&#x7B2C;&#x56DB;&#x4E2A;Inception&#x6A21;&#x5757;</span></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Mixed_6d&quot;</span>):</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_0&quot;</span>):</span><br><span class="line">        batch_0 = slim.conv2d(net,num_outputs=<span class="number">192</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_1&quot;</span>):</span><br><span class="line">        batch_1 = slim.conv2d(net, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">1</span>,<span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0b_1x7&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0c_7x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_2&quot;</span>):</span><br><span class="line">        batch_2 = slim.conv2d(net, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0b_7x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">1</span>, <span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0c_1x7&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0d_7x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">1</span>, <span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0e_1x7&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_3&quot;</span>):</span><br><span class="line">        batch_3 = slim.avg_pool2d(net, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&quot;AvgPool_0a_3x3&quot;</span>)</span><br><span class="line">        batch_3 = slim.conv2d(batch_3, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0b_1x1&quot;</span>)</span><br><span class="line"></span><br><span class="line">    net = tf.concat([batch_0, batch_1, batch_2,batch_3], <span class="number">3</span>)</span><br></pre></td></tr></table></figure></li><li><p><strong>&#x7B2C;&#x4E94;&#x4E2A;Inception Module</strong><br>  &#x540D;&#x79F0;&#x4E3A;Mixed_6e&#xFF0C;&#x548C;&#x524D;&#x4E24;&#x4E2A;Inception Module&#x4E5F;&#x5B8C;&#x5168;&#x4E00;&#x81F4;&#x3002;&#x8FD9;&#x662F;&#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;Inception Module&#x3002;&#x6211;&#x4EEC;&#x5C06;Mixed_6e&#x5B58;&#x50A8;&#x4E8E;end_points&#x4E2D;&#xFF0C;&#x4F5C;&#x4E3A;Auxiliary Classifier&#x8F85;&#x52A9;&#x6A21;&#x578B;&#x7684;&#x5206;&#x7C7B;&#x3002;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x5B9A;&#x4E49;&#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;,&#x7B2C;&#x4E94;&#x4E2A;Inception&#x6A21;&#x5757;</span></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Mixed_6e&quot;</span>):</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_0&quot;</span>):</span><br><span class="line">        batch_0 = slim.conv2d(net,num_outputs=<span class="number">192</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_1&quot;</span>):</span><br><span class="line">        batch_1 = slim.conv2d(net, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">1</span>,<span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0b_1x7&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0c_7x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_2&quot;</span>):</span><br><span class="line">        batch_2 = slim.conv2d(net, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0b_7x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">1</span>, <span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0c_1x7&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">160</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0d_7x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">1</span>, <span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0e_1x7&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_3&quot;</span>):</span><br><span class="line">        batch_3 = slim.avg_pool2d(net, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&quot;AvgPool_0a_3x3&quot;</span>)</span><br><span class="line">        batch_3 = slim.conv2d(batch_3, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0b_1x1&quot;</span>)</span><br><span class="line"></span><br><span class="line">    net = tf.concat([batch_0, batch_1, batch_2,batch_3], <span class="number">3</span>)</span><br><span class="line"><span class="comment">#&#x7B2C;&#x4E8C;&#x4E2A;&#x6A21;&#x5757;&#x7EC4;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;Inception&#x6A21;&#x5757;&#xFF0C;&#x5C06;Mixed_6e&#x5B58;&#x50A8;&#x4E8E;end_points&#x4E2D;</span></span><br><span class="line">end_points[<span class="string">&quot;Mixed_6e&quot;</span>] = net</span><br></pre></td></tr></table></figure></li></ul><h3 id="&#x5B9A;&#x4E49;&#x7B2C;&#x4E09;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;"><a href="#&#x5B9A;&#x4E49;&#x7B2C;&#x4E09;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;" class="headerlink" title="&#x5B9A;&#x4E49;&#x7B2C;&#x4E09;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;"></a>&#x5B9A;&#x4E49;&#x7B2C;&#x4E09;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;</h3><p>&#x7B2C;&#x4E09;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;&#x5305;&#x542B;&#x4E86;3&#x4E2A;Inception Module&#x3002;&#x5176;&#x4E2D;&#x540E;&#x4E24;&#x4E2A;Inception Module&#x7684;&#x7ED3;&#x6784;&#x975E;&#x5E38;&#x76F8;&#x4F3C;&#x3002;</p><ul><li><p><strong>&#x7B2C;&#x4E00;&#x4E2A;Inception Module</strong><br>  &#x540D;&#x79F0;&#x4E3A;Mixed_7a&#xFF0C;&#x5305;&#x542B;&#x4E86;&#x4E09;&#x4E2A;&#x5206;&#x652F;&#xFF1A;</p><ol><li>&#x7B2C;&#x4E00;&#x4E2A;&#x5206;&#x652F;&#x4E3A;192&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;&#x518D;&#x63A5;320&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;3&#xD7;3&#x5377;&#x79EF;&#xFF0C;&#x6B65;&#x957F;&#x4E3A;2</li><li>&#x7B2C;&#x4E8C;&#x4E2A;&#x5206;&#x652F;&#x6709;&#x56DB;&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#xFF0C;&#x5206;&#x522B;&#x4E3A;192&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;192&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;7&#x5377;&#x79EF;&#xFF0C;192&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;7&#xD7;1&#x5377;&#x79EF;&#x548C;192&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;3&#xD7;3&#x5377;&#x79EF;&#x3002;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#x6B65;&#x957F;&#x4E3A;2&#xFF0C;padding&#x4E3A;VALID</li><li>&#x7B2C;&#x4E09;&#x4E2A;&#x5206;&#x652F;&#x4E3A;&#x4E00;&#x4E2A;3&#xD7;3&#x6700;&#x5927;&#x6C60;&#x5316;&#x5C42;&#xFF0C;&#x6B65;&#x957F;&#x4E3A;2&#xFF0C;padding&#x4E3A;VALID&#x3002;<br>&#x6700;&#x540E;&#x5408;&#x5E76;&#x5F97;&#x5230;&#x7684;tensor&#x5C3A;&#x5BF8;&#x4E3A;&#x4E3A;3&#xD7;3&#xD7;(320+192+768)=8&#xD7;8&#xD7;1280&#x3002;<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x5B9A;&#x4E49;&#x7B2C;&#x4E09;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;,&#x7B2C;&#x4E00;&#x4E2A;Inception&#x6A21;&#x5757;</span></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Mixed_7a&quot;</span>):</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_0&quot;</span>):</span><br><span class="line">        batch_0 = slim.conv2d(net, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_0 = slim.conv2d(net, num_outputs=<span class="number">320</span>, kernel_size=[<span class="number">3</span>, <span class="number">3</span>],stride=<span class="number">2</span>,</span><br><span class="line">                                padding=<span class="string">&quot;VALID&quot;</span>,scope=<span class="string">&quot;Conv2d_1a_3x3&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_1&quot;</span>):</span><br><span class="line">        batch_1 = slim.conv2d(net, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">1</span>,<span class="number">7</span>], scope=<span class="string">&quot;Conv2d_0b_1x7&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">7</span>, <span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0c_7x1&quot;</span>)</span><br><span class="line">        batch_1 = slim.conv2d(batch_1, num_outputs=<span class="number">192</span>, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], stride=<span class="number">2</span>,</span><br><span class="line">                                padding=<span class="string">&quot;VALID&quot;</span>,scope=<span class="string">&quot;Conv2d_1a_3x3&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_2&quot;</span>):</span><br><span class="line">        batch_2 = slim.max_pool2d(net, kernel_size=[<span class="number">3</span>, <span class="number">3</span>], stride=<span class="number">2</span>, padding=<span class="string">&quot;VALID&quot;</span>,</span><br><span class="line">                                    scope=<span class="string">&quot;MaxPool_1a_3x3&quot;</span>)</span><br><span class="line"></span><br><span class="line">    net = tf.concat([batch_0, batch_1, batch_2], <span class="number">3</span>)</span><br></pre></td></tr></table></figure></li></ol></li><li><p><strong>&#x7B2C;&#x4E8C;&#x4E2A;Inception Module</strong><br>  &#x540D;&#x79F0;&#x4E3A;Mixed_7b&#xFF0C;&#x5B83;&#x6709;&#x56DB;&#x4E2A;&#x5206;&#x652F;&#xFF1A;</p><ol><li>&#x7B2C;&#x4E00;&#x4E2A;&#x5206;&#x652F;&#x4E3A;320&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;</li><li>&#x7B2C;&#x4E8C;&#x4E2A;&#x5206;&#x652F;&#x5148;&#x662F;&#x4E00;&#x4E2A;384&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;&#x968F;&#x540E;&#x5728;&#x5206;&#x652F;&#x5185;&#x5F00;&#x4E24;&#x4E2A;&#x5206;&#x652F;&#xFF0C;&#x5206;&#x522B;&#x4E3A;384&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;3&#x5377;&#x79EF;&#x548C;384&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;3&#xD7;1&#x5377;&#x79EF;&#xFF0C;&#x7136;&#x540E;&#x7528;<code>tf.concat</code>&#x5408;&#x5E76;&#xFF0C;&#x5F97;&#x5230;&#x7684;tensor&#x7684;&#x5C3A;&#x5BF8;&#x4E3A;8&#xD7;8&#xD7;(384+384)=8&#xD7;8&#xD7;768</li><li>&#x7B2C;&#x4E09;&#x4E2A;&#x5206;&#x652F;&#x5148;&#x662F;48&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;&#x7136;&#x540E;&#x662F;384&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;3&#xD7;3&#x5377;&#x79EF;&#xFF0C;&#x7136;&#x540E;&#x540C;&#x6837;&#x5728;&#x5206;&#x652F;&#x5185;&#x62C6;&#x6210;&#x4E24;&#x4E2A;&#x5206;&#x652F;&#xFF0C;&#x5206;&#x522B;&#x4E3A;384&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;3&#x5377;&#x79EF;&#x548C;384&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;3&#xD7;1&#x5377;&#x79EF;</li><li>&#x7B2C;&#x56DB;&#x4E2A;&#x5206;&#x652F;&#x4E3A;&#x4E00;&#x4E2A;3&#xD7;3&#x7684;&#x5E73;&#x5747;&#x6C60;&#x5316;&#x5C42;&#x540E;&#x63A5;&#x4E00;&#x4E2A;192&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#x3002;<br>&#x6700;&#x540E;&#x5408;&#x5E76;&#x5F97;&#x5230;&#x7684;tensor&#x7684;&#x5C3A;&#x5BF8;&#x4E3A;8&#xD7;8&#xD7;(320+768+768+192)=8&#xD7;8&#xD7;2048<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x5B9A;&#x4E49;&#x7B2C;&#x4E09;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;,&#x7B2C;&#x4E8C;&#x4E2A;Inception&#x6A21;&#x5757;</span></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Mixed_7b&quot;</span>):</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_0&quot;</span>):</span><br><span class="line">        batch_0 = slim.conv2d(net, num_outputs=<span class="number">320</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_1&quot;</span>):</span><br><span class="line">        batch_1 = slim.conv2d(net, num_outputs=<span class="number">384</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_1 = tf.concat([</span><br><span class="line">            slim.conv2d(batch_1,num_outputs=<span class="number">384</span>,kernel_size=[<span class="number">1</span>,<span class="number">3</span>],scope=<span class="string">&quot;Conv2d_0b_1x3&quot;</span>),</span><br><span class="line">            slim.conv2d(batch_1,num_outputs=<span class="number">384</span>,kernel_size=[<span class="number">3</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0b_3x1&quot;</span>)],axis=<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_2&quot;</span>):</span><br><span class="line">        batch_2 = slim.conv2d(net,num_outputs=<span class="number">448</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        batch_2 = slim.conv2d(batch_2,num_outputs=<span class="number">384</span>,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],scope=<span class="string">&quot;Conv2d_0b_3x3&quot;</span>)</span><br><span class="line">        batch_2 = tf.concat([</span><br><span class="line">            slim.conv2d(batch_2,num_outputs=<span class="number">384</span>,kernel_size=[<span class="number">1</span>,<span class="number">3</span>],scope=<span class="string">&quot;Conv2d_0c_1x3&quot;</span>),</span><br><span class="line">            slim.conv2d(batch_2,num_outputs=<span class="number">384</span>,kernel_size=[<span class="number">3</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0d_3x1&quot;</span>)],axis=<span class="number">3</span>)</span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_3&quot;</span>):</span><br><span class="line">        batch_3 = slim.avg_pool2d(net,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],scope=<span class="string">&quot;AvgPool_0a_3x3&quot;</span>)</span><br><span class="line">        batch_3 = slim.conv2d(batch_3,num_outputs=<span class="number">192</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0b_1x1&quot;</span>)</span><br><span class="line"></span><br><span class="line">net = tf.concat([batch_0, batch_1, batch_2,batch_3], <span class="number">3</span>)</span><br></pre></td></tr></table></figure></li></ol></li><li><p><em>&#x7B2C;&#x4E09;&#x4E2A;Inception Module*</em><br>  &#x540D;&#x79F0;&#x4E3A;Mixed_7c&#xFF0C;&#x5B83;&#x548C;&#x524D;&#x4E00;&#x4E2A;Inception Module&#x5B8C;&#x5168;&#x4E00;&#x81F4;&#x3002;&#x6700;&#x540E;&#x6211;&#x4EEC;&#x8FD4;&#x56DE;&#x8FD9;&#x4E2A;Inception Module&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x4F5C;&#x4E3A;inception_v3_base&#x51FD;&#x6570;&#x7684;&#x6700;&#x7EC8;&#x8F93;&#x51FA;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    <span class="comment"># &#x5B9A;&#x4E49;&#x7B2C;&#x4E09;&#x4E2A;Inception&#x6A21;&#x5757;&#x7EC4;,&#x7B2C;&#x4E09;&#x4E2A;Inception&#x6A21;&#x5757;</span></span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Mixed_7c&quot;</span>):</span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_0&quot;</span>):</span><br><span class="line">            batch_0 = slim.conv2d(net, num_outputs=<span class="number">320</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_1&quot;</span>):</span><br><span class="line">            batch_1 = slim.conv2d(net, num_outputs=<span class="number">384</span>, kernel_size=[<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">            batch_1 = tf.concat([</span><br><span class="line">                slim.conv2d(batch_1,num_outputs=<span class="number">384</span>,kernel_size=[<span class="number">1</span>,<span class="number">3</span>],scope=<span class="string">&quot;Conv2d_0b_1x3&quot;</span>),</span><br><span class="line">                slim.conv2d(batch_1,num_outputs=<span class="number">384</span>,kernel_size=[<span class="number">3</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0b_3x1&quot;</span>)],axis=<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_2&quot;</span>):</span><br><span class="line">            batch_2 = slim.conv2d(net,num_outputs=<span class="number">448</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0a_1x1&quot;</span>)</span><br><span class="line">            batch_2 = slim.conv2d(batch_2,num_outputs=<span class="number">384</span>,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],scope=<span class="string">&quot;Conv2d_0b_3x3&quot;</span>)</span><br><span class="line">            batch_2 = tf.concat([</span><br><span class="line">                slim.conv2d(batch_2,num_outputs=<span class="number">384</span>,kernel_size=[<span class="number">1</span>,<span class="number">3</span>],scope=<span class="string">&quot;Conv2d_0c_1x3&quot;</span>),</span><br><span class="line">                slim.conv2d(batch_2,num_outputs=<span class="number">384</span>,kernel_size=[<span class="number">3</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0d_3x1&quot;</span>)],axis=<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Branch_3&quot;</span>):</span><br><span class="line">            batch_3 = slim.avg_pool2d(net,kernel_size=[<span class="number">3</span>,<span class="number">3</span>],scope=<span class="string">&quot;AvgPool_0a_3x3&quot;</span>)</span><br><span class="line">            batch_3 = slim.conv2d(batch_3,num_outputs=<span class="number">192</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_0b_1x1&quot;</span>)</span><br><span class="line"> </span><br><span class="line">    net = tf.concat([batch_0, batch_1, batch_2,batch_3], <span class="number">3</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> net,end_points</span><br></pre></td></tr></table></figure></li></ul><h2 id="&#x5B9E;&#x73B0;Inception-v3&#x51FD;&#x6570;"><a href="#&#x5B9E;&#x73B0;Inception-v3&#x51FD;&#x6570;" class="headerlink" title="&#x5B9E;&#x73B0;Inception_v3&#x51FD;&#x6570;"></a>&#x5B9E;&#x73B0;Inception_v3&#x51FD;&#x6570;</h2><p>&#x5B9E;&#x73B0;Inception V3&#x7F51;&#x7EDC;&#x7684;&#x6700;&#x540E;&#x4E00;&#x90E8;&#x5206;&#x2014;&#x2014;&#x5168;&#x5C40;&#x5E73;&#x5747;&#x6C60;&#x5316;&#xFF0C;Softmax&#x548C;Auxiliary Logits&#x3002;</p><ul><li><p><strong>&#x51FD;&#x6570;Inception_v3&#x7684;&#x8F93;&#x5165;&#x53C2;&#x6570;</strong></p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inception_v3</span><span class="params">(inputs,num_classes=<span class="number">1000</span>,is_training=True,droupot_keep_prob = <span class="number">0.8</span>,prediction_fn = slim.softmax,spatial_squeeze = True,reuse = None, scope=<span class="string">&quot;InceptionV3&quot;</span>)</span>:</span> </span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">InceptionV3&#x6574;&#x4E2A;&#x7F51;&#x7EDC;&#x7684;&#x6784;&#x5EFA;</span></span><br><span class="line"><span class="string">param :</span></span><br><span class="line"><span class="string">inputs -- &#x8F93;&#x5165;tensor</span></span><br><span class="line"><span class="string">num_classes -- &#x6700;&#x540E;&#x5206;&#x7C7B;&#x6570;&#x76EE;</span></span><br><span class="line"><span class="string">is_training -- &#x662F;&#x5426;&#x662F;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;</span></span><br><span class="line"><span class="string">droupot_keep_prob -- dropout&#x4FDD;&#x7559;&#x8282;&#x70B9;&#x6BD4;&#x4F8B;</span></span><br><span class="line"><span class="string">prediction_fn -- &#x6700;&#x540E;&#x5206;&#x7C7B;&#x51FD;&#x6570;&#xFF0C;&#x9ED8;&#x8BA4;&#x4E3A;softmax</span></span><br><span class="line"><span class="string">patial_squeeze -- &#x662F;&#x5426;&#x5BF9;&#x8F93;&#x51FA;&#x53BB;&#x9664;&#x7EF4;&#x5EA6;&#x4E3A;1&#x7684;&#x7EF4;&#x5EA6;</span></span><br><span class="line"><span class="string">reuse -- &#x662F;&#x5426;&#x5BF9;&#x7F51;&#x7EDC;&#x548C;Variable&#x91CD;&#x590D;&#x4F7F;&#x7528;</span></span><br><span class="line"><span class="string">scope -- &#x51FD;&#x6570;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;&#x73AF;&#x5883;</span></span><br><span class="line"><span class="string">return:</span></span><br><span class="line"><span class="string">logits -- &#x6700;&#x540E;&#x8F93;&#x51FA;&#x7ED3;&#x679C;</span></span><br><span class="line"><span class="string">end_points -- &#x5305;&#x542B;&#x8F85;&#x52A9;&#x8282;&#x70B9;&#x7684;&#x91CD;&#x8981;&#x8282;&#x70B9;&#x5B57;&#x5178;&#x8868;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>Auxiliary Logits&#x90E8;&#x5206;&#x7684;&#x903B;&#x8F91;</strong><br>  Auxiliary Logits&#x4F5C;&#x4E3A;&#x8F85;&#x52A9;&#x5206;&#x7C7B;&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x5BF9;&#x5206;&#x7C7B;&#x7ED3;&#x679C;&#x9884;&#x6D4B;&#x6709;&#x5F88;&#x5927;&#x7684;&#x5E2E;&#x52A9;&#x3002;&#x901A;&#x8FC7;end_points&#x5F97;&#x5230;Mixed_6e&#x540E;&#xFF1A;</p><ul><li>&#x8FDE;&#x63A5;&#x4E00;&#x4E2A;5&#xD7;5&#x7684;&#x5E73;&#x5747;&#x6C60;&#x5316;&#xFF0C;&#x6B65;&#x957F;&#x4E3A;3&#xFF0C;padding&#x8BBE;&#x4E3A;VALID&#xFF0C;&#x8FD9;&#x6837;&#x8F93;&#x51FA;&#x7684;&#x5C3A;&#x5BF8;&#x5C31;&#x4ECE;17&#xD7;17&#xD7;768&#x53D8;&#x6210;5&#xD7;5&#xD7;768&#x3002;</li><li>&#x63A5;&#x7740;&#x8FDE;&#x63A5;&#x4E00;&#x4E2A;128&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#x548C;&#x4E00;&#x4E2A;768&#x8F93;&#x51FA;&#x901A;&#x9053;&#x7684;5&#xD7;5&#x5377;&#x79EF;&#xFF0C;&#x8FD9;&#x91CC;&#x6743;&#x91CD;&#x521D;&#x59CB;&#x5316;&#x65B9;&#x5F0F;&#x91CD;&#x8BBE;&#x4E3A;&#x6807;&#x51C6;&#x5DEE;&#x4E3A;0.01&#x7684;&#x6B63;&#x6001;&#x5206;&#x5E03;&#xFF0C;padding&#x8BBE;&#x7F6E;&#x4E3A;VALID&#xFF0C;&#x8F93;&#x51FA;&#x5C3A;&#x5BF8;&#x53D8;&#x4E3A;1&#xD7;1&#xD7;768</li><li>&#x7136;&#x540E;&#x518D;&#x63A5;&#x4E00;&#x4E2A;&#x8F93;&#x51FA;&#x901A;&#x9053;&#x4E3A;num_classes&#x7684;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;&#x4E0D;&#x8BBE;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x548C;&#x89C4;&#x8303;&#x5316;&#x51FD;&#x6570;&#x6743;&#x91CD;&#x521D;&#x59CB;&#x65B9;&#x5F0F;&#x91CD;&#x8BBE;&#x4E3A;&#x6807;&#x51C6;&#x5DEE;&#x4E3A;0.001&#x7684;&#x6B63;&#x6001;&#x5206;&#x5E03;&#xFF0C;&#x8FD9;&#x6837;&#x8F93;&#x51FA;&#x5C31;&#x53D8;&#x6210;&#x4E86;1&#xD7;1&#xD7;1000</li><li>&#x6700;&#x540E;&#x4F7F;&#x7528;<code>tf.squeeze</code>&#x51FD;&#x6570;&#x6D88;&#x9664;&#x8F93;&#x51FA;tensor&#x4E2D;&#x524D;&#x4E24;&#x4E2A;&#x4E3A;1&#x7684;&#x7EF4;&#x5EA6;&#x3002;&#x5C06;&#x8F85;&#x52A9;&#x5206;&#x7C7B;&#x8282;&#x70B9;&#x7684;&#x8F93;&#x51FA;aux_logits&#x50A8;&#x5B58;&#x5230;&#x5B57;&#x5178;&#x8868;end_points&#x4E2D;&#x3002;<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">aux_logits = end_points[<span class="string">&quot;Mixed_6e&quot;</span>]</span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;AuxLogits&quot;</span>):</span><br><span class="line">    aux_logits = slim.avg_pool2d(aux_logits,kernel_size=[<span class="number">5</span>,<span class="number">5</span>],stride=<span class="number">3</span>,</span><br><span class="line">                                    padding=<span class="string">&quot;VALID&quot;</span>,scope=<span class="string">&quot;Avgpool_1a_5x5&quot;</span>)</span><br><span class="line">    aux_logits = slim.conv2d(aux_logits,num_outputs=<span class="number">128</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_1b_1x1&quot;</span>)</span><br><span class="line">    aux_logits = slim.conv2d(aux_logits,num_outputs=<span class="number">768</span>,kernel_size=[<span class="number">5</span>,<span class="number">5</span>],</span><br><span class="line">                                weights_initializer=trunc_normal(<span class="number">0.01</span>),padding=<span class="string">&quot;VALID&quot;</span>,</span><br><span class="line">                                scope=<span class="string">&quot;Conv2d_2a_5x5&quot;</span>)</span><br><span class="line">    aux_logits = slim.conv2d(aux_logits,num_outputs=num_classes,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">                                activation_fn=<span class="literal">None</span>,normalizer_fn=<span class="literal">None</span>,</span><br><span class="line">                                weights_initializer=trunc_normal(<span class="number">0.001</span>),scope=<span class="string">&quot;Conv2d_1b_1x1&quot;</span>)</span><br><span class="line">    <span class="comment">#&#x6D88;&#x9664;tensor&#x4E2D;&#x524D;&#x4E24;&#x4E2A;&#x7EF4;&#x5EA6;&#x4E3A;1&#x7684;&#x7EF4;&#x5EA6;</span></span><br><span class="line">    <span class="keyword">if</span> spatial_squeeze:</span><br><span class="line">        aux_logits = tf.squeeze(aux_logits,axis=[<span class="number">1</span>,<span class="number">2</span>],name=<span class="string">&quot;SpatialSqueeze&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#&#x5C06;&#x8F85;&#x52A9;&#x8282;&#x70B9;&#x5206;&#x7C7B;&#x7684;&#x8F93;&#x51FA;aux_logits&#x5B58;&#x5230;end_points&#x4E2D;</span></span><br><span class="line">    end_points[<span class="string">&quot;AuxLogits&quot;</span>] = aux_logits</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>&#x5206;&#x7C7B;&#x9884;&#x6D4B;&#x90E8;&#x5206;&#x903B;&#x8F91;</strong><br>  &#x5F97;&#x5230;Mixed_7e&#x5373;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#x7684;&#x8F93;&#x51FA;&#x540E;&#xFF1A;</p><ul><li>&#x63A5;&#x4E00;&#x4E2A;8&#xD7;8&#x5168;&#x5C40;&#x5E73;&#x5747;&#x6C60;&#x5316;&#xFF0C;padding&#x8BBE;&#x7F6E;&#x4E3A;VALID&#xFF0C;tensor&#x7684;&#x5C3A;&#x5BF8;&#x5C31;&#x53D8;&#x6210;&#x4E86;1&#xD7;1&#xD7;2048</li><li>&#x7136;&#x540E;&#x63A5;&#x4E00;&#x4E2A;Dropout&#x5C42;&#xFF0C;&#x8282;&#x70B9;&#x4FDD;&#x7559;&#x7387;&#x4E3A;dropout_keep_prob</li><li>&#x63A5;&#x7740;&#x8FDE;&#x63A5;&#x4E00;&#x4E2A;&#x8F93;&#x51FA;&#x901A;&#x9053;&#x4E3A;1000&#x7684;1&#xD7;1&#x5377;&#x79EF;&#xFF0C;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#x548C;&#x89C4;&#x8303;&#x5316;&#x51FD;&#x6570;&#x8BBE;&#x4E3A;&#x7A7A;</li><li>&#x7136;&#x540E;&#x7528;<code>tf.squeeze</code>&#x53BB;&#x9664;&#x8F93;&#x51FA;tensor&#x4E2D;&#x7EF4;&#x6570;&#x4E3A;1&#x7684;&#x7EF4;&#x5EA6;</li><li>&#x6700;&#x540E;&#x8FDE;&#x63A5;&#x4E00;&#x4E2A;Softmax&#x5BF9;&#x7ED3;&#x679C;&#x8FDB;&#x884C;&#x5206;&#x7C7B;&#x9884;&#x6D4B;&#xFF0C;&#x8F93;&#x51FA;&#x7684;&#x7ED3;&#x679C;&#x5B58;&#x50A8;&#x5230;end_points&#x4E2D;<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x6B63;&#x5E38;&#x5206;&#x7C7B;&#x9884;&#x6D4B;</span></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Logits&quot;</span>):</span><br><span class="line">    net = slim.avg_pool2d(net,kernel_size=[<span class="number">8</span>,<span class="number">8</span>],padding=<span class="string">&quot;VALID&quot;</span>,</span><br><span class="line">                            scope=<span class="string">&quot;Avgpool_1a_8x8&quot;</span>)</span><br><span class="line">    net = slim.dropout(net,keep_prob=droupot_keep_prob,scope=<span class="string">&quot;Dropout_1b&quot;</span>)</span><br><span class="line">    end_points[<span class="string">&quot;Logits&quot;</span>] = net</span><br><span class="line"></span><br><span class="line">    logits = slim.conv2d(net,num_outputs=num_classes,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],activation_fn=<span class="literal">None</span>,</span><br><span class="line">                            normalizer_fn=<span class="literal">None</span>,scope=<span class="string">&quot;Conv2d_1c_1x1&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> spatial_squeeze:</span><br><span class="line">        logits = tf.squeeze(logits,axis=[<span class="number">1</span>,<span class="number">2</span>],name=<span class="string">&quot;SpatialSqueeze&quot;</span>)</span><br><span class="line"></span><br><span class="line">end_points[<span class="string">&quot;Logits&quot;</span>] = logits</span><br><span class="line">end_points[<span class="string">&quot;Predictions&quot;</span>] = prediction_fn(logits,scope=<span class="string">&quot;Predictions&quot;</span>)</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>inception_v3&#x51FD;&#x6570;&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#x6C47;&#x603B;&#xFF1A;<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inception_v3</span><span class="params">(inputs,num_classes=<span class="number">1000</span>,is_training=True,droupot_keep_prob = <span class="number">0.8</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">                 prediction_fn = slim.softmax,spatial_squeeze = True,reuse = None,scope=<span class="string">&quot;InceptionV3&quot;</span>)</span>:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    InceptionV3&#x6574;&#x4E2A;&#x7F51;&#x7EDC;&#x7684;&#x6784;&#x5EFA;</span></span><br><span class="line"><span class="string">    param :</span></span><br><span class="line"><span class="string">    inputs -- &#x8F93;&#x5165;tensor</span></span><br><span class="line"><span class="string">    num_classes -- &#x6700;&#x540E;&#x5206;&#x7C7B;&#x6570;&#x76EE;</span></span><br><span class="line"><span class="string">    is_training -- &#x662F;&#x5426;&#x662F;&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B;</span></span><br><span class="line"><span class="string">    droupot_keep_prob -- dropout&#x4FDD;&#x7559;&#x8282;&#x70B9;&#x6BD4;&#x4F8B;</span></span><br><span class="line"><span class="string">    prediction_fn -- &#x6700;&#x540E;&#x5206;&#x7C7B;&#x51FD;&#x6570;&#xFF0C;&#x9ED8;&#x8BA4;&#x4E3A;softmax</span></span><br><span class="line"><span class="string">    patial_squeeze -- &#x662F;&#x5426;&#x5BF9;&#x8F93;&#x51FA;&#x53BB;&#x9664;&#x7EF4;&#x5EA6;&#x4E3A;1&#x7684;&#x7EF4;&#x5EA6;</span></span><br><span class="line"><span class="string">    reuse -- &#x662F;&#x5426;&#x5BF9;&#x7F51;&#x7EDC;&#x548C;Variable&#x91CD;&#x590D;&#x4F7F;&#x7528;</span></span><br><span class="line"><span class="string">    scope -- &#x51FD;&#x6570;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;&#x73AF;&#x5883;</span></span><br><span class="line"><span class="string">    return:</span></span><br><span class="line"><span class="string">    logits -- &#x6700;&#x540E;&#x8F93;&#x51FA;&#x7ED3;&#x679C;</span></span><br><span class="line"><span class="string">    end_points -- &#x5305;&#x542B;&#x8F85;&#x52A9;&#x8282;&#x70B9;&#x7684;&#x91CD;&#x8981;&#x8282;&#x70B9;&#x5B57;&#x5178;&#x8868;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">with</span> tf.variable_scope(scope,<span class="string">&quot;InceptionV3&quot;</span>,[inputs,num_classes],</span><br><span class="line">                           reuse=reuse) <span class="keyword">as</span> scope:</span><br><span class="line">        <span class="keyword">with</span> slim.arg_scope([slim.batch_norm,slim.dropout],</span><br><span class="line">                            is_training = is_training):</span><br><span class="line">            net,end_points = inception_v3_base(inputs,scope=scope)     <span class="comment">#&#x524D;&#x9762;&#x5B9A;&#x4E49;&#x7684;&#x6574;&#x4E2A;&#x5377;&#x79EF;&#x7F51;&#x7EDC;&#x90E8;&#x5206;</span></span><br><span class="line"> </span><br><span class="line">            <span class="comment">#&#x8F85;&#x52A9;&#x5206;&#x7C7B;&#x8282;&#x70B9;&#x90E8;&#x5206;</span></span><br><span class="line">            <span class="keyword">with</span> slim.arg_scope([slim.conv2d,slim.max_pool2d,slim.avg_pool2d],</span><br><span class="line">                                stride = <span class="number">1</span>,padding = <span class="string">&quot;SAME&quot;</span>):</span><br><span class="line">                <span class="comment">#&#x901A;&#x8FC7;end_points&#x53D6;&#x5230;Mixed_6e</span></span><br><span class="line">                aux_logits = end_points[<span class="string">&quot;Mixed_6e&quot;</span>]</span><br><span class="line">                <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;AuxLogits&quot;</span>):</span><br><span class="line">                    aux_logits = slim.avg_pool2d(aux_logits,kernel_size=[<span class="number">5</span>,<span class="number">5</span>],stride=<span class="number">3</span>,</span><br><span class="line">                                                 padding=<span class="string">&quot;VALID&quot;</span>,scope=<span class="string">&quot;Avgpool_1a_5x5&quot;</span>)</span><br><span class="line">                    aux_logits = slim.conv2d(aux_logits,num_outputs=<span class="number">128</span>,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],scope=<span class="string">&quot;Conv2d_1b_1x1&quot;</span>)</span><br><span class="line">                    aux_logits = slim.conv2d(aux_logits,num_outputs=<span class="number">768</span>,kernel_size=[<span class="number">5</span>,<span class="number">5</span>],</span><br><span class="line">                                             weights_initializer=trunc_normal(<span class="number">0.01</span>),padding=<span class="string">&quot;VALID&quot;</span>,</span><br><span class="line">                                             scope=<span class="string">&quot;Conv2d_2a_5x5&quot;</span>)</span><br><span class="line">                    aux_logits = slim.conv2d(aux_logits,num_outputs=num_classes,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">                                             activation_fn=<span class="literal">None</span>,normalizer_fn=<span class="literal">None</span>,</span><br><span class="line">                                             weights_initializer=trunc_normal(<span class="number">0.001</span>),scope=<span class="string">&quot;Conv2d_1b_1x1&quot;</span>)</span><br><span class="line">                    <span class="comment">#&#x6D88;&#x9664;tensor&#x4E2D;&#x524D;&#x4E24;&#x4E2A;&#x7EF4;&#x5EA6;&#x4E3A;1&#x7684;&#x7EF4;&#x5EA6;</span></span><br><span class="line">                    <span class="keyword">if</span> spatial_squeeze:</span><br><span class="line">                        aux_logits = tf.squeeze(aux_logits,axis=[<span class="number">1</span>,<span class="number">2</span>],name=<span class="string">&quot;SpatialSqueeze&quot;</span>)</span><br><span class="line"> </span><br><span class="line">                    end_points[<span class="string">&quot;AuxLogits&quot;</span>] = aux_logits    <span class="comment">#&#x5C06;&#x8F85;&#x52A9;&#x8282;&#x70B9;&#x5206;&#x7C7B;&#x7684;&#x8F93;&#x51FA;aux_logits&#x5B58;&#x5230;end_points&#x4E2D;</span></span><br><span class="line"> </span><br><span class="line">                <span class="comment">#&#x6B63;&#x5E38;&#x5206;&#x7C7B;&#x9884;&#x6D4B;</span></span><br><span class="line">                <span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;Logits&quot;</span>):</span><br><span class="line">                    net = slim.avg_pool2d(net,kernel_size=[<span class="number">8</span>,<span class="number">8</span>],padding=<span class="string">&quot;VALID&quot;</span>,</span><br><span class="line">                                          scope=<span class="string">&quot;Avgpool_1a_8x8&quot;</span>)</span><br><span class="line">                    net = slim.dropout(net,keep_prob=droupot_keep_prob,scope=<span class="string">&quot;Dropout_1b&quot;</span>)</span><br><span class="line">                    end_points[<span class="string">&quot;Logits&quot;</span>] = net</span><br><span class="line"> </span><br><span class="line">                    logits = slim.conv2d(net,num_outputs=num_classes,kernel_size=[<span class="number">1</span>,<span class="number">1</span>],activation_fn=<span class="literal">None</span>,</span><br><span class="line">                                         normalizer_fn=<span class="literal">None</span>,scope=<span class="string">&quot;Conv2d_1c_1x1&quot;</span>)</span><br><span class="line">                    <span class="keyword">if</span> spatial_squeeze:</span><br><span class="line">                        logits = tf.squeeze(logits,axis=[<span class="number">1</span>,<span class="number">2</span>],name=<span class="string">&quot;SpatialSqueeze&quot;</span>)</span><br><span class="line">                </span><br><span class="line">                end_points[<span class="string">&quot;Logits&quot;</span>] = logits</span><br><span class="line">                end_points[<span class="string">&quot;Predictions&quot;</span>] = prediction_fn(logits,scope=<span class="string">&quot;Predictions&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> logits,end_points</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Inception-V3&amp;#x7ED3;&amp;#x6784;&quot;&gt;&lt;a href=&quot;#Inception-V3&amp;#x7ED3;&amp;#x6784;&quot; class=&quot;headerlink&quot; title=&quot;Inception V3&amp;#x7ED3;&amp;#x6784;&quot;&gt;&lt;/a&gt;Inception V3&amp;#x7ED3;&amp;#x6784;&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2019/08/12/tf&amp;#x5B66;&amp;#x4E60;&amp;#x7B14;&amp;#x8BB0;10/1.png&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="深度学习" scheme="http://zhengyujie.cn/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Python" scheme="http://zhengyujie.cn/categories/Python/"/>
    
    
      <category term="卷积网络" scheme="http://zhengyujie.cn/tags/%E5%8D%B7%E7%A7%AF%E7%BD%91%E7%BB%9C/"/>
    
      <category term="TensorFlow" scheme="http://zhengyujie.cn/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>论文阅读笔记10：FCOS:Fully Convolutional One-Stage Object Detection</title>
    <link href="http://zhengyujie.cn/2019/08/09/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B010/"/>
    <id>http://zhengyujie.cn/2019/08/09/论文阅读笔记10/</id>
    <published>2019-08-09T02:21:15.000Z</published>
    <updated>2019-08-16T07:08:49.527Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>&#x8BBA;&#x6587;&#x5730;&#x5740;&#xFF1A;<a href="https://arxiv.org/pdf/1904.01355.pdf" target="_blank" rel="noopener">https://arxiv.org/pdf/1904.01355.pdf</a><br>&#x4EE3;&#x7801;&#x5730;&#x5740;&#xFF1A;<a href="https://github.com/tianzhi0549/FCOS" target="_blank" rel="noopener">https://github.com/tianzhi0549/FCOS</a></p></blockquote><h1 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h1><p>&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x79CD;&#x5168;&#x5377;&#x79EF;&#x7684; one-stage &#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x5668;&#xFF08;FCOS, Fully Convolutional One Stage&#xFF09;, &#x5B83;&#x4EE5;&#x5BF9;&#x6BCF;&#x4E2A;&#x50CF;&#x7D20;&#x8FDB;&#x884C;&#x9884;&#x6D4B;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x89E3;&#x51B3;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x95EE;&#x9898;&#xFF0C;&#x7C7B;&#x4F3C;&#x4E8E;&#x8BED;&#x4E49;&#x5206;&#x5272;&#x3002;&#x51E0;&#x4E4E;&#x6240;&#x6709;&#x7684; SOTA &#x7269;&#x4F53;&#x68C0;&#x6D4B;&#x5668;&#xFF0C;&#x5982; RetinaNet&#xFF0C;SSD&#xFF0C;YOLOv3 &#x548C; Faster R-CNN &#x90FD;&#x4F9D;&#x8D56;&#x4E8E;&#x9884;&#x5B9A;&#x4E49;&#x7684; anchor box&#x3002;&#x76F8;&#x6BD4;&#x4E4B;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x7684; FCOS &#x4E0D;&#x9700;&#x8981; anchor box&#xFF0C;&#x540C;&#x65F6;&#x4E5F;&#x4E0D;&#x9700;&#x8981; proposals (&#x5373; One-Stage)&#x3002;&#x901A;&#x8FC7;&#x6D88;&#x9664;&#x5BF9;&#x9884;&#x5B9A;&#x4E49; anchor &#x7684;&#x4F9D;&#x8D56;&#xFF0C;FCOS &#x5B8C;&#x5168;&#x907F;&#x514D;&#x4E86;&#x4E0E; anchor box &#x76F8;&#x5173;&#x7684;&#x590D;&#x6742;&#x8BA1;&#x7B97;&#xFF0C;&#x4F8B;&#x5982;&#x5728;&#x8BAD;&#x7EC3;&#x671F;&#x95F4;&#x8BA1;&#x7B97; overlapping &#x5E76;&#x663E;&#x7740;&#x51CF;&#x5C11; training memory footprint&#x3002;&#x66F4;&#x91CD;&#x8981;&#x7684;&#x662F;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x907F;&#x514D;&#x4E86;&#x4E0E; anchor &#x76F8;&#x5173;&#x7684;&#x6240;&#x6709;&#x8D85;&#x53C2;&#x6570;&#xFF0C;&#x8FD9;&#x4E9B;&#x53C2;&#x6570;&#x901A;&#x5E38;&#x5BF9;&#x6700;&#x7EC8;&#x68C0;&#x6D4B;&#x6027;&#x80FD;&#x975E;&#x5E38;&#x654F;&#x611F;&#x3002;&#x51ED;&#x501F;&#x552F;&#x4E00;&#x7684;&#x540E;&#x5904;&#x7406;&#x64CD;&#x4F5C;&#x975E;&#x6700;&#x5927;&#x6291;&#x5236;&#xFF08;NMS&#xFF09;&#xFF0C;&#x6211;&#x4EEC;&#x7684; FCOS &#x4F18;&#x4E8E;&#x4E4B;&#x524D;&#x7684; anchor-based one-stage detectors&#xFF0C;&#x5E76;&#x4E14;&#x7ED3;&#x6784;&#x66F4;&#x7B80;&#x5355;&#x3002;&#x6211;&#x4EEC;&#x9996;&#x6B21;&#x5C55;&#x793A;&#x4E86;&#x4E00;&#x79CD;&#x66F4;&#x52A0;&#x7B80;&#x5355;&#x7075;&#x6D3B;&#x7684;&#x68C0;&#x6D4B;&#x6846;&#x67B6;&#xFF0C;&#x53EF;&#x4EE5;&#x63D0;&#x9AD8;&#x68C0;&#x6D4B;&#x7CBE;&#x5EA6;&#x3002;&#x6211;&#x4EEC;&#x5E0C;&#x671B; FCOS &#x6846;&#x67B6;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x8BB8;&#x591A;&#x5176;&#x4ED6;&#x5B9E;&#x4F8B;&#x7EA7;&#x4EFB;&#x52A1;&#x7B80;&#x5355;&#x800C;&#x5F3A;&#x5927;&#x7684;&#x66FF;&#x4EE3;&#x65B9;&#x6848;&#x3002;</p><a id="more"></a><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>Anchor-based&#x68C0;&#x6D4B;&#x5668;&#x5B58;&#x5728;&#x7684;&#x7F3A;&#x70B9;&#xFF1A;</p><ul><li>&#x5982; Faster R-CNN &#x548C; Focal Loss &#x6240;&#x793A;&#xFF0C;&#x68C0;&#x6D4B;&#x6027;&#x80FD;&#x5BF9;&#x4E8E;&#x5C3A;&#x5BF8;&#xFF0C;&#x5BBD;&#x9AD8;&#x6BD4;&#x548C; anchor &#x6570;&#x91CF;&#x975E;&#x5E38;&#x654F;&#x611F;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x5728;RetinaNet &#x4E2D;&#xFF0C;&#x6839;&#x636E; COCO &#x7684; benchmark &#x4E0A;&#xFF0C;&#x4EC5;&#x4EC5;&#x6539;&#x53D8;&#x8FD9;&#x4E9B;&#x8D85;&#x53C2;&#x6570;&#x5C31;&#x4F1A;&#x5F71;&#x54CD;AP&#x7684;&#x6027;&#x80FD;&#x63D0;&#x5347;4&#xFF05;[13]&#x3002; &#x56E0;&#x6B64;&#xFF0C;&#x5BF9;&#x4E8E; anchor-based &#x68C0;&#x6D4B;&#x5668;&#x9700;&#x8981;&#x4ED4;&#x7EC6;&#x8C03;&#x6574;&#x8FD9;&#x4E9B;&#x8D85;&#x53C2;&#x6570;&#x3002;</li><li>&#x5373;&#x4F7F;&#x7ECF;&#x8FC7;&#x7CBE;&#x5FC3;&#x8BBE;&#x8BA1;&#xFF0C;&#x7531;&#x4E8E; anchor box &#x7684;&#x6BD4;&#x4F8B;&#x548C;&#x5BBD;&#x9AD8;&#x6BD4;&#x4FDD;&#x6301;&#x56FA;&#x5B9A;&#xFF0C;detectors &#x5728;&#x5904;&#x7406;&#x5177;&#x6709;&#x8F83;&#x5927;&#x5F62;&#x72B6;&#x53D8;&#x5316;&#x7684;&#x7269;&#x4F53;&#x96C6;&#x5408;&#x65F6;&#x4F1A;&#x9047;&#x5230;&#x56F0;&#x96BE;&#xFF0C;&#x7279;&#x522B;&#x662F;&#x5BF9;&#x4E8E;&#x5C0F;&#x7269;&#x4F53;&#x3002; &#x9884;&#x5B9A;&#x4E49;&#x7684; anchor box &#x4E5F;&#x59A8;&#x788D;&#x4E86;&#x63A2;&#x6D4B;&#x5668;&#x7684;&#x6CDB;&#x5316;&#x80FD;&#x529B;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4EEC;&#x9700;&#x8981;&#x5728;&#x5177;&#x6709;&#x4E0D;&#x540C;&#x7269;&#x4F53;&#x5C3A;&#x5BF8;&#x6216;&#x5BBD;&#x9AD8;&#x6BD4;&#x7684;&#x65B0;&#x63A2;&#x6D4B;&#x4EFB;&#x52A1;&#x4E0A;&#x8FDB;&#x884C;&#x91CD;&#x65B0;&#x8BBE;&#x5B9A;&#x3002;</li><li>&#x4E3A;&#x4E86;&#x5B9E;&#x73B0;&#x9AD8;&#x53EC;&#x56DE;&#x7387;&#xFF0C;anchor-based &#x68C0;&#x6D4B;&#x5668;&#x9700;&#x8981;&#x5C06; anchor box &#x5BC6;&#x96C6;&#x5730;&#x653E;&#x7F6E;&#x5728;&#x8F93;&#x5165;&#x56FE;&#x50CF;&#x4E0A;&#xFF08;&#x4F8B;&#x5982;&#xFF0C;&#x5728;&#x7279;&#x5F81;&#x91D1;&#x5B57;&#x5854;&#x7F51;&#x7EDC;(FPN)&#x4E2D;, &#x5BF9;&#x4E8E;&#x77ED;&#x8FB9;&#x50CF;&#x7D20;&#x4E3A; 800 &#x7684;&#x8F93;&#x5165;&#x56FE;&#x50CF;, &#x4F1A;&#x4EA7;&#x751F;&#x8D85;&#x8FC7; 180K &#x7684; anchor box&#xFF09;&#x3002; &#x5927;&#x591A;&#x6570;&#x8FD9;&#x4E9B; anchor box &#x5728;&#x8BAD;&#x7EC3;&#x671F;&#x95F4;&#x4F1A;&#x88AB;&#x6807;&#x8BB0;&#x4E3A; negative samples&#x3002; &#x8FC7;&#x591A;&#x7684; negative samples &#x52A0;&#x5267;&#x4E86; training &#x8FC7;&#x7A0B;&#x4E2D;&#x6B63;&#x8D1F;&#x6837;&#x672C;&#x4E4B;&#x95F4;&#x7684;&#x4E0D;&#x5E73;&#x8861;&#x6027;&#x3002;</li><li>&#x5F53;&#x5728;&#x8BAD;&#x7EC3;&#x671F;&#x95F4;&#x8BA1;&#x7B97;&#x6240;&#x6709; anchor box &#x548C; GT box &#x4E4B;&#x95F4;&#x7684; IOU &#x65F6;&#xFF0C;&#x8FC7;&#x591A;&#x6570;&#x91CF;&#x7684; anchor box &#x4E5F;&#x663E;&#x8457;&#x589E;&#x52A0;&#x4E86;&#x8BA1;&#x7B97;&#x91CF;&#x548C;&#x5B58;&#x50A8;&#x5668;&#x5360;&#x7528;&#x91CF;&#x3002;</li></ul><p>&#x57FA;&#x4E8E; anchor-based &#x7684;&#x68C0;&#x6D4B;&#x65B9;&#x6CD5;&#x504F;&#x79BB;&#x5168;&#x5377;&#x79EF;&#x9884;&#x6D4B;&#x7684;&#x6846;&#x67B6;&#xFF0C;&#x800C;&#x672C;&#x6587;&#x5C1D;&#x8BD5;&#x7C7B;&#x4F3C;&#x4E8E;&#x8BED;&#x4E49;&#x5206;&#x5272;&#x7684;&#x50CF;&#x7D20;&#x7EA7;&#x9884;&#x6D4B;&#x5E94;&#x7528;&#x81F3;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x4EFB;&#x52A1;&#x4E2D;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#xFF0C;&#x8BED;&#x4E49;&#x5206;&#x5272;&#xFF0C;&#x5173;&#x952E;&#x70B9;&#x68C0;&#x6D4B;&#x7B49;&#x51E0;&#x79CD;&#x4EFB;&#x52A1;&#x53EF;&#x4EE5;&#x7CC5;&#x5408;&#x5230;&#x4E00;&#x4E2A;&#x6A21;&#x578B;&#x4E2D;&#x3002;&#x4E00;&#x4E9B;&#x5DE5;&#x4F5C;&#x5982; Dense-Box&#xFF0C;UnitBox &#x66FE;&#x5229;&#x7528;&#x57FA;&#x4E8E; FCN-based &#x7684;&#x6846;&#x67B6;&#x8FDB;&#x884C;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x3002;&#x4F46;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x5728;&#x67D0;&#x4E00;&#x5C42;&#x7684; feature map &#x4E0A;&#x76F4;&#x63A5;&#x9884;&#x6D4B;4D&#x5750;&#x6807;&#x53CA;&#x7C7B;&#x522B;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#x5DE6;&#x4FA7;&#x6240;&#x793A;&#xFF0C;4D&#x5411;&#x91CF;&#x8868;&#x793A;&#x4E86;&#x8FB9;&#x6846;&#x7684;&#x8FB9;&#x8DDD;&#x79BB;&#x8BE5;&#x50CF;&#x7D20;&#x70B9;&#x7684;&#x504F;&#x79FB;&#x3002;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x4E0E;&#x8BED;&#x4E49;&#x5206;&#x5272;&#x7684;&#x5168;&#x5377;&#x79EF;&#x76F8;&#x7C7B;&#x4F3C;&#xFF0C;&#x4F46;&#x6BCF;&#x4E2A;&#x4F4D;&#x7F6E;&#x9700;&#x8981;&#x56DE;&#x5F52;&#x4E00;&#x4E2A;&#x8FDE;&#x7EED;&#x7684;4D&#x5411;&#x91CF;&#x3002;&#x4E3A;&#x4E86;&#x5904;&#x7406;&#x4E0D;&#x540C;&#x5927;&#x5C0F;&#x7684;&#x8FB9;&#x6846;&#xFF0C;DenseBox &#x5C06;&#x8BAD;&#x7EC3;&#x56FE;&#x7247;&#x8C03;&#x6574;&#x4E3A;&#x56FA;&#x5B9A;&#x5C3A;&#x5BF8;&#x3002;DenseBox &#x5FC5;&#x987B;&#x8981;&#x5728;&#x56FE;&#x50CF;&#x91D1;&#x5B57;&#x5854;&#x4E0A;&#x8FDB;&#x884C;&#x68C0;&#x6D4B;&#xFF0C;&#x8FDD;&#x53CD;&#x4E86;&#x5168;&#x5377;&#x79EF;&#x5BF9;&#x6240;&#x6709;&#x5377;&#x79EF;&#x53EA;&#x8BA1;&#x7B97;&#x4E00;&#x6B21;&#x7684;&#x601D;&#x60F3;&#x3002;&#x800C;&#x4E14;&#xFF0C;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x5927;&#x591A;&#x5E94;&#x7528;&#x5728;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x7684;&#x7279;&#x6B8A;&#x573A;&#x666F;&#x4E2D;&#xFF0C;&#x6BD4;&#x5982;&#x6587;&#x672C;&#x68C0;&#x6D4B;&#x6216;&#x8005;&#x4EBA;&#x8138;&#x68C0;&#x6D4B;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#x53F3;&#x4FA7;&#x6240;&#x793A;&#xFF0C;&#x8F83;&#x591A;&#x7684;&#x91CD;&#x53E0;&#x6846;&#x9020;&#x6210;&#x4E86;&#x6A21;&#x7CCA;&#xFF0C;&#x65E0;&#x6CD5;&#x786E;&#x5B9A;&#x91CD;&#x53E0;&#x533A;&#x57DF;&#x5E94;&#x8BE5;&#x5BF9;&#x54EA;&#x4E2A;&#x6846;&#x8FDB;&#x884C;&#x56DE;&#x5F52;&#x3002;&#x672C;&#x6587;&#x8BC1;&#x660E;&#x901A;&#x8FC7;FPN&#x7ED3;&#x6784;&#x53EF;&#x4EE5;&#x6D88;&#x9664;&#x8FD9;&#x79CD;&#x6A21;&#x7CCA;&#x3002;&#x672C;&#x6587;&#x53D1;&#x73B0;&#x5728;&#x8DDD;&#x79BB;&#x76EE;&#x6807;&#x4E2D;&#x5FC3;&#x8F83;&#x8FDC;&#x7684;&#x4F4D;&#x7F6E;&#x4F1A;&#x9884;&#x6D4B;&#x4E00;&#x5B9A;&#x6570;&#x91CF;&#x4F4E;&#x8D28;&#x91CF;&#x7684;&#x8FB9;&#x754C;&#x6846;&#x3002;&#x4E3A;&#x4E86;&#x6253;&#x538B;&#x8FD9;&#x4E9B;&#x8FB9;&#x6846;&#xFF0C;&#x672C;&#x6587;&#x8BBE;&#x8BA1;&#x4E86;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5206;&#x652F;&#x201D;center-ness&#x201D;&#xFF0C;&#x7528;&#x4E8E;&#x9884;&#x6D4B;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x4E0E;&#x5BF9;&#x5E94;&#x8FB9;&#x6846;&#x4E2D;&#x5FC3;&#x7684;&#x504F;&#x5DEE;&#x3002;&#x6240;&#x5F97;&#x7684;&#x5206;&#x6570;&#x7528;&#x4E8E; down-weight &#x4F4E;&#x8D28;&#x91CF;&#x7684;&#x68C0;&#x6D4B;&#x6846;&#xFF0C;&#x6700;&#x540E;&#x901A;&#x8FC7;NMS&#x5C06;&#x68C0;&#x6D4B;&#x7ED3;&#x679C;&#x8FDB;&#x884C;&#x878D;&#x5408;&#x3002;</p><p><img src="/2019/08/09/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;10/1.png" alt></p><p>&#x8FD9;&#x4E2A;&#x65B0;&#x7684;&#x68C0;&#x6D4B;&#x6846;&#x67B6;&#x62E5;&#x6709;&#x4EE5;&#x4E0B;&#x4F18;&#x70B9;&#xFF1A;</p><ul><li>&#x68C0;&#x6D4B;&#x4EFB;&#x52A1;&#x73B0;&#x5728;&#x4E0E;&#x8BB8;&#x591A;&#x5176;&#x4ED6; FCN &#x53EF;&#x89E3;&#x51B3;&#x7684;&#x4EFB;&#x52A1;&#xFF08;&#x4F8B;&#x5982;&#x8BED;&#x4E49;&#x5206;&#x5272;&#xFF09;&#x76F8;&#x7EDF;&#x4E00;&#xFF0C;&#x4ECE;&#x800C;&#x53EF;&#x4EE5;&#x66F4;&#x8F7B;&#x677E;&#x5730;&#x91CD;&#x590D;&#x4F7F;&#x7528;&#x8FD9;&#x4E9B;&#x4EFB;&#x52A1;&#x4E2D;&#x7684;&#x60F3;&#x6CD5;&#x3002;</li><li>&#x68C0;&#x6D4B;&#x53D8;&#x4E3A; proposal free &#x548C; anchor free&#xFF0C;&#x8FD9;&#x663E;&#x8457;&#x51CF;&#x5C11;&#x4E86;&#x8D85;&#x53C2;&#x6570;&#x7684;&#x6570;&#x91CF;&#x3002; &#x8D85;&#x53C2;&#x6570;&#x901A;&#x5E38;&#x9700;&#x8981;&#x542F;&#x53D1;&#x5F0F;&#x8C03;&#x6574;&#xFF0C;&#x5E76;&#x4E14;&#x6D89;&#x53CA;&#x8BB8;&#x591A;&#x6280;&#x5DE7;&#x624D;&#x80FD;&#x83B7;&#x5F97;&#x826F;&#x597D;&#x7684;&#x6027;&#x80FD;&#x3002; &#x800C;&#x6211;&#x4EEC;&#x7684;&#x65B0;&#x68C0;&#x6D4B;&#x6846;&#x67B6;&#x4F7F;&#x68C0;&#x6D4B;&#x5668;&#xFF0C;&#x7279;&#x522B;&#x662F;&#x4F7F;&#x5B83;&#x7684; training &#x9636;&#x6BB5;&#x53D8;&#x5F97;&#x76F8;&#x5F53;&#x7B80;&#x5355;&#x3002; &#x6B64;&#x5916;&#xFF0C;&#x901A;&#x8FC7;&#x6D88;&#x9664; anchor box&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x65B0;&#x63A2;&#x6D4B;&#x5668;&#x5B8C;&#x5168;&#x907F;&#x514D;&#x4E86;&#x590D;&#x6742;&#x7684; IOU &#x8BA1;&#x7B97;&#x4EE5;&#x53CA;&#x8BAD;&#x7EC3;&#x671F;&#x95F4; anchor box &#x548C; GT box &#x4E4B;&#x95F4;&#x7684;&#x5339;&#x914D;&#xFF0C;&#x5E76;&#x5C06;&#x603B;&#x7684;&#x8BAD;&#x7EC3;&#x5185;&#x5B58;&#x5360;&#x7528;(training memory footprint)&#x51CF;&#x5C11;&#x4E86;2&#x500D;&#x5DE6;&#x53F3;&#x3002;</li><li>&#x6211;&#x4EEC;&#x5728; One-Stage Detectors &#x4E2D;&#x5B9E;&#x73B0;&#x4E86; SOTA &#x7684;&#x7ED3;&#x679C;&#x3002; &#x6211;&#x4EEC;&#x7684;&#x5B9E;&#x9A8C;&#x8FD8;&#x8868;&#x660E;&#xFF0C;&#x672C;&#x6587;&#x6240;&#x63D0;&#x51FA;&#x7684; FCOS &#x53EF;&#x4EE5;&#x7528;&#x4F5C; Two-Stage Detectors &#x4E2D;&#x7684; RPN&#xFF0C;&#x5E76;&#x4E14;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x6BD4;&#x57FA;&#x4E8E; anchor &#x7684; RPN &#x66F4;&#x597D;&#x7684;&#x6027;&#x80FD;&#x3002; &#x9274;&#x4E8E;&#x66F4;&#x7B80;&#x5355;&#x7684; anchor free Detectors &#x5177;&#x6709;&#x66F4;&#x597D;&#x7684;&#x6027;&#x80FD;&#xFF0C;&#x6211;&#x4EEC;&#x9F13;&#x52B1;&#x5927;&#x5BB6;&#x91CD;&#x65B0;&#x8003;&#x8651;&#x7269;&#x4F53;&#x68C0;&#x6D4B;&#x4E2D; anchor &#x7684;&#x5FC5;&#x8981;&#x6027;&#xFF0C;&#x867D;&#x7136;&#x76EE;&#x524D;&#x8FD9;&#x88AB;&#x8BA4;&#x4E3A;&#x662F;&#x68C0;&#x6D4B;&#x4EFB;&#x52A1;&#x7684;&#x4E8B;&#x5B9E;&#x6807;&#x51C6;(defacto standard for detection)&#x3002;</li><li>&#x6211;&#x4EEC;&#x6240;&#x63D0;&#x51FA;&#x7684; detector &#x53EA;&#x9700;&#x505A;&#x5F88;&#x5C0F;&#x7684;&#x4FEE;&#x6539;&#x5C31;&#x53EF;&#x4EE5;&#x7ACB;&#x5373;&#x6269;&#x5C55;&#x5230;&#x5176;&#x4ED6;&#x89C6;&#x89C9;&#x4EFB;&#x52A1;&#xFF0C;&#x5305;&#x62EC;&#x5B9E;&#x4F8B;&#x5206;&#x5272;&#x548C;&#x5173;&#x952E;&#x70B9;&#x68C0;&#x6D4B;&#x3002; &#x6211;&#x4EEC;&#x76F8;&#x4FE1;&#x8FD9;&#x79CD;&#x65B0;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x6210;&#x4E3A;&#x8BB8;&#x591A;&#x5B9E;&#x4F8B;&#x7EA7;&#x9884;&#x6D4B;&#x95EE;&#x9898;&#x7684;&#x65B0; baseline&#x3002;</li></ul><h1 id="Related-Work"><a href="#Related-Work" class="headerlink" title="Related Work"></a>Related Work</h1><ul><li><p><strong>Anchor-based Detectors</strong></p></li><li><p><strong>Anchor-free Detectors</strong></p></li></ul><h1 id="Our-Approach"><a href="#Our-Approach" class="headerlink" title="Our Approach"></a>Our Approach</h1><p>&#x5728;&#x672C;&#x8282;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x9996;&#x5148;&#x4EE5;&#x9010;&#x50CF;&#x7D20;&#x9884;&#x6D4B;&#x7684;&#x65B9;&#x5F0F;&#x91CD;&#x65B0;&#x6784;&#x9020;&#x76EE;&#x6807;&#x68C0;&#x6D4B;&#x4EFB;&#x52A1;&#x3002; &#x63A5;&#x4E0B;&#x6765;&#xFF0C;&#x6211;&#x4EEC;&#x5C55;&#x793A;&#x4E86;&#x6211;&#x4EEC;&#x5982;&#x4F55;&#x5229;&#x7528;&#x591A;&#x7EA7;&#x9884;&#x6D4B;(multi-level prediction)&#x6765;&#x6539;&#x5584;&#x53EC;&#x56DE;&#x7387;&#x5E76;&#x89E3;&#x51B3;&#x8BAD;&#x7EC3;&#x4E2D;&#x91CD;&#x53E0;&#x8FB9;&#x754C;&#x6846;&#x5BFC;&#x81F4;&#x7684;&#x6A21;&#x7CCA;&#x6027;&#x3002; &#x6700;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x5C55;&#x793A;&#x4E86;&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x7684; &#x201C;center-ness&#x201D; &#x5206;&#x652F;&#xFF0C;&#x5B83;&#x6709;&#x52A9;&#x4E8E;&#x6291;&#x5236;&#x4F4E;&#x8D28;&#x91CF;&#x7684;&#x68C0;&#x6D4B;&#x8FB9;&#x754C;&#x6846;&#x5E76;&#x5927;&#x5E45;&#x63D0;&#x9AD8;&#x6574;&#x4F53;&#x6027;&#x80FD;.</p><h2 id="Fully-Convolutional-One-Stage-Object-Detector"><a href="#Fully-Convolutional-One-Stage-Object-Detector" class="headerlink" title="Fully Convolutional One-Stage Object Detector"></a>Fully Convolutional One-Stage Object Detector</h2><p>&#x8BBE;$F_i \in R^{H&#xD7;W&#xD7;C}$&#x662F; backbone CNN &#x7B2C; $i$ &#x5C42;&#x7684; feature maps&#xFF0C;$s$ &#x4E3A;&#x8BE5;&#x5C42;&#x4E4B;&#x524D;&#x7684;&#x603B;&#x6B65;&#x957F;&#x3002;&#x8F93;&#x5165;&#x56FE;&#x7247;&#x7684;&#x771F;&#x5B9E;&#x6846;&#x5B9A;&#x4E49;&#x4E3A;$\lbrace B_i \rbrace$&#xFF0C;$B_i=(x_0^{(i)},y_0^{(i)},x_1^{(i)},y_1^{(i)},c^{(i)})\in R^4&#xD7;\lbrace1,2&#x2026;C\rbrace$&#x3002;&#x5176;&#x4E2D;$(x_0^{(i)},y_0^{(i)})$&#x548C;$(x_1^{(i)},y_1^{(i)})$&#x5206;&#x522B;&#x4E3A;&#x8FB9;&#x754C;&#x6846;&#x5DE6;&#x4E0A;&#x89D2;&#x70B9;&#x548C;&#x53F3;&#x4E0B;&#x89D2;&#x70B9;&#x7684;&#x5750;&#x6807;&#xFF0C;$c^{(i)}$&#x4E3A;&#x8FB9;&#x754C;&#x6846;&#x5185;&#x7684;object&#x7684;&#x7C7B;&#x522B;&#x3002;</p><p>&#x5BF9;&#x4E8E; feature maps $F_i$ &#x4E0A;&#x7684;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;$(x,y)$&#xFF0C;&#x6211;&#x4EEC;&#x90FD;&#x53EF;&#x4EE5;&#x5C06;&#x5176;&#x6620;&#x5C04;&#x56DE;&#x8F93;&#x5165;&#x56FE;&#x50CF;&#x7684;&#x5750;&#x6807;$(\lfloor\frac{s}{2}\rfloor+xs,\lfloor\frac{s}{2}\rfloor+ys)$&#xFF0C;&#x5B83;&#x5DEE;&#x4E0D;&#x591A;&#x521A;&#x597D;&#x4F4D;&#x4E8E;&#x4F4D;&#x7F6E;$(x,y)$&#x7684;&#x611F;&#x53D7;&#x91CE;&#x4E2D;&#x5FC3;&#x9644;&#x8FD1;&#x3002;&#x4E0E; anchor based detectors &#x5C06;&#x8F93;&#x5165;&#x56FE;&#x50CF;&#x4E0A;&#x7684;&#x4F4D;&#x7F6E;&#x89C6;&#x4E3A; anchor box &#x7684;&#x4E2D;&#x5FC3;&#x5E76;&#x5BF9;&#x8FD9;&#x4E9B; anchor box &#x7684;&#x76EE;&#x6807;&#x8FB9;&#x754C;&#x6846;&#x8FDB;&#x884C;&#x56DE;&#x5F52;&#x4E0D;&#x540C;&#xFF0C;&#x6211;&#x4EEC;&#x76F4;&#x63A5;&#x56DE;&#x5F52;&#x6BCF;&#x4E2A;&#x4F4D;&#x7F6E;&#x7684;&#x76EE;&#x6807;&#x8FB9;&#x754C;&#x6846;&#x3002; &#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x7684; Detector &#x76F4;&#x63A5;&#x5C06; location &#x89C6;&#x4E3A;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x800C;&#x4E0D;&#x662F;&#x5C06; anchor box &#x89C6;&#x4E3A;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#xFF0C;&#x8FD9;&#x4E0E;&#x7528;&#x4E8E;&#x8BED;&#x4E49;&#x5206;&#x5272;&#x7684;FCN&#x76F8;&#x540C;&#x3002;</p><p>&#x5177;&#x4F53;&#x800C;&#x8A00;&#xFF0C;&#x5982;&#x679C;&#x4F4D;&#x7F6E;$(x,y)$&#x843D;&#x5165;&#x5230;&#x4EFB;&#x4F55; GT Box &#x5185;&#x90E8;, &#x90A3;&#x4E48;&#x4E45;&#x5C06;&#x5176;&#x89C6;&#x4E3A;&#x6B63;&#x6837;&#x672C;, &#x5E76;&#x4E14;&#x8BE5;&#x4F4D;&#x7F6E;&#x7684;&#x7C7B;&#x6807;&#x7B7E;$c^\star$&#x5C31;&#x662F;$B_i$&#x7684;&#x7C7B;&#x6807;&#x7B7E;&#xFF0C;&#x5426;&#x5219;&#x5B83;&#x5C31;&#x662F;&#x8D1F;&#x6837;&#x672C;&#x5E76;&#x4E14;$c^\star=0$&#xFF08;&#x80CC;&#x666F;&#x7C7B;&#xFF09;&#x3002;&#x9664;&#x4E86;&#x7528;&#x4E8E;&#x5206;&#x7C7B;&#x7684;&#x6807;&#x7B7E;&#x4E4B;&#x5916;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x6709;&#x4E00;&#x4E2A; 4D &#x7684;&#x5B9E;&#x6570;&#x5411;&#x91CF;$t^\star=(l^\star,t^\star,r^\star,b^\star)$, &#x8BE5;&#x5411;&#x91CF;&#x662F;&#x6BCF;&#x4E2A;&#x6837;&#x672C;&#x7684;&#x56DE;&#x5F52;&#x76EE;&#x6807;&#x3002;&#x8FD9;&#x91CC;$l^\star,t^\star,r^\star,b^\star$&#x662F;&#x4ECE; location &#x5230; bbox &#x56DB;&#x6761;&#x8FB9;&#x7684;&#x8DDD;&#x79BB;&#xFF0C;&#x5982;&#x56FE;1&#xFF08;&#x5DE6;&#xFF09;&#x6240;&#x793A;&#x3002;&#x5982;&#x679C;&#x67D0;&#x4E2A;&#x4F4D;&#x7F6E;&#x5C5E;&#x4E8E;&#x591A;&#x4E2A;&#x8FB9;&#x754C;&#x6846;&#xFF0C;&#x5219;&#x4F1A;&#x5C06;&#x5176;&#x89C6;&#x4E3A;&#x6A21;&#x7CCA;&#x6837;&#x672C;&#x3002;&#x73B0;&#x5728;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9009;&#x62E9;&#x5177;&#x6709;&#x6700;&#x5C0F;&#x9762;&#x79EF;&#x7684;&#x8FB9;&#x754C;&#x6846;&#x4F5C;&#x4E3A;&#x5176;&#x56DE;&#x5F52;&#x76EE;&#x6807;(&#x6700;&#x7B80;&#x5355;&#x7684;&#x7B56;&#x7565;)&#x3002; &#x5728;&#x4E0B;&#x4E00;&#x8282;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5C06; &#x5C55;&#x793A;&#x901A;&#x8FC7;&#x591A;&#x7EA7;&#x9884;&#x6D4B;&#xFF0C;&#x53EF;&#x4EE5;&#x663E;&#x8457;&#x51CF;&#x5C11;&#x6A21;&#x7CCA;&#x6837;&#x672C;&#x7684;&#x6570;&#x91CF;&#x3002; &#x5F62;&#x5F0F;&#x4E0A;&#xFF0C;&#x5982;&#x679C;&#x4F4D;&#x7F6E;$(x,y)$&#x4E0E;&#x8FB9;&#x754C;&#x6846;$B_i$&#x76F8;&#x5173;&#x8054;&#xFF0C;&#x5219;&#x8BE5;&#x4F4D;&#x7F6E;&#x7684;&#x8BAD;&#x7EC3;&#x56DE;&#x5F52;&#x76EE;&#x6807;&#x53EF;&#x4EE5;&#x8868;&#x793A;&#x4E3A;:</p><script type="math/tex; mode=display">\left \{  \begin{array}{lr}    l^\star=x-x_0^{(i)}, & t^\star=y-Y_0^{(i)} \\    r^\star=x_1^{(i)}-x, & b^\star=y_1^{(i)}-y  \end{array}\right.</script><p>&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;FCOS &#x53EF;&#x4EE5;&#x5229;&#x7528;&#x5C3D;&#x53EF;&#x80FD;&#x591A;&#x7684;&#x524D;&#x666F;&#x6837;&#x672C;&#x6765;&#x8BAD;&#x7EC3;&#x56DE;&#x5F52;&#x91CF;&#x3002;(GT box &#x5185;&#x7684;&#x6BCF;&#x4E2A;&#x50CF;&#x7D20;&#x70B9;&#x90FD;&#x662F;&#x6B63;&#x6837;&#x672C;) &#x5B83;&#x4E0E;&#x57FA;&#x4E8E; anchor &#x7684;&#x63A2;&#x6D4B;&#x5668;&#x4E0D;&#x540C;&#xFF0C;anchor-based detectors &#x4EC5;&#x4EC5;&#x5C06;&#x4E0E; GT box &#x5177;&#x6709;&#x8DB3;&#x591F; IOU &#x7684;anchor box &#x4F5C;&#x4E3A;&#x6B63;&#x6837;&#x672C;&#x3002;&#x6211;&#x4EEC;&#x8BA4;&#x4E3A;&#xFF0C;&#x8FD9;&#x53EF;&#x80FD;&#x662F; FCOS &#x4F18;&#x4E8E; anchor-based &#x7684;&#x539F;&#x56E0;&#x4E4B;&#x4E00;&#x3002;</p><p><strong>Network Outputs</strong><br>&#x5BF9;&#x5E94;&#x4E8E; training targets&#xFF0C;&#x6211;&#x4EEC;&#x7F51;&#x7EDC;&#x7684;&#x6700;&#x540E;&#x4E00;&#x5C42;&#x4F1A;&#x9884;&#x6D4B;&#x7528;&#x4E8E;&#x5206;&#x7C7B;&#x7684; 80D &#x5411;&#x91CF;$\vec{p}$&#x548C; bounding box &#x5750;&#x6807; 4D &#x5411;&#x91CF;$\vec{t}=(l&#xFF0C;t&#xFF0C;r&#xFF0C;b)$&#x3002;&#x8DDF;&#x968F; R-CNN &#x7684;&#x505A;&#x6CD5;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x662F;&#x8BAD;&#x7EC3;&#x591A;&#x7C7B;&#x5206;&#x7C7B;&#x5668;&#xFF0C;&#x800C;&#x662F;&#x8BAD;&#x7EC3; C &#x4E2A;&#x4E8C;&#x5143;&#x5206;&#x7C7B;&#x5668;&#x3002;&#x4E0E; R-CNN &#x7C7B;&#x4F3C;&#xFF0C;&#x6211;&#x4EEC;&#x5728; backbone &#x7F51;&#x7EDC;&#x7684;&#x7279;&#x5F81;&#x56FE;&#x8C31;&#x4E4B;&#x540E;&#x5206;&#x522B;&#x4E3A;&#x5206;&#x7C7B;&#x548C;&#x56DE;&#x5F52;&#x5206;&#x652F;&#x6DFB;&#x52A0;&#x4E86; &#x56DB;&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x7531;&#x4E8E;&#x56DE;&#x5F52;&#x76EE;&#x6807;&#x603B;&#x662F;&#x6B63;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;$exp(x)$&#x5C06;&#x4EFB;&#x610F;&#x7684;&#x5B9E;&#x6570;&#x90FD;&#x6620;&#x5C04;&#x5230;&#x56DE;&#x5F52;&#x5206;&#x652F;&#x9876;&#x90E8;&#x7684;$(0,\infty)$&#x3002;&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;FCOS &#x7684;&#x7F51;&#x7EDC;&#x8F93;&#x51FA;&#x53D8;&#x91CF;&#x6BD4;&#x5E38;&#x7528;&#x7684; anchor based detectors &#x5C11; 9 &#x500D;&#xFF0C;&#x5176;&#x4E2D;&#x6BCF;&#x4E2A;&#x4F4D;&#x7F6E;&#x6709; 9 &#x4E2A; anchor boxes&#x3002;</p><p><strong>Loss Function</strong><br>&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x6211;&#x4EEC;&#x7684;&#x8BAD;&#x7EC3;&#x635F;&#x5931;&#x51FD;&#x6570;&#x5982;&#x4E0B;&#xFF1A;</p><script type="math/tex; mode=display">L(\lbrace p_{x,y}\rbrace,\lbrace t_{x,y}\rbrace)=\frac{1}{N_{pos}}\sum_{x,y}L_cls(p_{x,y},c_{x,y}^\star)+\frac{\lambda}{N_pos}\sum_{x,y}I_{\lbrace c_{x,y}^\star >0\rbrace}L_{reg}(t_{x,y},t_{x,y}^\star)</script><p>&#x5176;&#x4E2D;$L_{cls}$&#x4E3A; focal loss&#xFF0C;$L_{reg}$&#x4E3A; IOU loss&#x3002;$N_{pos}$&#x4E3A;&#x6B63;&#x6837;&#x672C;&#x6570;&#xFF0C;$\lambda$&#x5728;&#x672C;&#x6587;&#x4E2D;&#x4E3A;1&#x6765;&#x5E73;&#x8861;$L_{reg}$&#x7684;&#x6743;&#x91CD;&#x3002;&#x6C42;&#x548C;&#x662F;&#x901A;&#x8FC7;&#x5BF9;feature maps $F_i$ &#x4E0A;&#x7684;&#x6240;&#x6709;&#x70B9;&#x8FDB;&#x884C;&#x8BA1;&#x7B97;&#x5F97;&#x5230;&#x7684;&#x3002;$I_{\lbrace c_{x,y}^\star &gt;0\rbrace}$&#x662F;&#x4E00;&#x4E2A;indicator function&#xFF0C;&#x5F53;$c_i^\star&gt;0$&#x65F6;&#x4E3A;1&#xFF0C;&#x5426;&#x5219;&#x4E3A;0&#x3002;</p><p><strong>Inference</strong><br>FCOS &#x7684; Inference &#x5F88;&#x7B80;&#x5355;&#x3002;&#x7ED9;&#x5B9A;&#x8F93;&#x5165;&#x56FE;&#x50CF;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x5176;&#x653E;&#x5165;&#x7F51;&#x7EDC;&#x8FDB;&#x884C;&#x4E00;&#x6B21; forward &#x8BA1;&#x7B97;, &#x5E76;&#x83B7;&#x5F97; feature map $F_i$ &#x4E0A;&#x7684;&#x6BCF;&#x4E2A;&#x4F4D;&#x7F6E;&#x7684;&#x5206;&#x7C7B;&#x5206;&#x6570;$p_{x,y}$&#x548C;&#x56DE;&#x5F52;&#x9884;&#x6D4B;&#x503C;$t_{x,y}$&#x3002; &#x8DDF;&#x968F; R-CNN &#x7684;&#x8BBE;&#x5B9A;&#xFF0C;&#x6211;&#x4EEC;&#x9009;&#x62E9;$p_{x,y}&gt;0.0$&#x7684;&#x4F4D;&#x7F6E;&#x4F5C;&#x4E3A;&#x6B63;&#x6837;&#x672C;&#x5E76;&#x901A;&#x8FC7;&#x4E0A;&#x8FF0;&#x516C;&#x5F0F;&#x6765;&#x83B7;&#x5F97;&#x9884;&#x6D4B;&#x7684;&#x8FB9;&#x754C;&#x6846;&#x3002;</p><h2 id="Multi-level-Prediction-with-FPN-for-FCOS"><a href="#Multi-level-Prediction-with-FPN-for-FCOS" class="headerlink" title="Multi-level Prediction with FPN for FCOS"></a>Multi-level Prediction with FPN for FCOS</h2><p>&#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x6211;&#x4EEC;&#x5C55;&#x793A;&#x4E86;&#x5982;&#x4F55;&#x901A;&#x8FC7; FPN &#x7684;&#x591A;&#x7EA7;&#x9884;&#x6D4B;&#x6765;&#x89E3;&#x51B3;&#x6240;&#x63D0;&#x51FA;&#x7684; FCOS &#x5B58;&#x5728;&#x7684;&#x4E24;&#x4E2A;&#x53EF;&#x80FD;&#x95EE;&#x9898;&#x3002;</p><ol><li>CNN &#x4E2D;&#x6700;&#x540E;&#x7684; feature maps &#x7684;&#x5927;&#x6B65;&#x5E45;&#xFF08;&#x4F8B;&#x5982;&#xFF0C;16&#xFF09;&#x53EF;&#x80FD;&#x56DE;&#x5BFC;&#x81F4;&#x76F8;&#x5BF9;&#x8F83;&#x4F4E;&#x7684; best possible recall (BPR)&#x3002;&#x5BF9;&#x4E8E;&#x57FA;&#x4E8E; anchor &#x7684;&#x68C0;&#x6D4B;&#x5668;&#xFF0C;&#x7531;&#x4E8E;&#x5927;&#x6B65;&#x5E45;&#x5BFC;&#x81F4;&#x7684;&#x4F4E;&#x53EC;&#x56DE;&#x7387;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x964D;&#x4F4E; positive anchor boxes &#x6240;&#x9700;&#x7684; IOU &#x5206;&#x6570;&#x6765;&#x5728;&#x4E00;&#x5B9A;&#x7A0B;&#x5EA6;&#x4E0A;&#x5F97;&#x5230;&#x7F13;&#x89E3;&#x3002;&#x800C;&#x5BF9;&#x4E8E; FCOS&#xFF0C;&#x4E4D;&#x4E00;&#x770B;&#x53EF;&#x80FD;&#x8BA4;&#x4E3A;&#x5176; BPR &#x4F1A;&#x8FDC;&#x4F4E;&#x4E8E;&#x57FA;&#x4E8E; anchor &#x7684;&#x68C0;&#x6D4B;&#x5668;&#xFF0C;&#x56E0;&#x4E3A; &#x7F51;&#x7EDC;&#x65E0;&#x6CD5;&#x53EC;&#x56DE;&#x7531;&#x4E8E;&#x5927;&#x6B65;&#x5E45;&#x800C;&#x6700;&#x7EC8;&#x5728; feature map &#x4E0A;&#x6CA1;&#x6709;&#x4F4D;&#x7F6E;&#x7F16;&#x7801;&#x7684;&#x5BF9;&#x8C61;&#x3002;&#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x6211;&#x4EEC;&#x51ED;&#x7ECF;&#x9A8C;&#x8BC1;&#x660E;&#xFF0C;&#x5373;&#x4F7F;&#x6B65;&#x5E45;&#x5F88;&#x5927;&#xFF0C;&#x57FA;&#x4E8E; FCN &#x7684; FCOS &#x4ECD;&#x7136;&#x80FD;&#x591F;&#x4EA7;&#x751F;&#x826F;&#x597D;&#x7684;BPR&#xFF0C;&#x5B83;&#x751A;&#x81F3;&#x53EF;&#x4EE5;&#x6BD4;&#x5B98;&#x65B9;&#x5B9E;&#x73B0;&#x7684; Detectron &#x4E2D;&#x57FA;&#x4E8E; anchor &#x7684;&#x68C0;&#x6D4B;&#x5668; RetinaNet &#x7684; BPR &#x66F4;&#x597D;&#x3002;&#xFF08;&#x53C2;&#x89C1;&#x8868;1&#xFF09;&#x3002;&#x56E0;&#x6B64;&#xFF0C;BPR &#x5B9E;&#x9645;&#x4E0A;&#x4E0D;&#x662F; FCOS &#x65E0;&#x6CD5;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x5229;&#x7528;&#x591A;&#x7EA7; FPN &#x9884;&#x6D4B;&#xFF0C;&#x53EF;&#x4EE5;&#x8FDB;&#x4E00;&#x6B65;&#x6539;&#x8FDB; BPR &#x4EE5;&#x5339;&#x914D;&#x57FA;&#x4E8E; anchor &#x7684; RetinaNet &#x6700;&#x4F73;BPR&#x3002;</li><li>&#x4E0E; GT box &#x7684;&#x591A;&#x4E2A;&#x91CD;&#x53E0;&#x4F1A;&#x5BFC;&#x81F4;&#x5728;&#x8BAD;&#x7EC3;&#x671F;&#x95F4;&#x4EA7;&#x751F;&#x96BE;&#x4EE5;&#x7406;&#x89E3;&#x7684;&#x6A21;&#x7CCA;&#x6027;&#xFF0C;&#x5373;&#x54EA;&#x4E2A;&#x8FB9;&#x754C;&#x6846;&#x5E94;&#x8BE5;&#x5728;&#x91CD;&#x53E0;&#x4F4D;&#x7F6E;&#x8FDB;&#x884C;&#x56DE;&#x5F52;&#xFF1F;&#x8FD9;&#x79CD;&#x6A21;&#x7CCA;&#x6027;&#x5BFC;&#x81F4;&#x57FA;&#x4E8E; FCN &#x7684;&#x68C0;&#x6D4B;&#x5668;&#x7684;&#x6027;&#x80FD;&#x4E0B;&#x964D;&#x3002;&#x5728;&#x672C;&#x6587;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x8868;&#x660E;&#xFF0C;&#x4F7F;&#x7528;&#x591A;&#x7EA7;&#x9884;&#x6D4B;&#x53EF;&#x4EE5;&#x6781;&#x5927;&#x5730;&#x89E3;&#x51B3;&#x6A21;&#x7CCA;&#x6027;&#xFF0C;&#x5E76;&#x4E14;&#x4E0E;&#x57FA;&#x4E8E; anchor &#x7684;&#x68C0;&#x6D4B;&#x5668;&#x76F8;&#x6BD4;&#xFF0C;&#x57FA;&#x4E8E; FCN &#x7684;&#x68C0;&#x6D4B;&#x5668;&#x53EF;&#x4EE5;&#x83B7;&#x5F97;&#x76F8;&#x540C;&#x7684;&#xFF0C;&#x6709;&#x65F6;&#x751A;&#x81F3;&#x66F4;&#x597D;&#x7684;&#x6027;&#x80FD;&#x3002;</li></ol><p>&#x6211;&#x4EEC;&#x5728;&#x4E0D;&#x540C;&#x7EA7;&#x522B;&#x7684;&#x7279;&#x5F81;&#x56FE;&#x4E0A;&#x68C0;&#x6D4B;&#x5230;&#x4E0D;&#x540C;&#x5927;&#x5C0F;&#x7684;&#x5BF9;&#x8C61;&#x3002;&#x5177;&#x4F53;&#x6765;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x5B9A;&#x4E49;&#x4E3A; $\lbrace P_3,P_4,P_5,P_6,P_7\rbrace$ &#x7684;&#x4E94;&#x4E2A;&#x7EA7;&#x522B;&#x7684; feature map&#x3002;$P_3$&#xFF0C;$P_4$ &#x548C; $P_5$ &#x7531; backbone CNN &#x7684;&#x7279;&#x5F81;&#x56FE; $C_3$&#xFF0C;$C_4$ &#x548C; $C_5$ &#x548C;&#x5177;&#x6709;&#x6A2A;&#x5411;&#x8FDE;&#x63A5;&#x7684;1&#xD7;1&#x5377;&#x79EF;&#x5C42;&#x4EA7;&#x751F;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;. $P_6$ &#x548C; $P_7$ &#x901A;&#x8FC7;&#x5206;&#x522B;&#x5728; $P_5$ &#x548C; $P_6$ &#x4E0A;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x6B65;&#x957F;&#x4E3A; 2 &#x7684;&#x5377;&#x79EF;&#x5C42;&#x4EA7;&#x751F;. &#x6700;&#x7EC8;&#xFF0C;&#x7279;&#x5F81;&#x5C42;&#x7EA7; $P_3$&#xFF0C;$P_4$&#xFF0C;$P_5$&#xFF0C;$P_6$ &#x548C; $P_7$ &#x5177;&#x6709;&#x7684;&#x6B65;&#x5E45;&#x5206;&#x522B;&#x4E3A; 8,16,32,64&#x548C;128&#x3002;</p><p><img src="/2019/08/09/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;10/2.png" alt></p><p>&#x4E0E; anchor based detectors &#x5C06;&#x4E0D;&#x540C;&#x5927;&#x5C0F;&#x7684; anchor &#x5206;&#x914D;&#x7ED9;&#x4E0D;&#x540C;&#x7684;&#x7279;&#x5F81;&#x7EA7;&#x522B;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x662F;&#xFF0C;&#x6211;&#x4EEC;&#x76F4;&#x63A5;&#x9650;&#x5236;&#x8FB9;&#x754C;&#x6846;&#x56DE;&#x5F52;&#x7684;&#x8303;&#x56F4;&#x3002; &#x66F4;&#x5177;&#x4F53;&#x5730;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x9996;&#x5148;&#x8BA1;&#x7B97;&#x6240;&#x6709;&#x7279;&#x5F81;&#x7EA7;&#x522B;&#x4E0A;&#x6BCF;&#x4E2A;&#x4F4D;&#x7F6E;&#x7684;&#x56DE;&#x5F52;&#x76EE;&#x6807;$l^\star$&#xFF0C;$t^\star$&#xFF0C;$r^\star$&#x548C;$b^\star$&#x3002;&#x5982;&#x679C;&#x4F4D;&#x7F6E;&#x6EE1;&#x8DB3; $max(l^\star,t^\star,r^\star,b^\star)&gt; m_i$&#x6216;$max(l^\star,t^\star,r^\star,b^\star)&lt; m_{i-1}$&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x5C06;&#x5176;&#x8BBE;&#x7F6E;&#x4E3A;&#x8D1F;&#x6837;&#x672C;&#x5E76;&#x4E14;&#x518D;&#x4E5F;&#x4E0D;&#x4F1A;&#x5BF9;&#x8BE5;&#x4F4D;&#x7F6E;&#x8FDB;&#x884C;&#x56DE;&#x5F52;&#x64CD;&#x4F5C;&#x3002;&#x8FD9;&#x91CC;&#x7684; $m_i$ &#x662F;&#x7279;&#x5F81;&#x5C42;&#x7EA7; $i$ &#x9700;&#x8981;&#x56DE;&#x5F52;&#x7684;&#x6700;&#x5927;&#x8DDD;&#x79BB;&#x3002;&#x5728;&#x672C;&#x6587;&#x4E2D;&#xFF0C;$m_2$&#xFF0C;$m_3$&#xFF0C;$m_4$&#xFF0C;$m_5$&#xFF0C;$m_6$&#x548C;$m_7$&#x5206;&#x522B;&#x8BBE;&#x7F6E;&#x4E3A;0,64,128,256,512&#x548C;$\infty$&#x3002; &#x7531;&#x4E8E; &#x5177;&#x6709;&#x4E0D;&#x540C;&#x5927;&#x5C0F;&#x7684;&#x5BF9;&#x8C61;&#x88AB;&#x5206;&#x914D;&#x7ED9;&#x4E0D;&#x540C;&#x7684;&#x7279;&#x5F81;&#x7EA7;&#x522B;(&#x8FD9;&#x91CC;&#x662F;&#x4E0E; FoveaBox &#x7684;&#x4E00;&#x5904;&#x91CD;&#x8981;&#x533A;&#x522B;) &#x5E76;&#x4E14; &#x5927;&#x591A;&#x6570;&#x91CD;&#x53E0;&#x53D1;&#x751F;&#x5728;&#x5177;&#x6709;&#x663E;&#x8457;&#x4E0D;&#x540C;&#x5927;&#x5C0F;&#x7684;&#x5BF9;&#x8C61;&#x4E4B;&#x95F4;&#xFF0C;&#x56E0;&#x6B64;&#x591A;&#x7EA7;&#x9884;&#x6D4B;&#x53EF;&#x4EE5;&#x5728;&#x5F88;&#x5927;&#x7A0B;&#x5EA6;&#x4E0A;&#x51CF;&#x8F7B;&#x4E0A;&#x8FF0;&#x6A21;&#x7CCA;&#x6027;&#x5E76;&#x4E14;&#x5C06;&#x57FA;&#x4E8E; FCN &#x7684;&#x68C0;&#x6D4B;&#x5668;&#x63D0;&#x5347;&#x5230;&#x4E0E;&#x57FA;&#x4E8E; anchor &#x7684;&#x68C0;&#x6D4B;&#x5668;&#x76F8;&#x540C;&#x7684;&#x68C0;&#x6D4B;&#x6027;&#x80FD;&#xFF0C;&#x5982;&#x6211;&#x4EEC;&#x540E;&#x9762;&#x7684;&#x5B9E;&#x9A8C;&#x6240;&#x793A;&#x3002;</p><p>&#x6700;&#x540E;&#xFF0C;&#x8DDF;&#x968F; R-CNN &#x548C; Fast R-CNN &#x7684;&#x8BBE;&#x5B9A;&#xFF0C;&#x6211;&#x4EEC; &#x5171;&#x4EAB;&#x4E0D;&#x540C;&#x7279;&#x5F81;&#x7EA7;&#x522B;&#x4E4B;&#x95F4;&#x7684;&#x5934;&#x90E8;(&#x8FD9;&#x662F;&#x4E0E;&#x5176;&#x4ED6; Detector &#x7684;&#x4E0D;&#x540C;&#x4E4B;&#x5904;, &#x5176;&#x4ED6;&#x7684;&#x90FD;&#x662F;&#x6BCF;&#x4E2A;&#x7279;&#x5F81;&#x5C42;&#x7EA7;&#x72EC;&#x7ACB;&#x7684;&#x6267;&#x884C;&#x5206;&#x7C7B;&#x548C;&#x56DE;&#x5F52;)&#xFF0C;&#x8FD9;&#x6837;&#x4E0D;&#x4EC5;&#x4F7F;&#x68C0;&#x6D4B;&#x5668;&#x53C2;&#x6570;&#x9AD8;&#x6548;&#xFF0C;&#x800C;&#x4E14;&#x80FD;&#x591F;&#x63D0;&#x9AD8;&#x68C0;&#x6D4B;&#x6027;&#x80FD;&#x3002; &#x7136;&#x800C;&#xFF0C;&#x6211;&#x4EEC;&#x89C2;&#x5BDF;&#x5230;&#x4E0D;&#x540C;&#x7684;&#x7279;&#x5F81;&#x6C34;&#x5E73;&#x9700;&#x8981;&#x56DE;&#x5F52;&#x4E0D;&#x540C;&#x7684;&#x5C3A;&#x5BF8;&#x8303;&#x56F4;&#xFF08;&#x4F8B;&#x5982;&#xFF0C;$P_3$ &#x7684;&#x5C3A;&#x5BF8;&#x8303;&#x56F4;&#x662F; [0,64] &#x800C; $P_4$ &#x7684;&#x5C3A;&#x5BF8;&#x8303;&#x56F4;&#x662F; [64,128]&#xFF09;&#xFF0C;&#x56E0;&#x6B64; &#x5728;&#x4E0D;&#x540C;&#x7684;&#x7279;&#x5F81;&#x5C42;&#x4F7F;&#x7528;&#x76F8;&#x540C;&#x7684;&#x56DE;&#x5F52; heads &#x662F;&#x4E0D;&#x5408;&#x7406;&#x7684;&#x3002; &#x6545;&#x6B64;, &#x6211;&#x4EEC;&#x4E0D;&#x4F7F;&#x7528;&#x6807;&#x51C6;&#x7684; $exp(x)$&#xFF0C;&#x800C;&#x662F;&#x4F7F;&#x7528;&#x5E26;&#x6709;&#x53EF;&#x8BAD;&#x7EC3;&#x6807;&#x91CF; $s_i% &#x7684; $exp(s_i x)$ &#x6765;&#x81EA;&#x52A8;&#x8C03;&#x6574;&#x7279;&#x5F81;&#x7EA7; $P_i$ &#x7684;&#x6307;&#x6570;&#x51FD;&#x6570;&#x7684;&#x57FA;&#x6570;&#xFF0C;&#x4ECE;&#x800C;&#x51ED;&#x7ECF;&#x9A8C;&#x63D0;&#x9AD8;&#x68C0;&#x6D4B;&#x6027;&#x80FD;&#x3002;</p><h2 id="Center-ness-for-FCOS"><a href="#Center-ness-for-FCOS" class="headerlink" title="Center-ness for FCOS"></a>Center-ness for FCOS</h2><p>&#x5728; FCOS &#x4E2D;&#x4F7F;&#x7528;&#x591A;&#x7EA7;&#x9884;&#x6D4B;&#x540E;&#xFF0C;FCOS &#x548C; anchor based &#x7684;&#x68C0;&#x6D4B;&#x5668;&#x4E4B;&#x95F4;&#x4ECD;&#x5B58;&#x5728;&#x6027;&#x80FD;&#x5DEE;&#x8DDD;&#x3002; &#x6211;&#x4EEC;&#x89C2;&#x5BDF;&#x5230;&#x8FD9;&#x662F;&#x7531;&#x4E8E;&#x8FDC;&#x79BB;&#x7269;&#x4F53;&#x4E2D;&#x5FC3;&#x7684;&#x4F4D;&#x7F6E;&#x4EA7;&#x751F;&#x7684;&#x8BB8;&#x591A;&#x4F4E;&#x8D28;&#x91CF;&#x9884;&#x6D4B;&#x8FB9;&#x754C;&#x6846;&#x9020;&#x6210;&#x7684;&#x3002;</p><p>&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x79CD;&#x7B80;&#x5355;&#x800C;&#x6709;&#x6548;&#x7684;&#x7B56;&#x7565;&#x6765;&#x6291;&#x5236;&#x8FD9;&#x4E9B;&#x4F4E;&#x8D28;&#x91CF;&#x7684;&#x68C0;&#x6D4B;&#x8FB9;&#x754C;&#x6846;&#x800C;&#x4E0D;&#x5F15;&#x5165;&#x4EFB;&#x4F55;&#x8D85;&#x53C2;&#x6570;&#x3002; &#x5177;&#x4F53;&#x6765;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x5355;&#x5C42;&#x5206;&#x652F;&#xFF0C;&#x4E0E;&#x5206;&#x7C7B;&#x5206;&#x652F;&#x5E76;&#x884C;&#xFF0C;&#x4EE5;&#x9884;&#x6D4B;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#x7684;&#x201C;&#x4E2D;&#x5FC3;&#x6982;&#x7387;(center-ness)&#x201D;&#xFF08;&#x5373;&#xFF0C;&#x4ECE;&#x8BE5;&#x4F4D;&#x7F6E;&#x5230;&#x8BE5;&#x4F4D;&#x7F6E;&#x6240;&#x8D1F;&#x8D23;&#x7684;&#x5BF9;&#x8C61;&#x7684;&#x4E2D;&#x5FC3;&#x7684;&#x8DDD;&#x79BB;&#xFF09;&#x5982;&#x56FE;2&#x6240;&#x793A;&#xFF0C; &#x7ED9;&#x5B9A;&#x4F4D;&#x7F6E;&#x7684;&#x56DE;&#x5F52;&#x76EE;&#x6807;$l^\star$&#xFF0C;$t^\star$&#xFF0C;$r^\star$&#x548C;$b^\star$&#xFF0C;center-ness target &#x5B9A;&#x4E49;&#x4E3A;</p><script type="math/tex; mode=display">centerness^\star = \sqrt{\frac{min(l^\star,r^\star)}{max(l^\star,r^\star)}×\frac{min(t^\star,b^\star)}{max(t^\star,b^\star)}}</script><p>&#x6211;&#x4EEC;&#x5728;&#x8FD9;&#x91CC;&#x4F7F;&#x7528; sqrt &#x6765;&#x51CF;&#x7F13;&#x4E2D;&#x5FC3;&#x7684;&#x8870;&#x51CF;&#x3002;center-ness &#x4ECE;0&#x5230;1&#xFF0C;&#x56E0;&#x6B64;&#x7528; &#x4E8C;&#x5143;&#x4EA4;&#x53C9;&#x71B5;&#xFF08;BCE&#xFF09;&#x635F;&#x5931;&#x8BAD;&#x7EC3;&#x3002; &#x635F;&#x5931;&#x88AB;&#x6DFB;&#x52A0;&#x5230;&#x4E0A;&#x8FF0;&#x635F;&#x5931;&#x51FD;&#x6570;&#x516C;&#x5F0F;&#x4E2D;&#x3002; &#x5728;&#x6D4B;&#x8BD5;&#x65F6;&#xFF0C;&#x901A;&#x8FC7;&#x5C06;&#x9884;&#x6D4B;&#x7684; center-ness &#x4E0E;&#x76F8;&#x5E94;&#x7684;&#x5206;&#x7C7B;&#x5F97;&#x5206;&#x76F8;&#x4E58;&#x6765;&#x8BA1;&#x7B97;&#x6700;&#x7EC8;&#x5F97;&#x5206;&#xFF08;&#x7528;&#x4E8E;&#x5BF9;&#x68C0;&#x6D4B;&#x5230;&#x7684;&#x8FB9;&#x754C;&#x6846;&#x8FDB;&#x884C;&#x6392;&#x540D;&#xFF09;&#x3002;&#x56E0;&#x6B64;&#xFF0C;center-ness &#x53EF;&#x4EE5;&#x4F7F;&#x8FDC;&#x79BB;&#x7269;&#x4F53;&#x4E2D;&#x5FC3;&#x7684;&#x8FB9;&#x754C;&#x6846;&#x7684; scores &#x51CF;&#x5C0F;&#x3002;&#x7ED3;&#x679C;&#xFF0C;&#x8FD9;&#x4E9B;&#x4F4E;&#x8D28;&#x91CF;&#x7684;&#x8FB9;&#x754C;&#x6846;&#x5F88;&#x53EF;&#x80FD;&#x88AB;&#x6700;&#x7EC8;&#x7684;&#x975E;&#x6700;&#x5927;&#x6291;&#x5236;&#xFF08;NMS&#xFF09;&#x8FC7;&#x7A0B;&#x6EE4;&#x9664;&#xFF0C;&#x4ECE;&#x800C;&#x663E;&#x8457;&#x63D0;&#x9AD8;&#x4E86;&#x68C0;&#x6D4B;&#x6027;&#x80FD;&#x3002;</p><p>&#x57FA;&#x4E8E; anchor &#x7684;&#x68C0;&#x6D4B;&#x5668;&#x4F7F;&#x7528;&#x4E24;&#x4E2A; IOU &#x9608;&#x503C; $T_{low}$ &#x548C; $T_{high}$ &#x5C06; anchor boxes &#x6807;&#x8BB0;&#x4E3A;&#x8D1F;&#x3001;&#x5FFD;&#x7565;&#x548C;&#x6B63;&#x6837;&#x672C;&#xFF0C;center-ness &#x53EF;&#x4EE5;&#x770B;&#x4F5C;&#x662F;&#x4E00;&#x4E2A; &#x8F6F;&#x9608;&#x503C;&#x3002;&#x5B83;&#x662F;&#x5728;&#x7F51;&#x7EDC;&#x8BAD;&#x7EC3;&#x4E2D;&#x5B66;&#x4E60;&#x7684;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x8C03;&#x6574;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x5229;&#x7528;&#x8BE5;&#x7B56;&#x7565;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x68C0;&#x6D4B;&#x5668;&#x4ECD;&#x7136;&#x53EF;&#x4EE5;&#x5C06;&#x4EFB;&#x4F55;&#x843D;&#x5728; GT Box &#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#x89C6;&#x4E3A;&#x6B63;&#x6837;&#x672C;&#xFF0C;&#x9664;&#x4E86;&#x4E0A;&#x8FF0;&#x591A;&#x5C42;&#x9884;&#x6D4B;&#x4E2D;&#x8BBE;&#x7F6E;&#x4E3A;&#x8D1F;&#x6837;&#x672C;&#x7684;&#x4F4D;&#x7F6E;&#x5916;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x4E3A;&#x56DE;&#x5F52;&#x5668;&#x4F7F;&#x7528;&#x5C3D;&#x53EF;&#x80FD;&#x591A;&#x7684;&#x8BAD;&#x7EC3;&#x6837;&#x672C;&#x3002;</p><h1 id="Experiments"><a href="#Experiments" class="headerlink" title="Experiments"></a>Experiments</h1><p>&#x4E0D;&#x518D;&#x53D9;&#x8FF0;</p><h2 id="Ablation-Study"><a href="#Ablation-Study" class="headerlink" title="Ablation Study"></a>Ablation Study</h2><h3 id="Multi-level-Prediction-with-FPN"><a href="#Multi-level-Prediction-with-FPN" class="headerlink" title="Multi-level Prediction with FPN"></a>Multi-level Prediction with FPN</h3><p><img src="/2019/08/09/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;10/3.png" alt></p><h3 id="With-or-Without-Center-ness"><a href="#With-or-Without-Center-ness" class="headerlink" title="With or Without Center-ness"></a>With or Without Center-ness</h3><p><img src="/2019/08/09/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;10/4.png" alt></p><h3 id="FCOS-vs-Anchor-based-Detectors"><a href="#FCOS-vs-Anchor-based-Detectors" class="headerlink" title="FCOS vs. Anchor-based Detectors"></a>FCOS vs. Anchor-based Detectors</h3><p><img src="/2019/08/09/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;10/5.png" alt></p><h2 id="Comparison-with-State-of-the-art-Detectors"><a href="#Comparison-with-State-of-the-art-Detectors" class="headerlink" title="Comparison with State-of-the-art Detectors"></a>Comparison with State-of-the-art Detectors</h2><p><img src="/2019/08/09/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;10/6.png" alt></p><h1 id="Extensions-on-Region-Proposal-Networks"><a href="#Extensions-on-Region-Proposal-Networks" class="headerlink" title="Extensions on Region Proposal Networks"></a>Extensions on Region Proposal Networks</h1><p><img src="/2019/08/09/&#x8BBA;&#x6587;&#x9605;&#x8BFB;&#x7B14;&#x8BB0;10/7.png" alt></p><h1 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h1><p>&#x6211;&#x4EEC;&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x79CD; anchor freee, proposal free &#x7684;&#x5355;&#x7EA7;&#x63A2;&#x6D4B;&#x5668;FCOS&#x3002; &#x5982;&#x5B9E;&#x9A8C;&#x6240;&#x793A;&#xFF0C;FCOS&#x4E0E;&#x6D41;&#x884C;&#x7684; anchor based &#x7684;&#x4E00;&#x7EA7;&#x63A2;&#x6D4B;&#x5668;&#x76F8;&#x6BD4;&#x66F4;&#x5177;&#x6709;&#x4F18;&#x52BF;&#xFF0C;&#x5305;&#x62EC;RetinaNet&#xFF0C;YOLO&#x548C;SSD&#xFF0C;&#x4F46;&#x8BBE;&#x8BA1;&#x590D;&#x6742;&#x6027;&#x8981;&#x4F4E;&#x5F97;&#x591A;&#x3002; FCOS&#x5B8C;&#x5168;&#x907F;&#x514D;&#x4E86;&#x4E0E; anchor &#x76F8;&#x5173;&#x7684;&#x6240;&#x6709;&#x8BA1;&#x7B97;&#x548C;&#x8D85;&#x53C2;&#x6570;&#xFF0C;&#x5E76;&#x4EE5;&#x6BCF;&#x50CF;&#x7D20;&#x9884;&#x6D4B;&#x65B9;&#x5F0F;&#x89E3;&#x51B3;&#x4E86;&#x5BF9;&#x8C61;&#x68C0;&#x6D4B;&#xFF0C;&#x7C7B;&#x4F3C;&#x4E8E;&#x5176;&#x4ED6;&#x5BC6;&#x96C6;&#x9884;&#x6D4B;&#x4EFB;&#x52A1;&#xFF0C;&#x4F8B;&#x5982;&#x8BED;&#x4E49;&#x5206;&#x5272;&#x3002; FCOS&#x8FD8;&#x5728;&#x4E00;&#x7EA7;&#x63A2;&#x6D4B;&#x5668;&#x4E2D;&#x5B9E;&#x73B0;&#x4E86;&#x6700;&#x5148;&#x8FDB;&#x7684;&#x6027;&#x80FD;&#x3002; &#x6211;&#x4EEC;&#x8FD8;&#x8868;&#x660E;&#xFF0C;FCOS&#x53EF;&#x7528;&#x4F5C;&#x4E24;&#x7EA7;&#x63A2;&#x6D4B;&#x5668;&#x4E2D;&#x7684;RPN&#xFF0C;&#x901F;&#x5EA6;&#x66F4;&#x5FEB;&#x7684;R-CNN&#xFF0C;&#x5E76;&#x4E14;&#x5927;&#x5E45;&#x4F18;&#x4E8E;&#x5176;RPN&#x3002; &#x9274;&#x4E8E;&#x5176;&#x6709;&#x6548;&#x6027;&#x548C;&#x6548;&#x7387;&#xFF0C;&#x6211;&#x4EEC;&#x5E0C;&#x671B;FCOS&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x5F53;&#x524D;&#x4E3B;&#x6D41;&#x951A;&#x70B9;&#x63A2;&#x6D4B;&#x5668;&#x7684;&#x5F3A;&#x5927;&#x800C;&#x7B80;&#x5355;&#x7684;&#x66FF;&#x4EE3;&#x65B9;&#x6848;&#x3002; &#x6211;&#x4EEC;&#x8FD8;&#x76F8;&#x4FE1;FCOS&#x53EF;&#x4EE5;&#x6269;&#x5C55;&#x5230;&#x89E3;&#x51B3;&#x8BB8;&#x591A;&#x5176;&#x4ED6;&#x5B9E;&#x4F8B;&#x7EA7;&#x8BC6;&#x522B;&#x4EFB;&#x52A1;&#x3002;</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&amp;#x8BBA;&amp;#x6587;&amp;#x5730;&amp;#x5740;&amp;#xFF1A;&lt;a href=&quot;https://arxiv.org/pdf/1904.01355.pdf&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://arxiv.org/pdf/1904.01355.pdf&lt;/a&gt;&lt;br&gt;&amp;#x4EE3;&amp;#x7801;&amp;#x5730;&amp;#x5740;&amp;#xFF1A;&lt;a href=&quot;https://github.com/tianzhi0549/FCOS&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/tianzhi0549/FCOS&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;Abstract&quot;&gt;&lt;a href=&quot;#Abstract&quot; class=&quot;headerlink&quot; title=&quot;Abstract&quot;&gt;&lt;/a&gt;Abstract&lt;/h1&gt;&lt;p&gt;&amp;#x6211;&amp;#x4EEC;&amp;#x63D0;&amp;#x51FA;&amp;#x4E86;&amp;#x4E00;&amp;#x79CD;&amp;#x5168;&amp;#x5377;&amp;#x79EF;&amp;#x7684; one-stage &amp;#x76EE;&amp;#x6807;&amp;#x68C0;&amp;#x6D4B;&amp;#x5668;&amp;#xFF08;FCOS, Fully Convolutional One Stage&amp;#xFF09;, &amp;#x5B83;&amp;#x4EE5;&amp;#x5BF9;&amp;#x6BCF;&amp;#x4E2A;&amp;#x50CF;&amp;#x7D20;&amp;#x8FDB;&amp;#x884C;&amp;#x9884;&amp;#x6D4B;&amp;#x7684;&amp;#x65B9;&amp;#x5F0F;&amp;#x6765;&amp;#x89E3;&amp;#x51B3;&amp;#x76EE;&amp;#x6807;&amp;#x68C0;&amp;#x6D4B;&amp;#x95EE;&amp;#x9898;&amp;#xFF0C;&amp;#x7C7B;&amp;#x4F3C;&amp;#x4E8E;&amp;#x8BED;&amp;#x4E49;&amp;#x5206;&amp;#x5272;&amp;#x3002;&amp;#x51E0;&amp;#x4E4E;&amp;#x6240;&amp;#x6709;&amp;#x7684; SOTA &amp;#x7269;&amp;#x4F53;&amp;#x68C0;&amp;#x6D4B;&amp;#x5668;&amp;#xFF0C;&amp;#x5982; RetinaNet&amp;#xFF0C;SSD&amp;#xFF0C;YOLOv3 &amp;#x548C; Faster R-CNN &amp;#x90FD;&amp;#x4F9D;&amp;#x8D56;&amp;#x4E8E;&amp;#x9884;&amp;#x5B9A;&amp;#x4E49;&amp;#x7684; anchor box&amp;#x3002;&amp;#x76F8;&amp;#x6BD4;&amp;#x4E4B;&amp;#x4E0B;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x63D0;&amp;#x51FA;&amp;#x7684; FCOS &amp;#x4E0D;&amp;#x9700;&amp;#x8981; anchor box&amp;#xFF0C;&amp;#x540C;&amp;#x65F6;&amp;#x4E5F;&amp;#x4E0D;&amp;#x9700;&amp;#x8981; proposals (&amp;#x5373; One-Stage)&amp;#x3002;&amp;#x901A;&amp;#x8FC7;&amp;#x6D88;&amp;#x9664;&amp;#x5BF9;&amp;#x9884;&amp;#x5B9A;&amp;#x4E49; anchor &amp;#x7684;&amp;#x4F9D;&amp;#x8D56;&amp;#xFF0C;FCOS &amp;#x5B8C;&amp;#x5168;&amp;#x907F;&amp;#x514D;&amp;#x4E86;&amp;#x4E0E; anchor box &amp;#x76F8;&amp;#x5173;&amp;#x7684;&amp;#x590D;&amp;#x6742;&amp;#x8BA1;&amp;#x7B97;&amp;#xFF0C;&amp;#x4F8B;&amp;#x5982;&amp;#x5728;&amp;#x8BAD;&amp;#x7EC3;&amp;#x671F;&amp;#x95F4;&amp;#x8BA1;&amp;#x7B97; overlapping &amp;#x5E76;&amp;#x663E;&amp;#x7740;&amp;#x51CF;&amp;#x5C11; training memory footprint&amp;#x3002;&amp;#x66F4;&amp;#x91CD;&amp;#x8981;&amp;#x7684;&amp;#x662F;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x8FD8;&amp;#x907F;&amp;#x514D;&amp;#x4E86;&amp;#x4E0E; anchor &amp;#x76F8;&amp;#x5173;&amp;#x7684;&amp;#x6240;&amp;#x6709;&amp;#x8D85;&amp;#x53C2;&amp;#x6570;&amp;#xFF0C;&amp;#x8FD9;&amp;#x4E9B;&amp;#x53C2;&amp;#x6570;&amp;#x901A;&amp;#x5E38;&amp;#x5BF9;&amp;#x6700;&amp;#x7EC8;&amp;#x68C0;&amp;#x6D4B;&amp;#x6027;&amp;#x80FD;&amp;#x975E;&amp;#x5E38;&amp;#x654F;&amp;#x611F;&amp;#x3002;&amp;#x51ED;&amp;#x501F;&amp;#x552F;&amp;#x4E00;&amp;#x7684;&amp;#x540E;&amp;#x5904;&amp;#x7406;&amp;#x64CD;&amp;#x4F5C;&amp;#x975E;&amp;#x6700;&amp;#x5927;&amp;#x6291;&amp;#x5236;&amp;#xFF08;NMS&amp;#xFF09;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x7684; FCOS &amp;#x4F18;&amp;#x4E8E;&amp;#x4E4B;&amp;#x524D;&amp;#x7684; anchor-based one-stage detectors&amp;#xFF0C;&amp;#x5E76;&amp;#x4E14;&amp;#x7ED3;&amp;#x6784;&amp;#x66F4;&amp;#x7B80;&amp;#x5355;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x9996;&amp;#x6B21;&amp;#x5C55;&amp;#x793A;&amp;#x4E86;&amp;#x4E00;&amp;#x79CD;&amp;#x66F4;&amp;#x52A0;&amp;#x7B80;&amp;#x5355;&amp;#x7075;&amp;#x6D3B;&amp;#x7684;&amp;#x68C0;&amp;#x6D4B;&amp;#x6846;&amp;#x67B6;&amp;#xFF0C;&amp;#x53EF;&amp;#x4EE5;&amp;#x63D0;&amp;#x9AD8;&amp;#x68C0;&amp;#x6D4B;&amp;#x7CBE;&amp;#x5EA6;&amp;#x3002;&amp;#x6211;&amp;#x4EEC;&amp;#x5E0C;&amp;#x671B; FCOS &amp;#x6846;&amp;#x67B6;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F5C;&amp;#x4E3A;&amp;#x8BB8;&amp;#x591A;&amp;#x5176;&amp;#x4ED6;&amp;#x5B9E;&amp;#x4F8B;&amp;#x7EA7;&amp;#x4EFB;&amp;#x52A1;&amp;#x7B80;&amp;#x5355;&amp;#x800C;&amp;#x5F3A;&amp;#x5927;&amp;#x7684;&amp;#x66FF;&amp;#x4EE3;&amp;#x65B9;&amp;#x6848;&amp;#x3002;&lt;/p&gt;
    
    </summary>
    
      <category term="深度学习" scheme="http://zhengyujie.cn/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="目标检测" scheme="http://zhengyujie.cn/tags/%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B/"/>
    
      <category term="anchor-free" scheme="http://zhengyujie.cn/tags/anchor-free/"/>
    
  </entry>
  
  <entry>
    <title>Tensorflow-Slim简介</title>
    <link href="http://zhengyujie.cn/2019/08/08/tensorflow-slim/"/>
    <id>http://zhengyujie.cn/2019/08/08/tensorflow-slim/</id>
    <published>2019-08-08T12:25:20.000Z</published>
    <updated>2019-08-24T03:09:32.135Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Slim&#x7B80;&#x4ECB;"><a href="#Slim&#x7B80;&#x4ECB;" class="headerlink" title="Slim&#x7B80;&#x4ECB;"></a>Slim&#x7B80;&#x4ECB;</h1><p>slim&#x662F;&#x4E00;&#x4E2A;&#x4F7F;&#x6784;&#x5EFA;&#xFF0C;&#x8BAD;&#x7EC3;&#xFF0C;&#x8BC4;&#x4F30;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x53D8;&#x5F97;&#x7B80;&#x5355;&#x7684;&#x5E93;&#x3002;&#x5B83;&#x53EF;&#x4EE5;&#x6D88;&#x9664;&#x539F;&#x751F;tensorflow&#x91CC;&#x9762;&#x5F88;&#x591A;&#x91CD;&#x590D;&#x7684;&#x6A21;&#x677F;&#x6027;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x8BA9;&#x4EE3;&#x7801;&#x66F4;&#x7D27;&#x51D1;&#xFF0C;&#x66F4;&#x5177;&#x5907;&#x53EF;&#x8BFB;&#x6027;&#x3002;&#x53E6;&#x5916;slim&#x63D0;&#x4F9B;&#x4E86;&#x5F88;&#x591A;&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x65B9;&#x9762;&#x7684;&#x8457;&#x540D;&#x6A21;&#x578B;&#xFF08;VGG, AlexNet&#x7B49;&#xFF09;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x4EC5;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#xFF0C;&#x751A;&#x81F3;&#x80FD;&#x4EE5;&#x5404;&#x79CD;&#x65B9;&#x5F0F;&#x8FDB;&#x884C;&#x6269;&#x5C55;&#x3002;</p><a id="more"></a><ul><li>&#x5BFC;&#x5165;Slim<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow.contrib.slim <span class="keyword">as</span> slim</span><br></pre></td></tr></table></figure></li></ul><h1 id="TF-Slim&#x7684;&#x4F18;&#x70B9;"><a href="#TF-Slim&#x7684;&#x4F18;&#x70B9;" class="headerlink" title="TF-Slim&#x7684;&#x4F18;&#x70B9;"></a>TF-Slim&#x7684;&#x4F18;&#x70B9;</h1><ul><li>&#x5141;&#x8BB8;&#x7528;&#x6237;&#x901A;&#x8FC7;&#x51CF;&#x5C11;&#x6A21;&#x677F;&#x4EE3;&#x7801;&#x4F7F;&#x5F97;&#x6A21;&#x578B;&#x66F4;&#x52A0;&#x7B80;&#x6D01;&#x3002;&#x8FD9;&#x4E2A;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4F7F;&#x7528;argument scoping&#x548C;&#x5927;&#x91CF;&#x7684;&#x9AD8;&#x5C42;layers&#x3001;variables&#x6765;&#x5B9E;&#x73B0;</li><li>&#x901A;&#x8FC7;&#x4F7F;&#x7528;&#x5E38;&#x7528;&#x7684;&#x6B63;&#x5219;&#x5316;&#xFF08; regularizers&#xFF09;&#x4F7F;&#x5F97;&#x5EFA;&#x7ACB;&#x6A21;&#x578B;&#x66F4;&#x52A0;&#x7B80;&#x5355;&#xFF1B;</li><li>&#x4E00;&#x4E9B;&#x5E7F;&#x6CDB;&#x4F7F;&#x7528;&#x7684;&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x76F8;&#x5173;&#x7684;&#x6A21;&#x578B;&#xFF08;&#x6BD4;&#x5982;VGG&#xFF0C;AlexNet&#xFF09;&#x5DF2;&#x7ECF;&#x5728;slim&#x4E2D;&#x5B9A;&#x4E49;&#x597D;&#x4E86;&#xFF0C;&#x7528;&#x6237;&#x53EF;&#x4EE5;&#x5F88;&#x65B9;&#x4FBF;&#x7684;&#x4F7F;&#x7528;&#xFF1B;&#x8FD9;&#x4E9B;&#x65E2;&#x53EF;&#x4EE5;&#x5F53;&#x6210;&#x9ED1;&#x76D2;&#x4F7F;&#x7528;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x88AB;&#x6269;&#x5C55;&#x4F7F;&#x7528;&#xFF0C;&#x6BD4;&#x5982;&#x6DFB;&#x52A0;&#x4E00;&#x4E9B;&#x201C;multiple heads&#x201D;&#x5230;&#x4E0D;&#x540C;&#x7684;&#x5185;&#x90E8;&#x7684;&#x5C42;&#xFF1B;</li><li>Slim&#x4F7F;&#x5F97;&#x6269;&#x5C55;&#x590D;&#x6742;&#x6A21;&#x578B;&#x53D8;&#x5F97;&#x5BB9;&#x6613;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x7684;&#x6A21;&#x578B;&#x7684;checkpoints&#x6765;&#x5F00;&#x59CB;&#x8BAD;&#x7EC3;&#x7B97;&#x6CD5;&#x3002;</li></ul><h1 id="TF-Slim&#x7684;&#x4E3B;&#x8981;&#x7EC4;&#x4EF6;"><a href="#TF-Slim&#x7684;&#x4E3B;&#x8981;&#x7EC4;&#x4EF6;" class="headerlink" title="TF-Slim&#x7684;&#x4E3B;&#x8981;&#x7EC4;&#x4EF6;"></a>TF-Slim&#x7684;&#x4E3B;&#x8981;&#x7EC4;&#x4EF6;</h1><p>TF-Slim&#x7531;&#x51E0;&#x4E2A;&#x72EC;&#x7ACB;&#x5B58;&#x5728;&#x7684;&#x7EC4;&#x4EF6;&#x7EC4;&#x6210;&#xFF0C;&#x4E3B;&#x8981;&#x5305;&#x62EC;&#x4EE5;&#x4E0B;&#x51E0;&#x4E2A;&#xFF1A;</p><ul><li><p><strong>arg_scope</strong><br>  &#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x4F5C;&#x7528;&#x57DF;&#xFF08;scope&#xFF09;&#xFF0C;&#x79F0;&#x4E3A;arg_scope&#xFF0C;&#x5728;&#x8BE5;&#x4F5C;&#x7528;&#x57DF;&#xFF08;scope&#xFF09;&#x4E2D;&#xFF0C;&#x7528;&#x6237;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x4E00;&#x4E9B;&#x9ED8;&#x8BA4;&#x7684;&#x53C2; &#x6570;&#xFF0C;&#x7528;&#x4E8E;&#x7279;&#x5B9A;&#x7684;&#x64CD;&#x4F5C;&#xFF1B;<br>  &#x5982;&#x679C;&#x4F60;&#x7684;&#x7F51;&#x7EDC;&#x4E2D;&#x6709;&#x5927;&#x91CF;&#x7684;&#x76F8;&#x540C;&#x7684;&#x53C2;&#x6570;&#xFF1A;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">net = slim.conv2d(inputs, <span class="number">64</span>, [<span class="number">11</span>, <span class="number">11</span>], <span class="number">4</span>, padding=<span class="string">&apos;SAME&apos;</span>,</span><br><span class="line">              weights_initializer=tf.truncated_normal_initializer(stddev=<span class="number">0.01</span>),</span><br><span class="line">              weights_regularizer=slim.l2_regularizer(<span class="number">0.0005</span>), scope=<span class="string">&apos;conv1&apos;</span>)</span><br><span class="line">net = slim.conv2d(net, <span class="number">128</span>, [<span class="number">11</span>, <span class="number">11</span>], padding=<span class="string">&apos;VALID&apos;</span>,</span><br><span class="line">              weights_initializer=tf.truncated_normal_initializer(stddev=<span class="number">0.01</span>),</span><br><span class="line">              weights_regularizer=slim.l2_regularizer(<span class="number">0.0005</span>), scope=<span class="string">&apos;conv2&apos;</span>)</span><br><span class="line">net = slim.conv2d(net, <span class="number">256</span>, [<span class="number">11</span>, <span class="number">11</span>], padding=<span class="string">&apos;SAME&apos;</span>,</span><br><span class="line">              weights_initializer=tf.truncated_normal_initializer(stddev=<span class="number">0.01</span>),</span><br><span class="line">              weights_regularizer=slim.l2_regularizer(<span class="number">0.0005</span>), scope=<span class="string">&apos;conv3&apos;</span>)</span><br></pre></td></tr></table></figure><p>  &#x7528;arg_scope&#x5904;&#x7406;&#x4E00;&#x4E0B;&#xFF1A;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> slim.arg_scope([slim.conv2d], padding=<span class="string">&apos;SAME&apos;</span>,</span><br><span class="line">                  weights_initializer=tf.truncated_normal_initializer(stddev=<span class="number">0.01</span>)</span><br><span class="line">                  weights_regularizer=slim.l2_regularizer(<span class="number">0.0005</span>)):</span><br><span class="line">    net = slim.conv2d(inputs, <span class="number">64</span>, [<span class="number">11</span>, <span class="number">11</span>], scope=<span class="string">&apos;conv1&apos;</span>)</span><br><span class="line">    net = slim.conv2d(net, <span class="number">128</span>, [<span class="number">11</span>, <span class="number">11</span>], padding=<span class="string">&apos;VALID&apos;</span>, scope=<span class="string">&apos;conv2&apos;</span>)</span><br><span class="line">    net = slim.conv2d(net, <span class="number">256</span>, [<span class="number">11</span>, <span class="number">11</span>], scope=<span class="string">&apos;conv3&apos;</span>)</span><br></pre></td></tr></table></figure><p>  arg_scope&#x5728;&#x4F5C;&#x7528;&#x8303;&#x56F4;&#x5185;&#x5B9A;&#x4E49;&#x4E86;&#x6307;&#x5B9A;&#x5C42;&#x7684;&#x9ED8;&#x8BA4;&#x53C2;&#x6570;&#xFF0C;&#x82E5;&#x60F3;&#x7279;&#x522B;&#x6307;&#x5B9A;&#x67D0;&#x4E9B;&#x5C42;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x53EF;&#x4EE5;&#x91CD;&#x65B0;&#x8D4B;&#x503C;&#xFF08;&#x76F8;&#x5F53;&#x4E8E;&#x91CD;&#x5199;&#xFF09;</p></li><li><p><strong>data</strong><br>  &#x5305;&#x542B;TF-Slim&#x7684;dataset&#x5B9A;&#x4E49;&#xFF0C;data providers&#xFF0C;parallel_reader&#xFF0C;&#x548C; decoding utilities&#xFF1B;</p></li><li><strong>evaluation</strong><br>  &#x5305;&#x542B;&#x7528;&#x4E8E;&#x6A21;&#x578B;&#x8BC4;&#x4F30;&#x7684;&#x5E38;&#x89C4;&#x51FD;&#x6570;&#xFF1B;</li><li><p><strong>layers</strong><br>  &#x5305;&#x542B;&#x7528;&#x4E8E;&#x5EFA;&#x7ACB;&#x6A21;&#x578B;&#x7684;&#x9AD8;&#x7EA7;layers&#xFF1B;<br>  &#x6BD4;&#x5982;&#x5206;&#x522B;&#x7528;TensorFlow&#x548C;Slim&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#x7684;&#x6848;&#x4F8B;&#xFF1A;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#tensorflow&#x5B9E;&#x73B0;&#x5377;&#x79EF;&#x5C42;</span></span><br><span class="line"><span class="keyword">with</span> tf.name_scope(<span class="string">&apos;conv1_1&apos;</span>) <span class="keyword">as</span> scope:</span><br><span class="line">    kernel = tf.Variable(tf.truncated_normal([<span class="number">3</span>, <span class="number">3</span>, <span class="number">64</span>, <span class="number">128</span>], dtype=tf.float32,</span><br><span class="line">                                       stddev=<span class="number">1e-1</span>), name=<span class="string">&apos;weights&apos;</span>)</span><br><span class="line">    conv = tf.nn.conv2d(input, kernel, [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>], padding=<span class="string">&apos;SAME&apos;</span>)</span><br><span class="line">    biases = tf.Variable(tf.constant(<span class="number">0.0</span>, shape=[<span class="number">128</span>], dtype=tf.float32),</span><br><span class="line">                   trainable=<span class="literal">True</span>, name=<span class="string">&apos;biases&apos;</span>)</span><br><span class="line">    bias = tf.nn.bias_add(conv, biases)</span><br><span class="line">    conv1 = tf.nn.relu(bias, name=scope)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#slim&#x5B9E;&#x73B0;&#x5377;&#x79EF;&#x5C42;</span></span><br><span class="line">net = slim.conv2d(input, <span class="number">128</span>, [<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&apos;conv1_1&apos;</span>)</span><br></pre></td></tr></table></figure><p>  &#x53E6;&#x5916;&#xFF0C;&#x6BD4;&#x8F83;&#x5438;&#x5F15;&#x4EBA;&#x7684;&#x662F;slim&#x4E2D;&#x7684;repeat&#x548C;stack&#x64CD;&#x4F5C;&#xFF0C;&#x5047;&#x8BBE;&#x5B9A;&#x4E49;&#x4E09;&#x4E2A;&#x76F8;&#x540C;&#x7684;&#x5377;&#x79EF;&#x5C42;&#xFF0C;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">net = slim.conv2d(net, <span class="number">256</span>, [<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&apos;conv3_1&apos;</span>)</span><br><span class="line">net = slim.conv2d(net, <span class="number">256</span>, [<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&apos;conv3_2&apos;</span>)</span><br><span class="line">net = slim.conv2d(net, <span class="number">256</span>, [<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&apos;conv3_3&apos;</span>)</span><br><span class="line">net = slim.max_pool2d(net, [<span class="number">2</span>, <span class="number">2</span>], scope=<span class="string">&apos;pool2&apos;</span>)</span><br></pre></td></tr></table></figure><p>  &#x5728;slim&#x4E2D;&#x7684;repeat&#x64CD;&#x4F5C;&#x53EF;&#x51CF;&#x5C11;&#x4EE3;&#x7801;&#x91CF;&#xFF1A;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net = slim.repeat(net, <span class="number">3</span>, slim.conv2d, <span class="number">256</span>, [<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&apos;conv3&apos;</span>)</span><br><span class="line">net = slim.max_pool2d(net, [<span class="number">2</span>, <span class="number">2</span>], scope=<span class="string">&apos;pool2&apos;</span>)</span><br></pre></td></tr></table></figure><p>  stack&#x662F;&#x5904;&#x7406;&#x5377;&#x79EF;&#x6838;&#x6216;&#x8005;&#x8F93;&#x51FA;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x60C5;&#x51B5;&#xFF1A;&#x5047;&#x8BBE;&#x5B9A;&#x4E49;&#x4E09;&#x5C42;FC&#xFF1A;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Verbose way:</span></span><br><span class="line">x = slim.fully_connected(x, <span class="number">32</span>, scope=<span class="string">&apos;fc/fc_1&apos;</span>)</span><br><span class="line">x = slim.fully_connected(x, <span class="number">64</span>, scope=<span class="string">&apos;fc/fc_2&apos;</span>)</span><br><span class="line">x = slim.fully_connected(x, <span class="number">128</span>, scope=<span class="string">&apos;fc/fc_3&apos;</span>)</span><br></pre></td></tr></table></figure><p>  &#x4F7F;&#x7528;stack&#x64CD;&#x4F5C;&#xFF1A;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slim.stack(x, slim.fully_connected, [<span class="number">32</span>, <span class="number">64</span>, <span class="number">128</span>], scope=<span class="string">&apos;fc&apos;</span>)</span><br></pre></td></tr></table></figure><p>  &#x5377;&#x79EF;&#x5C42;&#x4F7F;&#x7528;stack&#x64CD;&#x4F5C;&#xFF1A;</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#x666E;&#x901A;&#x65B9;&#x6CD5;:</span></span><br><span class="line">x = slim.conv2d(x, <span class="number">32</span>, [<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&apos;core/core_1&apos;</span>)</span><br><span class="line">x = slim.conv2d(x, <span class="number">32</span>, [<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&apos;core/core_2&apos;</span>)</span><br><span class="line">x = slim.conv2d(x, <span class="number">64</span>, [<span class="number">3</span>, <span class="number">3</span>], scope=<span class="string">&apos;core/core_3&apos;</span>)</span><br><span class="line">x = slim.conv2d(x, <span class="number">64</span>, [<span class="number">1</span>, <span class="number">1</span>], scope=<span class="string">&apos;core/core_4&apos;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x7B80;&#x4FBF;&#x65B9;&#x6CD5;:</span></span><br><span class="line">slim.stack(x, slim.conv2d, [(<span class="number">32</span>, [<span class="number">3</span>, <span class="number">3</span>]), (<span class="number">32</span>, [<span class="number">1</span>, <span class="number">1</span>]), (<span class="number">64</span>, [<span class="number">3</span>, <span class="number">3</span>]), (<span class="number">64</span>, [<span class="number">1</span>, <span class="number">1</span>])], scope=<span class="string">&apos;core&apos;</span>)</span><br></pre></td></tr></table></figure></li><li><p><strong>learning</strong><br>  &#x5305;&#x542B;&#x4E00;&#x4E9B;&#x7528;&#x4E8E;&#x8BAD;&#x7EC3;&#x6A21;&#x578B;&#x7684;&#x5E38;&#x89C4;&#x51FD;&#x6570;&#xFF1B;</p></li><li><strong>losses</strong><br>  &#x5305;&#x542B;&#x4E00;&#x4E9B;&#x7528;&#x4E8E;loss function&#x7684;&#x51FD;&#x6570;&#xFF1B;</li><li><strong>metrics</strong><br>  &#x5305;&#x542B;&#x4E00;&#x4E9B;&#x70ED;&#x95E8;&#x7684;&#x8BC4;&#x4EF7;&#x6807;&#x51C6;&#xFF1B;</li><li><strong>nets</strong><br>  &#x5305;&#x542B;&#x4E00;&#x4E9B;&#x70ED;&#x95E8;&#x7684;&#x7F51;&#x7EDC;&#x5B9A;&#x4E49;&#xFF0C;&#x5982;VGG&#xFF0C;AlexNet&#x7B49;&#x6A21;&#x578B;&#xFF1B;</li><li><strong>queues</strong><br>  &#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x5185;&#x5BB9;&#x7BA1;&#x7406;&#x8005;&#xFF0C;&#x4F7F;&#x5F97;&#x53EF;&#x4EE5;&#x5F88;&#x5BB9;&#x6613;&#x3001;&#x5F88;&#x5B89;&#x5168;&#x5730;&#x542F;&#x52A8;&#x548C;&#x5173;&#x95ED;QueueRunners&#xFF1B;</li><li><strong>regularizers</strong><br>  &#x5305;&#x542B;&#x6743;&#x91CD;&#x6B63;&#x5219;&#x5316;&#xFF1B;</li><li><strong>variables</strong><br>  &#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x65B9;&#x4FBF;&#x7684;&#x5C01;&#x88C5;&#xFF0C;&#x7528;&#x4E8E;&#x53D8;&#x91CF;&#x521B;&#x5EFA;&#x548C;&#x4F7F;&#x7528;&#x3002;<br>  &#x53D8;&#x91CF;&#x5206;&#x4E3A;&#x4E24;&#x7C7B;&#xFF1A;&#x6A21;&#x578B;&#x53D8;&#x91CF;&#x548C;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x3002;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x662F;&#x4E0D;&#x4F5C;&#x4E3A;&#x6A21;&#x578B;&#x53C2;&#x6570;&#x4FDD;&#x5B58;&#x7684;&#xFF0C;&#x800C;&#x6A21;&#x578B;&#x53D8;&#x91CF;&#x4F1A;&#x518D;save&#x7684;&#x65F6;&#x5019;&#x4FDD;&#x5B58;&#x4E0B;&#x6765;&#x3002;&#x8BF8;&#x5982;global_step&#x4E4B;&#x7C7B;&#x7684;&#x5C31;&#x662F;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x3002;slim&#x4E2D;&#x53EF;&#x4EE5;&#x5199;&#x660E;&#x53D8;&#x91CF;&#x5B58;&#x653E;&#x7684;&#x8BBE;&#x5907;&#xFF0C;&#x6B63;&#x5219;&#x548C;&#x521D;&#x59CB;&#x5316;&#x89C4;&#x5219;&#x3002;&#x8FD8;&#x6709;&#x83B7;&#x53D6;&#x53D8;&#x91CF;&#x7684;&#x51FD;&#x6570;&#x4E5F;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x4E00;&#x4E0B;&#xFF0C;get_variables&#x662F;&#x8FD4;&#x56DE;&#x6240;&#x6709;&#x7684;&#x53D8;&#x91CF;&#x3002;<br>  slim&#x4E2D;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#x7684;&#x5B9E;&#x4F8B;&#xFF1A;  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Model Variables</span></span><br><span class="line">weights = slim.model_variable(<span class="string">&apos;weights&apos;</span>,</span><br><span class="line">                            shape=[<span class="number">10</span>, <span class="number">10</span>, <span class="number">3</span> , <span class="number">3</span>],</span><br><span class="line">                            initializer=tf.truncated_normal_initializer(stddev=<span class="number">0.1</span>),</span><br><span class="line">                            regularizer=slim.l2_regularizer(<span class="number">0.05</span>),</span><br><span class="line">                            device=<span class="string">&apos;/CPU:0&apos;</span>)</span><br><span class="line">model_variables = slim.get_model_variables()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Regular variables</span></span><br><span class="line">my_var = slim.variable(<span class="string">&apos;my_var&apos;</span>,</span><br><span class="line">                    shape=[<span class="number">20</span>, <span class="number">1</span>],</span><br><span class="line">                    initializer=tf.zeros_initializer())</span><br><span class="line">regular_variables_and_model_variables = slim.get_variables()</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Slim&amp;#x7B80;&amp;#x4ECB;&quot;&gt;&lt;a href=&quot;#Slim&amp;#x7B80;&amp;#x4ECB;&quot; class=&quot;headerlink&quot; title=&quot;Slim&amp;#x7B80;&amp;#x4ECB;&quot;&gt;&lt;/a&gt;Slim&amp;#x7B80;&amp;#x4ECB;&lt;/h1&gt;&lt;p&gt;slim&amp;#x662F;&amp;#x4E00;&amp;#x4E2A;&amp;#x4F7F;&amp;#x6784;&amp;#x5EFA;&amp;#xFF0C;&amp;#x8BAD;&amp;#x7EC3;&amp;#xFF0C;&amp;#x8BC4;&amp;#x4F30;&amp;#x795E;&amp;#x7ECF;&amp;#x7F51;&amp;#x7EDC;&amp;#x53D8;&amp;#x5F97;&amp;#x7B80;&amp;#x5355;&amp;#x7684;&amp;#x5E93;&amp;#x3002;&amp;#x5B83;&amp;#x53EF;&amp;#x4EE5;&amp;#x6D88;&amp;#x9664;&amp;#x539F;&amp;#x751F;tensorflow&amp;#x91CC;&amp;#x9762;&amp;#x5F88;&amp;#x591A;&amp;#x91CD;&amp;#x590D;&amp;#x7684;&amp;#x6A21;&amp;#x677F;&amp;#x6027;&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x8BA9;&amp;#x4EE3;&amp;#x7801;&amp;#x66F4;&amp;#x7D27;&amp;#x51D1;&amp;#xFF0C;&amp;#x66F4;&amp;#x5177;&amp;#x5907;&amp;#x53EF;&amp;#x8BFB;&amp;#x6027;&amp;#x3002;&amp;#x53E6;&amp;#x5916;slim&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x5F88;&amp;#x591A;&amp;#x8BA1;&amp;#x7B97;&amp;#x673A;&amp;#x89C6;&amp;#x89C9;&amp;#x65B9;&amp;#x9762;&amp;#x7684;&amp;#x8457;&amp;#x540D;&amp;#x6A21;&amp;#x578B;&amp;#xFF08;VGG, AlexNet&amp;#x7B49;&amp;#xFF09;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x4E0D;&amp;#x4EC5;&amp;#x53EF;&amp;#x4EE5;&amp;#x76F4;&amp;#x63A5;&amp;#x4F7F;&amp;#x7528;&amp;#xFF0C;&amp;#x751A;&amp;#x81F3;&amp;#x80FD;&amp;#x4EE5;&amp;#x5404;&amp;#x79CD;&amp;#x65B9;&amp;#x5F0F;&amp;#x8FDB;&amp;#x884C;&amp;#x6269;&amp;#x5C55;&amp;#x3002;&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://zhengyujie.cn/categories/Python/"/>
    
    
      <category term="TensorFlow" scheme="http://zhengyujie.cn/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>TensorFlow学习笔记8：AlexNet</title>
    <link href="http://zhengyujie.cn/2019/08/08/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B08/"/>
    <id>http://zhengyujie.cn/2019/08/08/tf学习笔记8/</id>
    <published>2019-08-08T10:38:17.000Z</published>
    <updated>2019-08-08T03:05:18.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="AlexNet"><a href="#AlexNet" class="headerlink" title="AlexNet"></a>AlexNet</h1><p>AlexNet&#x662F;Hinton&#x7684;&#x5B66;&#x751F;Alex Krizhevsky&#x5728;2012&#x5E74;&#x63D0;&#x51FA;&#x7684;&#x6DF1;&#x5EA6;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#xFF0C;&#x5B83;&#x662F;LeNet&#x4E00;&#x79CD;&#x66F4;&#x6DF1;&#x66F4;&#x5BBD;&#x7684;&#x7248;&#x672C;&#x3002;&#x5728;AlexNet&#x4E0A;&#x9996;&#x6B21;&#x5E94;&#x7528;&#x4E86;&#x51E0;&#x4E2A;trick&#xFF0C;ReLU&#x3001;Dropout&#x548C;LRN&#x3002;AlexNet&#x5305;&#x542B;&#x4E86;6&#x4EBF;3000&#x4E07;&#x4E2A;&#x8FDE;&#x63A5;&#xFF0C;6000&#x4E07;&#x4E2A;&#x53C2;&#x6570;&#x548C;65&#x4E07;&#x4E2A;&#x795E;&#x7ECF;&#x5143;&#xFF0C;&#x6709;5&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#xFF0C;3&#x4E2A;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x3002;&#x5728;ILSVRC 2012&#x6BD4;&#x8D5B;&#x4E2D;&#xFF0C;AlexNet&#x4EE5;top-5&#x7684;&#x9519;&#x8BEF;&#x7387;&#x4E3A;16.4%&#x7684;&#x663E;&#x8457;&#x4F18;&#x52BF;&#x593A;&#x5F97;&#x51A0;&#x519B;&#xFF0C;&#x7B2C;&#x4E8C;&#x540D;&#x7684;&#x6210;&#x7EE9;&#x662F;26.2%&#x3002;AlexNet&#x7684;trick&#x4E3B;&#x8981;&#x5305;&#x62EC;&#xFF1A;</p><a id="more"></a><ol><li>&#x6210;&#x529F;&#x4F7F;&#x7528;RELU&#x4F5C;&#x4E3A;CNN&#x7684;&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x9A8C;&#x8BC1;&#x5176;&#x6548;&#x679C;&#x5728;&#x8F83;&#x6DF1;&#x7684;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x6548;&#x679C;&#x8D85;&#x8FC7;&#x4E86;sigmoid&#xFF0C;&#x89E3;&#x51B3;&#x4E86;sigmoid&#x5728;&#x6DF1;&#x5C42;&#x7684;&#x7F51;&#x7EDC;&#x4E2D;&#x7684;&#x68AF;&#x5EA6;&#x5F25;&#x6563;&#x7684;&#x95EE;&#x9898;&#x3002;</li><li>&#x4F7F;&#x7528;Dropout&#x6765;&#x968F;&#x673A;&#x4F7F;&#x5F97;&#x4E00;&#x90E8;&#x5206;&#x795E;&#x7ECF;&#x5143;&#x5931;&#x6D3B;&#xFF0C;&#x6765;&#x907F;&#x514D;&#x6A21;&#x578B;&#x7684;&#x8FC7;&#x62DF;&#x5408;&#xFF0C;&#x5728;AlexNet&#x4E2D;&#xFF0C;dropout&#x4E3B;&#x8981;&#x5E94;&#x7528;&#x5728;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x3002;</li><li>&#x4F7F;&#x7528;&#x91CD;&#x53E0;&#x7684;&#x6700;&#x5927;&#x6C60;&#x5316;&#xFF0C;&#x4EE5;&#x524D;&#x5728;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#x5927;&#x90E8;&#x5206;&#x90FD;&#x91C7;&#x7528;&#x5E73;&#x5747;&#x6C60;&#x5316;&#xFF0C;&#x5728;AlexNet&#x4E2D;&#x90FD;&#x662F;&#x4F7F;&#x7528;&#x6700;&#x5927;&#x6C60;&#x5316;&#xFF0C;&#x6700;&#x5927;&#x6C60;&#x5316;&#x53EF;&#x4EE5;&#x907F;&#x514D;&#x5E73;&#x5747;&#x6C60;&#x5316;&#x7684;&#x6A21;&#x7CCA;&#x5316;&#x6548;&#x679C;&#x3002;&#x91CD;&#x53E0;&#x7684;&#x6700;&#x5927;&#x6C60;&#x5316;&#x662F;&#x6307;&#x5377;&#x79EF;&#x6838;&#x7684;&#x5C3A;&#x5BF8;&#x8981;&#x5927;&#x4E8E;&#x6B65;&#x957F;&#xFF0C;&#x8FD9;&#x6837;&#x6C60;&#x5316;&#x5C42;&#x7684;&#x8F93;&#x51FA;&#x4E4B;&#x95F4;&#x4F1A;&#x6709;&#x91CD;&#x53E0;&#x548C;&#x8986;&#x76D6;&#xFF0C;&#x63D0;&#x5347;&#x7279;&#x5F81;&#x7684;&#x4E30;&#x5BCC;&#x6027;&#x3002;&#x5728;AlexNet&#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x5377;&#x79EF;&#x6838;&#x5927;&#x5C0F;&#x4E3A;3&#xD7;3&#xFF0C;&#x6A2A;&#x5411;&#x548C;&#x7EB5;&#x5411;&#x7684;&#x6B65;&#x957F;&#x90FD;&#x4E3A;2&#x3002;</li><li>&#x4F7F;&#x7528;LRN&#x5C42;&#xFF0C;&#x5BF9;&#x5C40;&#x90E8;&#x795E;&#x7ECF;&#x5143;&#x7684;&#x6D3B;&#x52A8;&#x521B;&#x5EFA;&#x6709;&#x7ADE;&#x4E89;&#x673A;&#x5236;&#xFF0C;&#x8BA9;&#x54CD;&#x5E94;&#x8F83;&#x5927;&#x7684;&#x503C;&#x53D8;&#x5F97;&#x76F8;&#x5BF9;&#x66F4;&#x5927;&#xFF0C;&#x5E76;&#x6291;&#x5236;&#x53CD;&#x9988;&#x8F83;&#x5C0F;&#x7684;&#x795E;&#x7ECF;&#x5143;&#xFF0C;&#x6765;&#x589E;&#x5F3A;&#x6A21;&#x578B;&#x7684;&#x6CDB;&#x5316;&#x80FD;&#x529B;&#x3002;</li><li>&#x4F7F;&#x7528;&#x4E86;CUDA&#x6765;&#x52A0;&#x901F;&#x6DF1;&#x5EA6;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x8BAD;&#x7EC3;&#x3002;</li><li>&#x6570;&#x636E;&#x589E;&#x5F3A;&#xFF0C;&#x968F;&#x673A;&#x4ECE;256&#xD7;256&#x7684;&#x539F;&#x59CB;&#x56FE;&#x50CF;&#x4E2D;&#x622A;&#x53D6;224&#xD7;224&#x7684;&#x56FE;&#x50CF;&#x4EE5;&#x53CA;&#x968F;&#x673A;&#x7FFB;&#x8F6C;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x6570;&#x636E;&#x589E;&#x5F3A;&#xFF0C;&#x5728;&#x53C2;&#x6570;&#x4F17;&#x591A;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4F1A;&#x9677;&#x5165;&#x5230;&#x8FC7;&#x62DF;&#x5408;&#x4E2D;&#xFF0C;&#x4F7F;&#x7528;&#x6570;&#x636E;&#x589E;&#x5F3A;&#x53EF;&#x4EE5;&#x51CF;&#x7F13;&#x8FC7;&#x62DF;&#x5408;&#xFF0C;&#x63D0;&#x5347;&#x6CDB;&#x5316;&#x80FD;&#x529B;&#x3002;&#x8FDB;&#x884C;&#x9884;&#x6D4B;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x63D0;&#x53D6;&#x56FE;&#x7247;&#x7684;&#x56DB;&#x4E2A;&#x89D2;&#x52A0;&#x4E2D;&#x95F4;&#x4F4D;&#x7F6E;&#xFF0C;&#x5E76;&#x8FDB;&#x884C;&#x5DE6;&#x53F3;&#x7FFB;&#x8F6C;&#xFF0C;&#x4E00;&#x5171;10&#x5F20;&#x56FE;&#x7247;&#xFF0C;&#x5BF9;&#x5B83;&#x4EEC;&#x8FDB;&#x884C;&#x9884;&#x6D4B;&#x5E76;&#x53D6;10&#x6B21;&#x7ED3;&#x679C;&#x7684;&#x5E73;&#x5747;&#x503C;&#x3002;&#x5728;AlexNet&#x8BBA;&#x6587;&#x4E2D;&#x4E5F;&#x63D0;&#x5230;&#x4E86;&#xFF0C;&#x5BF9;&#x56FE;&#x50CF;&#x7684;RGB&#x6570;&#x636E;&#x8FDB;&#x884C;PCA&#x5904;&#x7406;&#xFF0C;&#x5E76;&#x505A;&#x4E00;&#x4E2A;&#x6807;&#x51C6;&#x5DEE;&#x4E3A;0.1&#x7684;&#x9AD8;&#x65AF;&#x6270;&#x52A8;&#xFF0C;&#x589E;&#x52A0;&#x4E00;&#x4E9B;&#x566A;&#x58F0;&#xFF0C;&#x53EF;&#x4EE5;&#x964D;&#x4F4E;1%&#x7684;&#x9519;&#x8BEF;&#x7387;&#x3002;</li></ol><h1 id="&#x7F51;&#x7EDC;&#x7ED3;&#x6784;"><a href="#&#x7F51;&#x7EDC;&#x7ED3;&#x6784;" class="headerlink" title="&#x7F51;&#x7EDC;&#x7ED3;&#x6784;"></a>&#x7F51;&#x7EDC;&#x7ED3;&#x6784;</h1><p><img src="/2019/08/08/tf&#x5B66;&#x4E60;&#x7B14;&#x8BB0;8/1.png" alt></p><h1 id="TensorFlow&#x5B9E;&#x73B0;"><a href="#TensorFlow&#x5B9E;&#x73B0;" class="headerlink" title="TensorFlow&#x5B9E;&#x73B0;"></a>TensorFlow&#x5B9E;&#x73B0;</h1><ol><li><p>&#x7B2C;&#x4E00;&#x5C42;&#x5377;&#x79EF;&#x5C42;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> tf.name_scope(<span class="string">&quot;conv1&quot;</span>) <span class="keyword">as</span> scope:</span><br><span class="line">    <span class="comment">#&#x8BBE;&#x7F6E;&#x5377;&#x79EF;&#x6838;11&#xD7;11,3&#x901A;&#x9053;,64&#x4E2A;&#x5377;&#x79EF;&#x6838;</span></span><br><span class="line">    kernel1 = tf.Variable(tf.truncated_normal([<span class="number">11</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">64</span>],mean=<span class="number">0</span>,stddev=<span class="number">0.1</span>,</span><br><span class="line">                                              dtype=tf.float32),name=<span class="string">&quot;weights&quot;</span>)</span><br><span class="line">    <span class="comment">#&#x5377;&#x79EF;,&#x5377;&#x79EF;&#x7684;&#x6A2A;&#x5411;&#x6B65;&#x957F;&#x548C;&#x7AD6;&#x5411;&#x8865;&#x507F;&#x90FD;&#x4E3A;4</span></span><br><span class="line">    conv = tf.nn.conv2d(images,kernel1,[<span class="number">1</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">    <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x504F;&#x7F6E;</span></span><br><span class="line">    biases = tf.Variable(tf.constant(<span class="number">0</span>,shape=[<span class="number">64</span>],dtype=tf.float32),trainable=<span class="literal">True</span>,name=<span class="string">&quot;biases&quot;</span>)</span><br><span class="line">    bias = tf.nn.bias_add(conv,biases)</span><br><span class="line">    <span class="comment">#RELU&#x6FC0;&#x6D3B;&#x51FD;&#x6570;</span></span><br><span class="line">    conv1 = tf.nn.relu(bias,name=scope)</span><br><span class="line">    <span class="comment">#&#x8F93;&#x51FA;&#x8BE5;&#x5C42;&#x7684;&#x4FE1;&#x606F;</span></span><br><span class="line">    print_tensor_info(conv1)</span><br><span class="line">    <span class="comment">#&#x7EDF;&#x8BA1;&#x53C2;&#x6570;</span></span><br><span class="line">    parameters += [kernel1,biases]</span><br><span class="line">    <span class="comment">#lrn&#x5904;&#x7406;</span></span><br><span class="line">    lrn1 = tf.nn.lrn(conv1,<span class="number">4</span>,bias=<span class="number">1</span>,alpha=<span class="number">1e-3</span>/<span class="number">9</span>,beta=<span class="number">0.75</span>,name=<span class="string">&quot;lrn1&quot;</span>)</span><br><span class="line">    <span class="comment">#&#x6700;&#x5927;&#x6C60;&#x5316;</span></span><br><span class="line">    pool1 = tf.nn.max_pool(lrn1,ksize=[<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">1</span>],strides=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>],padding=<span class="string">&quot;VALID&quot;</span>,name=<span class="string">&quot;pool1&quot;</span>)</span><br><span class="line">    print_tensor_info(pool1)</span><br></pre></td></tr></table></figure></li><li><p>&#x7B2C;&#x4E8C;&#x5C42;&#x5377;&#x79EF;&#x5C42;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> tf.name_scope(<span class="string">&quot;conv2&quot;</span>) <span class="keyword">as</span> scope:</span><br><span class="line">    <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x6743;&#x91CD;</span></span><br><span class="line">    kernel2 = tf.Variable(tf.truncated_normal([<span class="number">5</span>,<span class="number">5</span>,<span class="number">64</span>,<span class="number">192</span>],dtype=tf.float32,stddev=<span class="number">0.1</span>)</span><br><span class="line">                          ,name=<span class="string">&quot;weights&quot;</span>)</span><br><span class="line">    conv = tf.nn.conv2d(pool1,kernel2,[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">    <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x504F;&#x7F6E;</span></span><br><span class="line">    biases = tf.Variable(tf.constant(<span class="number">0</span>,dtype=tf.float32,shape=[<span class="number">192</span>])</span><br><span class="line">                         ,trainable=<span class="literal">True</span>,name=<span class="string">&quot;biases&quot;</span>)</span><br><span class="line">    bias = tf.nn.bias_add(conv,biases)</span><br><span class="line">    <span class="comment">#RELU&#x6FC0;&#x6D3B;</span></span><br><span class="line">    conv2 = tf.nn.relu(bias,name=scope)</span><br><span class="line">    print_tensor_info(conv2)</span><br><span class="line">    parameters += [kernel2,biases]</span><br><span class="line">    <span class="comment">#LRN</span></span><br><span class="line">    lrn2 = tf.nn.lrn(conv2,<span class="number">4</span>,<span class="number">1.0</span>,alpha=<span class="number">1e-3</span>/<span class="number">9</span>,beta=<span class="number">0.75</span>,name=<span class="string">&quot;lrn2&quot;</span>)</span><br><span class="line">    <span class="comment">#&#x6700;&#x5927;&#x6C60;&#x5316;</span></span><br><span class="line">    pool2 = tf.nn.max_pool(lrn2,[<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>],padding=<span class="string">&quot;VALID&quot;</span>,name=<span class="string">&quot;pool2&quot;</span>)</span><br><span class="line">    print_tensor_info(pool2)</span><br></pre></td></tr></table></figure></li><li><p>&#x7B2C;&#x4E09;&#x5C42;&#x5377;&#x79EF;&#x5C42;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> tf.name_scope(<span class="string">&quot;conv3&quot;</span>) <span class="keyword">as</span> scope:</span><br><span class="line">       <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x6743;&#x91CD;</span></span><br><span class="line">       kernel3 = tf.Variable(tf.truncated_normal([<span class="number">3</span>,<span class="number">3</span>,<span class="number">192</span>,<span class="number">384</span>],dtype=tf.float32,stddev=<span class="number">0.1</span>)</span><br><span class="line">                             ,name=<span class="string">&quot;weights&quot;</span>)</span><br><span class="line">       conv = tf.nn.conv2d(pool2,kernel3,strides=[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">       biases = tf.Variable(tf.constant(<span class="number">0.0</span>,shape=[<span class="number">384</span>],dtype=tf.float32),trainable=<span class="literal">True</span>,name=<span class="string">&quot;biases&quot;</span>)</span><br><span class="line">       bias = tf.nn.bias_add(conv,biases)</span><br><span class="line">       <span class="comment">#RELU&#x6FC0;&#x6D3B;&#x5C42;</span></span><br><span class="line">       conv3 = tf.nn.relu(bias,name=scope)</span><br><span class="line">       parameters += [kernel3,biases]</span><br><span class="line">       print_tensor_info(conv3)</span><br></pre></td></tr></table></figure></li><li><p>&#x7B2C;&#x56DB;&#x5C42;&#x5377;&#x79EF;&#x5C42;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> tf.name_scope(<span class="string">&quot;conv4&quot;</span>) <span class="keyword">as</span> scope:</span><br><span class="line">    <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x6743;&#x91CD;</span></span><br><span class="line">    kernel4 = tf.Variable(tf.truncated_normal([<span class="number">3</span>,<span class="number">3</span>,<span class="number">384</span>,<span class="number">256</span>],stddev=<span class="number">0.1</span>,dtype=tf.float32),</span><br><span class="line">                          name=<span class="string">&quot;weights&quot;</span>)</span><br><span class="line">    <span class="comment">#&#x5377;&#x79EF;</span></span><br><span class="line">    conv = tf.nn.conv2d(conv3,kernel4,strides=[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">    biases = tf.Variable(tf.constant(<span class="number">0.0</span>,dtype=tf.float32,shape=[<span class="number">256</span>]),trainable=<span class="literal">True</span>,name=<span class="string">&quot;biases&quot;</span>)</span><br><span class="line">    bias = tf.nn.bias_add(conv,biases)</span><br><span class="line">    <span class="comment">#RELU&#x6FC0;&#x6D3B;</span></span><br><span class="line">    conv4 = tf.nn.relu(bias,name=scope)</span><br><span class="line">    parameters += [kernel4,biases]</span><br><span class="line">    print_tensor_info(conv4)</span><br></pre></td></tr></table></figure></li><li><p>&#x7B2C;&#x4E94;&#x5C42;&#x5377;&#x79EF;&#x5C42;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> tf.name_scope(<span class="string">&quot;conv5&quot;</span>) <span class="keyword">as</span> scope:</span><br><span class="line">    <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x6743;&#x91CD;</span></span><br><span class="line">    kernel5 = tf.Variable(tf.truncated_normal([<span class="number">3</span>,<span class="number">3</span>,<span class="number">256</span>,<span class="number">256</span>],stddev=<span class="number">0.1</span>,dtype=tf.float32),</span><br><span class="line">                          name=<span class="string">&quot;weights&quot;</span>)</span><br><span class="line">    conv = tf.nn.conv2d(conv4,kernel5,strides=[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">    biases = tf.Variable(tf.constant(<span class="number">0.0</span>,dtype=tf.float32,shape=[<span class="number">256</span>]),name=<span class="string">&quot;biases&quot;</span>)</span><br><span class="line">    bias = tf.nn.bias_add(conv,biases)</span><br><span class="line">    <span class="comment">#REUL&#x6FC0;&#x6D3B;&#x5C42;</span></span><br><span class="line">    conv5 = tf.nn.relu(bias)</span><br><span class="line">    parameters += [kernel5,bias]</span><br><span class="line">    <span class="comment">#&#x6700;&#x5927;&#x6C60;&#x5316;</span></span><br><span class="line">    pool5 = tf.nn.max_pool(conv5,[<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>],padding=<span class="string">&quot;VALID&quot;</span>,name=<span class="string">&quot;pool5&quot;</span>)</span><br><span class="line">    print_tensor_info(pool5)</span><br></pre></td></tr></table></figure></li><li><p>&#x6700;&#x540E;&#x4E09;&#x5C42;&#x5168;&#x8FDE;&#x63A5;&#x5C42;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#&#x7B2C;&#x516D;&#x5C42;&#x5168;&#x8FDE;&#x63A5;&#x5C42;</span></span><br><span class="line">pool5 = tf.reshape(pool5,(<span class="number">-1</span>,<span class="number">6</span>*<span class="number">6</span>*<span class="number">256</span>))</span><br><span class="line">weight6 = tf.Variable(tf.truncated_normal([<span class="number">6</span>*<span class="number">6</span>*<span class="number">256</span>,<span class="number">4096</span>],stddev=<span class="number">0.1</span>,dtype=tf.float32),</span><br><span class="line">                       name=<span class="string">&quot;weight6&quot;</span>)</span><br><span class="line">ful_bias1 = tf.Variable(tf.constant(<span class="number">0.0</span>,dtype=tf.float32,shape=[<span class="number">4096</span>]),name=<span class="string">&quot;ful_bias1&quot;</span>)</span><br><span class="line">ful_con1 = tf.nn.relu(tf.add(tf.matmul(pool5,weight6),ful_bias1))</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x7B2C;&#x4E03;&#x5C42;&#x7B2C;&#x4E8C;&#x5C42;&#x5168;&#x8FDE;&#x63A5;&#x5C42;</span></span><br><span class="line">weight7 = tf.Variable(tf.truncated_normal([<span class="number">4096</span>,<span class="number">4096</span>],stddev=<span class="number">0.1</span>,dtype=tf.float32),</span><br><span class="line">                      name=<span class="string">&quot;weight7&quot;</span>)</span><br><span class="line">ful_bias2 = tf.Variable(tf.constant(<span class="number">0.0</span>,dtype=tf.float32,shape=[<span class="number">4096</span>]),name=<span class="string">&quot;ful_bias2&quot;</span>)</span><br><span class="line">ful_con2 = tf.nn.relu(tf.add(tf.matmul(ful_con1,weight7),ful_bias2))</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#&#x7B2C;&#x516B;&#x5C42;&#x7B2C;&#x4E09;&#x5C42;&#x5168;&#x8FDE;&#x63A5;&#x5C42;</span></span><br><span class="line">weight8 = tf.Variable(tf.truncated_normal([<span class="number">4096</span>,<span class="number">1000</span>],stddev=<span class="number">0.1</span>,dtype=tf.float32),</span><br><span class="line">                      name=<span class="string">&quot;weight8&quot;</span>)</span><br><span class="line">ful_bias3 = tf.Variable(tf.constant(<span class="number">0.0</span>,dtype=tf.float32,shape=[<span class="number">1000</span>]),name=<span class="string">&quot;ful_bias3&quot;</span>)</span><br><span class="line">ful_con3 = tf.nn.relu(tf.add(tf.matmul(ful_con2,weight8),ful_bias3))</span><br></pre></td></tr></table></figure></li><li><p>softmax&#x5C42;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">weight9 = tf.Variable(tf.truncated_normal([<span class="number">1000</span>,<span class="number">10</span>],stddev=<span class="number">0.1</span>),dtype=tf.float32,name=<span class="string">&quot;weight9&quot;</span>)</span><br><span class="line">bias9 = tf.Variable(tf.constant(<span class="number">0.0</span>,shape=[<span class="number">10</span>]),dtype=tf.float32,name=<span class="string">&quot;bias9&quot;</span>)</span><br><span class="line">output_softmax = tf.nn.softmax(tf.matmul(ful_con3,weight9)+bias9)</span><br></pre></td></tr></table></figure></li><li><p>&#x8BC4;&#x4F30;&#x6A21;&#x578B;&#x6027;&#x80FD;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">time_tensorflow_run</span><span class="params">(session,target,info_string)</span>:</span></span><br><span class="line">    <span class="comment">#&#x524D;10&#x6B21;&#x8FED;&#x4EE3;&#x4E0D;&#x8BA1;&#x5165;&#x65F6;&#x95F4;&#x6D88;&#x8017;</span></span><br><span class="line">    num_step_burn_in = <span class="number">10</span></span><br><span class="line">    total_duration = <span class="number">0.0</span></span><br><span class="line">    total_duration_squared = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num_bathes + num_step_burn_in):</span><br><span class="line">        start_time = time.time()</span><br><span class="line">        _ = session.run(target)</span><br><span class="line">        duration = time.time() - start_time</span><br><span class="line">        <span class="keyword">if</span> i &gt;= num_step_burn_in:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> i % <span class="number">10</span> :</span><br><span class="line">                print(<span class="string">&quot;%s:step %d,duration=%.3f&quot;</span>%(datetime.now(),i-num_step_burn_in,duration))</span><br><span class="line">            total_duration += duration</span><br><span class="line">            total_duration_squared += duration * duration</span><br><span class="line">    <span class="comment">#&#x8BA1;&#x7B97;&#x6D88;&#x8017;&#x65F6;&#x95F4;&#x7684;&#x5E73;&#x5747;&#x5DEE;</span></span><br><span class="line">    mn = total_duration / num_bathes</span><br><span class="line">    <span class="comment">#&#x8BA1;&#x7B97;&#x6D88;&#x8017;&#x65F6;&#x95F4;&#x7684;&#x6807;&#x51C6;&#x5DEE;</span></span><br><span class="line">    vr = total_duration_squared / num_bathes - mn * mn</span><br><span class="line">    std = math.sqrt(vr)</span><br><span class="line">    print(<span class="string">&quot;%s:%s across %d steps,%.3f +/- %.3f sec / batch&quot;</span>%(datetime.now(),info_string,num_bathes,mn,std))</span><br></pre></td></tr></table></figure></li></ol><h1 id="&#x5177;&#x4F53;&#x4EE3;&#x7801;"><a href="#&#x5177;&#x4F53;&#x4EE3;&#x7801;" class="headerlink" title="&#x5177;&#x4F53;&#x4EE3;&#x7801;"></a>&#x5177;&#x4F53;&#x4EE3;&#x7801;</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> math,time</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"></span><br><span class="line">batch_size = <span class="number">32</span></span><br><span class="line">num_bathes = <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">&#x83B7;&#x53D6;tensor&#x4FE1;&#x606F;</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_tensor_info</span><span class="params">(tensor)</span>:</span></span><br><span class="line">    print(<span class="string">&quot;tensor name:&quot;</span>,tensor.op.name,<span class="string">&quot;-tensor shape:&quot;</span>,tensor.get_shape().as_list())</span><br><span class="line"></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">&#x8BA1;&#x7B97;&#x6BCF;&#x6B21;&#x8FED;&#x4EE3;&#x6D88;&#x8017;&#x65F6;&#x95F4;</span></span><br><span class="line"><span class="string">session:TensorFlow&#x7684;Session</span></span><br><span class="line"><span class="string">target:&#x9700;&#x8981;&#x8BC4;&#x6D4B;&#x7684;&#x8FD0;&#x7B97;&#x7B97;&#x5B50;</span></span><br><span class="line"><span class="string">info_string:&#x6D4B;&#x8BD5;&#x7684;&#x540D;&#x79F0;</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">time_tensorflow_run</span><span class="params">(session,target,info_string)</span>:</span></span><br><span class="line">    <span class="comment">#&#x524D;10&#x6B21;&#x8FED;&#x4EE3;&#x4E0D;&#x8BA1;&#x5165;&#x65F6;&#x95F4;&#x6D88;&#x8017;</span></span><br><span class="line">    num_step_burn_in = <span class="number">10</span></span><br><span class="line">    total_duration = <span class="number">0.0</span></span><br><span class="line">    total_duration_squared = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num_bathes + num_step_burn_in):</span><br><span class="line">        start_time = time.time()</span><br><span class="line">        _ = session.run(target)</span><br><span class="line">        duration = time.time() - start_time</span><br><span class="line">        <span class="keyword">if</span> i &gt;= num_step_burn_in:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> i % <span class="number">10</span> :</span><br><span class="line">                print(<span class="string">&quot;%s:step %d,duration=%.3f&quot;</span>%(datetime.now(),i-num_step_burn_in,duration))</span><br><span class="line">            total_duration += duration</span><br><span class="line">            total_duration_squared += duration * duration</span><br><span class="line">    <span class="comment">#&#x8BA1;&#x7B97;&#x6D88;&#x8017;&#x65F6;&#x95F4;&#x7684;&#x5E73;&#x5747;&#x5DEE;</span></span><br><span class="line">    mn = total_duration / num_bathes</span><br><span class="line">    <span class="comment">#&#x8BA1;&#x7B97;&#x6D88;&#x8017;&#x65F6;&#x95F4;&#x7684;&#x6807;&#x51C6;&#x5DEE;</span></span><br><span class="line">    vr = total_duration_squared / num_bathes - mn * mn</span><br><span class="line">    std = math.sqrt(vr)</span><br><span class="line">    print(<span class="string">&quot;%s:%s across %d steps,%.3f +/- %.3f sec / batch&quot;</span>%(datetime.now(),info_string,num_bathes,</span><br><span class="line">                                                             mn,std))</span><br><span class="line"><span class="comment">#&#x4E3B;&#x51FD;&#x6570;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_bechmark</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> tf.Graph().as_default():</span><br><span class="line">        image_size = <span class="number">224</span></span><br><span class="line">        <span class="comment">#&#x4EE5;&#x9AD8;&#x65AF;&#x5206;&#x5E03;&#x4EA7;&#x751F;&#x4E00;&#x4E9B;&#x56FE;&#x7247;</span></span><br><span class="line">        images = tf.Variable(tf.random_normal([batch_size,image_size,image_size,<span class="number">3</span>],</span><br><span class="line">                                              dtype=tf.float32,stddev=<span class="number">0.1</span>))</span><br><span class="line">        output,parameters = inference(images)</span><br><span class="line">        init = tf.global_variables_initializer()</span><br><span class="line">        sess = tf.Session()</span><br><span class="line">        sess.run(init)</span><br><span class="line">        time_tensorflow_run(sess,output,<span class="string">&quot;Forward&quot;</span>)</span><br><span class="line">        objective = tf.nn.l2_loss(output)</span><br><span class="line">        grad = tf.gradients(objective,parameters)</span><br><span class="line">        time_tensorflow_run(sess,grad,<span class="string">&quot;Forward-backward&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inference</span><span class="params">(images)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x5B9A;&#x4E49;&#x53C2;&#x6570;</span></span><br><span class="line">    parameters = []</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E00;&#x5C42;&#x5377;&#x79EF;&#x5C42;</span></span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">&quot;conv1&quot;</span>) <span class="keyword">as</span> scope:</span><br><span class="line">        <span class="comment">#&#x8BBE;&#x7F6E;&#x5377;&#x79EF;&#x6838;11&#xD7;11,3&#x901A;&#x9053;,64&#x4E2A;&#x5377;&#x79EF;&#x6838;</span></span><br><span class="line">        kernel1 = tf.Variable(tf.truncated_normal([<span class="number">11</span>,<span class="number">11</span>,<span class="number">3</span>,<span class="number">64</span>],mean=<span class="number">0</span>,stddev=<span class="number">0.1</span>,</span><br><span class="line">                                                  dtype=tf.float32),name=<span class="string">&quot;weights&quot;</span>)</span><br><span class="line">        <span class="comment">#&#x5377;&#x79EF;,&#x5377;&#x79EF;&#x7684;&#x6A2A;&#x5411;&#x6B65;&#x957F;&#x548C;&#x7AD6;&#x5411;&#x8865;&#x507F;&#x90FD;&#x4E3A;4</span></span><br><span class="line">        conv = tf.nn.conv2d(images,kernel1,[<span class="number">1</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">        <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x504F;&#x7F6E;</span></span><br><span class="line">        biases = tf.Variable(tf.constant(<span class="number">0</span>,shape=[<span class="number">64</span>],dtype=tf.float32),trainable=<span class="literal">True</span>,name=<span class="string">&quot;biases&quot;</span>)</span><br><span class="line">        bias = tf.nn.bias_add(conv,biases)</span><br><span class="line">        <span class="comment">#RELU&#x6FC0;&#x6D3B;&#x51FD;&#x6570;</span></span><br><span class="line">        conv1 = tf.nn.relu(bias,name=scope)</span><br><span class="line">        <span class="comment">#&#x8F93;&#x51FA;&#x8BE5;&#x5C42;&#x7684;&#x4FE1;&#x606F;</span></span><br><span class="line">        print_tensor_info(conv1)</span><br><span class="line">        <span class="comment">#&#x7EDF;&#x8BA1;&#x53C2;&#x6570;</span></span><br><span class="line">        parameters += [kernel1,biases]</span><br><span class="line">        <span class="comment">#lrn&#x5904;&#x7406;</span></span><br><span class="line">        lrn1 = tf.nn.lrn(conv1,<span class="number">4</span>,bias=<span class="number">1</span>,alpha=<span class="number">1e-3</span>/<span class="number">9</span>,beta=<span class="number">0.75</span>,name=<span class="string">&quot;lrn1&quot;</span>)</span><br><span class="line">        <span class="comment">#&#x6700;&#x5927;&#x6C60;&#x5316;</span></span><br><span class="line">        pool1 = tf.nn.max_pool(lrn1,ksize=[<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">1</span>],strides=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>],padding=<span class="string">&quot;VALID&quot;</span>,name=<span class="string">&quot;pool1&quot;</span>)</span><br><span class="line">        print_tensor_info(pool1)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E8C;&#x5C42;&#x5377;&#x79EF;&#x5C42;</span></span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">&quot;conv2&quot;</span>) <span class="keyword">as</span> scope:</span><br><span class="line">        <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x6743;&#x91CD;</span></span><br><span class="line">        kernel2 = tf.Variable(tf.truncated_normal([<span class="number">5</span>,<span class="number">5</span>,<span class="number">64</span>,<span class="number">192</span>],dtype=tf.float32,stddev=<span class="number">0.1</span>)</span><br><span class="line">                              ,name=<span class="string">&quot;weights&quot;</span>)</span><br><span class="line">        conv = tf.nn.conv2d(pool1,kernel2,[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">        <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x504F;&#x7F6E;</span></span><br><span class="line">        biases = tf.Variable(tf.constant(<span class="number">0</span>,dtype=tf.float32,shape=[<span class="number">192</span>])</span><br><span class="line">                             ,trainable=<span class="literal">True</span>,name=<span class="string">&quot;biases&quot;</span>)</span><br><span class="line">        bias = tf.nn.bias_add(conv,biases)</span><br><span class="line">        <span class="comment">#RELU&#x6FC0;&#x6D3B;</span></span><br><span class="line">        conv2 = tf.nn.relu(bias,name=scope)</span><br><span class="line">        print_tensor_info(conv2)</span><br><span class="line">        parameters += [kernel2,biases]</span><br><span class="line">        <span class="comment">#LRN</span></span><br><span class="line">        lrn2 = tf.nn.lrn(conv2,<span class="number">4</span>,<span class="number">1.0</span>,alpha=<span class="number">1e-3</span>/<span class="number">9</span>,beta=<span class="number">0.75</span>,name=<span class="string">&quot;lrn2&quot;</span>)</span><br><span class="line">        <span class="comment">#&#x6700;&#x5927;&#x6C60;&#x5316;</span></span><br><span class="line">        pool2 = tf.nn.max_pool(lrn2,[<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>],padding=<span class="string">&quot;VALID&quot;</span>,name=<span class="string">&quot;pool2&quot;</span>)</span><br><span class="line">        print_tensor_info(pool2)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E09;&#x5C42;&#x5377;&#x79EF;&#x5C42;</span></span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">&quot;conv3&quot;</span>) <span class="keyword">as</span> scope:</span><br><span class="line">        <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x6743;&#x91CD;</span></span><br><span class="line">        kernel3 = tf.Variable(tf.truncated_normal([<span class="number">3</span>,<span class="number">3</span>,<span class="number">192</span>,<span class="number">384</span>],dtype=tf.float32,stddev=<span class="number">0.1</span>)</span><br><span class="line">                              ,name=<span class="string">&quot;weights&quot;</span>)</span><br><span class="line">        conv = tf.nn.conv2d(pool2,kernel3,strides=[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">        biases = tf.Variable(tf.constant(<span class="number">0.0</span>,shape=[<span class="number">384</span>],dtype=tf.float32),trainable=<span class="literal">True</span>,name=<span class="string">&quot;biases&quot;</span>)</span><br><span class="line">        bias = tf.nn.bias_add(conv,biases)</span><br><span class="line">        <span class="comment">#RELU&#x6FC0;&#x6D3B;&#x5C42;</span></span><br><span class="line">        conv3 = tf.nn.relu(bias,name=scope)</span><br><span class="line">        parameters += [kernel3,biases]</span><br><span class="line">        print_tensor_info(conv3)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x56DB;&#x5C42;&#x5377;&#x79EF;&#x5C42;</span></span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">&quot;conv4&quot;</span>) <span class="keyword">as</span> scope:</span><br><span class="line">        <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x6743;&#x91CD;</span></span><br><span class="line">        kernel4 = tf.Variable(tf.truncated_normal([<span class="number">3</span>,<span class="number">3</span>,<span class="number">384</span>,<span class="number">256</span>],stddev=<span class="number">0.1</span>,dtype=tf.float32),</span><br><span class="line">                              name=<span class="string">&quot;weights&quot;</span>)</span><br><span class="line">        <span class="comment">#&#x5377;&#x79EF;</span></span><br><span class="line">        conv = tf.nn.conv2d(conv3,kernel4,strides=[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">        biases = tf.Variable(tf.constant(<span class="number">0.0</span>,dtype=tf.float32,shape=[<span class="number">256</span>]),trainable=<span class="literal">True</span>,name=<span class="string">&quot;biases&quot;</span>)</span><br><span class="line">        bias = tf.nn.bias_add(conv,biases)</span><br><span class="line">        <span class="comment">#RELU&#x6FC0;&#x6D3B;</span></span><br><span class="line">        conv4 = tf.nn.relu(bias,name=scope)</span><br><span class="line">        parameters += [kernel4,biases]</span><br><span class="line">        print_tensor_info(conv4)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E94;&#x5C42;&#x5377;&#x79EF;&#x5C42;</span></span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(<span class="string">&quot;conv5&quot;</span>) <span class="keyword">as</span> scope:</span><br><span class="line">        <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x6743;&#x91CD;</span></span><br><span class="line">        kernel5 = tf.Variable(tf.truncated_normal([<span class="number">3</span>,<span class="number">3</span>,<span class="number">256</span>,<span class="number">256</span>],stddev=<span class="number">0.1</span>,dtype=tf.float32),</span><br><span class="line">                              name=<span class="string">&quot;weights&quot;</span>)</span><br><span class="line">        conv = tf.nn.conv2d(conv4,kernel5,strides=[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">        biases = tf.Variable(tf.constant(<span class="number">0.0</span>,dtype=tf.float32,shape=[<span class="number">256</span>]),name=<span class="string">&quot;biases&quot;</span>)</span><br><span class="line">        bias = tf.nn.bias_add(conv,biases)</span><br><span class="line">        <span class="comment">#REUL&#x6FC0;&#x6D3B;&#x5C42;</span></span><br><span class="line">        conv5 = tf.nn.relu(bias)</span><br><span class="line">        parameters += [kernel5,bias]</span><br><span class="line">        <span class="comment">#&#x6700;&#x5927;&#x6C60;&#x5316;</span></span><br><span class="line">        pool5 = tf.nn.max_pool(conv5,[<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>],padding=<span class="string">&quot;VALID&quot;</span>,name=<span class="string">&quot;pool5&quot;</span>)</span><br><span class="line">        print_tensor_info(pool5)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x516D;&#x5C42;&#x5168;&#x8FDE;&#x63A5;&#x5C42;</span></span><br><span class="line">    pool5 = tf.reshape(pool5,(<span class="number">-1</span>,<span class="number">6</span>*<span class="number">6</span>*<span class="number">256</span>))</span><br><span class="line">    weight6 = tf.Variable(tf.truncated_normal([<span class="number">6</span>*<span class="number">6</span>*<span class="number">256</span>,<span class="number">4096</span>],stddev=<span class="number">0.1</span>,dtype=tf.float32),</span><br><span class="line">                           name=<span class="string">&quot;weight6&quot;</span>)</span><br><span class="line">    ful_bias1 = tf.Variable(tf.constant(<span class="number">0.0</span>,dtype=tf.float32,shape=[<span class="number">4096</span>]),name=<span class="string">&quot;ful_bias1&quot;</span>)</span><br><span class="line">    ful_con1 = tf.nn.relu(tf.add(tf.matmul(pool5,weight6),ful_bias1))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E03;&#x5C42;&#x7B2C;&#x4E8C;&#x5C42;&#x5168;&#x8FDE;&#x63A5;&#x5C42;</span></span><br><span class="line">    weight7 = tf.Variable(tf.truncated_normal([<span class="number">4096</span>,<span class="number">4096</span>],stddev=<span class="number">0.1</span>,dtype=tf.float32),</span><br><span class="line">                          name=<span class="string">&quot;weight7&quot;</span>)</span><br><span class="line">    ful_bias2 = tf.Variable(tf.constant(<span class="number">0.0</span>,dtype=tf.float32,shape=[<span class="number">4096</span>]),name=<span class="string">&quot;ful_bias2&quot;</span>)</span><br><span class="line">    ful_con2 = tf.nn.relu(tf.add(tf.matmul(ful_con1,weight7),ful_bias2))</span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x516B;&#x5C42;&#x7B2C;&#x4E09;&#x5C42;&#x5168;&#x8FDE;&#x63A5;&#x5C42;</span></span><br><span class="line">    weight8 = tf.Variable(tf.truncated_normal([<span class="number">4096</span>,<span class="number">1000</span>],stddev=<span class="number">0.1</span>,dtype=tf.float32),</span><br><span class="line">                          name=<span class="string">&quot;weight8&quot;</span>)</span><br><span class="line">    ful_bias3 = tf.Variable(tf.constant(<span class="number">0.0</span>,dtype=tf.float32,shape=[<span class="number">1000</span>]),name=<span class="string">&quot;ful_bias3&quot;</span>)</span><br><span class="line">    ful_con3 = tf.nn.relu(tf.add(tf.matmul(ful_con2,weight8),ful_bias3))</span><br><span class="line"></span><br><span class="line">    <span class="comment">#softmax&#x5C42;</span></span><br><span class="line">    weight9 = tf.Variable(tf.truncated_normal([<span class="number">1000</span>,<span class="number">10</span>],stddev=<span class="number">0.1</span>),dtype=tf.float32,name=<span class="string">&quot;weight9&quot;</span>)</span><br><span class="line">    bias9 = tf.Variable(tf.constant(<span class="number">0.0</span>,shape=[<span class="number">10</span>]),dtype=tf.float32,name=<span class="string">&quot;bias9&quot;</span>)</span><br><span class="line">    output_softmax = tf.nn.softmax(tf.matmul(ful_con3,weight9)+bias9)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> output_softmax,parameters</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    run_bechmark()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;AlexNet&quot;&gt;&lt;a href=&quot;#AlexNet&quot; class=&quot;headerlink&quot; title=&quot;AlexNet&quot;&gt;&lt;/a&gt;AlexNet&lt;/h1&gt;&lt;p&gt;AlexNet&amp;#x662F;Hinton&amp;#x7684;&amp;#x5B66;&amp;#x751F;Alex Krizhevsky&amp;#x5728;2012&amp;#x5E74;&amp;#x63D0;&amp;#x51FA;&amp;#x7684;&amp;#x6DF1;&amp;#x5EA6;&amp;#x5377;&amp;#x79EF;&amp;#x795E;&amp;#x7ECF;&amp;#x7F51;&amp;#x7EDC;&amp;#xFF0C;&amp;#x5B83;&amp;#x662F;LeNet&amp;#x4E00;&amp;#x79CD;&amp;#x66F4;&amp;#x6DF1;&amp;#x66F4;&amp;#x5BBD;&amp;#x7684;&amp;#x7248;&amp;#x672C;&amp;#x3002;&amp;#x5728;AlexNet&amp;#x4E0A;&amp;#x9996;&amp;#x6B21;&amp;#x5E94;&amp;#x7528;&amp;#x4E86;&amp;#x51E0;&amp;#x4E2A;trick&amp;#xFF0C;ReLU&amp;#x3001;Dropout&amp;#x548C;LRN&amp;#x3002;AlexNet&amp;#x5305;&amp;#x542B;&amp;#x4E86;6&amp;#x4EBF;3000&amp;#x4E07;&amp;#x4E2A;&amp;#x8FDE;&amp;#x63A5;&amp;#xFF0C;6000&amp;#x4E07;&amp;#x4E2A;&amp;#x53C2;&amp;#x6570;&amp;#x548C;65&amp;#x4E07;&amp;#x4E2A;&amp;#x795E;&amp;#x7ECF;&amp;#x5143;&amp;#xFF0C;&amp;#x6709;5&amp;#x4E2A;&amp;#x5377;&amp;#x79EF;&amp;#x5C42;&amp;#xFF0C;3&amp;#x4E2A;&amp;#x5168;&amp;#x8FDE;&amp;#x63A5;&amp;#x5C42;&amp;#x3002;&amp;#x5728;ILSVRC 2012&amp;#x6BD4;&amp;#x8D5B;&amp;#x4E2D;&amp;#xFF0C;AlexNet&amp;#x4EE5;top-5&amp;#x7684;&amp;#x9519;&amp;#x8BEF;&amp;#x7387;&amp;#x4E3A;16.4%&amp;#x7684;&amp;#x663E;&amp;#x8457;&amp;#x4F18;&amp;#x52BF;&amp;#x593A;&amp;#x5F97;&amp;#x51A0;&amp;#x519B;&amp;#xFF0C;&amp;#x7B2C;&amp;#x4E8C;&amp;#x540D;&amp;#x7684;&amp;#x6210;&amp;#x7EE9;&amp;#x662F;26.2%&amp;#x3002;AlexNet&amp;#x7684;trick&amp;#x4E3B;&amp;#x8981;&amp;#x5305;&amp;#x62EC;&amp;#xFF1A;&lt;/p&gt;
    
    </summary>
    
      <category term="深度学习" scheme="http://zhengyujie.cn/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Python" scheme="http://zhengyujie.cn/categories/Python/"/>
    
    
      <category term="卷积网络" scheme="http://zhengyujie.cn/tags/%E5%8D%B7%E7%A7%AF%E7%BD%91%E7%BB%9C/"/>
    
      <category term="TensorFlow" scheme="http://zhengyujie.cn/tags/TensorFlow/"/>
    
  </entry>
  
  <entry>
    <title>TensorFlow学习笔记9：VGGNet-16</title>
    <link href="http://zhengyujie.cn/2019/08/08/tf%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B09/"/>
    <id>http://zhengyujie.cn/2019/08/08/tf学习笔记9/</id>
    <published>2019-08-08T10:38:17.000Z</published>
    <updated>2019-08-08T03:23:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="VGGNet"><a href="#VGGNet" class="headerlink" title="VGGNet"></a>VGGNet</h1><p>VGGNet&#x662F;&#x725B;&#x6D25;&#x5927;&#x5B66;&#x8BA1;&#x7B97;&#x673A;&#x89C6;&#x89C9;&#x7EC4;(Visual Geometry Group)&#x548C;Google DeepMind&#x516C;&#x53F8;&#x4E00;&#x8D77;&#x7814;&#x53D1;&#x7684;&#x6DF1;&#x5EA6;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x3002;VGGNet&#x63A2;&#x7D22;&#x4E86;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x7684;&#x6DF1;&#x5EA6;&#x548C;&#x5176;&#x6027;&#x80FD;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x901A;&#x8FC7;&#x53CD;&#x590D;&#x5806;&#x53E0;3&#xD7;3&#x7684;&#x5C0F;&#x578B;&#x5377;&#x79EF;&#x6838;&#x548C;2&#xD7;2&#x7684;&#x6700;&#x5927;&#x6C60;&#x5316;&#x5C42;&#xFF0C;VGGNet&#x6210;&#x529F;&#x5730;&#x6784;&#x7B51;&#x4E86;16~19&#x5C42;&#x6DF1;&#x7684;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x3002;&#x5230;&#x76EE;&#x524D;&#x4E3A;&#x6B62;&#xFF0C;VGGNet&#x8FD8;&#x7ECF;&#x5E38;&#x88AB;&#x7528;&#x6765;&#x63D0;&#x53D6;&#x56FE;&#x50CF;&#x7684;&#x7279;&#x5F81;&#x3002;VGGNet&#x8BAD;&#x7EC3;&#x540E;&#x7684;&#x6A21;&#x578B;&#x53C2;&#x6570;&#x5728;&#x5176;&#x5B98;&#x65B9;&#x7F51;&#x7AD9;&#x4E0A;&#x5F00;&#x6E90;&#x4E86;&#xFF0C;&#x53EF;&#x7528;&#x6765;&#x5728;domain specific&#x7684;&#x56FE;&#x50CF;&#x5206;&#x7C7B;&#x4EFB;&#x52A1;&#x4E0A;&#x8FDB;&#x884C;&#x518D;&#x8BAD;&#x7EC3;(&#x76F8;&#x5F53;&#x4E8E;&#x63D0;&#x4F9B;&#x4E86;&#x975E;&#x5E38;&#x597D;&#x7684;&#x521D;&#x59CB;&#x5316;&#x6743;&#x91CD;)&#x3002;</p><a id="more"></a><h1 id="&#x7F51;&#x7EDC;&#x7ED3;&#x6784;"><a href="#&#x7F51;&#x7EDC;&#x7ED3;&#x6784;" class="headerlink" title="&#x7F51;&#x7EDC;&#x7ED3;&#x6784;"></a>&#x7F51;&#x7EDC;&#x7ED3;&#x6784;</h1><p><img src="/2019/08/08/tf&#x5B66;&#x4E60;&#x7B14;&#x8BB0;9/1.png" alt></p><p>VGGNet&#x6709;5&#x6BB5;&#x5377;&#x79EF;&#xFF0C;&#x6BCF;&#x4E00;&#x6BB5;&#x5185;&#x6709;2~3&#x4E2A;&#x5377;&#x79EF;&#x5C42;&#xFF0C;&#x6BCF;&#x6BB5;&#x5377;&#x79EF;&#x7684;&#x5C3E;&#x90E8;&#x4F1A;&#x8FDE;&#x63A5;&#x4E00;&#x4E2A;&#x6700;&#x5927;&#x6C60;&#x5316;&#x5C42;&#x6765;&#x7F29;&#x5C0F;&#x56FE;&#x7247;&#x7684;&#x5C3A;&#x5BF8;&#x3002;&#x6BCF;&#x6BB5;&#x5185;&#x7684;&#x5377;&#x79EF;&#x6838;&#x6570;&#x91CF;&#x4E00;&#x6837;&#xFF0C;&#x8D8A;&#x9760;&#x540E;&#x7684;&#x6BB5;&#x7684;&#x5377;&#x79EF;&#x6838;&#x6570;&#x91CF;&#x8D8A;&#x591A;&#xFF0C;&#x5377;&#x79EF;&#x6838;&#x6570;&#x91CF;&#x6838;&#x6BB5;&#x7684;&#x5173;&#x7CFB;:64-128-256-512-512&#x3002;&#x5728;&#x6BB5;&#x5185;&#x6709;&#x591A;&#x4E2A;&#x5B8C;&#x5168;&#x4E00;&#x6837;&#x7684;3&#xD7;3&#x7684;&#x5377;&#x79EF;&#x5C42;&#x5806;&#x53E0;&#x5728;&#x4E00;&#x8D77;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x5728;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x4E2D;&#x8FD9;&#x5176;&#x5B9E;&#x662F;&#x4E00;&#x79CD;&#x975E;&#x5E38;&#x6709;&#x7528;&#x7684;&#x8BBE;&#x8BA1;&#x3002;&#x4E24;&#x4E2A;3&#xD7;3&#x7684;&#x5377;&#x79EF;&#x5C42;&#x4E32;&#x8054;&#x76F8;&#x5F53;&#x4E8E;1&#x4E2A;5&#xD7;5&#x7684;&#x5377;&#x79EF;&#x5C42;&#xFF0C;&#x5373;&#x4E00;&#x4E2A;&#x50CF;&#x7D20;&#x4F1A;&#x548C;&#x5468;&#x56F4;5&#xD7;5&#x7684;&#x50CF;&#x7D20;&#x4EA7;&#x751F;&#x5173;&#x8054;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x611F;&#x53D7;&#x91CE;&#x4E3A;5&#xD7;5&#x3002;&#x800C;3&#x4E2A;3&#xD7;3&#x7684;&#x5377;&#x79EF;&#x5C42;&#x4E32;&#x8054;&#x7684;&#x6548;&#x679C;&#x5219;&#x76F8;&#x5F53;&#x4E8E;1&#x4E2A;7&#xD7;7&#x7684;&#x5377;&#x79EF;&#x5C42;&#x3002;&#x540C;&#x65F6;&#xFF0C;3&#x4E2A;3&#xD7;3&#x5377;&#x79EF;&#x5C42;&#x6BD4;1&#x4E2A;7&#xD7;7&#x7684;&#x5377;&#x79EF;&#x5C42;&#x6709;&#x7740;&#x66F4;&#x5C11;&#x7684;&#x53C2;&#x6570;&#xFF0C;(3<em>3</em>3)/(7*7)=55%&#x3002;&#x6700;&#x91CD;&#x8981;&#x7684;&#x662F;&#xFF0C;3&#x4E2A;3&#xD7;3&#x7684;&#x5377;&#x79EF;&#x5C42;&#x62E5;&#x6709;&#x6BD4;1&#x4E2A;7&#xD7;7&#x7684;&#x5377;&#x79EF;&#x5C42;&#x66F4;&#x591A;&#x7684;&#x975E;&#x7EBF;&#x6027;&#x53D8;&#x6362;&#xFF0C;3&#x4E2A;3&#xD7;3&#x7684;&#x5377;&#x79EF;&#x5C42;&#x4F7F;&#x7528;&#x4E86;3&#x6B21;RELU&#x6FC0;&#x6D3B;&#x51FD;&#x6570;&#xFF0C;&#x800C;1&#x4E2A;7&#xD7;7&#x7684;&#x5377;&#x79EF;&#x5C42;&#x53EA;&#x4F7F;&#x7528;&#x4E86;1&#x6B21;&#xFF0C;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x8BA9;&#x5377;&#x79EF;&#x795E;&#x7ECF;&#x7F51;&#x7EDC;&#x5BF9;&#x7279;&#x5F81;&#x7684;&#x5B66;&#x4E60;&#x80FD;&#x529B;&#x66F4;&#x5F3A;&#x3002;</p><h1 id="TensorFlow&#x5B9E;&#x73B0;"><a href="#TensorFlow&#x5B9E;&#x73B0;" class="headerlink" title="TensorFlow&#x5B9E;&#x73B0;"></a>TensorFlow&#x5B9E;&#x73B0;</h1><ol><li><p>&#x5377;&#x79EF;&#x5C42;&#x51FD;&#x6570;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">&#x5B9A;&#x4E49;&#x5377;&#x79EF;&#x5C42;&#x51FD;&#x6570;</span></span><br><span class="line"><span class="string">input_op:&#x8F93;&#x5165;&#x7684;tensor</span></span><br><span class="line"><span class="string">name&#xFF1A;&#x8BE5;&#x5C42;&#x7684;&#x540D;&#x79F0;</span></span><br><span class="line"><span class="string">kh:&#x5377;&#x79EF;&#x6838;&#x7684;&#x9AD8;</span></span><br><span class="line"><span class="string">kw:&#x5377;&#x79EF;&#x6838;&#x7684;&#x5BBD;</span></span><br><span class="line"><span class="string">n_out:&#x5377;&#x79EF;&#x6838;&#x7684;&#x6570;&#x91CF;(&#x8F93;&#x51FA;&#x901A;&#x9053;&#x6570;)</span></span><br><span class="line"><span class="string">dh:&#x6B65;&#x957F;&#x7684;&#x9AD8;</span></span><br><span class="line"><span class="string">dw:&#x6B65;&#x957F;&#x7684;&#x5BBD;</span></span><br><span class="line"><span class="string">p:&#x53C2;&#x6570;&#x5217;&#x8868;</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">conv_op</span><span class="params">(input_op,name,kh,kw,n_out,dh,dw,p)</span>:</span></span><br><span class="line">    n_in = input_op.get_shape()[<span class="number">-1</span>].value</span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(name) <span class="keyword">as</span> scope:</span><br><span class="line">        <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x6743;&#x91CD;</span></span><br><span class="line">        kernel = tf.get_variable(scope+<span class="string">&quot;w&quot;</span>,shape=[kh,kw,n_in,n_out],dtype=tf.float32,initializer=tf.contrib.layers.xavier_initializer_conv2d())</span><br><span class="line">                                 </span><br><span class="line">        <span class="comment">#&#x5377;&#x79EF;</span></span><br><span class="line">        conv = tf.nn.conv2d(input_op,kernel,(<span class="number">1</span>,dh,dw,<span class="number">1</span>),padding=<span class="string">&quot;SAME&quot;</span>)</span><br><span class="line">        <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x504F;&#x7F6E;</span></span><br><span class="line">        bias_init_val = tf.constant(<span class="number">0.0</span>,shape=[n_out],dtype=tf.float32)</span><br><span class="line">        biases = tf.Variable(bias_init_val,trainable=<span class="literal">True</span>,name=<span class="string">&quot;b&quot;</span>)</span><br><span class="line">        z = tf.nn.bias_add(conv,biases)</span><br><span class="line">        activation = tf.nn.relu(z,name=scope)</span><br><span class="line">        <span class="comment">#&#x4FDD;&#x5B58;&#x53C2;&#x6570;</span></span><br><span class="line">        p += [kernel,biases]</span><br><span class="line">    <span class="keyword">return</span> activation</span><br></pre></td></tr></table></figure></li><li><p>&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x51FD;&#x6570;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">&#x5B9A;&#x4E49;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x51FD;&#x6570;</span></span><br><span class="line"><span class="string">input_op:&#x8F93;&#x5165;&#x7684;tensor</span></span><br><span class="line"><span class="string">name:&#x8BE5;&#x5C42;&#x7684;&#x540D;&#x79F0;</span></span><br><span class="line"><span class="string">n_out:&#x8F93;&#x51FA;&#x7684;&#x901A;&#x9053;&#x6570;</span></span><br><span class="line"><span class="string">p:&#x53C2;&#x6570;&#x5217;&#x8868;</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fc_op</span><span class="params">(input_op,name,n_out,p)</span>:</span></span><br><span class="line">    n_in = input_op.get_shape()[<span class="number">-1</span>].value</span><br><span class="line">    <span class="keyword">with</span> tf.name_scope(name) <span class="keyword">as</span> scope:</span><br><span class="line">        <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x5168;&#x8FDE;&#x63A5;&#x7684;&#x6743;&#x91CD;</span></span><br><span class="line">        kernel = tf.get_variable(scope+<span class="string">&quot;w&quot;</span>,shape=[n_in,n_out],dtype=tf.float32,initializer=tf.contrib.layers.xavier_initializer())              </span><br><span class="line">        <span class="comment">#&#x521D;&#x59CB;&#x5316;&#x5168;&#x8FDE;&#x63A5;&#x5C42;&#x7684;&#x504F;&#x7F6E;</span></span><br><span class="line">        biases = tf.Variable(tf.constant(<span class="number">0.1</span>,shape=[n_out],dtype=tf.float32),name=<span class="string">&quot;b&quot;</span>)</span><br><span class="line">        <span class="comment">#&#x5C06;&#x8F93;&#x5165;&#x4E0E;&#x6743;&#x91CD;&#x7684;&#x4E58;&#x6CD5;&#x548C;&#x504F;&#x7F6E;&#x7684;&#x52A0;&#x6CD5;&#x5408;&#x5E76;</span></span><br><span class="line">        activation = tf.nn.relu_layer(input_op,kernel,biases,name=scope)</span><br><span class="line">        <span class="comment">#&#x4FDD;&#x5B58;&#x53C2;&#x6570;</span></span><br><span class="line">        p += [kernel,biases]</span><br><span class="line">        <span class="keyword">return</span> activation</span><br></pre></td></tr></table></figure></li><li><p>&#x6700;&#x5927;&#x6C60;&#x5316;&#x5C42;&#x51FD;&#x6570;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">&#x5B9A;&#x4E49;&#x6700;&#x5927;&#x6C60;&#x5316;&#x5C42;</span></span><br><span class="line"><span class="string">input_op:&#x8F93;&#x5165;&#x7684;tensor</span></span><br><span class="line"><span class="string">name:&#x8BE5;&#x5C42;&#x7684;&#x540D;&#x79F0;</span></span><br><span class="line"><span class="string">kh:&#x6C60;&#x5316;&#x5C42;&#x7684;&#x9AD8;</span></span><br><span class="line"><span class="string">kw:&#x6C60;&#x5316;&#x5C42;&#x7684;&#x5BBD;</span></span><br><span class="line"><span class="string">dh:&#x6B65;&#x957F;&#x7684;&#x9AD8;</span></span><br><span class="line"><span class="string">dw:&#x6B65;&#x957F;&#x7684;&#x5BBD;</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">max_pool</span><span class="params">(input_op,name,kh,kw,dh,dw)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> tf.nn.max_pool(input_op,ksize=[<span class="number">1</span>,kh,kw,<span class="number">1</span>],strides=[<span class="number">1</span>,dh,dw,<span class="number">1</span>],padding=<span class="string">&quot;SAME&quot;</span>,name=name)</span><br></pre></td></tr></table></figure></li><li><p>VGG&#x5B9E;&#x73B0;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="string">VGG16</span></span><br><span class="line"><span class="string">&apos;&apos;&apos;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inference_op</span><span class="params">(input_op,keep_prob)</span>:</span></span><br><span class="line">    p = []</span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E00;&#x5C42;&#x7684;&#x7B2C;&#x4E00;&#x5C42;&#x5377;&#x79EF;</span></span><br><span class="line">    conv1_1 = conv_op(input_op,name=<span class="string">&quot;conv1_1&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">64</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E00;&#x5C42;&#x7684;&#x7B2C;&#x4E8C;&#x5C42;&#x5377;&#x79EF;</span></span><br><span class="line">    conv1_2 = conv_op(conv1_1,name=<span class="string">&quot;conv1_2&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">64</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    <span class="comment">#&#x6700;&#x5927;&#x6C60;&#x5316;&#x5C42;</span></span><br><span class="line">    pool1 = max_pool(conv1_2,name=<span class="string">&quot;pool1&quot;</span>,kh=<span class="number">2</span>,kw=<span class="number">2</span>,dw=<span class="number">2</span>,dh=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E8C;&#x5C42;&#x7684;&#x7B2C;&#x4E00;&#x5C42;&#x5377;&#x79EF;</span></span><br><span class="line">    conv2_1 = conv_op(pool1,name=<span class="string">&quot;conv2_1&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">128</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E8C;&#x5C42;&#x7684;&#x7B2C;&#x4E8C;&#x5C42;&#x5377;&#x79EF;</span></span><br><span class="line">    conv2_2 = conv_op(conv2_1,name=<span class="string">&quot;conv2_2&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">128</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E8C;&#x5C42;&#x7684;&#x6700;&#x5927;&#x6C60;&#x5316;</span></span><br><span class="line">    pool2 = max_pool(conv2_2,name=<span class="string">&quot;pool2&quot;</span>,kh=<span class="number">2</span>,kw=<span class="number">2</span>,dh=<span class="number">2</span>,dw=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E09;&#x5C42;</span></span><br><span class="line">    conv3_1 = conv_op(pool2,name=<span class="string">&quot;conv3_1&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">256</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    conv3_2 = conv_op(conv3_1,name=<span class="string">&quot;conv3_2&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">256</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    conv3_3 = conv_op(conv3_2,name=<span class="string">&quot;conv3_3&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">256</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    pool3 = max_pool(conv3_3,name=<span class="string">&quot;pool3&quot;</span>,kh=<span class="number">2</span>,kw=<span class="number">2</span>,dh=<span class="number">2</span>,dw=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x56DB;&#x5C42;</span></span><br><span class="line">    conv4_1 = conv_op(pool3,name=<span class="string">&quot;conv4_1&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">512</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    conv4_2 = conv_op(conv4_1,name=<span class="string">&quot;conv4_2&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">512</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    conv4_3 = conv_op(conv4_2,name=<span class="string">&quot;conv4_3&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">512</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    pool4 = max_pool(conv4_3,name=<span class="string">&quot;pool4&quot;</span>,kh=<span class="number">2</span>,kw=<span class="number">2</span>,dh=<span class="number">2</span>,dw=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x7B2C;&#x4E94;&#x5C42;</span></span><br><span class="line">    conv5_1 = conv_op(pool4,name=<span class="string">&quot;conv5_1&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">512</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    conv5_2 = conv_op(conv5_1,name=<span class="string">&quot;conv5_2&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">512</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    conv5_3 = conv_op(conv5_2,name=<span class="string">&quot;conv5_3&quot;</span>,kh=<span class="number">3</span>,kw=<span class="number">3</span>,n_out=<span class="number">512</span>,dh=<span class="number">1</span>,dw=<span class="number">1</span>,p=p)</span><br><span class="line">    pool5 = max_pool(conv5_3,name=<span class="string">&quot;pool5&quot;</span>,kh=<span class="number">2</span>,kw=<span class="number">2</span>,dh=<span class="number">2</span>,dw=<span class="number">2</span>)</span><br><span class="line">    <span class="comment">#&#x5C06;pool5&#x5C55;&#x5E73;</span></span><br><span class="line">    pool5_shape = pool5.get_shape()</span><br><span class="line">    flattened_shape = pool5_shape[<span class="number">1</span>].value * pool5_shape[<span class="number">2</span>].value * pool5_shape[<span class="number">3</span>].value</span><br><span class="line">    resh1 = tf.reshape(pool5,[<span class="number">-1</span>,flattened_shape],name=<span class="string">&quot;resh1&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x5168;&#x8FDE;&#x63A5;&#x5C42;</span></span><br><span class="line">    fc6 = fc_op(resh1,name=<span class="string">&quot;fc6&quot;</span>,n_out=<span class="number">4096</span>,p=p)</span><br><span class="line">    fc6_drop = tf.nn.dropout(fc6,keep_prob,name=<span class="string">&quot;fc6_drop&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#&#x5168;&#x8FDE;&#x63A5;&#x5C42;</span></span><br><span class="line">    fc7 = fc_op(fc6_drop,name=<span class="string">&quot;fc7&quot;</span>,n_out=<span class="number">4096</span>,p=p)</span><br><span class="line">    fc7_drop = tf.nn.dropout(fc7,keep_prob,name=<span class="string">&quot;fc7_drop&quot;</span>)</span><br><span class="line"></span><br><span class="line">    fc8 = fc_op(fc7_drop,name=<span class="string">&quot;fc8&quot;</span>,n_out=<span class="number">1000</span>,p=p)</span><br><span class="line">    softmax = tf.nn.softmax(fc8)</span><br><span class="line">    predictions = tf.argmax(softmax,<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> predictions,softmax,fc8,p</span><br></pre></td></tr></table></figure></li><li><p>&#x6027;&#x80FD;&#x7EDF;&#x8BA1; &#x6027;&#x80FD;&#x7EDF;&#x8BA1;&#x6A21;&#x5757;&#x4E3B;&#x8981;&#x7EDF;&#x8BA1;&#x7F51;&#x7EDC;&#x8FED;&#x4EE3;&#x4E00;&#x6B21;&#x6240;&#x9700;&#x65F6;&#x95F4;&#xFF0C;&#x7531;&#x4E8E;&#x521A;&#x5F00;&#x59CB;&#x8FD0;&#x884C;&#x7A0B;&#x5E8F;&#x7684;&#x65F6;&#x5019;GPU&#x9700;&#x8981;&#x52A0;&#x8F7D;&#x5185;&#x5B58;&#x4F1A;&#x6BD4;&#x8F83;&#x6162;&#xFF0C;&#x6240;&#x4EE5;&#x7EDF;&#x8BA1;&#x901A;10&#x6B21;&#x8FED;&#x4EE3;&#x4EE5;&#x540E;&#x624D;&#x5F00;&#x59CB;&#x3002;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">num_batches = <span class="number">100</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">time_tensorflow_run</span><span class="params">(session,target,feed,info_string)</span>:</span></span><br><span class="line">    num_steps_burn_in = <span class="number">10</span></span><br><span class="line">    total_duration = <span class="number">0.0</span></span><br><span class="line">    total_duration_squared = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num_batches + num_steps_burn_in):</span><br><span class="line">        start_time = time.time()</span><br><span class="line">        _= session.run(target,feed_dict=feed)</span><br><span class="line">        duration = time.time() - start_time</span><br><span class="line">        <span class="keyword">if</span> i &gt; num_steps_burn_in:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> i % <span class="number">10</span>:</span><br><span class="line">                print(<span class="string">&quot;%s&#xFF1A;step:%d,duration:%.3f&quot;</span>%(datetime.now(),i-num_steps_burn_in,duration))</span><br><span class="line">                total_duration += duration</span><br><span class="line">                total_duration_squared += duration * duration</span><br><span class="line">    mn = total_duration / num_batches</span><br><span class="line">    vr = total_duration_squared / num_batches - mn * mn</span><br><span class="line">    sd = math.sqrt(vr)</span><br><span class="line">    print(<span class="string">&quot;%s&#xFF1A;%s across %d steps,%.3f +/- %.3f sec / batch&quot;</span>%(datetime.now(),info_string,num_batches,mn,sd))</span><br></pre></td></tr></table></figure></li><li><p>&#x8BAD;&#x7EC3;&#x8FC7;&#x7A0B; &#x901A;&#x8FC7;&#x4F7F;&#x7528;random_normal&#x6765;&#x968F;&#x673A;&#x4EA7;&#x751F;224&#xD7;224&#x7684;&#x56FE;&#x7247;&#xFF0C;&#x8FDB;&#x884C;&#x6D4B;&#x8BD5;&#x3002;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">batch_size = <span class="number">32</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_benchmark</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> tf.Graph().as_default():</span><br><span class="line">        image_size = <span class="number">224</span></span><br><span class="line">        images = tf.Variable(tf.random_normal([batch_size,image_size,image_size,<span class="number">3</span>],dtype=tf.float32,stddev=<span class="number">0.1</span>))</span><br><span class="line">        keep_prob = tf.placeholder(tf.float32)</span><br><span class="line">        predictions,softmax,fc8,p=inference_op(images,keep_prob)</span><br><span class="line">        init = tf.global_variables_initializer()</span><br><span class="line">        sess = tf.Session()</span><br><span class="line">        sess.run(init)</span><br><span class="line">        time_tensorflow_run(sess,predictions,{keep_prob:<span class="number">1.0</span>},<span class="string">&quot;Forward&quot;</span>)</span><br><span class="line">        objective = tf.nn.l2_loss(fc8)</span><br><span class="line">        grad = tf.gradients(objective,p)</span><br><span class="line">        time_tensorflow_run(sess,grad,{keep_prob:<span class="number">0.5</span>},<span class="string">&quot;Forward-backward&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    run_benchmark()</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;VGGNet&quot;&gt;&lt;a href=&quot;#VGGNet&quot; class=&quot;headerlink&quot; title=&quot;VGGNet&quot;&gt;&lt;/a&gt;VGGNet&lt;/h1&gt;&lt;p&gt;VGGNet&amp;#x662F;&amp;#x725B;&amp;#x6D25;&amp;#x5927;&amp;#x5B66;&amp;#x8BA1;&amp;#x7B97;&amp;#x673A;&amp;#x89C6;&amp;#x89C9;&amp;#x7EC4;(Visual Geometry Group)&amp;#x548C;Google DeepMind&amp;#x516C;&amp;#x53F8;&amp;#x4E00;&amp;#x8D77;&amp;#x7814;&amp;#x53D1;&amp;#x7684;&amp;#x6DF1;&amp;#x5EA6;&amp;#x5377;&amp;#x79EF;&amp;#x795E;&amp;#x7ECF;&amp;#x7F51;&amp;#x7EDC;&amp;#x3002;VGGNet&amp;#x63A2;&amp;#x7D22;&amp;#x4E86;&amp;#x5377;&amp;#x79EF;&amp;#x795E;&amp;#x7ECF;&amp;#x7F51;&amp;#x7EDC;&amp;#x7684;&amp;#x6DF1;&amp;#x5EA6;&amp;#x548C;&amp;#x5176;&amp;#x6027;&amp;#x80FD;&amp;#x4E4B;&amp;#x95F4;&amp;#x7684;&amp;#x5173;&amp;#x7CFB;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7;&amp;#x53CD;&amp;#x590D;&amp;#x5806;&amp;#x53E0;3&amp;#xD7;3&amp;#x7684;&amp;#x5C0F;&amp;#x578B;&amp;#x5377;&amp;#x79EF;&amp;#x6838;&amp;#x548C;2&amp;#xD7;2&amp;#x7684;&amp;#x6700;&amp;#x5927;&amp;#x6C60;&amp;#x5316;&amp;#x5C42;&amp;#xFF0C;VGGNet&amp;#x6210;&amp;#x529F;&amp;#x5730;&amp;#x6784;&amp;#x7B51;&amp;#x4E86;16~19&amp;#x5C42;&amp;#x6DF1;&amp;#x7684;&amp;#x5377;&amp;#x79EF;&amp;#x795E;&amp;#x7ECF;&amp;#x7F51;&amp;#x7EDC;&amp;#x3002;&amp;#x5230;&amp;#x76EE;&amp;#x524D;&amp;#x4E3A;&amp;#x6B62;&amp;#xFF0C;VGGNet&amp;#x8FD8;&amp;#x7ECF;&amp;#x5E38;&amp;#x88AB;&amp;#x7528;&amp;#x6765;&amp;#x63D0;&amp;#x53D6;&amp;#x56FE;&amp;#x50CF;&amp;#x7684;&amp;#x7279;&amp;#x5F81;&amp;#x3002;VGGNet&amp;#x8BAD;&amp;#x7EC3;&amp;#x540E;&amp;#x7684;&amp;#x6A21;&amp;#x578B;&amp;#x53C2;&amp;#x6570;&amp;#x5728;&amp;#x5176;&amp;#x5B98;&amp;#x65B9;&amp;#x7F51;&amp;#x7AD9;&amp;#x4E0A;&amp;#x5F00;&amp;#x6E90;&amp;#x4E86;&amp;#xFF0C;&amp;#x53EF;&amp;#x7528;&amp;#x6765;&amp;#x5728;domain specific&amp;#x7684;&amp;#x56FE;&amp;#x50CF;&amp;#x5206;&amp;#x7C7B;&amp;#x4EFB;&amp;#x52A1;&amp;#x4E0A;&amp;#x8FDB;&amp;#x884C;&amp;#x518D;&amp;#x8BAD;&amp;#x7EC3;(&amp;#x76F8;&amp;#x5F53;&amp;#x4E8E;&amp;#x63D0;&amp;#x4F9B;&amp;#x4E86;&amp;#x975E;&amp;#x5E38;&amp;#x597D;&amp;#x7684;&amp;#x521D;&amp;#x59CB;&amp;#x5316;&amp;#x6743;&amp;#x91CD;)&amp;#x3002;&lt;/p&gt;
    
    </summary>
    
      <category term="深度学习" scheme="http://zhengyujie.cn/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Python" scheme="http://zhengyujie.cn/categories/Python/"/>
    
    
      <category term="卷积网络" scheme="http://zhengyujie.cn/tags/%E5%8D%B7%E7%A7%AF%E7%BD%91%E7%BB%9C/"/>
    
      <category term="TensorFlow" scheme="http://zhengyujie.cn/tags/TensorFlow/"/>
    
  </entry>
  
</feed>
